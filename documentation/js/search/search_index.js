var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,1.974,1,2.645]],["body/modules/AppConfigModule.html",[0,3.194,1,5.094,2,2.603,3,2.711,4,2.968,5,2.968,6,2.711,7,4.098,8,4.28,9,4.158,10,4.158,11,4.158,12,4.078,13,5.338,14,0.009,15,3.977,16,2.253,17,2.253,18,0.093,19,0.103,20,0.072,21,4.712,22,0.093,23,0.138,24,0.901,25,3.977,26,4.427,27,7,28,5.572,29,1.458,30,3.793,31,4.712,32,0.67,33,3.304,34,2.968,35,4.712,36,2.968,37,4.712,38,4.712,39,4.158,40,4.158,41,4.712,42,4.712,43,6.284,44,4.712,45,4.158,46,3.521,47,4.712,48,3.793,49,4.712,50,4.712,51,2.253,52,4.184,53,4.158,54,7.719,55,4.158,56,2.181,57,4.158,58,4.158,59,3.123,60,4.158,61,4.158,62,4.158,63,4.158,64,2.832,65,2.968,66,4.158,67,4.158,68,2.414,69,3.793,70,4.158,71,3.793,72,4.158,73,4.158,74,4.712,75,4.712,76,2.968,77,4.712,78,4.427,79,4.712,80,4.158,81,4.712,82,4.712,83,3.793,84,3.521,85,4.712,86,2.832,87,4.712,88,3.521,89,2.603,90,0.093,91,0.174,92,0.005,93,0.006,94,0.005]],["title/injectables/AppConfigService.html",[12,2.037,95,0.207]],["body/injectables/AppConfigService.html",[0,2.067,12,2.133,13,5.04,14,0.009,18,0.06,19,0.066,20,0.047,22,0.06,23,0.196,24,0.498,27,4.067,32,0.432,34,1.912,48,5.385,53,5.903,55,5.903,57,5.903,58,5.903,61,5.903,62,5.903,63,5.903,65,2.903,66,5.903,67,5.903,70,5.903,71,5.385,72,5.903,73,4.917,84,4.649,90,0.06,91,0.206,92,0.003,93,0.005,94,0.003,95,0.217,96,0.609,97,2.679,98,3.232,99,4.067,100,2.546,101,7.91,102,3.232,103,4.067,104,0.093,105,4.609,106,1.005,107,3.036,108,0.436,109,3.036,110,2.133,111,0.638,112,0.609,113,0.151,114,0.653,115,3.036,116,3.036,117,8.883,118,7.84,119,1.915,120,1.462,121,3.036,122,3.036,123,3.036,124,3.036,125,3.036,126,3.036,127,3.036,128,3.036,129,3.036,130,3.036,131,3.036,132,3.036,133,1.349,134,3.036,135,3.036,136,3.036,137,3.036,138,3.036,139,3.036,140,3.036,141,3.036,142,3.036,143,3.036,144,3.036,145,3.036,146,3.036,147,3.036,148,4.609,149,3.036,150,0.752,151,1.555,152,1.177,153,1.743,154,3.036,155,3.036,156,3.036,157,3.036,158,3.036,159,3.036,160,3.036,161,3.036,162,3.036,163,3.036,164,3.036,165,3.036,166,3.036,167,3.036]],["title/controllers/AppController.html",[168,2.34,169,3.289]],["body/controllers/AppController.html",[14,0.009,18,0.116,19,0.129,20,0.091,22,0.116,23,0.16,24,0.858,25,4.606,26,5.127,32,0.842,90,0.116,91,0.219,92,0.006,93,0.007,94,0.006,100,4.04,104,0.182,108,0.308,111,1.244,112,1.187,114,1.274,119,1.367,153,1.244,168,3.887,169,5.465,170,3.146,171,5.223,172,6.453,173,1.77,174,7.312,175,5.918,176,4.15,177,5.918,178,5.918,179,3.673,180,4.423,181,4.15,182,1.304,183,5.223,184,3.728,185,4.765,186,4.423,187,3.557,188,5.223,189,4.423,190,4.423,191,4.765,192,5.918,193,5.918,194,3.922]],["title/modules/AppModule.html",[0,1.974,195,3.289]],["body/modules/AppModule.html",[0,3.297,1,4.731,2,2.108,3,3.665,4,2.404,5,2.404,6,2.196,7,3.665,8,2.294,12,3.216,13,2.404,14,0.009,15,3.436,16,1.825,17,1.825,18,0.075,19,0.083,20,0.098,22,0.075,23,0.119,24,0.97,25,4.63,26,3.825,32,0.543,36,4.011,83,4.393,90,0.075,91,0.141,92,0.004,93,0.005,94,0.005,169,4.759,170,2.9,195,6.67,196,3.368,197,3.368,198,3.368,199,5.361,200,5.361,201,5.361,202,5.067,203,5.361,204,3.816,205,5.456,206,5.456,207,5.193,208,5.193,209,2.699,210,4.465,211,4.465,212,4.465,213,4.465,214,3.816,215,3.816,216,3.816,217,3.368,218,2.852,219,2.196,220,3.816,221,3.368,222,3.368,223,3.368,224,3.816,225,6.368,226,5.456,227,3.368,228,4.077,229,3.816,230,3.816,231,3.816,232,3.816,233,3.816,234,3.816,235,3.816,236,3.368,237,3.368,238,3.816,239,4.393,240,3.816,241,3.816,242,3.816,243,3.816,244,2.852,245,2.294,246,3.816,247,4.393,248,3.072,249,3.816,250,3.816,251,3.816,252,3.816,253,3.816,254,3.816,255,3.816,256,2.404,257,3.816,258,3.816,259,3.368,260,0.968,261,3.816,262,3.816,263,2.676,264,3.816,265,3.816,266,3.816,267,3.816,268,6.368]],["title/injectables/AppService.html",[95,0.207,203,3.086]],["body/injectables/AppService.html",[14,0.009,18,0.124,19,0.138,20,0.097,22,0.124,23,0.166,24,0.683,25,4.792,26,5.334,32,0.898,90,0.124,91,0.233,92,0.006,93,0.008,94,0.006,95,0.359,96,1.266,100,4.203,104,0.194,108,0.329,119,1.458,120,1.259,153,1.328,172,6.714,173,1.841,203,5.334,269,5.573,270,8.475,271,6.315,272,6.315,273,6.315]],["title/controllers/AuthController.html",[168,2.34,213,3.086]],["body/controllers/AuthController.html",[14,0.009,16,2.939,17,2.165,18,0.058,19,0.065,20,0.046,22,0.13,23,0.176,24,0.829,32,0.422,59,4.074,68,3.835,69,3.646,90,0.058,91,0.11,92,0.003,93,0.004,94,0.003,102,3.175,104,0.091,108,0.345,111,1.392,112,1.328,113,0.305,114,1.425,119,1.529,150,1.798,151,1.52,152,1.15,153,1.392,168,3.519,170,1.576,173,1.487,176,4.642,179,3.622,180,2.216,181,2.08,182,1.599,183,2.617,184,3.459,186,3.384,187,1.783,189,2.216,190,3.384,191,2.388,213,3.175,260,2.113,274,2.617,275,2.216,276,2.388,277,4.528,278,4.528,279,1.777,280,2.606,281,3.996,282,4.528,283,2.852,284,5.618,285,3.996,286,3.996,287,4.593,288,4.593,289,3.996,290,2.966,291,1.645,292,4.31,293,2.966,294,3.634,295,2.966,296,3.646,297,4.31,298,4.074,299,0.975,300,2.617,301,4.31,302,4.528,303,2.966,304,3.384,305,3.404,306,1.857,307,3.001,308,3.646,309,2.966,310,3.979,311,3.396,312,2.966,313,2.966,314,3.996,315,2.617,316,2.966,317,2.966,318,3.646,319,4.593,320,4.074,321,2.031,322,3.835,323,4.528,324,3.996,325,3.384,326,1.97,327,4.528,328,3.175,329,3.384,330,2.617,331,4.31,332,4.528,333,2.966,334,4.528,335,4.387,336,4.104,337,3.175,338,3.175,339,1.576,340,2.617,341,4.422,342,2.617,343,2.617,344,2.966,345,2.216,346,2.966,347,2.617,348,3.301,349,2.388,350,2.966,351,1.868,352,2.966,353,2.966,354,2.966,355,2.966,356,0.808,357,3.851,358,1.687,359,2.966,360,2.966,361,2.966,362,2.216,363,2.966,364,2.617,365,2.966,366,2.966,367,2.966,368,2.966,369,2.966,370,2.966,371,2.966,372,2.966,373,2.966,374,2.966]],["title/modules/AuthModule.html",[0,1.974,199,3.086]],["body/modules/AuthModule.html",[0,3.349,1,4.659,2,2.197,3,2.289,4,2.505,5,2.505,6,2.289,7,3.749,8,3.916,12,3.588,14,0.009,15,3.539,16,1.902,17,1.902,18,0.078,19,0.087,20,0.061,22,0.078,23,0.123,24,0.955,32,0.566,33,3.94,34,2.505,36,3.539,90,0.078,91,0.147,92,0.004,93,0.006,94,0.004,98,3.94,100,3.104,170,2.114,187,4.891,189,2.972,199,6.376,202,5.137,213,3.94,217,3.51,244,2.972,245,2.391,247,4.524,248,3.202,279,1.209,299,0.856,347,3.51,348,5.147,349,3.202,375,3.51,376,3.977,377,3.51,378,3.51,379,5.675,380,5.147,381,5.147,382,5.435,383,5.435,384,3.977,385,5.618,386,5.618,387,3.977,388,3.202,389,5.618,390,2.636,391,4.199,392,3.51,393,3.977,394,3.977,395,3.977,396,3.51,397,1.679,398,2.972,399,3.51,400,2.972,401,3.51,402,3.977,403,3.51,404,3.51,405,3.977,406,5.618,407,3.977,408,2.789,409,1.136,410,1.192,411,3.977]],["title/injectables/AuthService.html",[95,0.207,348,2.645]],["body/injectables/AuthService.html",[12,2.224,14,0.009,16,3.276,17,1.534,18,0.038,19,0.042,20,0.03,22,0.081,23,0.165,24,0.829,25,2.021,32,0.274,56,2.224,59,2.731,65,2.021,68,3.928,89,1.772,90,0.038,91,0.071,92,0.005,93,0.003,94,0.002,95,0.151,96,0.387,100,1.772,102,1.351,104,0.059,106,1.062,108,0.318,111,1.284,112,1.225,113,0.303,114,1.315,119,1.33,120,1.01,150,1.742,152,2.368,153,1.44,173,1.163,179,2.47,182,1.463,209,2.377,239,1.552,245,1.158,256,2.596,260,1.989,279,1.877,280,1.846,283,2.596,285,2.831,286,2.831,287,3.988,288,3.08,289,2.831,291,0.807,292,3.369,294,3.371,296,2.583,297,2.25,298,2.126,299,1.605,300,2.831,301,3.369,304,2.398,305,3.5,306,1.316,307,2.126,308,2.583,314,4.241,315,2.831,319,3.08,320,2.731,322,3.129,324,2.831,325,3.08,326,1.396,330,2.831,331,3.369,335,2.731,336,2.398,339,1.024,340,1.701,341,3.318,342,1.701,343,1.701,348,1.928,356,1.996,357,2.89,358,2.432,379,4.048,380,3.671,381,3.671,388,1.552,396,1.701,397,2.701,398,1.44,399,1.701,400,1.44,401,1.701,409,0.551,410,0.578,412,1.701,413,3.208,414,2.831,415,1.927,416,3.628,417,6.108,418,4.565,419,2.89,420,1.927,421,3.208,422,1.927,423,1.927,424,3.08,425,3.637,426,3.208,427,1.927,428,3.208,429,3.208,430,2.831,431,3.208,432,2.25,433,2.831,434,2.126,435,1.927,436,2.89,437,1.927,438,2.398,439,3.208,440,3.988,441,1.927,442,2.554,443,2.831,444,2.831,445,2.25,446,3.208,447,3.208,448,3.208,449,1.244,450,1.927,451,2.126,452,1.927,453,1.351,454,2.398,455,1.927,456,1.927,457,2.398,458,2.126,459,1.927,460,1.552,461,2.184,462,1.812,463,1.971,464,1.927,465,1.927,466,1.705,467,0.79,468,1.214,469,1.701,470,3.318,471,4.709,472,1.915,473,1.643,474,1.814,475,1.971,476,1.927,477,1.44,478,1.927,479,1.534,480,1.351,481,1.158,482,1.927,483,1.44,484,1.927,485,1.399,486,1.927,487,1.927,488,1.927,489,1.927,490,2.89,491,1.927,492,1.927,493,1.927,494,1.158,495,1.927,496,2.583,497,1.927,498,2.831,499,2.021,500,2.831,501,1.927,502,1.927,503,1.927,504,1.351,505,1.927,506,1.701,507,1.927,508,3.08,509,2.831,510,3.318,511,1.701,512,2.477,513,1.351,514,1.158,515,1.44,516,1.928,517,3.208,518,1.927,519,1.552,520,1.277,521,1.927,522,1.439,523,1.927,524,2.126,525,4.121,526,1.927,527,1.927,528,1.701,529,3.208,530,1.927,531,1.927,532,1.701,533,1.705,534,1.552,535,1.701,536,1.351,537,1.701,538,1.701,539,1.701,540,1.927,541,1.927,542,1.552,543,1.44,544,1.701,545,1.927,546,1.927,547,3.208,548,1.44,549,2.831,550,1.701,551,1.927,552,1.552,553,1.644,554,1.927,555,1.927,556,1.927,557,3.208,558,1.927,559,1.927,560,1.927,561,3.208,562,1.701,563,3.208,564,1.701,565,1.44,566,1.44,567,1.065,568,1.552,569,1.927,570,1.927,571,1.927,572,1.399]],["title/injectables/BcryptHashPipe.html",[95,0.207,573,3.289]],["body/injectables/BcryptHashPipe.html",[14,0.009,18,0.147,19,0.114,20,0.08,22,0.132,23,0.173,24,0.808,32,0.74,90,0.102,91,0.192,92,0.005,93,0.007,94,0.005,95,0.318,96,1.043,104,0.16,108,0.271,111,1.094,112,1.043,113,0.258,114,1.12,119,1.201,150,1.289,153,1.094,173,1.631,260,1.896,279,1.45,294,3.339,299,1.702,322,4.052,356,1.835,358,2.07,409,2.135,453,3.647,457,5.909,462,1.962,474,2.122,475,2.133,519,4.188,524,3.448,548,3.888,573,5.036,574,4.591,575,6.739,576,3.023,577,3.223,578,4.981,579,5.202,580,2.845,581,8.392,582,6.739,583,3.334,584,3.888,585,2.073,586,5.202,587,6.739,588,5.202,589,5.202,590,5.202,591,5.202,592,4.591,593,4.188]],["title/classes/ChangePasswordDto.html",[91,0.163,292,3.086]],["body/classes/ChangePasswordDto.html",[14,0.009,18,0.124,19,0.137,20,0.097,22,0.124,23,0.137,29,1.455,90,0.124,91,0.233,92,0.006,93,0.008,94,0.006,104,0.193,108,0.395,113,0.377,120,1.401,152,3.413,279,1.356,291,1.234,292,5.326,294,2.659,297,4.417,410,1.888,508,6.095,510,6.566,594,7.198,595,4.417,596,3.967,597,6.299,598,0.92,599,5.071,600,4.707]],["title/classes/CheckPasswordTypoDto.html",[91,0.163,601,3.289]],["body/classes/CheckPasswordTypoDto.html",[14,0.009,18,0.124,19,0.138,20,0.097,22,0.124,23,0.138,29,1.458,90,0.124,91,0.233,92,0.006,93,0.008,94,0.006,104,0.194,108,0.396,113,0.377,120,1.402,291,1.49,294,3.578,299,1.359,410,1.893,443,5.573,508,6.102,510,6.574,596,3.978,598,0.922,601,5.685,602,7.206,603,5.573,604,6.315,605,3.357,606,6.315,607,6.315]],["title/injectables/CreateMulterUploadUtil.html",[95,0.207,608,2.917]],["body/injectables/CreateMulterUploadUtil.html",[14,0.009,18,0.092,19,0.102,20,0.109,22,0.092,23,0.165,24,0.855,32,0.664,90,0.092,91,0.173,92,0.005,93,0.006,94,0.005,95,0.296,96,0.936,104,0.143,106,1.545,108,0.369,111,1.319,112,1.258,113,0.231,114,1.004,150,1.554,151,2.391,152,1.809,153,0.981,179,3.28,182,1.028,194,3.093,260,1.184,279,1.004,298,3.093,299,1.004,356,1.271,397,1.97,409,1.792,410,2.272,461,2.534,462,1.76,472,1.86,473,1.86,474,1.47,475,1.914,477,3.488,485,2.871,562,4.118,598,0.76,608,4.158,609,6.687,610,6.123,611,3.757,612,5.051,613,4.752,614,4.118,615,4.894,616,4.667,617,2.5,618,4.118,619,4.696,620,4.463,621,5.051,622,4.667,623,6.273,624,4.158,625,3.488,626,3.488,627,4.667,628,4.118,629,2.686,630,3.272,631,3.272,632,4.667,633,4.667,634,4.118,635,4.118,636,2.805,637,4.667,638,4.667,639,4.667,640,2.481,641,4.667,642,2.391,643,4.667,644,4.667,645,3.488]],["title/classes/CreateQueryDto.html",[91,0.163,646,3.086]],["body/classes/CreateQueryDto.html",[14,0.009,18,0.108,19,0.12,20,0.085,22,0.108,23,0.153,24,0.596,29,1.274,90,0.108,91,0.204,92,0.005,93,0.007,94,0.005,104,0.169,108,0.434,113,0.414,133,2.494,182,1.542,321,3.448,494,4.62,598,0.848,646,4.908,647,7.522,648,4.124,649,2.955,650,2.377,651,6.999,652,1.952,653,6.999,654,3.347,655,2.891,656,1.867,657,5.635,658,4.207,659,4.207,660,4.841,661,3.676,662,3.938,663,4.443,664,4.274,665,4.87,666,4.87,667,4.443,668,4.87,669,2.827]],["title/classes/CreateRentalDto.html",[91,0.163,670,2.772]],["body/classes/CreateRentalDto.html",[14,0.009,18,0.092,19,0.102,20,0.072,22,0.123,23,0.102,29,1.076,90,0.092,91,0.172,92,0.005,93,0.006,94,0.005,104,0.143,108,0.451,113,0.445,120,1.503,133,2.589,299,1.003,306,2.903,480,3.266,567,2.573,598,0.759,650,1.582,652,1.299,656,1.076,670,3.946,671,7.704,672,3.266,673,2.8,674,3.75,675,4.111,676,3.386,677,4.459,678,4.074,679,3.763,680,3.911,681,4.964,682,5.291,683,4.964,684,4.459,685,3.75,686,4.658,687,3.946,688,4.658,689,4.2,690,4.658,691,4.658,692,4.658,693,4.658,694,4.111,695,4.658,696,3.481,697,3.266,698,3.266,699,3.266,700,3.266,701,3.266,702,3.266,703,1.967,704,3.266,705,2.934,706,3.266,707,3.266,708,3.481,709,3.481,710,3.481,711,3.481,712,3.481,713,3.481,714,2.089,715,2.934,716,2.934,717,2.934,718,2.387]],["title/injectables/CreateUpdaterDtoPipe.html",[95,0.207,719,2.772]],["body/injectables/CreateUpdaterDtoPipe.html",[14,0.009,18,0.076,19,0.084,20,0.059,22,0.137,23,0.176,24,0.756,32,0.55,90,0.076,91,0.143,92,0.004,93,0.005,94,0.004,95,0.26,96,0.776,104,0.119,108,0.334,111,1.349,112,1.287,113,0.192,114,0.833,119,0.894,150,1.59,153,1.662,173,1.692,182,1.214,256,3.471,260,1.875,291,1.505,321,2.472,351,3.471,356,2.092,358,1.693,409,2.382,410,1.652,449,2.136,461,2.889,485,2.375,522,2.878,572,1.314,576,2.472,577,2.636,580,2.327,583,2.726,585,1.543,598,0.668,617,2.197,652,1.537,655,1.384,661,2.636,669,2.824,674,4.437,719,3.471,720,6.172,721,4.838,722,3.416,723,4.253,724,4.437,725,4.863,726,6.418,727,6.418,728,5.765,729,3.87,730,6.469,731,3.87,732,3.864,733,3.87,734,3.864,735,5.511,736,4.437,737,3.416,738,2.714,739,2.929,740,4.437,741,2.26,742,4.119,743,3.116,744,5.664,745,3.116,746,5.664,747,3.116,748,5.664,749,4.042,750,5.511,751,5.511,752,2.138,753,1.736,754,3.87,755,3.87]],["title/injectables/CreateUserDto.html",[95,0.207,578,2.772]],["body/injectables/CreateUserDto.html",[14,0.009,18,0.119,19,0.132,20,0.093,22,0.119,23,0.162,24,0.656,32,0.863,90,0.119,91,0.224,92,0.006,93,0.007,94,0.006,95,0.35,96,1.216,104,0.186,108,0.418,113,0.398,120,1.444,279,1.598,291,1.454,294,3.387,299,1.598,305,3.49,466,4.264,578,4.676,598,0.899,756,7.377,757,4.02,758,5.205,759,5.352,760,6.065,761,4.532]],["title/modules/DatabaseModule.html",[0,1.974,762,2.772]],["body/modules/DatabaseModule.html",[0,3.74,2,3.326,7,4.602,8,4.806,14,0.009,18,0.118,19,0.131,20,0.093,22,0.118,23,0.161,24,0.925,32,0.856,33,5.182,34,3.792,36,3.792,56,3.86,90,0.157,91,0.223,92,0.006,93,0.007,94,0.006,102,5.182,280,4.253,703,3.12,762,4.654,763,6.02,764,7.39,765,5.523,766,5.182,767,4.898,768,6.438,769,6.02]],["title/injectables/DeleteS3ImagesUtil.html",[95,0.207,770,2.917]],["body/injectables/DeleteS3ImagesUtil.html",[14,0.009,18,0.062,19,0.069,20,0.048,22,0.112,23,0.156,24,0.511,32,0.447,51,2.262,64,4.685,76,2.979,89,2.613,90,0.062,91,0.116,92,0.003,93,0.005,94,0.003,95,0.223,96,0.63,104,0.096,106,1.04,108,0.33,111,1.196,112,1.141,113,0.156,114,0.676,120,0.52,150,1.568,151,1.609,152,1.218,153,0.994,260,1.2,279,1.709,291,1.24,311,2.613,356,2.273,358,1.944,397,3.524,409,1.625,449,1.833,461,2.034,473,3.036,598,0.573,613,5.06,614,2.772,615,4.288,617,2.267,621,3.807,626,2.347,629,4.943,630,3.316,631,3.316,636,3.804,642,3.994,656,1.313,679,2.514,770,3.134,771,5.991,772,2.772,773,4.173,774,4.729,775,4.97,776,5.688,777,5.688,778,3.141,779,3.141,780,5.465,781,4.438,782,4.438,783,3.141,784,5.585,785,3.141,786,1.502,787,4.729,788,5.991,789,3.364,790,4.729,791,6.329,792,3.141,793,4.729,794,3.141,795,4.729,796,4.729,797,6.329,798,4.729,799,3.358,800,3.141,801,4.729,802,5.191,803,4.173,804,5.991,805,3.141,806,4.729,807,4.729,808,3.141,809,4.729,810,4.729,811,5.096,812,4.729,813,4.729,814,4.729,815,4.729,816,4.173,817,4.729,818,4.729,819,4.729,820,3.141]],["title/injectables/DeleteUserDto.html",[95,0.207,821,3.086]],["body/injectables/DeleteUserDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,22,0.125,23,0.167,24,0.686,32,0.903,90,0.125,91,0.235,92,0.006,93,0.008,94,0.006,95,0.36,96,1.273,104,0.195,108,0.33,113,0.315,120,1.263,279,1.643,294,3.667,536,5.351,598,0.925,757,4.207,761,4.744,799,3.775,821,5.351,822,6.735,823,7.631]],["title/classes/EditDetailsDto.html",[91,0.163,824,2.917]],["body/classes/EditDetailsDto.html",[14,0.009,18,0.115,19,0.127,20,0.09,22,0.142,23,0.127,29,1.347,90,0.115,91,0.216,92,0.006,93,0.007,94,0.006,104,0.179,108,0.41,113,0.409,120,1.502,133,2.482,567,3.223,598,0.878,650,1.981,652,1.627,656,1.347,676,3.771,684,4.966,689,3.101,697,4.09,698,4.09,699,4.09,700,4.09,701,4.09,702,4.09,703,2.463,704,4.09,705,3.674,706,4.09,707,4.09,741,3.233,824,4.803,825,7.278,826,5.148,827,3.506,828,3.866,829,5.834,830,5.834,831,5.834,832,5.834]],["title/injectables/EmailService.html",[95,0.207,379,2.917]],["body/injectables/EmailService.html",[14,0.009,16,3.606,18,0.08,19,0.089,20,0.063,22,0.112,23,0.179,24,0.714,32,0.581,90,0.08,91,0.151,92,0.004,93,0.006,94,0.004,95,0.27,96,0.819,102,4.013,104,0.125,106,2.188,108,0.373,110,3.618,111,1.203,112,1.148,113,0.202,114,1.232,119,1.322,120,1.093,150,1.418,153,0.858,173,1.385,260,1.983,276,4.608,279,1.232,294,3.184,299,0.879,304,3.052,305,3.886,307,5.589,308,4.608,322,2.933,356,1.112,379,3.793,409,1.166,440,4.277,449,2.776,461,2.363,462,1.54,474,1.286,475,1.675,485,1.943,532,5.051,533,3.042,542,4.608,543,4.277,544,6.32,548,3.052,565,3.052,566,3.052,580,2.416,598,0.693,617,1.628,630,4.013,631,4.013,833,3.604,834,6.32,835,3.793,836,6.293,837,6.121,838,7.162,839,4.608,840,8.026,841,6.608,842,5.723,843,4.083,844,4.083,845,4.083,846,5.723,847,4.083,848,5.723,849,6.608,850,5.723,851,4.083,852,4.277,853,4.083,854,3.288,855,3.604,856,5.723,857,3.604,858,4.083,859,4.083]],["title/classes/ErrorFilter.html",[91,0.163,208,3.289]],["body/classes/ErrorFilter.html",[14,0.009,18,0.088,19,0.098,20,0.069,22,0.088,23,0.163,24,0.661,29,1.038,32,0.639,45,3.967,89,4.891,90,0.088,91,0.166,92,0.004,93,0.006,94,0.004,103,5.398,104,0.138,108,0.234,111,0.945,112,1.227,113,0.223,114,0.968,119,1.038,150,1.515,153,1.286,173,1.48,182,0.991,208,4.571,291,1.198,311,2.484,326,1.955,356,2.283,410,1.834,430,5.398,432,3.152,436,4.875,472,3.21,473,2.771,580,2.582,585,2.438,652,1.939,749,3.852,786,3.325,860,3.967,861,6.116,862,6.116,863,6.116,864,6.116,865,6.116,866,6.116,867,6.135,868,2.831,869,6.135,870,6.116,871,6.008,872,6.585,873,4.495,874,6.116,875,6.116,876,5.398,877,4.495,878,4.054,879,2.702,880,4.495,881,4.495,882,3.967,883,3.841,884,3.967,885,3.36,886,4.925,887,4.495,888,4.495,889,6.116,890,4.495,891,4.495,892,4.495,893,4.495,894,2.587,895,3.967,896,4.495,897,3.967,898,4.495,899,4.495,900,4.495,901,6.116,902,4.495,903,4.495,904,3.967,905,6.116,906,4.495,907,4.495]],["title/injectables/ExtractKeyValueUtil.html",[95,0.207,380,2.645]],["body/injectables/ExtractKeyValueUtil.html",[14,0.009,18,0.099,19,0.11,20,0.078,22,0.099,23,0.144,24,0.797,32,0.72,68,4.349,69,5.331,90,0.099,91,0.187,92,0.005,93,0.007,94,0.005,95,0.312,96,1.015,104,0.155,106,2.442,108,0.345,110,3.065,111,1.064,112,1.015,113,0.251,114,1.09,119,1.169,120,0.837,153,1.064,173,1.602,179,3.065,182,1.789,260,1.871,280,3.81,299,1.09,339,2.691,356,1.378,357,4.642,358,2.034,380,3.979,397,3.737,409,1.446,410,1.518,449,2.566,474,1.594,490,4.642,496,6.538,513,4.642,514,4.435,515,4.948,634,6.511,908,6.511,909,4.467,910,4.948,911,5.843,912,6.621,913,6.621,914,6.621,915,5.062,916,6.621,917,5.062,918,3.783,919,5.062,920,5.062,921,4.467,922,4.467,923,5.062,924,4.467,925,4.467,926,4.467]],["title/classes/ExtractKeyValueUtilDto.html",[91,0.163,918,3.289]],["body/classes/ExtractKeyValueUtilDto.html",[14,0.009,17,2.967,18,0.122,19,0.135,20,0.095,22,0.122,23,0.135,29,1.432,68,4.422,90,0.122,91,0.229,92,0.006,93,0.007,94,0.006,104,0.19,108,0.392,110,2.871,113,0.373,120,1.394,291,1.215,397,3.748,409,2.314,410,1.86,434,4.111,512,3.728,513,4.349,514,3.728,515,4.636,596,3.907,598,0.912,918,5.624,927,7.15,928,5.474,929,6.203,930,6.203]],["title/injectables/FindUserDto.html",[95,0.207,451,2.917]],["body/injectables/FindUserDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,22,0.125,23,0.167,24,0.69,32,0.908,90,0.125,91,0.236,92,0.006,93,0.008,94,0.006,95,0.361,96,1.28,104,0.196,108,0.332,113,0.316,120,1.266,279,1.648,305,3.783,442,4.069,451,5.074,598,0.927,757,4.229,761,4.769,799,3.787,931,6.163]],["title/classes/ForgotPasswordDto.html",[91,0.163,301,3.086]],["body/classes/ForgotPasswordDto.html",[14,0.009,16,3.684,18,0.127,19,0.141,20,0.099,22,0.127,23,0.141,29,1.489,90,0.127,91,0.238,92,0.006,93,0.008,94,0.006,104,0.198,108,0.336,113,0.32,120,1.274,291,1.263,301,5.401,304,4.819,305,3.794,410,1.933,424,4.819,565,4.819,595,4.521,598,0.933,600,4.819,782,4.521,932,6.798,933,6.448,934,6.448,935,5.69,936,6.448]],["title/injectables/GenerateRentalDurationEnumUtil.html",[95,0.207,937,2.772]],["body/injectables/GenerateRentalDurationEnumUtil.html",[14,0.009,18,0.077,19,0.085,20,0.06,22,0.077,23,0.168,24,0.759,32,0.555,90,0.077,91,0.144,92,0.004,93,0.006,94,0.004,95,0.261,96,0.782,104,0.12,108,0.289,111,1.165,112,1.111,114,1.193,119,1.28,150,1.739,153,1.777,173,1.341,260,1.954,299,1.193,321,2.486,326,2.411,356,2.097,358,1.199,449,1.512,461,2.305,462,2.09,468,3.491,472,2.209,473,2.209,474,1.745,475,2.273,485,1.882,652,1.957,654,1.866,656,1.779,661,2.65,786,1.866,879,3.874,894,2.245,937,3.491,938,5.689,939,3.94,940,3.443,941,4.891,942,4.851,943,5.542,944,5.542,945,3.673,946,5.542,947,5.542,948,5.542,949,7.269,950,3.901,951,2.735,952,5.651,953,5.542,954,3.901,955,4.462,956,5.542,957,5.542,958,6.201,959,6.379,960,5.677,961,3.141,962,3.443,963,4.142,964,3.901,965,3.901,966,3.901,967,4.462,968,3.901,969,3.901,970,3.901,971,3.901,972,2.915,973,3.901,974,3.901,975,3.443,976,3.901,977,6.446,978,4.52,979,3.901,980,3.053,981,6.446,982,6.446,983,3.443,984,5.542,985,2.457,986,3.443,987,6.446,988,3.901]],["title/injectables/GeoUrlApiPipe.html",[95,0.207,989,2.772]],["body/injectables/GeoUrlApiPipe.html",[12,2.947,14,0.009,18,0.062,19,0.069,20,0.049,22,0.125,23,0.167,24,0.737,32,0.452,51,3.044,52,5.067,80,4.21,90,0.062,91,0.117,92,0.003,93,0.005,94,0.003,95,0.225,96,0.637,104,0.098,106,1.052,108,0.331,111,1.338,112,1.277,113,0.284,114,1.37,119,1.323,120,1.396,150,1.69,151,1.628,152,1.849,153,1.434,173,1.541,182,1.637,245,1.91,260,1.983,279,1.37,291,1.247,299,1.468,306,3.58,337,3.345,356,1.951,358,1.76,397,2.014,409,1.949,410,1.43,419,4.016,449,1.232,461,2.277,462,1.199,472,1.267,473,1.267,474,1.001,475,1.303,479,3.044,485,2.704,514,2.867,516,1.91,533,2.536,576,2.14,577,2.281,580,2.688,649,1.342,650,1.62,652,1.33,656,1.575,718,4.144,753,2.855,766,3.345,781,3.345,786,1.52,789,2.536,868,2.208,883,4.223,989,3.005,990,6.021,991,2.804,992,3.044,993,4.784,994,3.565,995,3.841,996,2.208,997,4.77,998,4.21,999,5.618,1000,3.005,1001,2.867,1002,4.21,1003,6.366,1004,5.618,1005,2.804,1006,4.123,1007,3.177,1008,4.77,1009,3.177,1010,4.21,1011,4.77,1012,4.77,1013,4.464,1014,4.21,1015,5.211,1016,5.211,1017,3.177,1018,4.77,1019,6.366,1020,3.177,1021,2.228,1022,2.804,1023,2.106,1024,2.804,1025,2.375,1026,2.375,1027,2.558,1028,1.572,1029,2.558,1030,3.177,1031,3.177,1032,3.177,1033,3.177,1034,3.177,1035,4.21,1036,5.126,1037,2.804,1038,3.177,1039,2.804,1040,3.177,1041,3.177]],["title/injectables/GeoUrlApiUtil.html",[95,0.207,1006,2.533]],["body/injectables/GeoUrlApiUtil.html",[14,0.009,18,0.068,19,0.075,20,0.053,22,0.118,23,0.144,24,0.648,32,0.489,51,3.164,52,5.704,90,0.068,91,0.127,92,0.003,93,0.005,94,0.003,95,0.238,96,0.689,104,0.106,108,0.263,111,1.063,112,1.014,114,1.088,119,1.528,120,1.343,133,2.483,150,1.978,153,1.261,173,1.224,182,1.814,260,1.87,299,1.088,306,3.569,307,3.351,311,1.898,356,1.92,358,1.553,397,2.977,410,2.114,449,1.332,461,2.145,462,1.907,472,2.015,473,2.015,474,1.592,475,2.073,567,1.898,580,2.135,718,3.778,734,2.409,752,2.793,766,3.545,789,2.687,883,4.321,910,2.568,967,4.83,994,5.966,1004,4.462,1006,2.91,1014,4.462,1015,5.692,1016,5.598,1024,3.032,1027,2.766,1028,4.016,1029,2.766,1036,4.83,1042,5.294,1043,3.032,1044,5.056,1045,5.056,1046,6.615,1047,5.056,1048,4.462,1049,4.462,1050,5.056,1051,5.056,1052,5.056,1053,5.056,1054,5.056,1055,2.568,1056,4.071,1057,3.436,1058,5.056,1059,5.056,1060,5.056,1061,5.056,1062,5.056,1063,3.436,1064,5.294,1065,3.778,1066,3.778,1067,2.766,1068,3.436,1069,5.056,1070,3.032,1071,3.436,1072,3.436,1073,3.436,1074,1.541,1075,3.436,1076,3.436,1077,3.436,1078,3.436,1079,3.436,1080,3.436]],["title/injectables/GivenNoticePipe.html",[95,0.207,1081,2.533]],["body/injectables/GivenNoticePipe.html",[14,0.009,18,0.067,19,0.074,20,0.052,22,0.129,23,0.166,24,0.712,32,0.484,78,4.617,89,2.773,90,0.067,91,0.126,92,0.003,93,0.005,94,0.003,95,0.237,96,0.682,104,0.104,108,0.311,111,1.254,112,1.196,113,0.169,114,1.284,119,1.377,133,0.996,150,1.478,153,1.254,173,1.699,182,1.451,260,1.978,279,1.08,291,0.666,299,1.511,306,1.395,321,3.296,326,3.652,337,3.52,356,1.912,358,1.542,409,1.704,449,1.319,461,2.628,462,1.283,467,2.7,468,3.162,472,1.356,473,1.356,474,1.878,475,1.395,479,2.401,485,1.704,567,1.88,572,1.704,576,2.251,577,1.627,580,1.437,583,2.483,585,1.356,605,3.906,649,2.518,656,1.956,661,3.514,676,1.627,714,1.526,753,1.526,835,3.327,868,1.575,878,3.953,879,4.416,939,2.668,949,6.883,952,6.411,961,2.74,980,2.183,996,1.575,1023,2.255,1028,2.95,1074,2.675,1081,2.889,1082,5.811,1083,3.003,1084,5.02,1085,5.02,1086,3.585,1087,5.248,1088,4.041,1089,5.02,1090,4.43,1091,5.02,1092,5.02,1093,5.02,1094,5.02,1095,5.02,1096,5.02,1097,5.965,1098,5.965,1099,5.02,1100,3.403,1101,4.787,1102,3.162,1103,4.182,1104,3.403,1105,4.182,1106,5.02,1107,3.403,1108,4.43,1109,4.43,1110,4.43,1111,5.02,1112,5.02,1113,3.003,1114,3.403,1115,3.403,1116,3.403,1117,3.403,1118,3.403,1119,3.403,1120,3.003,1121,3.403,1122,3.403,1123,3.403,1124,5.02,1125,3.403,1126,3.403,1127,3.403,1128,3.403,1129,2.543,1130,2.74,1131,2.74,1132,4.041,1133,3.751]],["title/classes/GivenNoticeSearchRentalDto.html",[91,0.163,1105,3.086]],["body/classes/GivenNoticeSearchRentalDto.html",[14,0.009,18,0.103,19,0.114,20,0.08,22,0.103,23,0.148,24,0.566,29,1.209,90,0.103,91,0.194,92,0.005,93,0.007,94,0.005,104,0.161,108,0.438,113,0.417,120,1.311,133,2.319,306,3.075,328,4.745,479,3.236,598,0.82,650,2.298,656,1.976,676,3.586,714,3.363,878,5.44,879,3.147,1028,4.232,1081,4.562,1086,5.142,1101,5.17,1103,4.745,1105,4.745,1130,6.037,1131,6.037,1134,7.55,1135,4.215,1136,4.262,1137,6.767,1138,4.262,1139,5.235,1140,5.235,1141,5.235,1142,5.235,1143,5.235,1144,5.235]],["title/classes/HttpErrorFilter.html",[91,0.163,228,3.289]],["body/classes/HttpErrorFilter.html",[14,0.009,18,0.088,19,0.097,20,0.068,22,0.088,24,0.657,29,1.029,32,0.634,65,4.358,89,3.358,90,0.088,91,0.165,92,0.004,93,0.006,94,0.004,104,0.137,108,0.232,111,0.937,112,0.893,113,0.221,114,0.959,119,1.029,150,1.506,173,1.471,182,1.525,228,4.543,239,3.586,280,2.564,311,4.436,356,2.119,408,4.262,434,4.586,472,2.758,572,1.513,585,2.423,652,1.695,749,3.829,786,2.13,804,5.364,867,3.931,869,6.56,871,5.985,872,6.866,876,7.087,878,2.952,879,2.677,882,5.364,884,5.364,885,3.329,886,4.894,935,5.364,1145,5.364,1146,3.931,1147,7.433,1148,5.364,1149,6.078,1150,6.078,1151,8.219,1152,6.078,1153,7.433,1154,6.078,1155,6.078,1156,6.078,1157,6.078,1158,6.078,1159,6.078,1160,6.078,1161,6.078,1162,6.919,1163,6.078,1164,6.078,1165,4.454,1166,3.329,1167,4.454,1168,4.454,1169,4.454,1170,3.586,1171,4.894,1172,4.454,1173,4.454,1174,4.454,1175,4.454,1176,4.454,1177,4.454,1178,4.454,1179,4.454,1180,3.329,1181,4.454,1182,4.454,1183,4.454,1184,4.454,1185,3.931,1186,4.454,1187,4.454,1188,4.454]],["title/classes/ImageDto.html",[91,0.163,1189,3.086]],["body/classes/ImageDto.html",[14,0.009,18,0.126,19,0.14,20,0.099,22,0.126,23,0.14,29,1.485,51,3.935,90,0.126,91,0.238,92,0.006,93,0.008,94,0.006,104,0.197,108,0.4,113,0.381,120,1.411,598,0.932,640,3.418,642,3.941,649,2.715,1185,5.675,1189,5.393,1190,5.675,1191,6.431,1192,5.675,1193,6.15,1194,6.431,1195,6.431]],["title/interfaces/ImageInterface.html",[1196,2.105,1197,2.917]],["body/interfaces/ImageInterface.html",[14,0.009,18,0.112,19,0.125,20,0.088,22,0.112,23,0.125,51,3.914,90,0.112,92,0.006,93,0.007,94,0.006,104,0.175,113,0.437,120,1.539,397,3.456,598,0.866,620,5.155,629,4.71,642,2.926,703,2.411,1196,3.42,1197,4.74,1198,3.597,1199,5.04,1200,6.59,1201,5.425,1202,6.59,1203,5.739]],["title/classes/ImageQueryResultsDto.html",[91,0.163,1204,3.289]],["body/classes/ImageQueryResultsDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,22,0.125,23,0.139,29,1.47,90,0.125,91,0.235,92,0.006,93,0.008,94,0.006,104,0.195,108,0.398,113,0.379,133,2.237,182,1.402,291,1.246,442,3.383,463,3.918,598,0.926,649,2.687,656,1.47,775,4.89,799,3.148,1136,4.009,1204,5.712,1205,6.596,1206,5.617,1207,7.23,1208,6.364,1209,6.364]],["title/classes/ImageUploadDto.html",[91,0.163,1210,3.544]],["body/classes/ImageUploadDto.html",[14,0.009,18,0.121,19,0.134,20,0.115,22,0.121,23,0.134,29,1.418,64,3.691,90,0.121,91,0.227,92,0.006,93,0.007,94,0.006,104,0.189,108,0.42,112,1.5,113,0.4,120,1.448,338,5.656,397,3.406,598,0.906,629,4.831,649,2.593,775,3.534,1205,6.759,1210,6.022,1211,5.419,1212,5.419,1213,6.141,1214,6.141,1215,6.141,1216,6.141,1217,6.141]],["title/controllers/ImagesController.html",[168,2.34,212,3.086]],["body/controllers/ImagesController.html",[12,1.763,14,0.009,18,0.047,19,0.052,20,0.073,22,0.107,23,0.179,24,0.722,32,0.338,90,0.047,91,0.088,92,0.002,93,0.004,94,0.002,104,0.073,106,0.787,108,0.373,111,1.506,112,1.436,113,0.236,114,1.541,119,1.654,150,1.774,152,1.477,153,1.506,168,2.533,170,1.264,173,0.922,176,5.021,179,4.023,180,1.777,181,1.668,182,1.402,184,1.498,185,1.915,186,1.777,190,1.777,194,3.158,209,1.884,212,2.671,245,1.43,260,2.182,275,1.777,279,1.369,310,4.511,311,2.633,322,1.952,338,2.671,339,1.264,358,2.2,410,1.907,419,1.668,442,4.232,461,1.362,462,1.437,463,2.279,472,1.518,473,1.518,479,1.822,543,1.777,572,1.294,619,4.602,620,1.498,640,2.533,642,4.285,656,1.942,679,2.896,775,5.109,780,5.358,781,2.671,789,3.551,799,4.239,802,4.461,811,6.152,996,2.522,1102,1.498,1189,5.151,1218,2.099,1219,2.525,1220,3.81,1221,3.81,1222,3.81,1223,3.81,1224,3.362,1225,3.81,1226,3.362,1227,3.81,1228,3.81,1229,2.378,1230,5.614,1231,2.378,1232,2.378,1233,2.378,1234,2.378,1235,2.378,1236,2.378,1237,6.127,1238,2.378,1239,2.378,1240,2.378,1241,2.378,1242,2.378,1243,2.847,1244,2.378,1245,2.378,1246,3.81,1247,2.378,1248,5.449,1249,2.378,1250,3.821,1251,2.378,1252,2.378,1253,3.158,1254,2.099,1255,1.576,1256,2.099,1257,2.378,1258,2.671,1259,3.81,1260,3.81,1261,2.378,1262,2.378,1263,3.81,1264,5.449,1265,3.81,1266,3.81,1267,3.81,1268,3.81,1269,2.378,1270,2.378,1271,2.378,1272,2.378,1273,2.378,1274,2.378,1275,3.81,1276,2.378,1277,2.378,1278,2.378,1279,2.378,1280,2.378,1281,2.378,1282,3.81,1283,2.378]],["title/modules/ImagesModule.html",[0,1.974,200,3.086]],["body/modules/ImagesModule.html",[0,3.052,1,4.78,2,2.383,3,2.482,4,2.717,5,2.717,6,2.482,7,3.916,8,4.09,12,3.681,14,0.009,15,3.745,16,2.063,17,2.063,18,0.085,19,0.094,20,0.066,22,0.085,23,0.13,24,0.945,32,0.613,36,3.745,90,0.085,91,0.159,92,0.004,93,0.006,94,0.004,100,3.285,106,1.428,112,0.865,170,3.16,200,6.37,209,2.941,212,4.771,218,3.223,219,2.482,244,3.223,245,2.593,499,2.717,608,5.27,610,3.024,613,2.593,615,4.78,626,3.223,762,5.009,770,5.27,775,3.916,980,2.586,1201,2.859,1203,3.024,1219,3.941,1253,5.756,1254,3.807,1284,3.807,1285,3.807,1286,3.807,1287,3.807,1288,5.27,1289,5.27,1290,4.313,1291,5.946,1292,3.473,1293,4.313,1294,4.787,1295,4.313,1296,3.807,1297,5.247,1298,3.807,1299,3.807,1300,3.807,1301,3.807,1302,3.807,1303,3.473,1304,2.859,1305,5.946]],["title/injectables/ImagesService.html",[95,0.207,1253,2.917]],["body/injectables/ImagesService.html",[12,2.017,14,0.009,18,0.033,19,0.036,20,0.067,22,0.112,23,0.149,24,0.784,32,0.235,51,0.792,56,2.465,64,1.696,90,0.033,91,0.061,92,0.002,93,0.003,94,0.002,95,0.133,96,0.332,100,1.559,104,0.051,106,0.934,108,0.312,110,2.465,111,1.195,112,1.201,113,0.082,114,0.356,120,0.881,150,1.913,152,2.204,153,1.438,179,2.017,182,1.173,194,1.097,209,1.396,219,0.953,245,0.995,260,1.442,279,1.739,280,1.624,283,3.772,298,1.097,299,1.146,307,1.87,310,2.94,311,1.559,322,3.201,356,1.863,358,2.263,397,0.699,409,1.624,410,1.307,419,2.587,442,2.317,449,0.642,461,2.141,462,2.008,463,2.339,468,1.043,472,2.122,473,2.58,474,1.54,475,2.006,479,2.084,483,2.109,485,0.562,499,1.777,512,1.696,533,1.5,553,1.446,572,2.122,598,0.342,608,3.768,610,1.979,612,2.272,613,3.755,615,3.417,617,2.266,619,2.445,620,4.639,621,2.272,624,3.529,626,1.237,628,1.461,629,3.725,640,3.636,642,3.916,650,0.958,652,1.485,656,1.724,679,3.183,703,2.4,738,1.161,765,2.757,767,1.87,770,3.768,775,4.726,780,3.733,781,3.429,782,3.733,786,0.792,789,2.6,799,3.694,802,4.904,803,2.49,811,2.272,883,2.408,980,1.896,996,2.465,998,2.49,1087,1.237,1110,2.49,1120,3.846,1136,1.777,1180,2.109,1189,1.979,1193,2.109,1197,1.097,1201,5.287,1203,5.414,1204,1.237,1207,3.846,1212,2.49,1219,1.87,1224,3.256,1226,3.256,1253,1.87,1255,1.097,1256,1.461,1258,3.429,1288,3.768,1289,3.768,1296,1.461,1297,2.49,1298,1.461,1299,1.461,1300,1.461,1301,1.461,1302,1.461,1306,1.461,1307,1.87,1308,2.822,1309,1.87,1310,3.846,1311,5.325,1312,2.822,1313,2.822,1314,2.822,1315,2.822,1316,1.87,1317,2.822,1318,3.689,1319,3.689,1320,4.891,1321,5.017,1322,1.655,1323,1.655,1324,2.822,1325,1.655,1326,2.822,1327,1.655,1328,2.822,1329,1.655,1330,2.49,1331,2.822,1332,1.87,1333,2.822,1334,2.822,1335,2.49,1336,1.655,1337,3.689,1338,1.655,1339,3.509,1340,2.822,1341,5.685,1342,1.979,1343,2.822,1344,1.655,1345,1.655,1346,2.822,1347,2.272,1348,2.822,1349,1.777,1350,2.822,1351,1.237,1352,1.333,1353,0.995,1354,1.655,1355,1.979,1356,1.461,1357,1.655,1358,1.655,1359,1.655,1360,1.655,1361,6.841,1362,1.655,1363,1.655,1364,1.655,1365,1.655,1366,2.822,1367,4.699,1368,4.358,1369,2.822,1370,0.88,1371,1.655,1372,1.655,1373,1.655,1374,1.655,1375,3.689,1376,1.655,1377,1.655,1378,1.655,1379,1.655,1380,1.655,1381,1.655,1382,1.333,1383,3.256,1384,1.655,1385,1.655,1386,2.49,1387,1.655,1388,1.655,1389,1.655,1390,1.655,1391,1.655,1392,1.655]],["title/injectables/JoiValidationPipe.html",[95,0.207,1393,3.086]],["body/injectables/JoiValidationPipe.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.107,23,0.151,24,0.749,30,5.579,32,0.773,39,6.116,78,4.859,89,3.828,90,0.107,91,0.282,92,0.005,93,0.007,94,0.005,95,0.327,96,1.09,104,0.167,106,1.798,108,0.361,111,1.457,112,1.39,113,0.344,114,1.492,119,1.255,151,2.784,152,2.106,153,1.142,173,1.677,299,1.169,356,1.479,409,2.296,467,2.842,474,1.711,533,3.683,576,3.108,577,3.314,583,3.428,585,2.165,592,4.794,786,2.598,904,4.794,992,3.683,1304,5.789,1393,4.859,1394,6.734,1395,4.794,1396,6.93,1397,6.93,1398,6.93,1399,5.433,1400,5.433,1401,5.433,1402,5.433,1403,4.794,1404,5.433,1405,5.433]],["title/injectables/JwtAuthGuard.html",[95,0.207,184,2.772]],["body/injectables/JwtAuthGuard.html",[14,0.009,18,0.127,19,0.141,20,0.099,22,0.127,23,0.168,24,0.833,32,0.917,68,4.221,90,0.127,91,0.238,92,0.006,93,0.008,94,0.006,95,0.363,96,1.293,184,4.852,390,4.273,481,4.63,1406,5.69,1407,5.191,1408,5.106,1409,5.757,1410,4.521,1411,5.69,1412,5.191,1413,4.819,1414,6.448]],["title/classes/JwtPayloadDto.html",[91,0.163,624,2.917]],["body/classes/JwtPayloadDto.html",[14,0.009,18,0.123,19,0.137,20,0.096,22,0.123,23,0.137,29,1.447,68,3.211,90,0.123,91,0.232,92,0.006,93,0.008,94,0.006,104,0.192,108,0.424,113,0.404,120,1.455,291,1.227,305,3.54,410,1.879,466,4.326,596,3.947,598,0.917,624,5.019,625,6.317,1339,6.552,1415,5.53,1416,5.53,1417,6.266,1418,6.266,1419,6.266]],["title/injectables/JwtStrategy.html",[95,0.207,382,3.086]],["body/injectables/JwtStrategy.html",[14,0.009,18,0.103,19,0.114,20,0.081,22,0.103,23,0.173,24,0.888,32,0.746,68,4.385,76,3.304,90,0.103,91,0.194,92,0.005,93,0.007,94,0.005,95,0.319,96,1.052,104,0.161,106,2.485,108,0.353,111,1.103,112,1.052,113,0.26,114,1.129,119,1.212,150,1.3,153,1.668,173,1.64,182,1.493,260,1.904,298,5.258,305,2.282,339,2.789,357,3.679,382,4.751,390,3.477,391,3.921,392,4.63,404,4.63,466,2.789,467,2.779,481,4.512,635,4.63,911,4.63,1339,4.224,1410,4.751,1412,4.224,1413,3.921,1416,5.98,1420,4.63,1421,5.246,1422,6.776,1423,5.246,1424,4.63,1425,5.246,1426,4.63,1427,5.246,1428,5.246,1429,5.246,1430,5.246,1431,5.246,1432,5.246,1433,5.246,1434,5.246,1435,5.246]],["title/classes/LocCreateRentalDto.html",[91,0.163,1021,3.086]],["body/classes/LocCreateRentalDto.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.107,23,0.152,24,0.591,29,1.263,51,3.328,90,0.107,91,0.202,92,0.005,93,0.007,94,0.005,104,0.168,108,0.399,113,0.38,120,1.333,133,2.358,279,1.498,291,1.363,299,1.498,306,3.544,335,4.612,409,2.187,438,5.201,485,2.934,598,0.843,649,2.309,650,2.363,656,1.768,672,3.835,696,4.087,718,3.566,753,3.433,789,3.699,993,5.367,1013,4.88,1021,4.88,1036,6.163,1307,5.34,1436,7.11,1437,5.201,1438,6.959,1439,4.383,1440,4.403,1441,4.403]],["title/injectables/LocalAuthGuard.html",[95,0.207,345,3.289]],["body/injectables/LocalAuthGuard.html",[14,0.009,18,0.127,19,0.141,20,0.099,22,0.127,23,0.168,24,0.833,32,0.917,90,0.127,91,0.238,92,0.006,93,0.008,94,0.006,95,0.363,96,1.293,345,5.757,390,4.273,481,4.63,1407,5.191,1408,5.106,1409,5.757,1410,4.521,1411,5.69,1412,5.191,1413,4.819,1442,5.69,1443,6.633,1444,6.448]],["title/injectables/LocalStrategy.html",[95,0.207,383,3.086]],["body/injectables/LocalStrategy.html",[14,0.009,18,0.095,19,0.105,20,0.074,22,0.095,23,0.14,24,0.829,32,0.685,90,0.095,91,0.178,92,0.005,93,0.006,94,0.005,95,0.302,96,0.965,104,0.148,106,1.593,108,0.333,111,1.346,112,1.284,113,0.318,114,1.378,119,1.112,120,1.359,150,1.587,151,2.466,153,1.012,173,1.55,182,1.411,260,1.826,279,1.889,294,3.54,299,1.378,305,3.573,348,4.937,349,3.875,356,1.311,358,1.479,383,4.491,390,3.19,410,1.92,414,5.652,445,4.491,449,2.483,466,2.559,467,3.146,474,2.017,479,3.063,481,4.802,485,2.175,580,2.032,636,3.849,652,1.786,1342,4.491,1409,5.734,1410,5.601,1413,3.597,1424,4.248,1426,4.248,1443,3.875,1445,4.248,1446,4.813,1447,4.813,1448,6.404,1449,4.813,1450,6.404,1451,4.813,1452,4.813,1453,4.813,1454,3.375,1455,4.813]],["title/guards/LoggedOutGaurd.html",[187,2.645,1408,2.917]],["body/guards/LoggedOutGaurd.html",[14,0.009,17,3.077,18,0.076,19,0.085,20,0.06,22,0.126,23,0.168,24,0.758,32,0.553,59,4.645,65,2.449,68,4.217,86,2.337,90,0.076,91,0.144,92,0.004,93,0.005,94,0.005,95,0.261,104,0.119,106,1.287,108,0.335,111,1.353,112,1.29,113,0.319,114,1.385,119,1.277,150,1.37,151,1.992,152,1.507,153,1.163,173,1.338,179,2.56,182,1.814,187,3.324,260,1.632,279,1.385,284,4.452,287,2.906,288,4.132,297,4.512,299,0.837,318,4.452,319,5.237,320,4.645,322,2.833,325,4.132,326,2.405,329,4.132,336,2.906,339,2.067,356,1.908,358,1.195,397,2.717,410,1.658,418,5.75,434,3.665,436,2.727,449,2.717,461,2.301,474,1.225,512,3.324,513,3.877,514,3.868,515,4.132,528,3.432,553,3.942,567,3.055,572,1.32,580,2.335,585,1.55,652,1.542,687,3.483,910,2.906,921,3.432,922,3.432,924,3.432,992,3.42,1074,2.48,1170,4.452,1171,5.961,1342,2.727,1408,2.577,1456,3.889,1457,6.185,1458,3.432,1459,4.88,1460,7.404,1461,5.53,1462,3.889,1463,3.889,1464,3.889,1465,6.185,1466,3.889,1467,5.53,1468,5.181,1469,3.055,1470,5.53,1471,5.679,1472,5.53,1473,3.889,1474,5.53,1475,4.88,1476,4.88,1477,3.131,1478,3.889,1479,3.889,1480,3.889,1481,3.889,1482,3.889,1483,3.889,1484,3.432,1485,3.889,1486,3.432,1487,3.889]],["title/injectables/LoggingInterceptor.html",[95,0.207,207,3.289]],["body/injectables/LoggingInterceptor.html",[14,0.009,18,0.089,19,0.098,20,0.069,22,0.089,23,0.134,24,0.807,32,0.641,90,0.089,91,0.166,92,0.007,93,0.006,94,0.004,95,0.289,96,0.903,104,0.138,108,0.234,111,0.947,112,0.903,113,0.223,114,0.969,119,1.04,153,0.947,173,1.482,179,2.085,207,4.577,260,1.553,279,1.607,326,1.959,356,2.033,432,3.158,436,4.294,576,2.747,585,1.795,636,4.843,652,2.178,765,4.577,786,2.929,878,2.985,879,2.707,883,3.383,885,3.366,895,3.975,897,3.975,1001,3.681,1074,2.747,1136,3.857,1170,4.931,1171,3.626,1180,4.577,1409,5.2,1459,5.405,1465,6.59,1471,6.59,1477,3.626,1486,3.975,1488,5.405,1489,3.975,1490,6.124,1491,6.124,1492,6.124,1493,6.124,1494,6.959,1495,6.124,1496,5.405,1497,6.124,1498,6.124,1499,5.405,1500,6.124,1501,6.124,1502,6.124,1503,4.577,1504,6.124,1505,6.124,1506,6.124,1507,5.405,1508,6.124,1509,6.124,1510,6.124,1511,6.124,1512,6.124,1513,4.879,1514,7.467,1515,4.504,1516,6.124,1517,4.504,1518,4.504,1519,4.504,1520,4.504,1521,4.504,1522,4.504,1523,4.504,1524,4.504,1525,4.504,1526,4.504,1527,3.975,1528,2.985,1529,4.504,1530,4.504,1531,4.504]],["title/injectables/LoginDto.html",[95,0.207,1532,3.544]],["body/injectables/LoginDto.html",[14,0.009,18,0.123,19,0.137,20,0.096,22,0.123,23,0.165,24,0.677,32,0.891,90,0.123,91,0.232,92,0.006,93,0.008,94,0.006,95,0.357,96,1.257,104,0.192,108,0.394,113,0.376,120,1.398,209,3.746,279,1.63,294,3.436,434,5.019,445,5.31,466,4.326,598,0.917,1532,6.097,1533,5.53,1534,6.266,1535,6.266]],["title/classes/LoginUserDto.html",[91,0.163,1536,3.544]],["body/classes/LoginUserDto.html",[14,0.009,18,0.126,19,0.14,20,0.099,22,0.126,23,0.14,29,1.485,90,0.126,91,0.238,92,0.006,93,0.008,94,0.006,104,0.197,108,0.4,113,0.381,120,1.411,279,1.384,291,1.26,410,1.928,434,4.262,440,6.15,466,4.374,596,4.051,598,0.932,757,4.262,1536,6.193,1537,7.262,1538,6.431,1539,6.431]],["title/interfaces/MailOptionsInterface.html",[852,3.289,1196,2.105]],["body/interfaces/MailOptionsInterface.html",[14,0.009,18,0.122,19,0.135,20,0.095,22,0.122,23,0.135,90,0.122,92,0.006,93,0.007,94,0.006,104,0.19,113,0.428,120,1.527,542,4.982,543,4.624,598,0.91,836,4.982,837,4.624,852,5.616,854,6.777,855,7.428,857,7.428,1196,2.959,1198,3.897,1540,5.46]],["title/injectables/MapNewRentalPipe.html",[95,0.207,1439,2.772]],["body/injectables/MapNewRentalPipe.html",[14,0.009,18,0.097,19,0.108,20,0.076,22,0.128,23,0.169,24,0.79,32,0.705,90,0.097,91,0.183,92,0.005,93,0.006,94,0.005,95,0.308,96,0.995,99,4.377,104,0.152,108,0.258,111,1.043,112,0.995,113,0.324,114,1.067,119,1.145,150,1.229,153,1.043,173,1.581,182,1.439,260,1.853,291,1.622,299,1.572,306,2.034,356,1.351,409,1.866,462,1.871,472,1.977,473,1.977,474,1.562,475,2.034,485,2.739,576,3.482,577,3.124,583,3.231,585,1.977,650,2.218,652,1.822,656,1.508,670,5.217,673,3.926,675,5.765,676,2.372,677,3.124,678,2.854,679,2.636,680,2.74,681,3.478,682,3.706,683,3.478,684,3.124,718,2.541,753,3.482,1021,5.444,1022,4.377,1023,4.329,1129,3.706,1439,4.114,1541,5.765,1542,4.377,1543,4.96,1544,5.765,1545,3.993,1546,4.96,1547,4.96,1548,4.96,1549,4.96,1550,4.96,1551,4.96,1552,4.96,1553,3.993,1554,4.96,1555,4.96,1556,4.96]],["title/injectables/MulterUploadUtil.html",[95,0.207,1288,2.917]],["body/injectables/MulterUploadUtil.html",[14,0.009,18,0.088,19,0.098,20,0.094,22,0.12,23,0.163,24,0.486,32,0.639,56,2.831,90,0.088,91,0.166,92,0.004,93,0.006,94,0.004,95,0.288,96,0.902,104,0.138,108,0.234,111,0.945,112,0.902,150,2.077,153,1.286,179,3.218,182,1.348,260,1.14,279,1.68,291,1.198,299,0.968,310,4.485,311,3.379,358,1.381,409,1.284,410,1.834,449,1.743,462,1.696,472,1.792,473,2.974,474,1.416,475,1.844,499,4.916,533,3.251,598,0.741,611,3.619,612,6.633,617,1.792,618,3.967,619,5.697,620,5.072,636,2.702,640,3.251,642,3.999,652,2.081,656,1.723,703,3.4,775,4.492,789,3.251,799,3.026,802,4.289,816,3.967,868,2.831,996,2.831,1201,4.945,1258,5.232,1288,4.054,1321,6.135,1347,4.925,1367,3.967,1557,5.398,1558,6.116,1559,7.462,1560,4.495,1561,4.495,1562,4.495,1563,4.495,1564,4.495]],["title/injectables/PositiveNumber.html",[95,0.207,1565,3.289]],["body/injectables/PositiveNumber.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.12,23,0.163,24,0.66,32,0.869,76,3.849,86,3.673,90,0.12,91,0.226,92,0.006,93,0.007,94,0.006,95,0.352,96,1.225,104,0.188,108,0.318,133,2.355,153,1.568,291,1.197,409,1.745,467,3.301,533,3.964,536,5.229,598,0.903,617,2.436,980,2.658,1565,5.573,1566,6.581,1567,5.392,1568,6.581,1569,6.11,1570,6.11]],["title/classes/PricingDto.html",[91,0.163,1571,2.917]],["body/classes/PricingDto.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.12,23,0.133,29,1.407,90,0.12,91,0.225,92,0.006,93,0.007,94,0.006,104,0.187,108,0.419,113,0.415,120,1.232,133,2.45,572,2.843,598,0.902,650,2.07,652,1.7,656,1.407,680,3.367,689,3.24,714,3.606,715,5.064,716,3.839,717,3.839,741,3.297,827,3.663,1571,4.935,1572,5.379,1573,6.095,1574,6.095,1575,6.095,1576,6.095]],["title/injectables/PricingPipe.html",[95,0.207,1577,2.917]],["body/injectables/PricingPipe.html",[14,0.009,18,0.073,19,0.081,20,0.057,22,0.123,23,0.174,24,0.576,32,0.525,90,0.073,91,0.136,92,0.004,93,0.005,94,0.004,95,0.251,96,0.74,104,0.113,108,0.325,111,1.314,112,1.253,113,0.183,114,0.794,119,0.852,120,0.61,133,1.08,150,1.548,153,1.12,173,1.656,182,1.666,260,1.84,279,1.473,291,1.616,299,1.345,356,1.702,358,1.636,409,2.159,410,1.597,461,2.703,462,1.392,467,2.806,472,1.471,473,1.471,474,1.968,475,1.513,522,3.069,524,2.445,553,2.728,572,2.122,576,2.388,577,2.547,580,2.248,583,2.634,585,1.471,598,0.645,617,2.123,645,2.757,656,1.23,673,3.201,680,3.78,714,3.495,715,4.57,716,2.324,717,2.324,734,4.797,741,2.563,753,3.069,980,2.316,992,2.831,1074,3.069,1454,2.587,1469,4.176,1571,5.597,1577,3.529,1578,3.256,1579,5.325,1580,7.255,1581,7.255,1582,3.69,1583,5.325,1584,3.69,1585,5.509,1586,3.529,1587,3.69,1588,6.842,1589,4.7,1590,5.325,1591,5.325,1592,3.529,1593,2.971,1594,3.69,1595,3.69,1596,5.514,1597,2.757,1598,3.69,1599,6.403,1600,3.69,1601,5.514,1602,3.69,1603,3.256,1604,4.7,1605,3.69,1606,3.69]],["title/classes/ProcessRentalTimeDto.html",[91,0.163,963,3.289]],["body/classes/ProcessRentalTimeDto.html",[14,0.009,18,0.119,19,0.132,20,0.093,22,0.119,23,0.132,29,1.394,90,0.119,91,0.223,92,0.006,93,0.007,94,0.006,104,0.185,108,0.417,110,2.794,113,0.397,133,2.55,598,0.897,649,2.548,652,1.683,656,1.927,659,3.627,939,3.208,941,5.326,942,3.801,951,4.232,958,6.719,959,6.719,960,5.852,963,5.531,996,2.794,1136,3.801,1607,7.365,1608,5.326,1609,6.035,1610,6.035,1611,6.035,1612,6.035,1613,6.035,1614,6.035]],["title/injectables/ProcessSaveDataUtil.html",[95,0.207,1289,2.917]],["body/injectables/ProcessSaveDataUtil.html",[14,0.009,18,0.084,19,0.093,20,0.091,22,0.116,23,0.159,24,0.731,32,0.607,51,2.823,90,0.084,91,0.158,92,0.004,93,0.006,94,0.004,95,0.278,96,0.856,104,0.131,108,0.222,111,0.897,112,0.856,150,1.809,153,1.423,182,1.301,260,1.083,279,1.27,291,1.156,299,1.456,356,1.988,397,2.492,409,1.219,449,1.655,474,1.344,483,5.456,485,2.004,499,4.992,516,3.548,572,2.004,598,0.715,617,1.701,620,5.295,629,3.397,640,3.881,642,4.502,656,1.363,679,3.138,738,2.993,773,5.209,789,2.269,802,2.993,980,1.857,992,3.138,996,2.732,1074,2.647,1197,4.485,1200,4.752,1201,5.385,1202,4.752,1203,5.697,1250,5.119,1258,5.558,1289,3.912,1330,5.209,1342,2.993,1349,3.718,1352,3.436,1355,2.993,1356,3.767,1370,2.269,1469,3.261,1586,3.912,1615,5.209,1616,3.767,1617,6.763,1618,4.268,1619,5.209,1620,5.903,1621,3.767,1622,4.268,1623,4.268,1624,4.268,1625,4.268,1626,4.268,1627,4.268,1628,4.268,1629,4.268,1630,4.268,1631,4.268,1632,4.268,1633,4.268,1634,4.268]],["title/injectables/ProcessUnavailabilityPipe.html",[95,0.207,1635,2.772]],["body/injectables/ProcessUnavailabilityPipe.html",[14,0.009,18,0.046,19,0.052,20,0.036,22,0.107,23,0.151,24,0.686,28,3.344,32,0.336,56,2.513,90,0.046,91,0.087,92,0.002,93,0.004,94,0.002,95,0.179,96,0.474,104,0.073,108,0.247,111,0.997,112,0.951,113,0.117,114,0.508,119,0.546,150,1.345,153,1.333,173,0.917,182,1.526,260,1.507,279,1.365,281,5.597,291,1.356,321,3.566,326,2.759,351,2.386,356,2.077,358,1.668,408,4.166,409,2.041,410,1.627,449,2.104,463,3.187,467,1.554,468,2.386,485,1.843,494,2.851,504,2.657,516,2.277,522,2.435,533,2.014,572,1.843,576,2.128,577,1.13,583,1.874,585,0.942,598,0.459,617,1.51,646,4.447,649,1.6,652,1.057,654,1.812,655,2.901,656,1.253,657,3.051,658,2.277,659,3.812,660,2.988,661,3.582,662,4.253,664,1.941,669,1.941,703,1.6,732,3.806,739,3.158,741,2.226,752,2.621,758,2.657,767,2.511,786,1.13,789,2.014,868,1.754,980,2.361,992,2.014,1055,1.765,1074,1.06,1102,1.488,1109,3.344,1310,2.085,1316,2.511,1332,3.938,1513,2.657,1592,2.511,1617,4.79,1621,2.085,1635,2.386,1636,4.79,1637,1.656,1638,3.789,1639,5.428,1640,3.789,1641,3.789,1642,3.051,1643,4.74,1644,4.744,1645,5.428,1646,4.672,1647,2.362,1648,3.789,1649,3.789,1650,3.344,1651,3.789,1652,3.051,1653,7.49,1654,2.362,1655,3.789,1656,3.789,1657,3.789,1658,3.789,1659,3.789,1660,3.789,1661,3.789,1662,3.051,1663,2.511,1664,2.362,1665,2.085,1666,2.511,1667,3.051,1668,1.656,1669,2.362,1670,4.187,1671,2.362,1672,3.806,1673,2.362,1674,2.362,1675,3.124,1676,4.441,1677,2.362,1678,4.441,1679,2.362,1680,2.085,1681,5.428,1682,5.428,1683,3.789,1684,2.362,1685,2.085,1686,2.362,1687,5.428,1688,3.789,1689,2.362,1690,1.359,1691,1.488,1692,2.085,1693,3.789,1694,3.42,1695,3.789,1696,4.744,1697,4.187,1698,4.744,1699,4.744,1700,4.744,1701,4.744,1702,2.362,1703,3.42,1704,2.362,1705,6.926,1706,5.942,1707,2.362,1708,2.362,1709,3.789,1710,3.344,1711,3.789,1712,3.789,1713,3.789,1714,2.362,1715,2.085,1716,2.362,1717,2.362,1718,2.362,1719,2.362,1720,3.051,1721,2.362,1722,3.051,1723,2.362,1724,2.362]],["title/classes/ProcessedSaveDataDto.html",[91,0.163,1355,3.086]],["body/classes/ProcessedSaveDataDto.html",[14,0.009,18,0.12,19,0.134,20,0.094,22,0.12,23,0.163,24,0.662,29,1.415,90,0.12,91,0.226,92,0.006,93,0.007,94,0.006,104,0.188,108,0.389,113,0.37,291,1.463,483,6.022,499,5.075,598,0.905,642,4.406,649,3.153,650,2.536,652,2.083,1197,5.7,1335,6.591,1352,4.932,1355,5.237,1725,7.111,1726,4.932,1727,6.125,1728,5.406]],["title/classes/ProcessedUnavailabilityDto.html",[91,0.163,1666,2.917]],["body/classes/ProcessedUnavailabilityDto.html",[14,0.009,18,0.104,19,0.115,20,0.081,22,0.104,23,0.148,24,0.736,29,1.219,90,0.104,91,0.195,92,0.005,93,0.007,94,0.005,104,0.162,108,0.392,110,3.681,113,0.394,182,1.499,291,1.612,299,1.465,485,2.311,572,2.557,598,0.824,650,2.311,652,1.898,654,3.803,655,3.013,673,4.09,689,2.807,767,4.51,1136,4.286,1307,4.51,1469,3.759,1663,3.5,1666,4.51,1668,6.011,1670,6.005,1672,5.279,1694,3.039,1703,3.039,1720,6.062,1722,6.062,1729,6.403,1730,3.039,1731,6.805,1732,5.085,1733,6.805,1734,6.805,1735,6.005,1736,4.66,1737,3.946,1738,4.66]],["title/classes/ProcessedUnavailabilityQueryDto.html",[91,0.163,1672,3.086]],["body/classes/ProcessedUnavailabilityQueryDto.html",[14,0.009,18,0.108,19,0.12,20,0.084,22,0.108,23,0.12,29,1.266,90,0.108,91,0.203,92,0.005,93,0.007,94,0.005,104,0.168,108,0.45,110,2.537,113,0.429,120,1.408,133,2.561,321,3.437,479,2.621,598,0.844,646,4.887,648,4.096,650,1.861,655,3.129,661,3.664,662,3.926,663,4.413,664,2.808,665,4.837,666,4.837,667,4.413,668,4.837,739,4.073,741,3.142,752,4.233,1672,4.887,1675,4.41,1729,7.046,1732,4.096,1739,5.481,1740,5.481,1741,4.837,1742,5.481,1743,4.413,1744,5.481,1745,4.837]],["title/classes/RawCoordinatesDto.html",[91,0.163,1066,3.289]],["body/classes/RawCoordinatesDto.html",[14,0.009,18,0.124,19,0.137,20,0.097,22,0.124,23,0.137,29,1.455,52,4.175,90,0.124,91,0.233,92,0.006,93,0.008,94,0.006,104,0.193,108,0.395,113,0.377,119,1.455,133,2.478,306,2.583,410,1.888,598,0.92,650,2.579,718,3.227,994,4.707,995,5.071,1006,3.625,1048,7.198,1049,7.198,1064,5.559,1066,5.677,1746,6.566,1747,5.071,1748,5.071,1749,5.559,1750,5.559]],["title/classes/RawCreateRentalDto.html",[91,0.163,993,3.086]],["body/classes/RawCreateRentalDto.html",[14,0.009,18,0.08,19,0.089,20,0.063,22,0.112,23,0.089,29,0.943,51,3.425,90,0.08,91,0.151,92,0.004,93,0.006,94,0.004,104,0.125,108,0.426,113,0.43,120,1.467,133,2.537,209,2.02,279,1.232,291,1.121,299,0.879,320,2.706,328,2.863,335,2.706,410,1.224,480,2.863,485,2.864,494,3.44,524,2.706,567,2.256,572,2.244,576,1.831,598,0.693,642,2.092,650,1.386,652,1.139,656,2.002,660,2.572,670,2.572,673,2.454,676,3.425,677,4.511,679,3.807,680,3.957,681,5.288,683,5.022,684,4.511,687,3.605,689,4.008,697,2.863,698,2.863,699,2.863,700,2.863,701,2.863,702,2.863,703,1.724,704,2.863,705,2.572,706,2.863,707,2.863,708,3.052,709,3.052,710,3.052,711,3.052,712,3.052,713,3.052,714,1.831,715,2.572,716,3.605,717,2.572,753,1.831,767,3.793,939,2.17,985,2.572,989,2.572,993,4.013,996,1.89,1001,3.44,1013,2.863,1074,1.831,1086,2.454,1135,3.288,1243,4.277,1309,2.706,1437,3.052,1499,3.604,1503,3.052,1585,3.288,1746,6.702,1751,4.083,1752,4.083,1753,4.083,1754,4.083,1755,3.288,1756,4.083,1757,4.083,1758,3.288,1759,3.604,1760,4.083,1761,4.083,1762,4.083,1763,5.051,1764,5.723,1765,4.083,1766,4.083,1767,4.083,1768,4.083,1769,3.052,1770,4.083,1771,4.083,1772,4.083,1773,4.083,1774,4.083,1775,4.083,1776,4.083,1777,4.083,1778,3.604,1779,4.083]],["title/classes/RawScheduleUnavailabilityDto.html",[91,0.163,1780,3.289]],["body/classes/RawScheduleUnavailabilityDto.html",[14,0.009,18,0.12,19,0.134,20,0.094,22,0.12,23,0.163,24,0.662,29,1.415,90,0.12,91,0.226,92,0.006,93,0.007,94,0.006,104,0.188,108,0.319,113,0.304,182,1.646,291,1.463,335,4.95,337,5.237,598,0.905,650,2.536,654,4.011,655,3.075,656,1.725,664,4.128,669,3.139,868,3.457,1437,5.581,1730,3.525,1780,5.581,1781,6.591,1782,4.489,1783,4.578]],["title/classes/RawSearchRentalDto.html",[91,0.163,1103,3.086]],["body/classes/RawSearchRentalDto.html",[14,0.009,18,0.114,19,0.127,20,0.089,22,0.114,23,0.127,29,1.341,90,0.114,91,0.215,92,0.006,93,0.007,94,0.006,104,0.178,108,0.441,113,0.42,120,1.362,133,2.115,306,3.376,321,2.604,326,2.526,598,0.875,650,1.971,661,2.777,672,4.071,676,3.937,685,4.675,694,5.124,696,4.339,714,3.693,1028,4.331,1081,3.341,1103,5.067,1130,6.334,1131,6.334,1440,4.675,1441,4.675,1528,5.457,1784,7.62,1785,5.806]],["title/classes/RemoveUnavailabilityDto.html",[91,0.163,1786,2.917]],["body/classes/RemoveUnavailabilityDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,22,0.125,23,0.139,29,1.47,56,2.946,90,0.125,91,0.235,92,0.006,93,0.008,94,0.006,104,0.195,108,0.398,113,0.379,120,1.406,438,4.756,516,3.825,598,0.926,650,2.161,652,1.775,655,2.276,739,4.355,741,3.36,1544,5.617,1730,3.663,1783,4.756,1786,5.066,1787,7.23,1788,6.364,1789,6.364,1790,5.617]],["title/controllers/RentalController.html",[168,2.34,211,3.086]],["body/controllers/RentalController.html",[12,1.128,13,2.447,14,0.009,18,0.048,19,0.053,20,0.037,22,0.048,23,0.085,24,0.936,32,0.347,34,1.535,51,2.643,90,0.048,91,0.179,92,0.002,93,0.004,94,0.002,104,0.075,106,0.807,108,0.351,111,1.418,112,1.353,113,0.335,114,1.452,119,1.558,150,0.604,152,0.945,153,1.418,168,2.575,170,1.296,173,0.94,176,4.731,179,1.128,181,2.724,209,1.922,211,2.724,245,1.465,256,2.447,260,2.13,275,1.822,291,1.082,299,1.299,310,1.465,322,1.991,338,1.709,358,2.073,442,2.065,461,0.872,462,0.919,463,1.166,472,0.972,473,0.972,474,0.768,475,1,485,1.876,520,2.575,522,1.743,619,2.575,652,1.083,654,1.858,655,2.919,656,1.96,669,1.991,670,3.481,677,1.535,679,2.065,680,2.146,705,2.447,714,2.173,719,3.051,721,1.535,723,3.662,736,1.963,738,2.724,824,4.262,827,4.542,828,4,883,2.146,886,1.963,937,2.447,939,1.296,989,2.447,996,2.558,1000,2.447,1006,2.788,1013,3.397,1023,2.575,1025,1.822,1026,1.822,1028,1.922,1081,2.788,1138,1.535,1219,2.575,1243,2.903,1393,1.709,1439,2.447,1545,1.963,1571,4.262,1577,3.21,1593,1.963,1635,2.447,1663,2.575,1666,3.662,1667,1.963,1755,3.128,1758,3.128,1782,2.912,1786,3.662,1791,2.151,1792,2.903,1793,2.724,1794,3.429,1795,4.877,1796,3.429,1797,3.429,1798,3.429,1799,3.429,1800,3.429,1801,3.429,1802,2.151,1803,2.438,1804,3.885,1805,2.438,1806,2.438,1807,2.438,1808,5.526,1809,2.438,1810,3.21,1811,2.438,1812,2.438,1813,2.438,1814,2.438,1815,2.151,1816,3.885,1817,4.844,1818,3.21,1819,2.438,1820,4.232,1821,3.128,1822,2.151,1823,3.885,1824,2.438,1825,2.438,1826,2.438,1827,3.429,1828,2.438,1829,4.051,1830,2.438,1831,2.438,1832,2.438,1833,2.438,1834,3.128,1835,3.429,1836,2.151,1837,3.429,1838,2.438,1839,2.151,1840,3.21,1841,2.151,1842,2.151,1843,2.151,1844,2.151,1845,2.151,1846,2.151,1847,2.151,1848,1.963,1849,2.151,1850,3.429,1851,2.151,1852,2.151,1853,1.963,1854,1.963,1855,1.963,1856,1.535,1857,2.151,1858,2.151,1859,2.151,1860,2.151,1861,1.963,1862,2.438,1863,2.151,1864,4.275,1865,2.151,1866,1.963,1867,1.963,1868,2.151,1869,4.877,1870,2.335,1871,2.151,1872,2.151,1873,2.151,1874,1.963,1875,1.963,1876,2.438,1877,6.983,1878,2.438,1879,2.438,1880,2.438,1881,2.438,1882,2.438,1883,2.438,1884,2.438,1885,2.438,1886,2.438,1887,2.438,1888,2.438,1889,2.438,1890,2.438,1891,2.438,1892,2.438,1893,2.438,1894,2.438,1895,2.438,1896,2.438,1897,2.438,1898,2.151,1899,2.438,1900,2.438]],["title/injectables/RentalDurationPipe.html",[95,0.207,1138,2.772]],["body/injectables/RentalDurationPipe.html",[14,0.009,18,0.092,19,0.102,20,0.072,22,0.124,23,0.166,24,0.82,32,0.666,90,0.092,91,0.173,92,0.005,93,0.006,94,0.005,95,0.296,96,0.939,104,0.144,106,1.551,108,0.327,111,1.322,112,1.261,113,0.312,114,1.354,119,1.082,150,1.161,151,2.4,153,0.985,173,1.522,182,1.386,260,1.801,291,1.232,299,1.008,306,1.921,356,1.276,358,1.439,409,1.797,462,1.767,463,3.629,472,1.867,473,1.867,474,1.475,475,1.921,485,2.577,576,2.821,577,3.008,580,2.655,583,3.111,585,1.867,649,2.998,656,1.954,676,2.24,714,2.101,868,2.911,937,5.134,939,3.774,942,4.472,945,4.168,951,3.285,975,4.134,992,3.343,1000,3.961,1028,2.317,1067,3.772,1086,2.816,1101,2.951,1105,5.715,1113,4.134,1129,3.501,1132,3.772,1133,3.501,1138,3.961,1662,5.064,1663,4.168,1835,5.55,1853,3.772,1854,3.772,1901,6.266,1902,4.134,1903,4.685,1904,4.685,1905,7.1,1906,4.685,1907,6.289,1908,4.134,1909,4.685,1910,4.685,1911,4.685,1912,4.685,1913,4.134]],["title/interfaces/RentalInterface.html",[1196,2.105,1914,3.086]],["body/interfaces/RentalInterface.html",[14,0.009,18,0.091,19,0.101,20,0.071,22,0.122,23,0.101,90,0.091,92,0.005,93,0.006,94,0.005,104,0.142,113,0.454,120,1.518,133,2.551,306,3.095,567,2.554,572,2.117,598,0.755,617,2.811,656,1.067,676,3.61,677,4.754,678,4.344,679,4.012,680,4.17,681,5.293,682,5.641,683,5.293,684,4.754,687,4.442,689,4.594,697,3.241,698,3.241,699,3.241,700,3.241,701,3.241,702,3.241,703,2.632,704,3.241,705,2.912,706,3.241,707,3.241,708,3.455,709,3.455,710,3.455,711,3.455,712,3.455,713,3.455,714,2.073,715,2.912,716,2.912,717,2.912,718,2.369,1196,2.981,1198,2.912,1914,4.371,1915,4.08,1916,4.08]],["title/modules/RentalModule.html",[0,1.974,201,3.086]],["body/modules/RentalModule.html",[0,3.442,2,1.643,3,1.711,4,1.873,5,1.873,6,1.711,7,3.165,8,3.306,12,3.233,13,2.857,14,0.009,15,2.857,16,1.422,17,1.422,18,0.058,19,0.065,20,0.046,22,0.089,23,0.134,24,0.95,32,0.423,33,3.181,34,1.873,36,2.857,56,2.849,90,0.058,91,0.11,92,0.003,93,0.005,94,0.003,96,0.91,98,3.181,100,2.506,106,0.984,108,0.286,111,0.625,112,0.91,113,0.147,114,0.64,119,0.687,150,0.737,170,2.411,173,0.72,182,1,201,6.347,211,3.857,218,2.222,219,1.711,223,4.003,279,0.976,299,0.64,322,2.324,522,1.333,585,1.185,652,1.716,655,1.967,656,1.048,678,1.711,703,1.915,719,4.399,721,1.873,762,4.399,827,1.787,828,3.006,883,2.506,937,4.399,939,1.58,980,1.973,989,4.399,996,2.1,1006,4.019,1025,2.222,1026,2.222,1081,4.019,1138,4.399,1166,2.222,1292,2.394,1303,2.394,1304,3.645,1316,3.006,1439,4.399,1577,4.629,1635,4.399,1745,4.003,1782,4.198,1792,5.22,1793,2.085,1810,4.629,1818,4.629,1820,2.085,1840,5.351,1841,2.624,1842,2.624,1843,2.624,1844,2.624,1845,2.624,1851,2.624,1852,2.624,1853,2.394,1854,2.394,1856,4.399,1857,2.624,1858,2.624,1859,2.624,1860,2.624,1863,2.624,1864,4.854,1865,2.624,1868,2.624,1869,5.431,1870,4.198,1871,2.624,1872,2.624,1873,2.624,1917,2.624,1918,2.624,1919,2.973,1920,2.624,1921,2.973,1922,3.652,1923,4.003,1924,6.984,1925,3.39,1926,4.536,1927,4.536,1928,6.154,1929,2.624,1930,4.003,1931,5.431,1932,2.973,1933,4.536,1934,4.536,1935,4.854,1936,4.536,1937,4.536,1938,4.536,1939,4.536,1940,2.973,1941,3.652,1942,2.973,1943,3.652,1944,2.973,1945,3.652,1946,2.973,1947,2.624,1948,2.624,1949,2.973,1950,2.624,1951,2.973,1952,2.973,1953,2.973,1954,2.973,1955,2.973,1956,2.973,1957,2.973]],["title/injectables/RentalService.html",[95,0.207,1840,2.917]],["body/injectables/RentalService.html",[14,0.009,18,0.034,19,0.037,20,0.026,22,0.107,23,0.17,24,0.764,32,0.244,46,1.28,51,1.39,56,2.063,86,2.679,90,0.034,91,0.063,92,0.002,93,0.003,94,0.002,95,0.137,96,0.344,104,0.053,106,0.962,108,0.341,111,1.379,112,1.315,113,0.325,114,1.551,119,1.404,150,1.432,152,1.126,153,1.332,173,0.703,182,0.64,219,0.986,256,2.808,260,2.05,263,1.201,291,1.456,299,1.659,307,1.135,326,2.359,356,2.119,358,2.214,408,1.201,409,0.489,410,0.871,461,2.175,462,2.294,463,3.382,467,1.192,472,2.424,473,2.424,474,2.18,475,2.494,480,2.037,485,1.514,494,1.747,514,2.274,516,2.274,522,3.028,524,1.926,533,1.545,564,2.564,567,1.605,572,1.514,598,0.352,605,1.545,617,0.683,650,0.582,652,0.81,654,1.39,655,2.694,656,1.932,659,3.655,660,1.83,669,1.489,670,2.808,676,1.81,678,2.178,680,2.09,684,1.079,703,2.441,705,1.83,714,2.593,715,2.383,716,2.383,717,2.383,718,1.939,721,2.808,723,2.954,736,1.379,738,1.201,739,0.911,741,0.703,749,1.83,784,1.512,786,0.819,824,3.594,827,3.259,828,2.954,939,3.232,972,1.28,980,1.939,996,2.934,999,3.934,1000,2.383,1001,3.259,1002,2.564,1010,2.564,1013,2.037,1023,1.926,1028,1.872,1086,1.747,1087,2.172,1088,2.339,1102,1.079,1148,2.564,1193,2.172,1255,1.135,1342,3.125,1349,1.079,1351,1.28,1353,2.274,1370,1.545,1545,1.379,1571,2.954,1593,1.379,1596,3.339,1599,1.512,1601,1.512,1604,1.512,1619,2.564,1642,2.339,1643,2.172,1652,2.339,1663,1.135,1666,3.307,1667,1.379,1676,2.172,1678,1.28,1690,2.178,1691,2.808,1694,0.986,1703,1.672,1720,1.379,1722,2.339,1755,2.339,1758,2.339,1759,2.564,1769,2.172,1786,2.954,1795,2.564,1796,2.564,1797,2.564,1798,2.564,1799,2.564,1800,2.564,1801,3.934,1802,2.564,1815,2.564,1820,3.125,1821,2.339,1822,2.564,1827,2.564,1829,4.615,1836,2.564,1840,1.926,1855,1.379,1866,1.379,1867,1.379,1875,1.379,1914,1.201,1958,1.512,1959,2.906,1960,3.339,1961,3.784,1962,2.564,1963,1.512,1964,1.713,1965,2.564,1966,1.713,1967,2.906,1968,2.906,1969,2.906,1970,2.564,1971,1.713,1972,2.906,1973,2.906,1974,2.906,1975,1.713,1976,2.906,1977,2.906,1978,1.713,1979,1.713,1980,2.906,1981,1.713,1982,2.906,1983,2.906,1984,2.906,1985,1.713,1986,1.713,1987,2.906,1988,2.906,1989,1.713,1990,2.564,1991,4.457,1992,1.512,1993,1.28,1994,1.201,1995,1.512,1996,1.512,1997,1.512,1998,1.713,1999,1.512,2000,1.713,2001,1.713,2002,1.713,2003,2.906,2004,4.457,2005,2.906,2006,1.713,2007,1.713,2008,1.713,2009,1.713,2010,1.713,2011,1.713,2012,2.906,2013,1.713,2014,1.713,2015,1.713,2016,2.339,2017,1.713,2018,1.713,2019,1.713,2020,1.713,2021,1.713,2022,1.713,2023,1.713,2024,1.512,2025,2.564,2026,1.512,2027,1.512,2028,1.512,2029,1.512,2030,1.512,2031,1.512,2032,1.512,2033,1.512,2034,1.512,2035,1.512,2036,1.512,2037,3.339,2038,1.512,2039,1.512,2040,3.339,2041,1.512,2042,1.713,2043,2.906,2044,1.713,2045,1.713,2046,1.713,2047,1.713,2048,1.713,2049,1.713,2050,1.713,2051,1.713,2052,1.512]],["title/classes/RequestCoordinatesDto.html",[91,0.163,945,2.917]],["body/classes/RequestCoordinatesDto.html",[14,0.009,18,0.115,19,0.128,20,0.09,22,0.115,23,0.128,29,1.354,90,0.115,91,0.217,92,0.006,93,0.007,94,0.007,104,0.18,108,0.442,113,0.421,120,1.367,133,2.532,291,1.148,306,3.24,328,4.11,479,2.803,598,0.881,649,2.475,650,1.99,676,3.779,714,3.544,942,4.977,945,4.818,951,4.11,1081,3.373,1101,5.203,1307,3.885,1747,4.719,1749,5.173,1750,5.173,1856,3.692,2053,7.638,2054,5.862,2055,5.862,2056,5.862]],["title/injectables/RequestCoordinatesPipe.html",[95,0.207,1856,2.772]],["body/injectables/RequestCoordinatesPipe.html",[14,0.009,18,0.089,19,0.099,20,0.07,22,0.121,23,0.163,24,0.81,32,0.645,52,3.007,90,0.089,91,0.168,92,0.005,93,0.006,94,0.005,95,0.29,96,0.91,104,0.139,106,1.502,108,0.32,111,1.294,112,1.234,113,0.346,114,1.325,119,1.048,150,1.124,151,2.325,152,1.759,153,0.954,173,1.49,182,1.65,260,1.772,291,1.205,299,0.977,306,1.861,356,1.902,358,1.394,409,1.758,462,1.711,472,1.808,473,1.808,474,1.429,475,1.861,479,2.943,485,2.09,576,2.761,577,2.943,583,3.045,585,1.808,649,2.599,652,1.716,676,2.17,678,4.02,714,2.035,718,2.325,766,4.316,786,2.17,868,3.467,883,2.507,942,2.858,945,4.964,955,4.955,994,4.6,995,4.955,996,2.849,1005,4.004,1006,4.647,1015,4.316,1016,4.316,1023,3.007,1025,3.391,1026,3.391,1027,3.653,1028,3.455,1029,3.653,1035,4.004,1037,4.004,1039,4.004,1067,3.653,1101,2.858,1129,4.6,1132,3.653,1133,3.391,1553,3.653,1662,4.955,1663,4.079,1769,4.6,1829,5.086,1855,3.653,1856,3.877,1908,4.004,1913,4.004,2057,6.164,2058,4.004,2059,4.537,2060,4.537,2061,6.155,2062,6.155,2063,6.155,2064,4.537]],["title/classes/ResetPasswordDto.html",[91,0.163,331,3.086]],["body/classes/ResetPasswordDto.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.12,23,0.133,29,1.411,90,0.12,91,0.226,92,0.006,93,0.007,94,0.006,104,0.188,108,0.419,113,0.399,120,1.446,152,3.489,279,1.315,291,1.197,294,2.58,331,5.229,410,1.832,425,5.392,595,4.284,598,0.903,599,4.92,600,4.566,2065,7.396,2066,6.11,2067,8.049,2068,8.049,2069,6.015,2070,6.11]],["title/injectables/ResetPasswordTokenDto.html",[95,0.207,2071,3.289]],["body/injectables/ResetPasswordTokenDto.html",[14,0.009,16,4.039,18,0.123,19,0.136,20,0.096,22,0.123,23,0.165,24,0.676,32,0.889,90,0.123,91,0.231,92,0.006,93,0.008,94,0.006,95,0.356,96,1.254,104,0.192,108,0.325,113,0.31,120,1.251,279,1.818,294,3.566,442,4.019,490,6.064,598,0.916,931,6.087,2071,5.65,2072,5.516,2073,6.251]],["title/injectables/S3Provider.html",[95,0.207,615,2.645]],["body/injectables/S3Provider.html",[12,3.733,14,0.009,18,0.108,19,0.12,20,0.084,22,0.108,23,0.176,24,0.828,25,4.39,32,0.78,64,4.606,65,4.39,90,0.108,91,0.203,92,0.005,93,0.007,94,0.005,95,0.329,96,1.099,104,0.168,106,1.815,108,0.363,111,1.152,112,1.099,113,0.272,114,1.18,151,2.808,152,2.125,153,1.152,299,1.18,397,2.942,409,1.566,419,4.887,512,4.189,598,0.844,613,5.115,615,4.189,617,2.185,629,4.641,640,3.704,1950,4.837,2074,4.837,2075,5.611,2076,7.662,2077,5.481,2078,5.481,2079,5.481,2080,6.969,2081,4.837,2082,5.481,2083,5.481,2084,5.481,2085,5.481]],["title/classes/SearchRentalDto.html",[91,0.163,1829,2.772]],["body/classes/SearchRentalDto.html",[14,0.009,18,0.11,19,0.122,20,0.086,22,0.11,23,0.122,29,1.292,90,0.11,91,0.207,92,0.006,93,0.007,94,0.006,104,0.172,108,0.445,113,0.436,120,1.344,133,2.571,182,1.233,306,3.172,337,3.922,479,2.675,598,0.855,649,2.362,650,1.899,652,1.56,656,1.292,672,3.922,673,3.362,676,3.699,678,4.675,685,4.504,689,2.973,696,4.181,714,3.469,718,2.866,942,5.117,1028,2.767,1101,5.117,1440,4.504,1441,4.504,1553,4.504,1769,4.181,1829,4.446,2086,7.665,2087,4.937,2088,5.594,2089,5.594,2090,5.594]],["title/injectables/SortUnavailabilityPipe.html",[95,0.207,1782,2.645]],["body/injectables/SortUnavailabilityPipe.html",[14,0.009,18,0.055,19,0.061,20,0.043,22,0.134,23,0.171,24,0.696,32,0.396,88,2.083,90,0.055,91,0.103,92,0.003,93,0.004,94,0.003,95,0.203,96,0.559,104,0.086,108,0.335,111,1.353,112,1.291,113,0.138,114,0.6,119,0.644,133,0.816,150,1.594,153,1.713,173,1.44,182,1.5,260,1.727,291,1.39,299,1.137,326,1.878,356,1.933,358,1.623,409,2.151,449,2.495,461,2.801,462,1.051,467,2.639,472,1.111,473,1.111,474,1.664,475,1.143,479,1.333,520,2.861,572,1.794,576,1.936,577,2.064,580,1.822,583,2.135,585,1.111,598,0.523,605,3.162,617,2.371,654,3.078,655,2.623,656,1.22,662,4.288,664,3.048,669,2.707,749,1.755,753,2.369,786,1.333,789,3.618,868,2.445,894,2.484,910,2.083,925,2.46,939,2.294,972,2.083,978,1.954,980,2.799,992,2.294,1102,2.719,1316,2.861,1332,3.501,1349,1.755,1528,2.861,1637,1.954,1642,3.475,1675,3.703,1685,3.809,1690,3.917,1691,4.287,1694,2.484,1697,2.46,1703,2.484,1780,4.446,1782,2.594,2016,4.253,2091,6.007,2092,7.834,2093,3.475,2094,4.316,2095,4.316,2096,3.809,2097,4.316,2098,6.435,2099,6.435,2100,6.435,2101,2.787,2102,3.704,2103,2.787,2104,5.395,2105,5.283,2106,2.787,2107,5.283,2108,2.787,2109,4.316,2110,6.807,2111,4.316,2112,2.787,2113,5.25,2114,3.475,2115,6.265,2116,2.244,2117,2.787,2118,3.948,2119,2.787,2120,2.46,2121,2.46,2122,2.787,2123,2.787,2124,2.787,2125,2.787,2126,2.787,2127,2.787,2128,2.787,2129,5.283,2130,2.787,2131,2.46,2132,4.316,2133,2.787,2134,2.787,2135,4.316,2136,2.787,2137,2.787,2138,2.787,2139,5.283,2140,5.283,2141,4.316,2142,2.787,2143,2.787,2144,2.787,2145,3.809,2146,3.809,2147,2.787,2148,2.787,2149,2.787,2150,2.083,2151,2.787]],["title/interfaces/SortedUnavailabilityDto.html",[1196,2.105,2118,3.289]],["body/interfaces/SortedUnavailabilityDto.html",[14,0.009,18,0.111,19,0.123,20,0.087,22,0.111,23,0.155,24,0.609,90,0.111,92,0.006,93,0.007,94,0.006,104,0.173,113,0.352,182,1.562,432,4.972,572,2.635,598,0.859,605,3.769,650,2.408,655,2.912,662,3.633,664,4.457,669,2.886,753,3.18,985,4.466,1001,4.262,1196,2.694,1198,3.548,1691,4.466,1730,3.241,1870,4.262,2093,5.709,2104,4.972,2114,6.557,2118,5.299,2145,7.187,2146,7.187,2152,4.971,2153,5.709,2154,7.09,2155,5.299,2156,5.299,2157,6.257,2158,6.257]],["title/injectables/TestRentalService.html",[95,0.207,2159,3.544]],["body/injectables/TestRentalService.html",[14,0.009,18,0.091,19,0.101,20,0.071,22,0.091,24,0.815,32,0.656,46,4.652,65,3.921,90,0.091,91,0.171,92,0.005,93,0.006,94,0.005,95,0.293,96,0.925,98,4.365,104,0.142,106,2.061,108,0.367,111,1.309,112,1.248,113,0.309,114,1.516,119,1.438,152,1.789,153,1.309,173,1.507,219,2.655,260,2.058,356,1.256,408,3.235,461,2.519,463,2.977,514,2.773,572,2.114,656,1.627,678,2.655,703,3.184,714,2.792,718,2.364,834,5.494,1000,2.906,1028,2.282,1351,3.448,1353,2.773,1676,4.652,1678,3.448,1914,3.235,1960,4.072,1962,5.494,1963,4.072,1965,6.656,1970,5.494,1992,4.072,1996,4.072,2024,4.072,2025,5.494,2026,4.072,2027,4.072,2028,4.072,2029,4.072,2030,4.072,2031,4.072,2032,4.072,2033,4.072,2034,4.072,2035,4.072,2036,4.072,2037,5.494,2038,4.072,2039,4.072,2040,6.218,2041,4.072,2159,5.012,2160,6.656,2161,4.072,2162,6.225,2163,6.225,2164,7.542,2165,4.614,2166,4.614,2167,4.614,2168,4.614,2169,4.614]],["title/interfaces/TransporterInterface.html",[1196,2.105,2170,3.544]],["body/interfaces/TransporterInterface.html",[14,0.009,18,0.114,19,0.127,20,0.089,22,0.114,23,0.127,48,6.634,76,3.666,90,0.114,92,0.006,93,0.007,94,0.006,104,0.179,113,0.443,120,1.429,133,2.305,276,6.634,279,1.253,440,4.349,598,0.877,687,4.961,689,4.38,836,4.686,837,4.349,871,6.634,1196,3.461,1198,3.666,2170,5.827,2171,5.136,2172,5.136,2173,8.475,2174,8.475,2175,5.82,2176,5.82]],["title/classes/TypeOfValue.html",[91,0.163,2177,3.289]],["body/classes/TypeOfValue.html",[14,0.009,18,0.122,19,0.135,20,0.095,22,0.122,23,0.135,29,1.432,76,3.907,86,3.728,90,0.122,91,0.229,92,0.006,93,0.007,94,0.006,104,0.19,108,0.323,113,0.308,120,1.026,153,1.582,409,2.465,467,3.323,533,3.297,536,4.349,572,2.555,598,0.912,617,2.473,1597,4.636,2177,5.624,2178,6.642,2179,5.474,2180,7.15,2181,6.203]],["title/classes/UnavailabilityDto.html",[91,0.163,664,2.255]],["body/classes/UnavailabilityDto.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.107,23,0.119,29,1.263,90,0.107,91,0.202,92,0.005,93,0.007,94,0.005,104,0.168,108,0.443,113,0.422,120,1.333,133,2.559,279,1.177,321,3.433,326,3.33,468,3.445,494,4.183,598,0.843,654,3.328,656,1.263,660,4.383,661,3.661,662,4.482,664,3.566,741,3.139,752,4.229,765,4.087,894,4.405,1001,3.287,1309,3.625,1370,3.699,1643,4.087,1675,4.405,2182,4.826,2183,5.469,2184,5.469,2185,5.469,2186,5.469,2187,5.469,2188,5.469,2189,5.469,2190,5.469,2191,5.469,2192,4.612,2193,5.201,2194,4.403,2195,4.087]],["title/classes/UnavailabilityInterface.html",[91,0.163,1994,3.086]],["body/classes/UnavailabilityInterface.html",[14,0.009,18,0.111,19,0.123,20,0.087,22,0.111,23,0.123,29,1.307,90,0.111,91,0.209,92,0.006,93,0.007,94,0.006,104,0.174,108,0.447,113,0.425,120,1.35,133,2.577,321,3.488,326,3.093,494,4.274,598,0.861,655,2.024,660,4.479,661,3.719,662,4.18,703,2.389,741,3.189,752,4.296,894,3.256,1001,3.401,1196,2.706,1370,3.78,1675,4.475,1994,4.986,2192,4.713,2193,5.314,2194,4.556,2195,4.229,2196,4.994,2197,5.658,2198,5.658,2199,5.658,2200,5.658,2201,5.658,2202,5.658]],["title/classes/UnavailabilityQueryDto.html",[91,0.163,1668,3.086]],["body/classes/UnavailabilityQueryDto.html",[14,0.009,18,0.096,19,0.106,20,0.075,22,0.096,23,0.106,29,1.125,56,2.255,90,0.096,91,0.18,92,0.005,93,0.006,94,0.005,104,0.15,108,0.401,110,2.255,113,0.428,120,1.068,133,2.591,182,1.073,283,4.855,291,0.954,321,3.597,553,3.307,598,0.782,605,4.097,648,3.64,649,2.057,654,2.329,655,3.145,656,1.852,657,6.206,658,4.82,659,4.82,661,3.835,662,3.709,663,3.922,667,3.922,689,4.263,732,3.415,741,2.969,835,3.228,978,3.415,980,2.119,1503,3.64,1668,4.526,1675,4.166,1676,5.993,1678,5.993,1680,4.299,1690,2.803,1741,4.299,1748,3.922,2203,7.078,2204,4.871,2205,4.871,2206,4.299,2207,4.871]],["title/classes/UpdateUnavailabilityDataDto.html",[91,0.163,723,2.917]],["body/classes/UpdateUnavailabilityDataDto.html",[14,0.009,18,0.114,19,0.127,20,0.089,22,0.114,23,0.127,29,1.341,90,0.114,91,0.215,92,0.006,93,0.007,94,0.006,104,0.178,108,0.376,113,0.42,120,1.302,133,2.409,256,4.551,291,1.137,321,3.241,410,1.741,480,4.071,512,3.49,522,3.241,598,0.875,650,1.971,652,1.619,655,2.944,656,1.341,661,3.456,689,4.182,719,3.657,721,4.955,723,4.789,724,4.675,739,3.086,741,2.381,749,4.955,752,3.208,1353,3.49,1726,4.675,1728,5.124,2208,6.334,2209,5.806]],["title/classes/UpdateUnavailabilityDto.html",[91,0.163,730,3.289]],["body/classes/UpdateUnavailabilityDto.html",[14,0.009,18,0.113,19,0.125,20,0.088,22,0.113,23,0.125,29,1.325,90,0.113,91,0.212,92,0.006,93,0.007,94,0.006,104,0.176,108,0.439,110,2.656,113,0.419,120,1.424,133,2.399,182,1.264,291,1.124,522,2.574,593,4.62,598,0.869,650,1.948,652,1.6,655,2.052,658,3.449,659,3.449,724,4.62,730,5.361,739,4.16,741,3.209,743,6.301,745,6.301,747,6.301,753,2.574,1309,3.803,1469,3.17,1592,3.803,1730,3.302,1732,4.288,1737,4.288,1738,5.064,1783,4.288,2208,6.931,2210,5.738,2211,5.738,2212,5.738,2213,5.738,2214,4.62,2215,4.62]],["title/injectables/UpdateUserDto.html",[95,0.207,2216,3.086]],["body/injectables/UpdateUserDto.html",[14,0.009,18,0.121,19,0.134,20,0.095,22,0.121,23,0.163,24,0.665,32,0.876,90,0.121,91,0.228,92,0.006,93,0.007,94,0.006,95,0.353,96,1.235,104,0.189,108,0.39,113,0.372,114,1.809,120,1.39,279,1.612,291,1.467,305,3.513,466,4.292,598,0.908,757,4.08,759,5.433,761,4.601,799,3.706,1743,6.032,2216,5.253,2217,7.126]],["title/controllers/UserController.html",[168,2.34,210,3.086]],["body/controllers/UserController.html",[14,0.009,18,0.07,19,0.078,20,0.055,22,0.133,23,0.179,24,0.898,32,0.509,90,0.07,91,0.132,92,0.004,93,0.005,94,0.004,104,0.11,108,0.351,111,1.419,112,1.353,113,0.335,114,1.452,119,1.558,150,1.776,151,1.835,152,1.388,153,1.419,168,3.266,170,1.904,173,1.261,176,4.731,179,3.887,180,2.677,181,2.511,182,1.148,184,2.256,185,2.884,186,2.677,187,2.153,188,3.161,189,2.677,190,4.592,191,4.947,209,2.578,210,3.655,260,2.13,275,2.677,279,1.9,291,1.513,299,1.452,305,3.119,322,2.67,336,2.677,338,2.511,358,1.888,364,4.6,416,3.87,442,2.77,445,3.655,451,4.472,453,4.731,485,1.77,522,3.216,573,3.895,578,4.25,584,2.677,780,3.655,799,3.914,821,4.731,839,4.196,868,2.413,1219,3.454,1230,3.161,1237,3.161,1393,2.511,1837,3.161,1839,3.161,1846,3.161,1847,3.161,1849,3.161,1850,3.161,1874,2.884,1877,5.422,2216,4.731,2218,3.161,2219,5.212,2220,5.212,2221,4.6,2222,5.212,2223,3.582,2224,3.582,2225,3.582,2226,3.582,2227,3.582,2228,3.582,2229,3.582,2230,3.582,2231,3.582,2232,3.582,2233,3.582,2234,3.582,2235,3.582,2236,3.582,2237,3.582,2238,5.212,2239,3.161,2240,3.161,2241,3.582,2242,2.884,2243,3.161,2244,3.582,2245,3.582,2246,3.582,2247,3.582,2248,3.582,2249,3.582,2250,3.582,2251,3.582,2252,3.582,2253,3.582,2254,3.582,2255,3.582]],["title/interfaces/UserInterface.html",[458,2.917,1196,2.105]],["body/interfaces/UserInterface.html",[14,0.009,18,0.119,19,0.133,20,0.093,22,0.119,23,0.133,90,0.119,92,0.006,93,0.007,94,0.006,104,0.187,113,0.426,120,1.51,279,1.309,294,3.532,305,3.639,458,4.927,466,4.447,598,0.901,703,2.567,1196,3.555,1198,3.829,1528,5.323,2069,6.253,2256,5.366,2257,7.384]],["title/modules/UserModule.html",[0,1.974,202,2.917]],["body/modules/UserModule.html",[0,3.658,1,4.785,2,2.391,3,2.491,4,2.726,5,2.726,6,2.491,7,3.923,8,4.097,14,0.009,15,3.754,16,2.07,17,2.07,18,0.085,19,0.094,20,0.067,22,0.085,23,0.13,24,0.946,32,0.616,36,3.754,90,0.085,91,0.16,92,0.004,93,0.006,94,0.004,98,4.179,100,3.293,106,1.433,108,0.225,110,2.004,111,0.91,112,1.195,113,0.215,114,0.932,119,1,170,3.168,173,1.048,202,5.867,210,4.78,218,3.235,219,2.491,244,3.235,247,5.488,248,3.485,279,1.467,299,0.932,348,2.602,380,4.785,381,4.785,397,1.828,398,3.235,400,3.235,416,5.428,418,4.454,460,3.485,762,5.014,1166,3.235,1219,3.95,1292,3.485,1303,3.485,1304,2.869,1792,5.489,1923,5.26,1929,3.82,1930,5.26,1931,6.481,1935,5.26,1947,3.82,1948,3.82,2243,3.82,2258,3.82,2259,3.82,2260,3.82,2261,4.329,2262,4.329,2263,5.96,2264,5.094,2265,4.329,2266,4.799,2267,4.329,2268,4.329,2269,4.329,2270,3.485,2271,4.329,2272,3.82,2273,4.329,2274,4.329,2275,4.329,2276,4.329]],["title/classes/UserPropertyDto.html",[91,0.163,454,3.289]],["body/classes/UserPropertyDto.html",[14,0.009,18,0.119,19,0.132,20,0.093,22,0.119,23,0.132,29,1.394,90,0.119,91,0.223,92,0.006,93,0.007,94,0.006,104,0.185,108,0.434,113,0.414,120,1.475,182,1.33,194,4,279,1.299,291,1.182,294,3.38,305,3.482,328,4.232,410,1.809,433,5.326,454,5.531,466,4.255,479,2.886,481,3.627,596,3.801,598,0.897,1193,5.982,2277,7.558,2278,5.326,2279,6.035,2280,6.035,2281,6.035,2282,6.035]],["title/injectables/UserService.html",[95,0.207,416,2.772]],["body/injectables/UserService.html",[14,0.009,16,2.238,17,1.783,18,0.046,19,0.051,20,0.036,22,0.124,23,0.173,24,0.845,32,0.329,59,2.471,68,2.749,86,2.241,90,0.046,91,0.086,92,0.002,93,0.004,94,0.002,95,0.176,96,0.464,100,2.06,104,0.071,106,1.234,108,0.358,111,1.445,112,1.379,113,0.341,114,1.48,119,1.526,150,1.758,152,2.08,153,1.532,173,0.902,179,3.372,182,1.641,194,2.471,209,1.844,219,1.332,256,1.458,260,2.067,279,1.875,283,1.458,287,1.73,288,2.786,291,1.531,294,2.265,298,1.535,299,1.603,305,3.169,310,1.392,318,3.002,319,2.786,320,2.471,322,2.749,329,2.786,335,2.471,339,1.231,356,1.984,358,2.331,362,1.73,380,3.973,381,3.973,397,1.574,398,1.73,400,1.73,410,1.118,416,2.348,418,4.939,436,2.614,438,2.786,442,2.852,445,2.614,451,3.556,453,3.762,458,1.535,460,1.864,461,2.713,462,2.219,463,1.107,469,2.043,470,1.864,471,2.043,472,1.866,473,1.866,474,1.852,475,2.412,485,1.822,490,2.614,496,3.002,498,2.043,500,2.043,516,2.241,520,1.535,522,3.403,534,3.002,538,4.735,548,2.786,572,1.266,578,3.379,584,1.73,624,2.471,625,1.73,703,2.265,721,2.948,732,1.624,749,1.458,753,1.039,780,3.282,788,2.043,799,2.315,821,3.762,868,2.91,1074,1.039,1307,2.471,1351,1.73,1353,1.392,1743,1.864,1821,3.002,1874,1.864,1999,2.043,2069,3.498,2071,4.01,2216,4.821,2221,3.29,2239,2.043,2240,3.29,2272,2.043,2283,2.043,2284,3.728,2285,3.728,2286,3.728,2287,3.728,2288,3.728,2289,3.728,2290,3.728,2291,2.315,2292,2.315,2293,2.786,2294,3.728,2295,2.315,2296,3.728,2297,2.315,2298,3.002,2299,3.728,2300,2.315,2301,3.728,2302,2.315,2303,3.728,2304,2.315,2305,3.29,2306,3.728,2307,2.315,2308,3.728,2309,2.315,2310,2.043,2311,2.315,2312,1.864,2313,2.315,2314,2.315,2315,2.315,2316,3.728,2317,2.315,2318,2.315,2319,2.315,2320,2.315,2321,3.728,2322,2.315,2323,2.315,2324,3.728,2325,2.315,2326,2.315,2327,2.315,2328,1.864,2329,2.315,2330,2.315,2331,2.315,2332,2.315,2333,4.68,2334,2.315,2335,2.315,2336,2.315,2337,2.315]],["title/injectables/ValidateEditDetailsPipe.html",[95,0.207,1810,2.917]],["body/injectables/ValidateEditDetailsPipe.html",[14,0.009,18,0.062,19,0.069,20,0.049,22,0.112,23,0.156,24,0.686,32,0.449,90,0.062,91,0.117,92,0.003,93,0.005,94,0.003,95,0.224,96,0.633,104,0.097,106,1.889,108,0.354,111,0.998,112,0.952,113,0.283,114,0.679,119,0.729,120,1.414,133,2.363,150,1.176,153,0.664,173,1.149,182,1.72,260,1.61,291,0.93,299,1.839,356,0.86,358,0.97,409,2.425,424,5.702,449,1.224,461,2.04,467,3.041,468,1.988,474,2.653,479,3.035,522,2.559,553,1.618,576,2.129,577,2.27,580,2.004,583,2.348,585,1.258,598,0.575,617,1.258,640,1.678,652,1.324,656,1.571,741,1.295,742,2.359,753,2.129,824,4.737,827,4.779,828,4.509,868,2.198,1074,2.129,1102,1.988,1133,4.264,1332,2.092,1370,1.678,1454,3.329,1469,2.623,1565,5.542,1568,6.004,1585,2.542,1586,3.146,1589,4.19,1592,3.146,1810,3.146,1866,2.542,1867,2.542,2121,2.786,2177,5.542,2338,5.342,2339,2.786,2340,6.804,2341,4.747,2342,6.804,2343,4.747,2344,3.157,2345,3.157,2346,3.157,2347,3.157,2348,3.157,2349,3.157,2350,3.157,2351,3.157,2352,3.157,2353,4.747,2354,3.157,2355,3.157,2356,3.157,2357,3.157,2358,3.157,2359,3.157,2360,3.157,2361,3.157,2362,3.157,2363,3.157,2364,3.157,2365,3.157,2366,3.157,2367,3.157,2368,3.157,2369,3.157,2370,3.157,2371,3.157,2372,3.157,2373,3.157,2374,3.157,2375,3.157,2376,3.157,2377,3.157,2378,3.157,2379,3.157,2380,3.157,2381,3.157,2382,3.157,2383,3.157,2384,3.157,2385,3.157,2386,3.157,2387,3.157,2388,3.157,2389,3.157,2390,3.157,2391,3.157,2392,3.157,2393,3.157,2394,3.157,2395,3.157,2396,3.157,2397,3.157,2398,3.157,2399,3.157]],["title/injectables/ValidateEmailMiddleware.html",[95,0.207,2264,3.289]],["body/injectables/ValidateEmailMiddleware.html",[14,0.009,18,0.074,19,0.082,20,0.058,22,0.124,23,0.166,24,0.848,32,0.537,56,3.201,90,0.074,91,0.234,92,0.004,93,0.005,94,0.004,95,0.255,96,0.757,104,0.116,106,1.792,108,0.36,111,1.331,112,1.269,113,0.343,114,1.362,119,1.25,150,1.713,152,1.463,173,1.31,179,2.506,182,1.769,260,1.932,263,2.647,279,1.785,280,3.115,299,1.759,305,3.555,310,4.156,311,4.209,339,2.007,356,1.028,358,1.663,409,1.546,453,2.647,458,2.502,461,2.473,463,2.589,467,2.836,477,4.046,485,1.282,537,4.777,553,1.934,578,4.355,580,2.919,584,2.821,585,1.505,598,0.656,605,4.049,636,3.804,652,2.125,658,4.156,703,2.919,758,3.796,835,3.588,868,2.506,1074,3.101,1255,2.502,1353,2.269,1468,4.359,1469,3.82,1513,5.502,1792,4.046,1794,4.777,2264,4.046,2293,2.821,2310,3.331,2400,6.46,2401,3.331,2402,5.413,2403,6.108,2404,6.102,2405,3.775,2406,5.413,2407,4.777,2408,3.775,2409,5.413,2410,5.413,2411,3.775,2412,5.413,2413,5.413,2414,4.777,2415,3.775,2416,3.775,2417,3.775,2418,3.775,2419,3.775,2420,3.775,2421,3.775,2422,3.331,2423,3.775,2424,3.331,2425,3.775,2426,3.775]],["title/injectables/ValidateEmailUtil.html",[95,0.207,2403,3.289]],["body/injectables/ValidateEmailUtil.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.107,23,0.176,24,0.589,32,0.774,89,3.834,90,0.107,91,0.201,92,0.005,93,0.007,94,0.007,95,0.327,96,1.092,104,0.167,106,2.529,108,0.361,111,1.145,112,1.092,114,1.172,119,1.257,150,1.719,153,1.145,173,1.679,279,1.828,299,1.172,305,3.695,362,4.069,442,2.894,463,2.604,474,2.405,553,3.914,658,4.994,955,4.384,1055,4.069,1166,4.069,1349,4.371,1370,4.06,1603,6.124,2403,5.186,2404,6.124,2427,6.741,2428,4.805,2429,8.308,2430,5.445,2431,6.94,2432,5.445,2433,6.94,2434,5.445,2435,5.445,2436,5.445]],["title/injectables/ValidateRemoveUnavailabilityPipe.html",[95,0.207,1818,2.917]],["body/injectables/ValidateRemoveUnavailabilityPipe.html",[14,0.009,18,0.091,19,0.101,20,0.071,22,0.139,23,0.177,24,0.676,32,0.661,90,0.091,91,0.172,92,0.005,93,0.006,94,0.005,95,0.295,96,0.932,104,0.143,108,0.326,111,1.315,112,1.255,113,0.231,114,1.001,119,1.074,120,1.252,150,1.55,153,0.977,173,1.514,182,1.906,299,1.347,409,2.374,424,4.676,461,2.529,467,3.103,474,1.97,553,3.206,576,2.806,577,2.992,580,2.642,583,3.095,585,1.853,598,0.758,617,1.853,640,3.326,652,1.745,655,2.824,656,1.823,669,2.382,739,3.326,740,3.743,741,2.566,742,3.474,753,3.393,868,3.764,1074,2.806,1454,4.387,1586,4.147,1597,4.676,1637,3.26,1786,5.233,1818,4.147,1820,5.827,1875,3.743,2338,5.286,2437,6.257,2438,6.968,2439,4.649,2440,4.649,2441,4.649,2442,4.649]],["title/classes/ValidateScheduleUnavailabilityDto.html",[91,0.163,2102,3.086]],["body/classes/ValidateScheduleUnavailabilityDto.html",[14,0.009,18,0.105,19,0.116,20,0.082,22,0.105,23,0.15,24,0.577,29,1.233,90,0.105,91,0.197,92,0.005,93,0.007,94,0.005,104,0.164,108,0.357,113,0.34,182,1.51,321,3.073,572,2.327,598,0.83,605,3.642,649,2.893,650,2.327,654,3.949,655,2.855,656,1.582,662,4.091,664,4.231,669,2.735,753,3.073,985,4.316,1000,4.316,1136,4.316,1307,4.541,1690,3.943,1691,4.316,1694,4.355,1703,4.355,1730,3.072,1737,3.989,1782,4.119,1870,4.119,2093,5.517,2102,4.805,2104,4.805,2114,5.517,2153,5.517,2155,5.121,2156,5.121,2157,6.047,2158,6.047,2214,4.298,2443,6.679,2444,6.852,2445,6.852,2446,6.852,2447,6.852]],["title/injectables/ValidateUnavailabilityPipe.html",[95,0.207,1870,2.645]],["body/injectables/ValidateUnavailabilityPipe.html",[14,0.009,18,0.03,19,0.034,20,0.024,22,0.101,23,0.157,24,0.593,32,0.219,56,1.228,76,0.97,86,0.925,88,2.611,89,3.347,90,0.03,91,0.057,92,0.002,93,0.003,94,0.002,95,0.125,96,0.309,104,0.144,108,0.302,110,1.228,111,1.153,112,1.1,113,0.076,114,0.331,119,0.356,133,0.776,150,1.608,153,1.322,173,1.005,182,1.276,209,1.312,260,1.536,279,0.571,280,1.526,291,1.003,299,1.616,321,2.101,326,2.823,351,2.95,356,1.767,358,1.932,409,1.796,449,1.61,461,2.766,462,0.581,467,3.223,472,0.614,473,0.614,474,2.272,475,0.631,485,1.186,504,1.86,512,3.78,516,1.594,520,4.167,534,1.24,536,1.86,539,2.341,550,3.665,552,3.771,553,2.809,568,2.136,572,0.901,576,1.19,577,1.268,580,1.977,583,1.312,585,0.614,598,0.321,605,3.891,617,2.185,640,1.41,652,1.689,654,2.24,655,2.9,656,1.337,658,1.594,661,3.59,662,4.392,664,3.417,669,1.359,673,3.296,674,1.24,687,0.97,734,1.86,741,1.433,752,3.347,753,0.691,782,1.86,786,0.736,789,2.721,835,1.758,868,2.168,878,5.029,879,2.496,885,1.151,894,3.333,926,4.133,952,1.24,960,3.589,961,3.344,967,1.24,972,1.982,980,1.807,1055,1.982,1074,2.101,1086,1.594,1087,1.151,1102,1.671,1255,1.02,1316,2.753,1332,3.839,1349,3.224,1370,1.857,1437,1.982,1496,4.517,1513,3.589,1527,1.359,1528,1.758,1637,1.08,1643,3.104,1646,2.912,1652,2.813,1665,1.359,1675,3.486,1690,2.695,1691,2.95,1692,3.084,1694,4.614,1703,4.213,1710,1.359,1715,1.359,1870,1.594,2016,1.24,2087,2.341,2096,2.341,2102,2.912,2104,1.86,2113,4.133,2115,3.084,2116,1.24,2120,1.359,2131,2.341,2150,1.982,2153,2.136,2156,1.982,2192,1.758,2193,1.151,2338,4.527,2448,4.683,2449,3.494,2450,4.683,2451,4.683,2452,4.683,2453,4.683,2454,4.153,2455,1.54,2456,2.652,2457,1.54,2458,1.54,2459,7.215,2460,5.119,2461,2.652,2462,1.54,2463,2.652,2464,2.652,2465,2.652,2466,4.683,2467,1.54,2468,2.652,2469,4.153,2470,2.652,2471,2.652,2472,2.652,2473,5.483,2474,1.54,2475,5.119,2476,1.54,2477,2.652,2478,2.813,2479,2.652,2480,2.341,2481,2.652,2482,2.652,2483,1.54,2484,1.54,2485,1.54,2486,1.54,2487,1.359,2488,1.54,2489,2.136,2490,1.54,2491,2.652,2492,1.54,2493,1.54,2494,1.54,2495,1.54,2496,1.54,2497,1.54,2498,1.54,2499,1.54,2500,3.494,2501,1.54,2502,1.54,2503,1.54,2504,1.359,2505,2.652,2506,1.54,2507,1.54,2508,1.54,2509,4.153,2510,1.54,2511,1.54,2512,3.494,2513,1.54,2514,1.54,2515,1.54,2516,1.54,2517,3.494,2518,1.54,2519,1.54,2520,1.54,2521,1.54,2522,1.54,2523,1.54,2524,1.54,2525,1.54,2526,1.54,2527,1.54,2528,1.54,2529,1.54,2530,2.652,2531,3.494,2532,3.494,2533,1.54,2534,1.54,2535,1.54,2536,2.652,2537,1.359,2538,2.652,2539,2.652,2540,1.54,2541,1.54,2542,1.54,2543,1.54,2544,2.652,2545,2.652,2546,2.652,2547,1.54,2548,1.54,2549,1.54,2550,1.54,2551,1.54,2552,1.54,2553,2.652,2554,2.652,2555,1.54,2556,1.54,2557,2.652,2558,1.54,2559,1.54,2560,1.54,2561,1.54,2562,1.54,2563,2.652]],["title/classes/ValidateUpdateUnavailabilityDto.html",[91,0.163,728,3.086]],["body/classes/ValidateUpdateUnavailabilityDto.html",[14,0.009,18,0.104,19,0.115,20,0.081,22,0.104,23,0.115,29,1.222,90,0.104,91,0.196,92,0.005,93,0.007,94,0.005,104,0.163,108,0.447,110,2.45,113,0.435,120,1.395,133,2.542,279,1.139,291,1.036,463,2.531,467,2.17,522,3.937,568,4.261,572,2.314,598,0.825,655,1.892,656,1.222,659,3.181,689,3.622,728,4.778,739,4.006,741,3.091,743,6.068,745,6.068,747,6.068,782,3.71,1309,3.507,1694,4.337,1703,4.337,1730,3.045,1736,4.67,1783,3.955,1790,4.67,2215,4.261,2564,7.668,2565,5.292,2566,5.292,2567,5.292,2568,6.014,2569,6.014]],["title/injectables/ValidateUpdateUnavailabilityMiddleware.html",[95,0.207,1793,3.086]],["body/injectables/ValidateUpdateUnavailabilityMiddleware.html",[14,0.009,18,0.043,19,0.047,20,0.033,22,0.112,23,0.151,24,0.659,32,0.308,46,1.619,56,3.103,78,1.519,88,2.64,89,1.951,90,0.043,91,0.08,92,0.002,93,0.004,94,0.004,95,0.167,96,0.434,104,0.067,106,1.169,108,0.296,111,1.195,112,1.14,113,0.175,114,0.76,119,0.5,120,1.008,133,2.463,150,1.593,152,0.84,153,0.94,173,1.249,179,1.635,182,1.737,260,1.441,263,1.519,283,2.225,291,1.259,299,1.677,310,3.101,311,3.367,321,3.007,326,2.916,339,1.151,356,0.962,358,1.585,409,1.836,410,1.547,444,4.553,449,0.84,461,2.48,467,2.924,474,2.453,504,2.477,512,2.123,522,3.69,552,4.154,572,1.519,580,2.178,585,0.863,598,0.428,605,2.742,617,1.783,636,2.123,640,1.151,649,0.914,652,1.7,655,3.024,656,1.191,658,2.688,659,3.864,661,3.206,662,2.643,669,1.11,703,2.178,728,2.477,737,1.911,739,1.878,740,2.844,741,0.888,742,2.64,744,5.379,746,5.379,748,3.117,752,1.197,753,1.584,786,1.036,894,2.969,960,2.477,980,2.651,992,3.021,1074,2.314,1088,2.844,1250,2.477,1255,1.436,1353,1.302,1454,5.118,1468,2.844,1469,2.85,1475,3.117,1513,4.862,1586,2.341,1592,2.341,1597,5.455,1675,3.858,1690,1.246,1691,1.364,1694,2.574,1703,2.969,1793,2.477,1993,1.619,1994,1.519,1995,1.911,1997,1.911,2052,1.911,2104,1.519,2150,1.619,2180,5.015,2192,3.419,2195,1.619,2328,2.844,2407,3.117,2414,3.117,2422,3.947,2424,1.911,2438,4.553,2504,3.117,2568,3.117,2569,3.117,2570,5.379,2571,1.911,2572,4.472,2573,6.428,2574,5.683,2575,2.166,2576,2.166,2577,2.166,2578,3.532,2579,3.532,2580,2.166,2581,4.472,2582,8.227,2583,3.532,2584,2.166,2585,2.166,2586,2.166,2587,3.532,2588,3.532,2589,2.166,2590,5.159,2591,5.159,2592,5.159,2593,5.159,2594,3.532,2595,3.532,2596,2.166,2597,3.532,2598,3.532,2599,5.159,2600,3.532,2601,3.532,2602,3.532,2603,3.532,2604,2.166,2605,2.166,2606,2.166,2607,2.166,2608,2.166,2609,2.166]],["title/classes/ValidatedUnavailabilityDto.html",[91,0.163,1646,3.086]],["body/classes/ValidatedUnavailabilityDto.html",[14,0.009,18,0.11,19,0.122,20,0.086,22,0.11,23,0.154,24,0.603,29,1.289,90,0.11,91,0.206,92,0.006,93,0.007,94,0.006,104,0.171,108,0.402,110,3.263,113,0.383,120,1.166,291,1.381,351,5.272,432,4.943,485,2.394,513,4.943,572,2.394,598,0.854,649,2.976,650,2.756,652,2.264,664,4.448,673,4.237,1074,3.162,1469,3.895,1635,4.44,1646,4.943,1694,4.447,1703,4.447,1730,3.212,1735,7.163,1737,4.171,2116,4.494,2214,4.494,2215,4.494,2487,6.221,2610,7.163]],["title/classes/VerifyNewPasswordDto.html",[91,0.163,2611,3.289]],["body/classes/VerifyNewPasswordDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,22,0.125,23,0.139,29,1.47,90,0.125,91,0.235,92,0.006,93,0.008,94,0.006,104,0.195,108,0.398,113,0.379,120,1.406,291,1.246,299,1.829,410,1.908,470,6.596,508,6.122,565,4.756,595,4.462,596,4.009,598,0.926,599,5.124,600,4.756,758,4.462,2611,5.712,2612,7.23]],["title/injectables/VerifyNewPasswordUtil.html",[95,0.207,381,2.645]],["body/injectables/VerifyNewPasswordUtil.html",[14,0.009,18,0.082,19,0.091,20,0.064,22,0.082,23,0.18,24,0.783,32,0.596,56,3.352,90,0.082,91,0.155,92,0.004,93,0.006,94,0.004,95,0.275,96,0.84,104,0.129,108,0.349,111,1.408,112,1.343,113,0.332,114,1.442,119,1.547,150,1.66,153,1.408,173,1.41,260,1.999,279,1.559,283,4.963,291,1.614,294,3.755,299,1.874,341,3.372,356,1.824,358,1.79,381,3.502,449,3.054,457,4.354,462,1.58,467,2.389,474,2.109,504,4.697,506,5.912,509,3.696,511,3.696,519,4.69,520,2.776,549,6.717,553,4.037,566,3.13,601,5.412,992,3.097,1250,4.085,1476,3.696,1484,3.696,2312,5.83,2328,4.69,2611,6.041,2613,3.696,2614,5.825,2615,5.825,2616,5.825,2617,5.825,2618,4.188,2619,5.825,2620,4.188,2621,5.825,2622,4.188,2623,4.188,2624,4.188,2625,4.188,2626,5.825,2627,5.825,2628,5.825,2629,4.188,2630,4.188,2631,4.188]],["title/coverage.html",[2632,5.32]],["body/coverage.html",[6,1.142,12,0.919,14,0.009,16,0.949,20,0.031,91,0.323,92,0.002,93,0.003,94,0.002,95,0.416,97,1.752,113,0.098,118,7.46,168,2.883,169,1.484,171,1.752,184,1.25,187,1.193,203,1.392,207,1.484,208,1.484,210,1.392,211,1.392,212,1.392,213,1.392,228,1.484,269,1.752,274,1.752,279,0.708,292,1.392,294,1.388,299,1.053,301,1.392,306,0.814,331,1.392,345,1.484,348,1.193,351,1.25,379,1.316,380,1.193,381,1.193,382,1.392,383,1.392,391,1.484,397,1.388,409,0.567,412,1.752,416,1.25,451,1.316,454,1.484,458,1.316,463,0.949,485,1.116,499,2.071,522,1.475,573,1.484,574,1.752,578,1.25,594,1.752,595,3.431,601,1.484,602,1.752,603,1.752,608,1.316,609,1.752,610,1.392,611,2.647,613,1.193,615,1.193,624,1.316,625,1.484,636,1.193,645,2.457,646,1.392,647,1.752,648,3.145,654,1.572,655,1.176,656,1.35,664,1.017,670,1.25,671,1.752,672,3.431,719,1.25,720,1.752,721,1.25,722,1.752,723,1.316,728,1.392,730,1.484,756,1.752,757,3.595,768,1.598,770,1.316,771,1.752,772,1.752,799,0.982,821,1.392,822,1.752,824,1.316,825,1.752,826,1.752,827,1.193,833,1.752,852,1.484,860,1.752,883,1.817,908,1.752,909,1.752,918,1.484,927,1.752,928,1.752,931,2.647,932,1.752,937,1.25,938,1.752,939,1.055,940,1.752,945,1.316,963,1.484,989,1.25,990,1.752,991,1.752,993,1.392,996,0.919,1006,1.142,1015,1.392,1016,1.392,1021,1.392,1028,1.626,1042,1.752,1043,1.752,1056,1.598,1065,1.484,1066,1.484,1081,1.142,1082,1.752,1083,1.752,1086,1.193,1103,1.392,1105,1.392,1134,1.752,1135,2.647,1138,1.25,1145,1.752,1146,1.752,1189,1.392,1190,1.752,1196,2.796,1197,1.316,1199,1.752,1204,1.484,1205,2.647,1206,1.752,1210,1.598,1211,1.752,1218,1.752,1253,1.316,1288,1.316,1289,1.316,1294,1.598,1304,3.243,1306,1.752,1355,1.392,1370,4.105,1386,2.902,1393,1.392,1394,1.752,1395,1.752,1406,1.752,1407,2.647,1408,1.316,1415,1.752,1420,1.752,1436,1.752,1439,1.25,1442,1.752,1445,1.752,1457,1.752,1458,1.752,1488,1.752,1489,1.752,1532,1.598,1533,1.752,1536,1.598,1537,1.752,1540,1.752,1541,1.752,1542,1.752,1557,1.752,1565,1.484,1566,1.752,1567,1.752,1571,1.316,1572,1.752,1577,1.316,1578,1.752,1607,1.752,1608,1.752,1615,1.752,1616,1.752,1635,1.25,1636,1.752,1637,3.431,1646,1.392,1666,1.316,1668,1.392,1672,1.392,1725,1.752,1726,2.647,1729,2.647,1730,3.726,1746,2.647,1747,2.647,1780,1.484,1781,1.752,1782,1.193,1784,1.752,1786,1.316,1787,1.752,1791,1.752,1793,1.392,1810,1.316,1818,1.316,1820,1.392,1829,1.25,1840,1.316,1848,1.598,1856,1.25,1861,1.598,1870,1.193,1901,1.752,1902,1.752,1914,1.392,1915,1.752,1925,1.484,1941,1.598,1943,1.598,1945,1.598,1958,1.752,1993,1.484,1994,1.392,2053,1.752,2057,1.752,2058,1.752,2065,1.752,2071,1.484,2072,1.752,2074,1.752,2086,1.752,2091,1.752,2102,1.392,2118,1.484,2152,1.752,2155,2.457,2159,1.598,2160,1.752,2161,1.752,2170,1.598,2171,1.752,2177,1.484,2178,1.752,2179,1.752,2182,1.752,2196,1.752,2203,1.752,2208,2.647,2216,1.392,2217,1.752,2218,1.752,2242,1.598,2256,1.752,2264,1.484,2266,1.598,2270,1.598,2277,1.752,2278,1.752,2283,1.752,2293,1.484,2312,1.598,2338,3.145,2339,1.752,2400,1.752,2401,1.752,2403,1.484,2427,1.752,2428,1.752,2443,1.752,2478,1.598,2489,1.598,2564,1.752,2570,1.752,2571,1.752,2610,1.752,2611,1.484,2612,1.752,2613,1.752,2632,1.752,2633,1.985,2634,1.985,2635,7.394,2636,7.101,2637,1.752,2638,8.625,2639,7.723,2640,3.288,2641,7.892,2642,7.892,2643,7.101,2644,7.101,2645,3.288,2646,1.985,2647,1.985,2648,1.985,2649,1.985,2650,5.424,2651,5.424,2652,5.424,2653,5.159,2654,1.752,2655,7.723,2656,5.845,2657,1.752,2658,1.752,2659,1.752,2660,1.752,2661,2.902,2662,1.752,2663,3.288,2664,3.288,2665,5.462,2666,6.189,2667,1.985,2668,2.902,2669,3.288,2670,2.902,2671,1.985,2672,1.985,2673,1.985,2674,3.288,2675,1.752,2676,1.985,2677,3.288,2678,4.319,2679,4.894,2680,2.902,2681,3.288,2682,1.985,2683,1.985,2684,1.985,2685,4.209,2686,3.288,2687,3.288,2688,3.714,2689,1.752,2690,2.902,2691,2.902,2692,1.752,2693,3.714,2694,1.752,2695,1.985,2696,1.985,2697,1.752,2698,1.752,2699,1.985,2700,2.902,2701,1.752,2702,4.786,2703,1.985,2704,1.985]],["title/dependencies.html",[3,3.05,2705,3.665]],["body/dependencies.html",[3,3.039,14,0.009,32,0.751,34,3.326,59,3.5,64,3.174,68,2.706,92,0.005,93,0.007,94,0.005,219,3.039,221,4.66,222,4.66,227,4.66,236,4.66,237,4.66,329,5.085,339,2.807,357,3.702,388,4.251,390,3.5,457,3.946,481,4.525,610,4.771,613,3.174,837,5.085,879,3.174,1065,3.946,1353,3.174,1403,4.66,1443,4.251,1477,4.251,2081,4.66,2172,4.66,2706,5.28,2707,7.529,2708,5.28,2709,6.805,2710,5.28,2711,5.28,2712,5.28,2713,5.28,2714,5.28,2715,5.28,2716,6.805,2717,6.805,2718,5.28,2719,5.28,2720,5.28,2721,5.28,2722,5.28,2723,6.805,2724,5.28,2725,5.28,2726,5.28,2727,5.28,2728,5.28,2729,5.28,2730,5.28,2731,5.28,2732,5.28,2733,5.28,2734,5.28,2735,5.28,2736,5.28,2737,5.28,2738,5.28,2739,5.28,2740,5.28,2741,5.28,2742,5.28,2743,5.28,2744,5.28,2745,5.28,2746,5.28,2747,4.66,2748,5.28,2749,5.28,2750,5.28,2751,5.28,2752,4.66,2753,5.28]],["title/miscellaneous/enumerations.html",[2754,2.203,2755,4.677]],["body/miscellaneous/enumerations.html",[14,0.008,23,0.145,92,0.007,93,0.008,94,0.007,104,0.204,326,2.896,656,1.538,894,3.832,939,3.539,951,4.669,958,5.361,959,5.361,960,5.505,962,6.929,978,5.855,980,3.632,983,5.876,985,4.194,986,5.876,1507,5.876,1650,5.876,1922,5.361,2754,4.002,2755,5.876,2756,5.876,2757,6.658]],["title/miscellaneous/functions.html",[2298,4.267,2754,2.203]],["body/miscellaneous/functions.html",[6,4.923,14,0.008,92,0.007,93,0.008,94,0.007,104,0.217,2298,5.685,2675,6.232,2754,4.244,2758,7.061]],["title/index.html",[104,0.113,2759,3.234,2760,3.234]],["body/index.html",[14,0.007,17,2.411,18,0.099,20,0.077,24,0.545,26,4.63,51,3.158,52,3.341,60,4.449,64,3.03,92,0.005,93,0.007,94,0.005,101,4.449,209,3.865,279,1.421,280,2.901,284,4.059,291,0.987,306,2.067,320,3.341,322,2.583,442,2.68,462,2.491,485,1.712,522,2.261,553,2.583,566,3.768,593,4.059,613,3.03,619,3.341,629,2.901,630,5.163,631,5.478,642,2.583,654,2.411,655,1.803,656,1.873,677,4.159,679,2.68,680,2.785,732,3.535,758,3.535,766,3.535,767,3.341,775,2.901,799,2.494,827,3.03,828,3.341,835,3.341,839,4.059,996,3.056,1000,3.175,1028,2.494,1090,4.449,1108,4.449,1243,3.768,1250,3.535,1316,4.376,1347,4.059,1382,4.059,1592,4.376,1732,3.768,1834,5.316,1898,4.449,1922,4.059,1925,3.768,2305,4.449,2747,4.449,2752,4.449,2761,7.813,2762,5.041,2763,5.041,2764,5.041,2765,5.041,2766,5.041,2767,5.041,2768,5.041,2769,5.041,2770,5.041,2771,6.603,2772,6.603,2773,5.041,2774,5.041,2775,5.041,2776,5.041,2777,5.041,2778,5.041,2779,5.041,2780,5.041,2781,5.041,2782,5.041,2783,5.041,2784,6.603,2785,5.041,2786,5.041,2787,5.041,2788,5.041,2789,5.041,2790,5.041,2791,5.041,2792,5.041,2793,5.041,2794,5.041,2795,5.041,2796,5.041,2797,5.041,2798,5.041,2799,5.041,2800,5.041,2801,5.041,2802,5.928,2803,5.041,2804,5.041,2805,4.449,2806,6.603,2807,5.041,2808,5.041,2809,5.041,2810,5.041]],["title/license.html",[2759,3.234,2760,3.234,2802,2.951]],["body/license.html",[14,0.007,17,2.712,92,0.006,93,0.007,94,0.006,339,3.015,533,3.015,535,5.005,580,3.007,854,4.566,1086,4.28,1192,5.005,1258,3.977,1503,4.239,1748,4.566,1925,4.239,2075,4.566,2156,4.239,2802,4.566,2805,5.005,2811,7.784,2812,5.672,2813,5.672,2814,5.672,2815,7.121,2816,5.672,2817,5.672,2818,5.672,2819,5.672,2820,5.672,2821,5.672,2822,7.121,2823,8.888,2824,5.672,2825,7.784,2826,5.672,2827,7.121,2828,5.672,2829,5.672,2830,5.672,2831,5.672,2832,5.672,2833,5.672,2834,5.672,2835,5.672,2836,5.672,2837,7.121,2838,5.672,2839,5.672,2840,5.672,2841,5.672,2842,7.121,2843,5.672,2844,5.672,2845,5.672,2846,5.672,2847,5.672,2848,5.672,2849,5.672,2850,5.672,2851,5.672,2852,5.672,2853,5.672,2854,5.672,2855,5.672,2856,5.672,2857,5.672,2858,5.672,2859,5.672,2860,5.672,2861,5.672,2862,5.672,2863,5.672,2864,5.672,2865,5.672,2866,5.005,2867,5.672,2868,5.672]],["title/modules.html",[2,3.331]],["body/modules.html",[1,3.938,2,3.619,14,0.008,92,0.007,93,0.008,94,0.007,195,4.896,199,4.594,200,4.594,201,4.594,202,4.342,762,4.126,1834,5.275,2869,8.885,2870,8.885,2871,8.885,2872,8.976,2873,6.551]],["title/overview.html",[2874,5.32]],["body/overview.html",[0,1.552,1,4.887,2,1.912,3,1.991,4,2.179,5,2.179,6,1.991,7,1.991,8,2.08,9,3.054,10,3.054,11,3.054,12,3.764,13,4.181,14,0.009,15,3.201,16,1.655,17,1.655,29,0.799,92,0.003,93,0.005,94,0.003,96,0.694,170,1.839,187,3.99,195,6.477,196,3.054,197,3.054,198,3.054,199,6.281,200,6.209,201,6.41,202,5.673,203,4.223,348,4.592,375,3.054,377,3.054,378,3.054,379,5.064,380,4.711,381,4.711,382,4.223,383,4.223,416,4.812,608,3.992,615,3.62,719,3.794,762,4.453,770,3.992,937,3.794,980,1.505,985,2.179,989,3.794,1006,3.466,1081,3.466,1138,3.794,1198,2.179,1253,5.064,1284,3.054,1285,3.054,1286,3.054,1287,3.054,1288,3.992,1289,3.992,1408,2.293,1439,3.794,1577,3.992,1635,3.794,1782,3.62,1810,3.992,1818,3.992,1840,5.064,1856,3.794,1870,3.62,1917,3.054,1918,3.054,1920,3.054,2258,3.054,2259,3.054,2260,3.054,2874,3.054,2875,3.054,2876,3.46,2877,3.46,2878,3.054]],["title/miscellaneous/typealiases.html",[2754,2.203,2879,5.299]],["body/miscellaneous/typealiases.html",[14,0.009,92,0.006,93,0.007,94,0.006,104,0.189,113,0.305,514,3.7,524,4.08,645,4.601,978,4.317,980,2.678,985,3.878,1370,3.272,1690,3.543,2155,4.601,2192,4.08,2206,5.433,2537,6.611,2665,5.433,2668,5.433,2678,5.433,2680,5.433,2754,3.7,2875,5.433,2878,5.433,2880,6.156,2881,6.156,2882,7.491,2883,6.156,2884,6.156,2885,6.156,2886,6.156,2887,6.156,2888,6.156,2889,6.156,2890,6.156,2891,6.156]],["title/miscellaneous/variables.html",[84,3.96,2754,2.203]],["body/miscellaneous/variables.html",[7,1.166,13,2.689,14,0.009,20,0.031,22,0.066,23,0.162,24,0.219,25,3.719,30,2.692,33,1.421,40,5.973,43,1.788,51,0.969,54,6.764,56,0.938,64,1.218,68,1.713,71,1.631,78,1.421,83,1.631,84,1.514,86,1.218,90,0.04,92,0.002,93,0.003,94,0.002,104,0.152,110,0.938,113,0.422,120,1.451,133,2.271,153,0.703,182,0.446,209,1.002,259,3.768,260,0.514,263,2.994,279,1.344,291,0.655,294,1.412,296,1.631,297,1.421,299,1.344,305,1.455,306,2.421,321,0.909,325,1.514,326,1.857,351,2.689,356,0.552,358,0.623,362,1.514,391,2.499,397,2.092,403,2.951,409,2.431,410,1.28,449,0.785,461,0.725,466,1.778,467,1.751,477,1.514,481,1.218,490,1.421,494,2.979,567,1.848,572,2.603,605,1.778,617,3.416,620,1.276,629,1.166,630,1.421,631,1.421,642,1.713,650,0.688,655,1.196,656,1.363,660,3.121,661,0.969,662,1.713,676,2.042,677,2.106,678,2.457,679,1.778,680,1.848,681,2.345,682,2.499,683,2.345,684,2.106,687,1.276,697,2.345,698,2.345,699,3.475,700,3.475,701,4.578,702,2.994,703,2.857,704,2.345,705,2.106,706,2.345,707,2.345,708,2.499,709,2.499,710,2.499,711,2.499,712,2.499,713,2.499,714,1.915,715,2.106,716,2.106,717,2.106,718,2.188,725,1.788,734,1.421,739,1.077,741,1.371,752,1.119,768,2.692,775,1.166,781,2.994,799,2.713,883,1.119,894,1.166,942,1.276,992,1.077,996,2.294,1001,1.218,1015,2.994,1016,2.994,1056,2.692,1065,2.499,1070,1.788,1074,0.909,1101,1.276,1180,1.514,1200,1.631,1201,1.343,1202,1.631,1203,1.421,1294,2.692,1304,5.144,1309,2.83,1332,1.343,1349,3.121,1370,2.634,1382,1.631,1383,2.951,1410,1.421,1469,1.119,1528,1.343,1586,1.343,1675,1.166,1690,2.852,1763,1.788,1778,4.374,1829,1.276,1848,2.692,1861,2.692,1916,1.788,1941,2.692,1943,3.438,1945,2.692,1990,1.788,1993,3.191,2069,1.514,2075,5.029,2150,1.514,2192,3.284,2193,2.499,2194,1.631,2195,1.514,2242,2.692,2257,1.788,2266,3.438,2270,2.692,2293,3.191,2478,2.692,2480,1.788,2489,3.438,2637,1.788,2653,1.788,2654,4.84,2657,1.788,2658,2.951,2659,1.788,2660,1.788,2661,4.374,2662,1.788,2670,1.788,2688,1.788,2689,4.374,2690,1.788,2691,3.768,2692,1.788,2693,5.211,2694,1.788,2697,1.788,2698,2.951,2700,1.788,2701,1.788,2702,5.211,2754,1.218,2756,5.211,2866,1.788,2892,3.344,2893,2.026,2894,3.344,2895,2.026,2896,4.27,2897,4.27,2898,3.344,2899,2.026,2900,2.026,2901,2.026,2902,2.026,2903,2.026,2904,2.026,2905,2.026,2906,2.026,2907,2.026,2908,2.026,2909,2.026,2910,2.026,2911,2.026,2912,2.026,2913,7.302,2914,5.484,2915,7.148,2916,4.27,2917,4.956,2918,2.026,2919,2.026,2920,2.026,2921,2.026,2922,2.026,2923,2.026,2924,2.026,2925,3.344,2926,3.344,2927,2.026,2928,2.026,2929,4.956,2930,2.026,2931,2.026,2932,2.026,2933,4.27,2934,4.27,2935,2.026,2936,2.026,2937,2.026,2938,2.026,2939,2.026,2940,2.026,2941,3.344,2942,3.344,2943,2.026,2944,2.026,2945,2.026,2946,2.026,2947,2.026,2948,2.026,2949,2.026,2950,4.956,2951,2.026,2952,2.026,2953,2.026,2954,2.026,2955,2.026,2956,2.026,2957,2.026,2958,2.026,2959,2.026,2960,2.026,2961,2.026,2962,2.026,2963,2.026,2964,2.026]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1370,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.1.12",{"_index":2748,"title":{},"body":{"dependencies.html":{}}}],["0.19.2",{"_index":2721,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2708,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2743,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2655,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":980,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["1.0.0",{"_index":2745,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2729,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":2739,"title":{},"body":{"dependencies.html":{}}}],["1.22.0",{"_index":2736,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":2717,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2727,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2636,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2644,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2679,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"miscellaneous/typealiases.html":{}}}],["10/10",{"_index":2667,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2638,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2668,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["11.13.4",{"_index":2719,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2680,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["12875",{"_index":2030,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["13",{"_index":2884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["14",{"_index":2678,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["15",{"_index":2885,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["16",{"_index":2665,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["17",{"_index":2886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["17.1.0",{"_index":2706,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["19",{"_index":2888,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1].doy",{"_index":2543,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["1st",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["2",{"_index":1690,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":2726,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2712,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["2.635.0",{"_index":2720,"title":{},"body":{"dependencies.html":{}}}],["2.7.4",{"_index":2742,"title":{},"body":{"dependencies.html":{}}}],["2.9.0",{"_index":2738,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2651,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2155,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["2020",{"_index":2156,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"license.html":{}}}],["2021",{"_index":2158,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["21",{"_index":2889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["22",{"_index":2890,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["23",{"_index":2891,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["24",{"_index":2192,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["2dsphere",{"_index":1953,"title":{},"body":{"modules/RentalModule.html":{}}}],["2nd",{"_index":2546,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["3",{"_index":978,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["3.0.0",{"_index":2714,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2724,"title":{},"body":{"dependencies.html":{}}}],["3.7.2",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2685,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["302",{"_index":2253,"title":{},"body":{"controllers/UserController.html":{}}}],["302)@post('delete",{"_index":2229,"title":{},"body":{"controllers/UserController.html":{}}}],["33",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["3600000",{"_index":1118,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["4",{"_index":2206,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{},"miscellaneous/typealiases.html":{}}}],["4.0.0",{"_index":2744,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2733,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2877,"title":{},"body":{"overview.html":{}}}],["46",{"_index":2876,"title":{},"body":{"overview.html":{}}}],["4ol_yacp0lkuu9pn2j2iu_uy5ldrkwodyjlqe2zo6ia",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":985,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["5.0.0",{"_index":2722,"title":{},"body":{"dependencies.html":{}}}],["5.9.1",{"_index":2737,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2699,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2635,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":862,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["6",{"_index":2878,"title":{},"body":{"overview.html":{},"miscellaneous/typealiases.html":{}}}],["6.0.0",{"_index":2707,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":2710,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2751,"title":{},"body":{"dependencies.html":{}}}],["6.4.16",{"_index":2740,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1386,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["66",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2875,"title":{},"body":{"overview.html":{},"miscellaneous/typealiases.html":{}}}],["7.0.0",{"_index":2709,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/GeoUrlApiPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"miscellaneous/typealiases.html":{}}}],["8.2.0",{"_index":2731,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":2735,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2687,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2682,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2686,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":645,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["90",{"_index":2695,"title":{},"body":{"coverage.html":{}}}],["9706+forestdale+ct+riverview+33578",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":1193,"title":{},"body":{"classes/ImageDto.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"classes/UserPropertyDto.html":{}}}],["a.doy",{"_index":2139,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["a.map((item",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":85,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["above",{"_index":2841,"title":{},"body":{"license.html":{}}}],["accepts",{"_index":1396,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["access",{"_index":65,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{}}}],["access_key_id",{"_index":66,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["accessing",{"_index":1019,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["accesskeyid",{"_index":2082,"title":{},"body":{"injectables/S3Provider.html":{}}}],["accessors",{"_index":105,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["accidentally",{"_index":1640,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["account",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["acl",{"_index":633,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["action",{"_index":1192,"title":{},"body":{"classes/ImageDto.html":{},"license.html":{}}}],["actual",{"_index":2588,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["actually",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["ad",{"_index":1438,"title":{},"body":{"classes/LocCreateRentalDto.html":{}}}],["add",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpErrorFilter.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["added",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/UserPropertyDto.html":{}}}],["adding",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["address",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["address.replace(/\\s+/g",{"_index":1072,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["addresses",{"_index":936,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["addunavailabilityid",{"_index":1644,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["advance",{"_index":1759,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{}}}],["again",{"_index":1476,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["against",{"_index":1398,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["age=${this.appconfig.jwt_exp_time",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["aggregator",{"_index":2204,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["ahead",{"_index":1649,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["aliases",{"_index":2880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":80,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GeoUrlApiPipe.html":{}}}],["allowed",{"_index":1089,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["allowing",{"_index":1659,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["allowunkown",{"_index":75,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["already",{"_index":658,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["alternative",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["amount",{"_index":1980,"title":{},"body":{"injectables/RentalService.html":{}}}],["and/or",{"_index":2835,"title":{},"body":{"license.html":{}}}],["another",{"_index":1110,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{}}}],["api",{"_index":52,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"index.html":{}}}],["api**](https://developer.here.com/documentation/geocoding",{"_index":1027,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["api.pipe",{"_index":1843,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["api.pipe.ts",{"_index":991,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"coverage.html":{}}}],["api.pipe.ts:12",{"_index":1007,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:19",{"_index":1009,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:31",{"_index":1017,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:46",{"_index":1020,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.util",{"_index":1026,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["api.util.ts",{"_index":1043,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{}}}],["api.util.ts:25",{"_index":1063,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["api.util.ts:43",{"_index":1057,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["api/dev_guide/index.html",{"_index":1029,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["apikey",{"_index":1016,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apikey):promise",{"_index":1071,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["app",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"index.html":{}}}],["app.controller",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["app_filter",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["appconfigservice",{"_index":12,"title":{"injectables/AppConfigService.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice(new",{"_index":1880,"title":{},"body":{"controllers/RentalController.html":{}}}],["appconfigservice.remote_db",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":169,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/LoginDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applied",{"_index":1794,"title":{},"body":{"controllers/RentalController.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["applies",{"_index":1928,"title":{},"body":{"modules/RentalModule.html":{}}}],["apply",{"_index":2422,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["apply(validateemailmiddleware",{"_index":2275,"title":{},"body":{"modules/UserModule.html":{}}}],["apply(validateupdateunavailabilitymiddleware",{"_index":1956,"title":{},"body":{"modules/RentalModule.html":{}}}],["applying",{"_index":1938,"title":{},"body":{"modules/RentalModule.html":{}}}],["appmodule",{"_index":195,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropiate",{"_index":875,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["appropriate",{"_index":1168,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["appservice",{"_index":203,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":2774,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1348,"title":{},"body":{"injectables/ImagesService.html":{}}}],["argumenthost",{"_index":1172,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["arguments",{"_index":1169,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["argumentshost",{"_index":872,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["arising",{"_index":2867,"title":{},"body":{"license.html":{}}}],["array",{"_index":1349,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["array's",{"_index":2095,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["array('upload",{"_index":644,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["arrays",{"_index":1685,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["ascending",{"_index":2097,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["aspect",{"_index":1504,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["assign",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["associate",{"_index":1350,"title":{},"body":{"injectables/ImagesService.html":{}}}],["associated",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["async",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["atlas",{"_index":2780,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1331,"title":{},"body":{"injectables/ImagesService.html":{}}}],["attached",{"_index":1967,"title":{},"body":{"injectables/RentalService.html":{}}}],["auth",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailService.html":{},"interfaces/TransporterInterface.html":{}}}],["auth.guard",{"_index":186,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":1407,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":1450,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/controller/auth.controller",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/jwt",{"_index":1354,"title":{},"body":{"injectables/ImagesService.html":{}}}],["auth/gaurds/jwt",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["auth/gaurds/logged",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["auth/util/extract",{"_index":2272,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["auth/util/verify",{"_index":2273,"title":{},"body":{"modules/UserModule.html":{}}}],["authcontroller",{"_index":213,"title":{"controllers/AuthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticated",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserPropertyDto.html":{}}}],["authenticating",{"_index":385,"title":{},"body":{"modules/AuthModule.html":{}}}],["authentication",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication=${token",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":1411,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1414,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1444,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":199,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":69,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AuthController.html":{},"injectables/ExtractKeyValueUtil.html":{}}}],["authorize",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorized",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"guards/LoggedOutGaurd.html":{},"index.html":{}}}],["authorizing",{"_index":386,"title":{},"body":{"modules/AuthModule.html":{}}}],["authors",{"_index":2857,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":348,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1756,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["available",{"_index":1834,"title":{},"body":{"controllers/RentalController.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":64,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["aws_s3_bucket_profile",{"_index":73,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["aws_s3_bucket_rentals",{"_index":72,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["aws_s3_bukcet_profile",{"_index":148,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["axios",{"_index":1065,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["axios.default.get",{"_index":1070,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":2115,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["b).count('hours",{"_index":2498,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["b.doy",{"_index":2140,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["back",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{}}}],["badrequestexception",{"_index":1402,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":1405,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["base",{"_index":967,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.end",{"_index":2535,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.length('days",{"_index":971,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.length('months",{"_index":969,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.length('weeks",{"_index":970,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.rentalid",{"_index":2529,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.start",{"_index":2534,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.title",{"_index":2545,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.year",{"_index":2539,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["basic",{"_index":1499,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{}}}],["bcrypt",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"dependencies.html":{}}}],["bcrypt.compare(data.newpassword",{"_index":2626,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["bcrypt.compare(value.password",{"_index":588,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["bcrypt.hash(data.newpassword",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.resetpass",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(value.password",{"_index":586,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["bcrypthashpipe",{"_index":573,"title":{"injectables/BcryptHashPipe.html":{}},"body":{"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["bcrypthashpipe())@usepipes(new",{"_index":2224,"title":{},"body":{"controllers/UserController.html":{}}}],["before",{"_index":1074,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":1112,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["begins",{"_index":1121,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["behavior",{"_index":1500,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["belong",{"_index":1311,"title":{},"body":{"injectables/ImagesService.html":{}}}],["belongs",{"_index":1343,"title":{},"body":{"injectables/ImagesService.html":{}}}],["below",{"_index":2150,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["bike",{"_index":1752,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["bind",{"_index":1495,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["block",{"_index":1643,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["blocked",{"_index":1470,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["blocks",{"_index":1642,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["body",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":687,"title":{},"body":{"classes/CreateRentalDto.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"interfaces/TransporterInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":1278,"title":{},"body":{"controllers/ImagesController.html":{}}}],["break",{"_index":2195,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":2872,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2869,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":629,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"interfaces/ImageInterface.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/S3Provider.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":1217,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["c",{"_index":2812,"title":{},"body":{"license.html":{}}}],["cachce",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["cache",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cache_ttl",{"_index":63,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["caching",{"_index":912,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["calculate",{"_index":2581,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["calculaterange",{"_index":2573,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["calculating",{"_index":1510,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calendar",{"_index":2782,"title":{},"body":{"index.html":{}}}],["called",{"_index":2468,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["callhandler",{"_index":1514,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calls",{"_index":1409,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{}}}],["canactivate",{"_index":1460,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["canactivate(context",{"_index":1464,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["canales",{"_index":2800,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":1491,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["car",{"_index":631,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["car/wiki",{"_index":2810,"title":{},"body":{"index.html":{}}}],["case",{"_index":901,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["catch(err",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/EmailService.html":{},"injectables/UserService.html":{}}}],["catch(error",{"_index":870,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch(exception",{"_index":1164,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["catch(httpexception",{"_index":1167,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["catches",{"_index":861,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catching",{"_index":1159,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["category",{"_index":620,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"interfaces/ImageInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["cause",{"_index":2464,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["cb",{"_index":637,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["cb(null",{"_index":638,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["change",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["changepassword",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changepassword(@req",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(data",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(req",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":292,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changing",{"_index":597,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["charge",{"_index":2819,"title":{},"body":{"license.html":{}}}],["check",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["check.length",{"_index":2435,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["checkdeadlist",{"_index":1461,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["checkdeadlist(req",{"_index":1472,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["checkforoverlap",{"_index":1961,"title":{},"body":{"injectables/RentalService.html":{}}}],["checkleapyear",{"_index":2448,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["checkout",{"_index":1926,"title":{},"body":{"modules/RentalModule.html":{}}}],["checkpasswordtypodto",{"_index":601,"title":{"classes/CheckPasswordTypoDto.html":{}},"body":{"classes/CheckPasswordTypoDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["checks",{"_index":1655,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["checktypos",{"_index":2614,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["checktypos(data",{"_index":2617,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["christmas",{"_index":2194,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["ciphers",{"_index":2176,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["city",{"_index":1763,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"miscellaneous/variables.html":{}}}],["citympg",{"_index":699,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":2860,"title":{},"body":{"license.html":{}}}],["class",{"_index":91,"title":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/UserPropertyDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["classes",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/UserPropertyDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"overview.html":{}}}],["client",{"_index":868,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["client/build",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster",{"_index":2781,"title":{},"body":{"index.html":{}}}],["cluster_appconfigmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appconfigmodule_exports",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appconfigmodule_providers",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":377,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_imagesmodule",{"_index":1284,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_exports",{"_index":1285,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_imports",{"_index":1287,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_providers",{"_index":1286,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_rentalmodule",{"_index":1917,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_rentalmodule_exports",{"_index":1918,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_rentalmodule_imports",{"_index":1919,"title":{},"body":{"modules/RentalModule.html":{}}}],["cluster_rentalmodule_providers",{"_index":1920,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2258,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2260,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2261,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2259,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collection",{"_index":2789,"title":{},"body":{"index.html":{}}}],["color",{"_index":705,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["combine",{"_index":2009,"title":{},"body":{"injectables/RentalService.html":{}}}],["comes",{"_index":1976,"title":{},"body":{"injectables/RentalService.html":{}}}],["common",{"_index":1590,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["common/const",{"_index":1255,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["common/filters/error.filters",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["common/filters/http",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interceptors/logging",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["common/pipes/joi",{"_index":1846,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["common/routes",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["common/util/positive",{"_index":2347,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["common/util/to",{"_index":2488,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["common/util/typeof",{"_index":2348,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["community",{"_index":1768,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["compare",{"_index":2504,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["complete",{"_index":1046,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["completely",{"_index":1501,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["conataining",{"_index":2481,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["conditions",{"_index":1503,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{},"classes/UnavailabilityQueryDto.html":{},"license.html":{}}}],["config/configuration.module",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/UserModule.html":{}}}],["config/configuration.service",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{}}}],["configmodule",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/RentalModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configservice",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice**](https://docs.nestjs.com/techniques/configuration#using",{"_index":149,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configuration",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["configuration.service",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configure",{"_index":1929,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["configure(consumer",{"_index":1930,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["confirm",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeleteUserDto.html":{},"injectables/PositiveNumber.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["confirm_password",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmpass",{"_index":2067,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["confirmpassword",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{}}}],["confirms",{"_index":2939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["congruence",{"_index":2475,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["connect",{"_index":2080,"title":{},"body":{"injectables/S3Provider.html":{}}}],["connection",{"_index":2075,"title":{},"body":{"injectables/S3Provider.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["connection.model('unavailability",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('create",{"_index":2336,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('delete",{"_index":788,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/UserService.html":{}}}],["console.log('location",{"_index":1073,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log('redirect",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('update",{"_index":2322,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('you",{"_index":1485,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(`delete",{"_index":813,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(`deleting",{"_index":805,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(`geocoding",{"_index":1068,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log(`here",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`logged",{"_index":1481,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(`response",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(await",{"_index":2323,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(check",{"_index":1482,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(data",{"_index":818,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(err",{"_index":816,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/MulterUploadUtil.html":{}}}],["console.log(images[0].location",{"_index":790,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(item.location",{"_index":807,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(json.stringify(request.data",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].address",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].position",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].title",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(key",{"_index":794,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(location",{"_index":1075,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log(params",{"_index":814,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(rawauth",{"_index":1479,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(res",{"_index":2331,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(update",{"_index":2337,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(user",{"_index":1562,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["console.log(user._doc",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":392,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constants",{"_index":2943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["constructor(appconfig",{"_index":2077,"title":{},"body":{"injectables/S3Provider.html":{}}}],["constructor(authservice",{"_index":1446,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":107,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(generateduration",{"_index":1903,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["constructor(geourlapiutil",{"_index":1005,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["constructor(imagesmodel",{"_index":1322,"title":{},"body":{"injectables/ImagesService.html":{}}}],["constructor(private",{"_index":151,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"controllers/UserController.html":{}}}],["constructor(redisservice",{"_index":1462,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["constructor(rentalmodel",{"_index":1963,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["constructor(s3provider",{"_index":614,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{}}}],["constructor(schema",{"_index":1399,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["constructor(unavailability",{"_index":2575,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["constructor(user",{"_index":2405,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["constructor(usermodel",{"_index":2291,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":1935,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["consumes",{"_index":1923,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["containing",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["contains",{"_index":1307,"title":{},"body":{"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/UserService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["content",{"_index":1157,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context",{"_index":1171,"title":{},"body":{"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.getclass().name}.${context.gethandler().name",{"_index":1531,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context.getrequest",{"_index":1174,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context.getresponse",{"_index":1175,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context.switchtohttp().getrequest",{"_index":1486,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["contians",{"_index":1291,"title":{},"body":{"modules/ImagesModule.html":{}}}],["continue",{"_index":1468,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["continuing",{"_index":2409,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["contract",{"_index":2864,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":2794,"title":{},"body":{"index.html":{}}}],["control",{"_index":1151,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["controller",{"_index":168,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('images",{"_index":1257,"title":{},"body":{"controllers/ImagesController.html":{}}}],["controller('rental",{"_index":1876,"title":{},"body":{"controllers/RentalController.html":{}}}],["controller('user",{"_index":2244,"title":{},"body":{"controllers/UserController.html":{}}}],["controller/auth.controller",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/images.controller",{"_index":1293,"title":{},"body":{"modules/ImagesModule.html":{}}}],["controller/rental.controller",{"_index":1940,"title":{},"body":{"modules/RentalModule.html":{}}}],["controller/user.controller",{"_index":2268,"title":{},"body":{"modules/UserModule.html":{}}}],["controllers",{"_index":170,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers:[authcontroller",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{}}}],["convert",{"_index":1010,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["converttodatetime",{"_index":2449,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["cookie",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["coordinates",{"_index":718,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCoordinatesDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["coordinates.dto",{"_index":1067,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["coordinates.dto.ts",{"_index":1747,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{},"coverage.html":{}}}],["coordinates.dto.ts:10",{"_index":2055,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:6",{"_index":1749,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:7",{"_index":1750,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:8",{"_index":2054,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:9",{"_index":2056,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.pipe",{"_index":1858,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["coordinates.pipe.ts",{"_index":2058,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["coordinates.pipe.ts:10",{"_index":2059,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["coordinates.pipe.ts:17",{"_index":2060,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["coords",{"_index":1036,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/LocCreateRentalDto.html":{}}}],["copies",{"_index":2837,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2822,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2811,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1058,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["count",{"_index":1207,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{}}}],["coupled",{"_index":2765,"title":{},"body":{"index.html":{}}}],["course",{"_index":1109,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["coverage",{"_index":2632,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"index.html":{}}}],["createaddress",{"_index":1003,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["createaddress(value",{"_index":1008,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["created",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{}}}],["creategivennotice",{"_index":1097,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["creategivennotice(starttime",{"_index":1099,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["createmailoptions",{"_index":841,"title":{},"body":{"injectables/EmailService.html":{}}}],["createmailoptions(email",{"_index":844,"title":{},"body":{"injectables/EmailService.html":{}}}],["createmulteruploadutil",{"_index":608,"title":{"injectables/CreateMulterUploadUtil.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["createprofile",{"_index":2219,"title":{},"body":{"controllers/UserController.html":{}}}],["createprofile(@body",{"_index":2247,"title":{},"body":{"controllers/UserController.html":{}}}],["createprofile(user",{"_index":2223,"title":{},"body":{"controllers/UserController.html":{}}}],["createquery",{"_index":1645,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquery1",{"_index":1708,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquery2",{"_index":1714,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquerydto",{"_index":646,"title":{"classes/CreateQueryDto.html":{}},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["createrental",{"_index":1796,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["createrental(@body",{"_index":1881,"title":{},"body":{"controllers/RentalController.html":{}}}],["createrental(rental",{"_index":1802,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["createrentaldto",{"_index":670,"title":{"classes/CreateRentalDto.html":{}},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["createrentalquery",{"_index":1962,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["createrentalquery(rental",{"_index":1970,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["createrentalvalidationschema",{"_index":1848,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":1084,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["createupdatedata",{"_index":726,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["createupdaterdtopipe",{"_index":719,"title":{"injectables/CreateUpdaterDtoPipe.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{},"overview.html":{}}}],["createuser",{"_index":2285,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(user",{"_index":2294,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":578,"title":{"injectables/CreateUserDto.html":{}},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["createuserupdate",{"_index":2286,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserupdate(data",{"_index":2296,"title":{},"body":{"injectables/UserService.html":{}}}],["createuservalidation",{"_index":2242,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":758,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"classes/VerifyNewPasswordDto.html":{},"index.html":{}}}],["credentials",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cross",{"_index":2109,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["crossover",{"_index":2466,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["crypto",{"_index":2728,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"controllers/RentalController.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["currentdatetime",{"_index":2501,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["currently",{"_index":1990,"title":{},"body":{"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["currenttime",{"_index":1085,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["custom",{"_index":103,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ErrorFilter.html":{}}}],["damages",{"_index":2861,"title":{},"body":{"license.html":{}}}],["data",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/ImageQueryResultsDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.confirmpass",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.confirmpassword",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["data.discounts.monthly",{"_index":1601,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.discounts.weekly",{"_index":1604,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.dto",{"_index":738,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["data.dto.ts",{"_index":1726,"title":{},"body":{"classes/ProcessedSaveDataDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{}}}],["data.dto.ts:10",{"_index":2209,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{}}}],["data.dto.ts:6",{"_index":1728,"title":{},"body":{"classes/ProcessedSaveDataDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{}}}],["data.dto.ts:7",{"_index":1727,"title":{},"body":{"classes/ProcessedSaveDataDto.html":{}}}],["data.email",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["data.features",{"_index":2007,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.filter",{"_index":2019,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.newpassword",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["data.oldpassword",{"_index":2627,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["data.password",{"_index":2329,"title":{},"body":{"injectables/UserService.html":{}}}],["data.price",{"_index":1599,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.rentalid",{"_index":1596,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.resetpass",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.resetpasswordtoken",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.specs",{"_index":2006,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.token",{"_index":2317,"title":{},"body":{"injectables/UserService.html":{}}}],["data.unavailabilityid",{"_index":2022,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.updater",{"_index":2020,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.username",{"_index":2333,"title":{},"body":{"injectables/UserService.html":{}}}],["data.util",{"_index":1302,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["data.util.ts",{"_index":1616,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{}}}],["data.util.ts:17",{"_index":1618,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["database",{"_index":56,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RemoveUnavailabilityDto.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":1292,"title":{},"body":{"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["database/providers/unavailability",{"_index":1946,"title":{},"body":{"modules/RentalModule.html":{}}}],["database/providers/user",{"_index":2271,"title":{},"body":{"modules/UserModule.html":{}}}],["database_connection",{"_index":2940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconnection",{"_index":2654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":762,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseprovider",{"_index":768,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databse",{"_index":2412,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["date",{"_index":1528,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawSearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/UserInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["date(value.rentalendtime).toisostring",{"_index":1126,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["date(value.rentalstarttime).toisostring",{"_index":1125,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["date.now",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{}}}],["date.now().tostring",{"_index":1689,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dates",{"_index":1095,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["datetime",{"_index":878,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.fromiso",{"_index":1124,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["datetime.fromobject",{"_index":2491,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.isinleapyear",{"_index":2458,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.isinleapyear()*](https://moment.github.io/luxon/docs/class/src/datetime.js~datetime.html#instance",{"_index":2522,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.local",{"_index":885,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetimes",{"_index":1123,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["day",{"_index":894,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["days",{"_index":960,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["db",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["dead",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["deal",{"_index":2824,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2868,"title":{},"body":{"license.html":{}}}],["december",{"_index":2154,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{}}}],["decemeber",{"_index":2447,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["decides",{"_index":1467,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decoded",{"_index":1416,"title":{},"body":{"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{}}}],["decorators",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":617,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":47,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["default_price",{"_index":1916,"title":{},"body":{"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":108,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["defining",{"_index":1937,"title":{},"body":{"modules/RentalModule.html":{}}}],["delete",{"_index":780,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteallimages",{"_index":1318,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleteallprofileimages",{"_index":1220,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallprofileimages(@req",{"_index":1283,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallprofileimages(req",{"_index":1229,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages",{"_index":1221,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages(@query",{"_index":1281,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages(params",{"_index":1232,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleted",{"_index":784,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/RentalService.html":{}}}],["deleteimages",{"_index":1319,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleteprofile",{"_index":2220,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprofile(@body",{"_index":2254,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprofile(data",{"_index":2227,"title":{},"body":{"controllers/UserController.html":{}}}],["deleterentalimages",{"_index":1222,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleterentalimages(@body",{"_index":1279,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleterentalimages(images",{"_index":1234,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deletes3image",{"_index":776,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["deletes3images",{"_index":777,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["deletes3imagesutil",{"_index":770,"title":{"injectables/DeleteS3ImagesUtil.html":{}},"body":{"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["deleteuser",{"_index":2287,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(data",{"_index":2299,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserdto",{"_index":821,"title":{"injectables/DeleteUserDto.html":{}},"body":{"injectables/DeleteUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["delte",{"_index":1788,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{}}}],["delteing",{"_index":823,"title":{},"body":{"injectables/DeleteUserDto.html":{}}}],["demonstration",{"_index":2762,"title":{},"body":{"index.html":{}}}],["demonstrative",{"_index":2771,"title":{},"body":{"index.html":{}}}],["deny",{"_index":1483,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1502,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["depends",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["deployed",{"_index":2792,"title":{},"body":{"index.html":{}}}],["description",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["detail",{"_index":2352,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["detailed",{"_index":2807,"title":{},"body":{"index.html":{}}}],["details",{"_index":828,"title":{},"body":{"classes/EditDetailsDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"index.html":{}}}],["details')@usepipes(new",{"_index":1809,"title":{},"body":{"controllers/RentalController.html":{}}}],["details.dto",{"_index":1867,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["details.dto.ts",{"_index":826,"title":{},"body":{"classes/EditDetailsDto.html":{},"coverage.html":{}}}],["details.dto.ts:23",{"_index":830,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.dto.ts:7",{"_index":831,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.dto.ts:8",{"_index":832,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.pipe",{"_index":1865,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["details.pipe.ts",{"_index":2339,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["details.pipe.ts:12",{"_index":2345,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:13",{"_index":2343,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:23",{"_index":2346,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:99",{"_index":2344,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["developer",{"_index":2775,"title":{},"body":{"index.html":{}}}],["device",{"_index":2778,"title":{},"body":{"index.html":{}}}],["digits",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"guards/LoggedOutGaurd.html":{}}}],["direct",{"_index":1186,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["discount",{"_index":1761,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["discounts",{"_index":715,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["dispatching",{"_index":1508,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["distilldto",{"_index":727,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["distribute",{"_index":2833,"title":{},"body":{"license.html":{}}}],["diy",{"_index":2509,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["doc",{"_index":2004,"title":{},"body":{"injectables/RentalService.html":{}}}],["doc.email",{"_index":2327,"title":{},"body":{"injectables/UserService.html":{}}}],["doc:jwtpayloaddto",{"_index":2325,"title":{},"body":{"injectables/UserService.html":{}}}],["docs",{"_index":2572,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["document",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["document.password",{"_index":2315,"title":{},"body":{"injectables/UserService.html":{}}}],["document.save",{"_index":1999,"title":{},"body":{"injectables/RentalService.html":{},"injectables/UserService.html":{}}}],["documentation",{"_index":1925,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documents",{"_index":1619,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{}}}],["don't",{"_index":79,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["dotenv",{"_index":2730,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1382,"title":{},"body":{"injectables/ImagesService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["downloading",{"_index":2787,"title":{},"body":{"index.html":{}}}],["doy",{"_index":1675,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["dt",{"_index":2505,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto",{"_index":649,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["dto.pipe",{"_index":1873,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["dto.pipe.ts",{"_index":722,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"coverage.html":{}}}],["dto.pipe.ts:15",{"_index":733,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.pipe.ts:30",{"_index":731,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.pipe.ts:58",{"_index":729,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.ts",{"_index":1135,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":1143,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:11",{"_index":1142,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:12",{"_index":1140,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:13",{"_index":1141,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:16",{"_index":1777,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:32",{"_index":1775,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:37",{"_index":1770,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:38",{"_index":1776,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:43",{"_index":1774,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:50",{"_index":1772,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:55",{"_index":1773,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:56",{"_index":1771,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:8",{"_index":1139,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:9",{"_index":1144,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto/change",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/check",{"_index":2624,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["dto/create",{"_index":584,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["dto/createrental/create",{"_index":1545,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/createrental/loc",{"_index":1022,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/MapNewRentalPipe.html":{}}}],["dto/createrental/raw",{"_index":1024,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["dto/delete",{"_index":2239,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/details/edit",{"_index":1866,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["dto/extract",{"_index":919,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["dto/find",{"_index":2240,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/forgot",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/image",{"_index":1357,"title":{},"body":{"injectables/ImagesService.html":{}}}],["dto/image.dto",{"_index":1256,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["dto/pricing/pricing.dto",{"_index":1593,"title":{},"body":{"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/processed",{"_index":1356,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["dto/reset",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/searchrental/given",{"_index":1113,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{}}}],["dto/searchrental/process",{"_index":964,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["dto/searchrental/raw",{"_index":1114,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["dto/searchrental/request",{"_index":1908,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["dto/searchrental/search",{"_index":1855,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["dto/unavailability/remove/remove",{"_index":1875,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/create",{"_index":1671,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/processed",{"_index":1667,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/unavailability/schedule/raw",{"_index":2117,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/sorted",{"_index":2119,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/unavailability",{"_index":1669,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/validate",{"_index":2120,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto/unavailability/unavailability.dto",{"_index":2116,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["dto/unavailability/update/update",{"_index":736,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/unavailability/update/validate",{"_index":737,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["dto/unavailability/validated",{"_index":1665,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto/update",{"_index":1874,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/user",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/verify",{"_index":2623,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["duration",{"_index":939,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["duration.pipe",{"_index":1852,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["duration.pipe.ts",{"_index":1902,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["duration.pipe.ts:19",{"_index":1906,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["duration.pipe.ts:9",{"_index":1904,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["e.g",{"_index":1001,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":1332,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1650,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["east",{"_index":1053,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["ed",{"_index":2569,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["edit",{"_index":827,"title":{},"body":{"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{},"index.html":{}}}],["editdetails",{"_index":1797,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["editdetails(@body",{"_index":1890,"title":{},"body":{"controllers/RentalController.html":{}}}],["editdetails(data",{"_index":1974,"title":{},"body":{"injectables/RentalService.html":{}}}],["editdetails(editdetailsdto",{"_index":1807,"title":{},"body":{"controllers/RentalController.html":{}}}],["editdetailsdto",{"_index":824,"title":{"classes/EditDetailsDto.html":{}},"body":{"classes/EditDetailsDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["editdetailsdto):promise",{"_index":2398,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["editpricing",{"_index":1798,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["editpricing(@body",{"_index":1888,"title":{},"body":{"controllers/RentalController.html":{}}}],["editpricing(data",{"_index":1977,"title":{},"body":{"injectables/RentalService.html":{}}}],["editpricing(pricingdto",{"_index":1812,"title":{},"body":{"controllers/RentalController.html":{}}}],["efficient",{"_index":1315,"title":{},"body":{"injectables/ImagesService.html":{}}}],["electric",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":2128,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["email",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserDto.html":{},"injectables/EmailService.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"miscellaneous/variables.html":{}}}],["email.middleware",{"_index":2269,"title":{},"body":{"modules/UserModule.html":{}}}],["email.middleware.ts",{"_index":2401,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["email.middleware.ts:16",{"_index":2406,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.middleware.ts:28",{"_index":2411,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.middleware.ts:39",{"_index":2408,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.util",{"_index":2416,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.util.ts",{"_index":2428,"title":{},"body":{"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["email.util.ts:14",{"_index":2432,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["email.util.ts:7",{"_index":2430,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["email/email.service",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["emails",{"_index":838,"title":{},"body":{"injectables/EmailService.html":{}}}],["emailservice",{"_index":379,"title":{"injectables/EmailService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["enclose",{"_index":2205,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["enclosed",{"_index":1680,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["encrypt",{"_index":575,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["end",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1365,"title":{},"body":{"injectables/ImagesService.html":{}}}],["endtime",{"_index":949,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{}}}],["endtime):promise",{"_index":966,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["endtime.diff(starttime).toobject().milliseconds",{"_index":1122,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["enforce",{"_index":77,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["ensure",{"_index":1340,"title":{},"body":{"injectables/ImagesService.html":{}}}],["enter",{"_index":2631,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["entered",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["enters",{"_index":2472,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["entire",{"_index":1660,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["enum",{"_index":951,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"miscellaneous/enumerations.html":{}}}],["enum**](https://www.typescriptlang.org/docs/handbook/enums.html",{"_index":975,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalDurationPipe.html":{}}}],["enum.util",{"_index":1854,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{}}}],["enum.util.ts",{"_index":940,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"coverage.html":{}}}],["enum.util.ts:16",{"_index":954,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["enum.util.ts:36",{"_index":950,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["enumerations",{"_index":2755,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":943,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["env",{"_index":83,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":101,"title":{},"body":{"injectables/AppConfigService.html":{},"index.html":{}}}],["equal",{"_index":2511,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["err",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["err.message",{"_index":1268,"title":{},"body":{"controllers/ImagesController.html":{}}}],["err.stack",{"_index":797,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["error",{"_index":89,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('a",{"_index":2436,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["error('bcrypt",{"_index":590,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["error('cannot",{"_index":925,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["error('citympg",{"_index":2364,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('color",{"_index":2386,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('description",{"_index":2377,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('discounts",{"_index":1602,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["error('error",{"_index":2628,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["error('failed",{"_index":1634,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["error('features",{"_index":2397,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('fuel",{"_index":2371,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('gasgrade",{"_index":2374,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('hwympg",{"_index":2368,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('invalid",{"_index":1454,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('minimum",{"_index":2600,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('model",{"_index":2380,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('no",{"_index":2003,"title":{},"body":{"injectables/RentalService.html":{}}}],["error('numdoors",{"_index":2394,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('numofseats",{"_index":2390,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('odometer",{"_index":2357,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('request",{"_index":2530,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('start",{"_index":2533,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('style",{"_index":2383,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('the",{"_index":2517,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('there",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('this",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RentalService.html":{}}}],["error('transmission",{"_index":2360,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('years",{"_index":2123,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["error('you",{"_index":1484,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["error(err",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["error.filter",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["error.filter.ts",{"_index":1146,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["error.filter.ts:23",{"_index":1165,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["error.getstatus",{"_index":888,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.message",{"_index":890,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.name",{"_index":891,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.stack",{"_index":899,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["errorfilter",{"_index":208,"title":{"classes/ErrorFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorFilter.html":{},"coverage.html":{}}}],["errorresponse",{"_index":1178,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["errors",{"_index":874,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["etag",{"_index":1200,"title":{},"body":{"interfaces/ImageInterface.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["etc",{"_index":1758,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["even",{"_index":2471,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["event",{"_index":2856,"title":{},"body":{"license.html":{}}}],["events",{"_index":1509,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exact",{"_index":1155,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exactly",{"_index":2111,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["example",{"_index":1055,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["exception",{"_index":1147,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.getstatus",{"_index":1176,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.message",{"_index":1182,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.message.error",{"_index":1181,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exceptional",{"_index":1524,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exceptionfilter",{"_index":869,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["exceptions",{"_index":1153,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["execution",{"_index":1170,"title":{},"body":{"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["executioncontext",{"_index":1465,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["exist",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["existing",{"_index":1821,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/UserService.html":{}}}],["exists",{"_index":2429,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["expected",{"_index":2180,"title":{},"body":{"classes/TypeOfValue.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["expiration",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"miscellaneous/variables.html":{}}}],["expired",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires",{"_index":1385,"title":{},"body":{"injectables/ImagesService.html":{}}}],["expiresin",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":90,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"controllers/ImagesController.html":{},"injectables/JwtStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"dependencies.html":{},"license.html":{}}}],["extend",{"_index":1498,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["extending",{"_index":1987,"title":{},"body":{"injectables/RentalService.html":{}}}],["extends",{"_index":1413,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extra",{"_index":1496,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["extract",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/UserService.html":{}}}],["extract(req",{"_index":916,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["extractjwt",{"_index":1425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors([(request",{"_index":1429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractkeyvalueutil",{"_index":380,"title":{"injectables/ExtractKeyValueUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["extractkeyvalueutildto",{"_index":918,"title":{"classes/ExtractKeyValueUtilDto.html":{}},"body":{"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"coverage.html":{}}}],["failed",{"_index":592,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/JoiValidationPipe.html":{}}}],["false",{"_index":76,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/JwtStrategy.html":{},"injectables/PositiveNumber.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["far",{"_index":1648,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["features",{"_index":676,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1018,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["fieldname",{"_index":1259,"title":{},"body":{"controllers/ImagesController.html":{}}}],["fields",{"_index":2932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file(s",{"_index":1330,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["file.originalname",{"_index":639,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["filename",{"_index":1333,"title":{},"body":{"injectables/ImagesService.html":{}}}],["files",{"_index":1258,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"license.html":{}}}],["files.length",{"_index":1620,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["files.map(item",{"_index":1628,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["files[0",{"_index":1622,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["fileuploadandsave",{"_index":1320,"title":{},"body":{"injectables/ImagesService.html":{}}}],["filter",{"_index":749,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{}}}],["filter(val",{"_index":2143,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["filters",{"_index":1148,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/RentalService.html":{}}}],["finad",{"_index":1246,"title":{},"body":{"controllers/ImagesController.html":{}}}],["final",{"_index":673,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/SearchRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["find",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FindUserDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"injectables/ResetPasswordTokenDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailUtil.html":{},"index.html":{}}}],["findprofileimage",{"_index":1223,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimage(@req",{"_index":1276,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimage(req",{"_index":1236,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimages",{"_index":1224,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["findprofileimages(@req",{"_index":1274,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimages(req",{"_index":1239,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage",{"_index":1225,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage(@query",{"_index":1272,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage(params",{"_index":1241,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimages",{"_index":1226,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["findrentalimages(@query",{"_index":1270,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimages(params",{"_index":1244,"title":{},"body":{"controllers/ImagesController.html":{}}}],["finduser",{"_index":2221,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finduser(@body",{"_index":2251,"title":{},"body":{"controllers/UserController.html":{}}}],["finduser(data",{"_index":2301,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser(email",{"_index":2231,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyresetpasswordtoken",{"_index":2288,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyresetpasswordtoken(data",{"_index":2303,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserdto",{"_index":451,"title":{"injectables/FindUserDto.html":{}},"body":{"injectables/AuthService.html":{},"injectables/FindUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findvehicleimage",{"_index":1364,"title":{},"body":{"injectables/ImagesService.html":{}}}],["fine",{"_index":2791,"title":{},"body":{"index.html":{}}}],["finish",{"_index":2061,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["first",{"_index":88,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["fitness",{"_index":2852,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1361,"title":{},"body":{"injectables/ImagesService.html":{}}}],["flow",{"_index":1156,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["folder",{"_index":1216,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["following",{"_index":1748,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/UnavailabilityQueryDto.html":{},"license.html":{}}}],["forgot",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["forgotpassword",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(data",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassworddto",{"_index":301,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["forgotten",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/ForgotPasswordDto.html":{}}}],["form",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/SearchRentalDto.html":{}}}],["format",{"_index":674,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["forroutes('v1/rental",{"_index":1957,"title":{},"body":{"modules/RentalModule.html":{}}}],["forroutes('v1/user",{"_index":2276,"title":{},"body":{"modules/UserModule.html":{}}}],["found",{"_index":1342,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{}}}],["framework",{"_index":2770,"title":{},"body":{"index.html":{}}}],["free",{"_index":2818,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1092,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["fromdatetimes",{"_index":957,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["front",{"_index":1639,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["frontend",{"_index":1108,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"index.html":{}}}],["fuel",{"_index":701,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":1150,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["function",{"_index":636,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["function):promise",{"_index":2604,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["functionality",{"_index":100,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["functions",{"_index":2298,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2840,"title":{},"body":{"license.html":{}}}],["future",{"_index":2185,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["gas",{"_index":2929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gasgrade",{"_index":702,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["gaurds/jwt",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["gaurds/local",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["gaurds/logged",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["general",{"_index":41,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["generate",{"_index":941,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{}}}],["generateduration",{"_index":1905,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["generaterentaldurationenum",{"_index":946,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["generaterentaldurationenum(starttime",{"_index":948,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["generaterentaldurationenumutil",{"_index":937,"title":{"injectables/GenerateRentalDurationEnumUtil.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["generaterentaldurationenumutil.processrentaltime",{"_index":1609,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["generator",{"_index":641,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["geo",{"_index":50,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["geo_api_key",{"_index":53,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["geo_url",{"_index":55,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["geocoder",{"_index":2776,"title":{},"body":{"index.html":{}}}],["geocoding",{"_index":994,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["geocoordinate",{"_index":2777,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":1769,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{}}}],["geolocation",{"_index":1968,"title":{},"body":{"injectables/RentalService.html":{}}}],["geometry",{"_index":2031,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["geospatial",{"_index":1969,"title":{},"body":{"injectables/RentalService.html":{}}}],["geospatially",{"_index":997,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["geourl",{"_index":1015,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geourlapipipe",{"_index":989,"title":{"injectables/GeoUrlApiPipe.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["geourlapipipe(new",{"_index":1879,"title":{},"body":{"controllers/RentalController.html":{}}}],["geourlapiutil",{"_index":1006,"title":{"injectables/GeoUrlApiUtil.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["geourlapiutil.getcoordinates",{"_index":2063,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["geourl}?q=${address}&apikey=${apikey",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geourl}?q=${location}&apikey=${apikey",{"_index":1069,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["get('find",{"_index":1237,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["get('profile",{"_index":192,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@usepipes(new",{"_index":1830,"title":{},"body":{"controllers/RentalController.html":{}}}],["getaccess_key_id",{"_index":142,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getaws_s3_bucket_profile",{"_index":146,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getaws_s3_bucket_rentals",{"_index":144,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getcache_ttl",{"_index":138,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getcoordinates",{"_index":1004,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["getcoordinates(address",{"_index":1014,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["getgeo_api_key",{"_index":115,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getgeo_url",{"_index":121,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["gethello",{"_index":270,"title":{},"body":{"injectables/AppService.html":{}}}],["getjwt_exp_time",{"_index":129,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getlocal_db",{"_index":125,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getport",{"_index":131,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getprofile",{"_index":174,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":193,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":175,"title":{},"body":{"controllers/AppController.html":{}}}],["getredis_host",{"_index":134,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getredis_port",{"_index":136,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getremote_db",{"_index":123,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["gets3",{"_index":2076,"title":{},"body":{"injectables/S3Provider.html":{}}}],["getsecret_access_key",{"_index":140,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getsecret_key",{"_index":127,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getsingedurl",{"_index":1384,"title":{},"body":{"injectables/ImagesService.html":{}}}],["getter",{"_index":99,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/MapNewRentalPipe.html":{}}}],["getting",{"_index":2759,"title":{"index.html":{},"license.html":{}},"body":{}}],["give",{"_index":1149,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["given",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["givennotice",{"_index":1101,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["givennoticepipe",{"_index":1081,"title":{"injectables/GivenNoticePipe.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/RequestCoordinatesDto.html":{},"coverage.html":{},"overview.html":{}}}],["givennoticesearchrentaldto",{"_index":1105,"title":{"classes/GivenNoticeSearchRentalDto.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["gmail",{"_index":836,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/TransporterInterface.html":{}}}],["grab",{"_index":910,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiUtil.html":{},"guards/LoggedOutGaurd.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["graceful",{"_index":1523,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["grade",{"_index":2936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":2817,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1161,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["graph",{"_index":2873,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":1603,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ValidateEmailUtil.html":{}}}],["grocery",{"_index":1547,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["groupings",{"_index":2093,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["gte",{"_index":1678,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["guard",{"_index":1408,"title":{"guards/LoggedOutGaurd.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/LoggedOutGaurd.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1456,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["handler",{"_index":1469,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["handling",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["hapi/joi",{"_index":1403,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"dependencies.html":{}}}],["hash",{"_index":581,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["hashing",{"_index":591,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["header",{"_index":911,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/JwtStrategy.html":{}}}],["heated",{"_index":1754,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["hello",{"_index":272,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":2732,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":766,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"index.html":{}}}],["hereby",{"_index":2816,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1766,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["highway",{"_index":2935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":2858,"title":{},"body":{"license.html":{}}}],["holds",{"_index":2953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":871,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"interfaces/TransporterInterface.html":{}}}],["host.switchtohttp",{"_index":1173,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["host.switchtohttp().getrequest",{"_index":881,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["host.switchtohttp().getresponse",{"_index":880,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["hour",{"_index":1087,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["html",{"_index":857,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["http",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{}}}],["http_code",{"_index":1179,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["httpcode",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["httpcode(200",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200)@useguards(localauthguard)@post('login",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["httperrorfilter",{"_index":228,"title":{"classes/HttpErrorFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["httpexception",{"_index":876,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["httpfilter",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["httponly",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["https",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://geocode.search.hereapi.com/v1/geocode",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/pioneer18/rent",{"_index":2809,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":877,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["httpstatus.bad_request",{"_index":902,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":889,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["hwympg",{"_index":700,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["hybrid",{"_index":2930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hybrid','electric').required",{"_index":2919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":1611,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["id",{"_index":640,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/S3Provider.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["identical",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["identified",{"_index":1661,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["identifier",{"_index":2633,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1657,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["identifying",{"_index":1191,"title":{},"body":{"classes/ImageDto.html":{}}}],["ids",{"_index":803,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["ids.push(item._id",{"_index":810,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["if(check.length",{"_index":2434,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["ignoreexpiration",{"_index":1431,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":642,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["image(s",{"_index":1377,"title":{},"body":{"injectables/ImagesService.html":{}}}],["image._id",{"_index":1277,"title":{},"body":{"controllers/ImagesController.html":{}}}],["imagedto",{"_index":1189,"title":{"classes/ImageDto.html":{}},"body":{"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["imageinterface",{"_index":1197,"title":{"interfaces/ImageInterface.html":{}},"body":{"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{},"coverage.html":{}}}],["imagequeryresultsdto",{"_index":1204,"title":{"classes/ImageQueryResultsDto.html":{}},"body":{"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["images",{"_index":775,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["images.length",{"_index":1368,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images.map(item",{"_index":806,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.service.saveimages",{"_index":1335,"title":{},"body":{"injectables/ImagesService.html":{},"classes/ProcessedSaveDataDto.html":{}}}],["images.util",{"_index":1299,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["images.util.ts",{"_index":772,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"coverage.html":{}}}],["images.util.ts:16",{"_index":779,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:48",{"_index":783,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:7",{"_index":778,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:9",{"_index":785,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images/controller",{"_index":1899,"title":{},"body":{"controllers/RentalController.html":{}}}],["images/controller/images.controller",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["images/images.module",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["images[0]._id",{"_index":1373,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images[0].location.match(/\\/rentals",{"_index":787,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images[0].location.split(/\\/profile",{"_index":800,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images[0].location.split(/\\/rentals",{"_index":792,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["imageschema",{"_index":1294,"title":{},"body":{"modules/ImagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imageschema.index",{"_index":1305,"title":{},"body":{"modules/ImagesModule.html":{}}}],["imagescontroller",{"_index":212,"title":{"controllers/ImagesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"coverage.html":{}}}],["imagesmodel",{"_index":1324,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagesmodule",{"_index":200,"title":{"modules/ImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagesservice",{"_index":1253,"title":{"injectables/ImagesService.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["imageuploaddto",{"_index":1210,"title":{"classes/ImageUploadDto.html":{}},"body":{"classes/ImageUploadDto.html":{},"coverage.html":{}}}],["img_id",{"_index":1341,"title":{},"body":{"injectables/ImagesService.html":{}}}],["implements",{"_index":585,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["implied",{"_index":2848,"title":{},"body":{"license.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":36,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":2556,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["included",{"_index":2843,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2087,"title":{},"body":{"classes/SearchRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["including",{"_index":2827,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":992,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":2630,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["index",{"_index":104,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":2490,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["indexes.ts",{"_index":2658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":1745,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{},"modules/RentalModule.html":{}}}],["individual",{"_index":2482,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["information",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocCreateRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/UserService.html":{}}}],["inisde",{"_index":2477,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["initial",{"_index":1437,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["inject",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["inject(unavailabilitymodel",{"_index":1997,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["inject(usermodel",{"_index":2417,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["injectables",{"_index":96,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"overview.html":{}}}],["injectmodel",{"_index":1351,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{}}}],["injectmodel('images",{"_index":1359,"title":{},"body":{"injectables/ImagesService.html":{}}}],["injectmodel('rental",{"_index":1996,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["injectmodel('user",{"_index":2313,"title":{},"body":{"injectables/UserService.html":{}}}],["inputed",{"_index":1012,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["insert",{"_index":2010,"title":{},"body":{"injectables/RentalService.html":{}}}],["inside",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["installation",{"_index":2783,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1160,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["instanceof",{"_index":887,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["instantiated",{"_index":1397,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["instead",{"_index":1452,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["interacted",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["interaction",{"_index":1506,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept",{"_index":1511,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":1512,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interception",{"_index":1505,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptor",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.ts",{"_index":1489,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:22",{"_index":1515,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptors",{"_index":1490,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":1196,"title":{"interfaces/ImageInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"interfaces/ImageInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interface/mailoptions.interface",{"_index":853,"title":{},"body":{"injectables/EmailService.html":{}}}],["interface/modelinterface/image.interface",{"_index":1352,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{}}}],["interface/modelinterface/rental/rental.interface",{"_index":1992,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["interface/modelinterface/unavailability/unavailability.interface",{"_index":1995,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["interface/modelinterface/user.interface",{"_index":2310,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["interfaces",{"_index":1198,"title":{},"body":{"interfaces/ImageInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfacing",{"_index":1936,"title":{},"body":{"modules/RentalModule.html":{}}}],["internal_server_errors",{"_index":863,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["interval",{"_index":961,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["interval**](https://moment.github.io/luxon/docs/manual/tour.html#intervals",{"_index":1116,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["interval.fromdatetimes(a",{"_index":2497,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["interval.fromdatetimes(https://moment.github.io/luxon/docs/class/src/interval.js~interval.html#static",{"_index":956,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["interval.fromdatetimes(starttime",{"_index":968,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["invalid",{"_index":2540,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["isinleapyear",{"_index":2523,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["isnan(notice",{"_index":2499,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["it's",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/S3Provider.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["item",{"_index":2489,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.bucket",{"_index":1629,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.end",{"_index":2532,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.etag",{"_index":1631,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.key",{"_index":1630,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.location",{"_index":1633,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.location.split(/\\/profile",{"_index":820,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["item.location.split(/\\/rentals",{"_index":808,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["item.rentalid",{"_index":2528,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.size",{"_index":1632,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.start",{"_index":2531,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.title",{"_index":2544,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.year",{"_index":2538,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["items(joi.number",{"_index":2926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iyear",{"_index":2129,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["j",{"_index":2814,"title":{},"body":{"license.html":{}}}],["january",{"_index":2157,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["javacript",{"_index":1094,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["javascript",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["jean",{"_index":2799,"title":{},"body":{"index.html":{}}}],["joi",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/JoiValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["joi.array().items(joi.string",{"_index":2925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.array().items(joi.string()).allow(null",{"_index":2956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.boolean().required",{"_index":2928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number",{"_index":2917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().allow(null",{"_index":2957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":49,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.number().required",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":40,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":43,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":2938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":54,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().valid('gas",{"_index":2918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('regular",{"_index":2920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.valid('n/a",{"_index":2924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.valid(null",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["joivalidationpipe",{"_index":1393,"title":{"injectables/JoiValidationPipe.html":{}},"body":{"injectables/JoiValidationPipe.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["joivalidationpipe())@post('create",{"_index":2225,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe())@usepipes(new",{"_index":1804,"title":{},"body":{"controllers/RentalController.html":{}}}],["joivalidationpipe(createrentalvalidationschema",{"_index":1878,"title":{},"body":{"controllers/RentalController.html":{}}}],["joivalidationpipe(createuservalidation",{"_index":2245,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe(searchrentalvalidationschema",{"_index":1883,"title":{},"body":{"controllers/RentalController.html":{}}}],["jonathan",{"_index":2795,"title":{},"body":{"index.html":{}}}],["json",{"_index":1187,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["json(`failed",{"_index":1267,"title":{},"body":{"controllers/ImagesController.html":{}}}],["json.stringify(errorresponse",{"_index":1184,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["jsonwebtoken",{"_index":2734,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":68,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_exp_time",{"_index":71,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":184,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":391,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwt_exp_time}s",{"_index":407,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants.secret",{"_index":404,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":387,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":402,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayloaddto",{"_index":624,"title":{"classes/JwtPayloadDto.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["jwtservice",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":382,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"interfaces/ImageInterface.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/S3Provider.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["key/value",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["keys",{"_index":82,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["kind",{"_index":2847,"title":{},"body":{"license.html":{}}}],["know",{"_index":2500,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["larger",{"_index":2601,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["last",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"guards/LoggedOutGaurd.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["lat",{"_index":1048,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["latitude",{"_index":2034,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["launches",{"_index":2786,"title":{},"body":{"index.html":{}}}],["layer",{"_index":1154,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["leap",{"_index":2459,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["leapyear",{"_index":2470,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":2433,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["length(2",{"_index":2927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["less",{"_index":1120,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{}}}],["level",{"_index":1111,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["liability",{"_index":2862,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2859,"title":{},"body":{"license.html":{}}}],["license",{"_index":2802,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":2803,"title":{},"body":{"index.html":{}}}],["licenseplate",{"_index":709,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":2828,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2849,"title":{},"body":{"license.html":{}}}],["link",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["links",{"_index":2779,"title":{},"body":{"index.html":{}}}],["list",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["listed",{"_index":677,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["listing",{"_index":1013,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["literal",{"_index":689,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"classes/SearchRentalDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["lng",{"_index":1049,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["load",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["loc",{"_index":678,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["locaion",{"_index":1907,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["local",{"_index":1443,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local_db",{"_index":58,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["localauthguard",{"_index":345,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":383,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["locate",{"_index":1326,"title":{},"body":{"injectables/ImagesService.html":{}}}],["location",{"_index":51,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loccreaterentaldto",{"_index":1021,"title":{"classes/LocCreateRentalDto.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["log",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"guards/LoggedOutGaurd.html":{},"miscellaneous/variables.html":{}}}],["loggedoutgaurd",{"_index":187,"title":{"guards/LoggedOutGaurd.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["loggedoutguard",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger",{"_index":786,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["logger.error",{"_index":1183,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["logger.error(err",{"_index":906,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["logger.error(error",{"_index":904,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/JoiValidationPipe.html":{}}}],["logger.log",{"_index":1527,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log('the",{"_index":2518,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(`geourl",{"_index":1034,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["logger.log(`months",{"_index":974,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["logger.log(`test1",{"_index":2046,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(`test2",{"_index":2048,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(`the",{"_index":972,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(`this",{"_index":2521,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(base",{"_index":973,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["logger.log(currentdatetime",{"_index":2502,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(data",{"_index":798,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["logger.log(err",{"_index":796,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["logger.log(log",{"_index":907,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["logger.log(merged",{"_index":2014,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(ordered",{"_index":2151,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["logger.log(start",{"_index":2496,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(test1",{"_index":2047,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(test2",{"_index":2049,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(url",{"_index":1392,"title":{},"body":{"injectables/ImagesService.html":{}}}],["logger.log(y1final",{"_index":2519,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logging",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{}}}],["logginginterceptor",{"_index":207,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["logic",{"_index":1497,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logically",{"_index":2463,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["login",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["login(@request",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":1532,"title":{"injectables/LoginDto.html":{}},"body":{"injectables/LoginDto.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":1536,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["logout",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["logout(@request",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logoutuser",{"_index":2289,"title":{},"body":{"injectables/UserService.html":{}}}],["logoutuser(req",{"_index":2306,"title":{},"body":{"injectables/UserService.html":{}}}],["logs",{"_index":864,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["longer",{"_index":1474,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["longitude",{"_index":2036,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["look",{"_index":2808,"title":{},"body":{"index.html":{}}}],["loosely",{"_index":2764,"title":{},"body":{"index.html":{}}}],["lte",{"_index":1676,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["luxon",{"_index":879,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"dependencies.html":{}}}],["luxon**](https://moment.github.io/luxon",{"_index":1115,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["ly",{"_index":2473,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["mail",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["mailoptions",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["mailoptionsinterface",{"_index":852,"title":{"interfaces/MailOptionsInterface.html":{}},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"coverage.html":{}}}],["make",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["makerequest",{"_index":1056,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["makerequest(location",{"_index":1062,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["makes",{"_index":1312,"title":{},"body":{"injectables/ImagesService.html":{}}}],["manage",{"_index":2284,"title":{},"body":{"injectables/UserService.html":{}}}],["manager",{"_index":2723,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":1219,"title":{},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["map",{"_index":734,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["mapnewrentalpipe",{"_index":1439,"title":{"injectables/MapNewRentalPipe.html":{}},"body":{"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["mapnewrentalpipe())@usepipes(new",{"_index":1805,"title":{},"body":{"controllers/RentalController.html":{}}}],["mapped",{"_index":2210,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["mappricingdto",{"_index":1580,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["mapview",{"_index":1050,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["match",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["matches",{"_index":2328,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["matching",{"_index":93,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.sign(data",{"_index":1570,"title":{},"body":{"injectables/PositiveNumber.html":{}}}],["math.sign(data.discounts.monthly",{"_index":1600,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["math.sign(data.price",{"_index":1598,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["mathch",{"_index":2629,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["max",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["maxcount",{"_index":1260,"title":{},"body":{"controllers/ImagesController.html":{}}}],["maxdistance",{"_index":2029,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["maximum",{"_index":2599,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["maxium",{"_index":1973,"title":{},"body":{"injectables/RentalService.html":{}}}],["merchantability",{"_index":2851,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2831,"title":{},"body":{"license.html":{}}}],["merged",{"_index":2012,"title":{},"body":{"injectables/RentalService.html":{}}}],["message",{"_index":867,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["metadata",{"_index":2747,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["method",{"_index":652,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["methods",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["metric",{"_index":2933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mid",{"_index":2921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middleware",{"_index":1792,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["middleware/validate",{"_index":1948,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["middlewareconsumer",{"_index":1931,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mile",{"_index":1002,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["mileage",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miles",{"_index":1960,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["military",{"_index":2193,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":660,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":1088,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["minprice",{"_index":1594,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["miscellaneous",{"_index":2754,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":926,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["mit",{"_index":2805,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":703,"title":{},"body":{"classes/CreateRentalDto.html":{},"modules/DatabaseModule.html":{},"classes/EditDetailsDto.html":{},"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityInterface.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["model.insertmany(packet",{"_index":1362,"title":{},"body":{"injectables/ImagesService.html":{}}}],["model.provider",{"_index":1947,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["model.provider.ts",{"_index":2661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["model.save(image",{"_index":1363,"title":{},"body":{"injectables/ImagesService.html":{}}}],["modern",{"_index":1091,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["modified",{"_index":1739,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["modify",{"_index":2830,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":1982,"title":{},"body":{"injectables/RentalService.html":{}}}],["mongodb",{"_index":732,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["mongoose",{"_index":1353,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"dependencies.html":{}}}],["mongoose.connect(configservice.get('remote_db",{"_index":2946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.objectid",{"_index":2954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":2950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1303,"title":{},"body":{"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":1951,"title":{},"body":{"modules/RentalModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":983,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["monthly",{"_index":717,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["months",{"_index":958,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"miscellaneous/enumerations.html":{}}}],["more",{"_index":1316,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"modules/RentalModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["mostly",{"_index":2944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mpge",{"_index":1778,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"miscellaneous/variables.html":{}}}],["mtime",{"_index":2537,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/typealiases.html":{}}}],["multer",{"_index":610,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"dependencies.html":{}}}],["multers3",{"_index":623,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["multerupload",{"_index":612,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["multerupload(req",{"_index":1560,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["multeruploadutil",{"_index":1288,"title":{"injectables/MulterUploadUtil.html":{}},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"coverage.html":{},"overview.html":{}}}],["multiple",{"_index":802,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["n/a",{"_index":2937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n/a').required",{"_index":2923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":112,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["names",{"_index":2945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["near",{"_index":1000,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"index.html":{}}}],["necessary",{"_index":1544,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"classes/RemoveUnavailabilityDto.html":{}}}],["need",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["needs",{"_index":725,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"miscellaneous/variables.html":{}}}],["negative",{"_index":1588,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["nest",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestinterceptor",{"_index":1516,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs",{"_index":2769,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":390,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2711,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":2414,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["nestmodule",{"_index":1939,"title":{},"body":{"modules/RentalModule.html":{}}}],["never",{"_index":2785,"title":{},"body":{"index.html":{}}}],["new",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_password",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["newend",{"_index":745,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["newpassword",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["newstart",{"_index":743,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["newtitle",{"_index":747,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["next",{"_index":1513,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["next.handle().pipe",{"_index":1521,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nice",{"_index":893,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["node_env",{"_index":42,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["nodemailer",{"_index":837,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/TransporterInterface.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":848,"title":{},"body":{"injectables/EmailService.html":{}}}],["noninfringement",{"_index":2855,"title":{},"body":{"license.html":{}}}],["north",{"_index":1054,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["note",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["notice",{"_index":1086,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"license.html":{}}}],["notice.pipe",{"_index":1860,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["notice.pipe.ts",{"_index":1083,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"coverage.html":{}}}],["notice.pipe.ts:20",{"_index":1100,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["notice.pipe.ts:36",{"_index":1107,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["notice.pipe.ts:51",{"_index":1104,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["now",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["now.hour",{"_index":1529,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now.hour}:${now.minute",{"_index":896,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["now.minute",{"_index":1530,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now.month}/${now.day",{"_index":895,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["now.second",{"_index":897,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["null",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"injectables/UserService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":133,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["number.ts",{"_index":1567,"title":{},"body":{"injectables/PositiveNumber.html":{},"coverage.html":{}}}],["number.ts:8",{"_index":1569,"title":{},"body":{"injectables/PositiveNumber.html":{}}}],["numdoors",{"_index":707,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["numofseats",{"_index":706,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/VerifyNewPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":2689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":804,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/HttpErrorFilter.html":{}}}],["objects.push",{"_index":809,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["observable",{"_index":1471,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["obtaining",{"_index":2821,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2445,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["occurred",{"_index":817,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["odometer",{"_index":697,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["offset",{"_index":1683,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["oldpassword",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["once",{"_index":2305,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["one",{"_index":1102,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["onto",{"_index":2579,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["option",{"_index":1261,"title":{},"body":{"controllers/ImagesController.html":{}}}],["optional",{"_index":114,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["options",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/ImagesController.html":{},"interfaces/MailOptionsInterface.html":{}}}],["order",{"_index":2105,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["ordered",{"_index":2016,"title":{},"body":{"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["orderyears",{"_index":2098,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["ordinal",{"_index":2493,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["original",{"_index":593,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"index.html":{}}}],["originalname",{"_index":1383,"title":{},"body":{"injectables/ImagesService.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":2866,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"modules/ImagesModule.html":{},"guards/LoggedOutGaurd.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["out.guard",{"_index":189,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{}}}],["out.guard.ts",{"_index":1458,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"coverage.html":{}}}],["out.guard.ts:17",{"_index":1473,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["out.guard.ts:38",{"_index":1466,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["out.guard.ts:9",{"_index":1463,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["outside",{"_index":1684,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["over",{"_index":1152,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["overlap",{"_index":657,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["overlapping",{"_index":1641,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["overlaps",{"_index":1991,"title":{},"body":{"injectables/RentalService.html":{}}}],["override",{"_index":1459,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["overview",{"_index":2874,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2705,"title":{"dependencies.html":{}},"body":{}}],["packet",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{}}}],["packet._id",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["packet.email",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["packet.username",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["page",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["pairs",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":150,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["parameter",{"_index":2039,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["parameters",{"_index":111,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["params",{"_index":811,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["params.rental_id",{"_index":1264,"title":{},"body":{"controllers/ImagesController.html":{}}}],["parseint(process.env.min_price",{"_index":1595,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["parser",{"_index":2716,"title":{},"body":{"dependencies.html":{}}}],["parses",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["particular",{"_index":2853,"title":{},"body":{"license.html":{}}}],["pass",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/LoginUserDto.html":{},"interfaces/TransporterInterface.html":{}}}],["passed",{"_index":650,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"classes/SearchRentalDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["passing",{"_index":1586,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["passoword",{"_index":934,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["passowrd",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/ForgotPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["passport",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UserPropertyDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["passportmodule",{"_index":389,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1424,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1426,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["password.dto.ts",{"_index":595,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:5",{"_index":600,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["password.dto.ts:6",{"_index":599,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":2070,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.util",{"_index":400,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["password.util.ts",{"_index":2613,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["password.util.ts:15",{"_index":2622,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["password.util.ts:25",{"_index":2620,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["password.util.ts:35",{"_index":2618,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["past",{"_index":2485,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["path",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/HttpErrorFilter.html":{}}}],["payload",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["payload.email",{"_index":1435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":1433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":1415,"title":{},"body":{"classes/JwtPayloadDto.html":{},"coverage.html":{}}}],["payload.ts:5",{"_index":1419,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.ts:6",{"_index":1417,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.ts:7",{"_index":1418,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.username",{"_index":1434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pc",{"_index":2788,"title":{},"body":{"index.html":{}}}],["period",{"_index":1827,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["permission",{"_index":2815,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2838,"title":{},"body":{"license.html":{}}}],["person",{"_index":2820,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2839,"title":{},"body":{"license.html":{}}}],["photo",{"_index":1337,"title":{},"body":{"injectables/ImagesService.html":{}}}],["photos",{"_index":679,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["photos/${user.email}/${category",{"_index":632,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["photos/{user_email}/{category",{"_index":2949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pilot",{"_index":1757,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["pipe",{"_index":2487,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["pipes/bcrypt.pipe",{"_index":2241,"title":{},"body":{"controllers/UserController.html":{}}}],["pipes/create",{"_index":1872,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/geo",{"_index":1842,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/given",{"_index":1859,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/map",{"_index":1844,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/pricing.pipe",{"_index":1863,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/process",{"_index":1871,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/rental",{"_index":1851,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/request",{"_index":1857,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/sort",{"_index":1868,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/validate",{"_index":1864,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipetransform",{"_index":583,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["place",{"_index":2126,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["platform",{"_index":1163,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["please",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["point",{"_index":1553,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{}}}],["port",{"_index":48,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"interfaces/TransporterInterface.html":{}}}],["portions",{"_index":2845,"title":{},"body":{"license.html":{}}}],["position",{"_index":1047,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["positive",{"_index":1568,"title":{},"body":{"injectables/PositiveNumber.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["positivenumber",{"_index":1565,"title":{"injectables/PositiveNumber.html":{}},"body":{"injectables/PositiveNumber.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["post",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["post('change",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create",{"_index":2246,"title":{},"body":{"controllers/UserController.html":{}}}],["post('delete",{"_index":1230,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["post('edit",{"_index":1808,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('forgot",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('remove",{"_index":1816,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('reset",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('schedule",{"_index":1823,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('update",{"_index":1837,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["post('upload",{"_index":1248,"title":{},"body":{"controllers/ImagesController.html":{}}}],["post()@usepipes(new",{"_index":1803,"title":{},"body":{"controllers/RentalController.html":{}}}],["postman",{"_index":2784,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":1090,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"index.html":{}}}],["prefix",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":2922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepare",{"_index":1583,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["present",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["presigned",{"_index":1381,"title":{},"body":{"injectables/ImagesService.html":{}}}],["prevent",{"_index":1638,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["previous",{"_index":2486,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["price",{"_index":714,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["price')@usepipes(new",{"_index":1813,"title":{},"body":{"controllers/RentalController.html":{}}}],["pricing",{"_index":680,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pricingdto",{"_index":1571,"title":{"classes/PricingDto.html":{}},"body":{"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["pricingpipe",{"_index":1577,"title":{"injectables/PricingPipe.html":{}},"body":{"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["prior",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["procesed",{"_index":1731,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["process",{"_index":1617,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["process.env",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.geo_api_key",{"_index":1039,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["process.env.geo_url",{"_index":1035,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["process.env.jwt_exp_time",{"_index":2952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":903,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["process.env.private_key",{"_index":2958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.secret_key",{"_index":2951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":1663,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["processed.data",{"_index":2011,"title":{},"body":{"injectables/RentalService.html":{}}}],["processedsavedatadto",{"_index":1355,"title":{"classes/ProcessedSaveDataDto.html":{}},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{},"coverage.html":{}}}],["processedunavailabilitydto",{"_index":1666,"title":{"classes/ProcessedUnavailabilityDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["processedunavailabilityquerydto",{"_index":1672,"title":{"classes/ProcessedUnavailabilityQueryDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["processedunavailabilityquerydto[]s",{"_index":1734,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["processedunavailabilityquerydtos",{"_index":1733,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["processing",{"_index":1137,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["processrentaltime",{"_index":947,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["processrentaltime(starttime",{"_index":953,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["processrentaltimedto",{"_index":963,"title":{"classes/ProcessRentalTimeDto.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["processsavedatautil",{"_index":1289,"title":{"injectables/ProcessSaveDataUtil.html":{}},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{},"overview.html":{}}}],["processunavailabilitypipe",{"_index":1635,"title":{"injectables/ProcessUnavailabilityPipe.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"overview.html":{}}}],["processunavailabilitypipe())@usepipes(new",{"_index":1824,"title":{},"body":{"controllers/RentalController.html":{}}}],["processunavailabilitypipe.createquery",{"_index":651,"title":{},"body":{"classes/CreateQueryDto.html":{}}}],["production",{"_index":45,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ErrorFilter.html":{}}}],["profile",{"_index":799,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profiles",{"_index":2263,"title":{},"body":{"modules/UserModule.html":{}}}],["project",{"_index":2761,"title":{},"body":{"index.html":{}}}],["promise",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1387,"title":{},"body":{"injectables/ImagesService.html":{}}}],["properties",{"_index":598,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["property",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["property.dto",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["property.dto.ts",{"_index":2278,"title":{},"body":{"classes/UserPropertyDto.html":{},"coverage.html":{}}}],["property.dto.ts:5",{"_index":2279,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["property.dto.ts:6",{"_index":2282,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["property.dto.ts:7",{"_index":2280,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["property.dto.ts:8",{"_index":2281,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["propery",{"_index":944,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["protected",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["provide",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/S3Provider.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/TypeOfValue.html":{},"license.html":{}}}],["provider",{"_index":764,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers/database.provider",{"_index":769,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["providers/s3.provider",{"_index":626,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["provides",{"_index":98,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AuthModule.html":{},"modules/RentalModule.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{}}}],["public",{"_index":634,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractKeyValueUtil.html":{}}}],["publish",{"_index":2832,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2854,"title":{},"body":{"license.html":{}}}],["pw",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["py1",{"_index":1705,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["py2",{"_index":1706,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["queried",{"_index":998,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/ImagesService.html":{}}}],["queries",{"_index":1310,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["query",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["query.dto",{"_index":1670,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{}}}],["query.dto.ts",{"_index":648,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:10",{"_index":667,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:11",{"_index":663,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:12",{"_index":1741,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:13",{"_index":2207,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:6",{"_index":1742,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:7",{"_index":666,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:8",{"_index":665,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:9",{"_index":668,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.features",{"_index":2041,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["query.pricing",{"_index":2038,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["quick",{"_index":1744,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["quiet",{"_index":812,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["rack",{"_index":1753,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["radius",{"_index":999,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["range",{"_index":2582,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["range**](https://www.mathsisfun.com/data/range.html",{"_index":2589,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rate",{"_index":1760,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["raw",{"_index":753,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rawauth",{"_index":921,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["rawauth.slice",{"_index":924,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["rawauth.slice(15",{"_index":923,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["rawcoordinates",{"_index":1077,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinates.lat",{"_index":1079,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinates.lng",{"_index":1080,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinatesdto",{"_index":1066,"title":{"classes/RawCoordinatesDto.html":{}},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"coverage.html":{}}}],["rawcreaterentaldto",{"_index":993,"title":{"classes/RawCreateRentalDto.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["rawcreaterentaldto):promise",{"_index":1038,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["rawscheduleunavailabilitydto",{"_index":1780,"title":{"classes/RawScheduleUnavailabilityDto.html":{}},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{}}}],["rawsearchrentaldto",{"_index":1103,"title":{"classes/RawSearchRentalDto.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"coverage.html":{}}}],["react",{"_index":2801,"title":{},"body":{"index.html":{}}}],["read",{"_index":635,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/JwtStrategy.html":{}}}],["readonly",{"_index":152,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["ready",{"_index":1740,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["real",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["redirect",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{}}}],["redirect('http://localhost:3000/auth/login",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["redirecting",{"_index":2320,"title":{},"body":{"injectables/UserService.html":{}}}],["redis",{"_index":59,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["redis/redis.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["redis/service/redis.service",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["redis_host",{"_index":61,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["redis_port",{"_index":62,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["redismodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["redisservice",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["reducing",{"_index":1988,"title":{},"body":{"injectables/RentalService.html":{}}}],["reference",{"_index":2213,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["references",{"_index":1765,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["reflect",{"_index":2746,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["registered",{"_index":102,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/EmailService.html":{}}}],["registration",{"_index":681,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["reject",{"_index":1388,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reject(err",{"_index":1390,"title":{},"body":{"injectables/ImagesService.html":{}}}],["related",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["remote",{"_index":2948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remote_db",{"_index":57,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["remove",{"_index":1820,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{}}}],["remove.deletedcount",{"_index":2023,"title":{},"body":{"injectables/RentalService.html":{}}}],["removeunavailability",{"_index":1799,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["removeunavailability(@body",{"_index":1896,"title":{},"body":{"controllers/RentalController.html":{}}}],["removeunavailability(data",{"_index":1815,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["removeunavailabilitydto",{"_index":1786,"title":{"classes/RemoveUnavailabilityDto.html":{}},"body":{"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{}}}],["removeunavailabilitydto):removeunavailabilitydto",{"_index":2441,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["removing",{"_index":774,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["rent",{"_index":630,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rentacar",{"_index":2813,"title":{},"body":{"license.html":{}}}],["rentacar.team2020@gmail.com",{"_index":849,"title":{},"body":{"injectables/EmailService.html":{}}}],["rental",{"_index":656,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/EditDetailsDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rental's",{"_index":1592,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"index.html":{}}}],["rental.controller.updateunavaialability",{"_index":1934,"title":{},"body":{"modules/RentalModule.html":{}}}],["rental.controller.updateunavailability",{"_index":2578,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rental.dto",{"_index":1023,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["rental.dto.ts",{"_index":672,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{}}}],["rental.dto.ts:10",{"_index":1440,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:11",{"_index":2090,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:15",{"_index":2089,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:23",{"_index":693,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:28",{"_index":686,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:29",{"_index":695,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:34",{"_index":692,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:41",{"_index":690,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:45",{"_index":691,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:46",{"_index":688,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:6",{"_index":694,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rental.dto.ts:7",{"_index":685,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:8",{"_index":696,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:9",{"_index":1441,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.features",{"_index":2040,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.givennotice",{"_index":2028,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.coordinates[0",{"_index":2033,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.coordinates[1",{"_index":2035,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.type",{"_index":2032,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.pipe",{"_index":1845,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["rental.pipe.ts",{"_index":1542,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["rental.pipe.ts:13",{"_index":1543,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["rental.price",{"_index":2037,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.pricerange",{"_index":2169,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.rentalduration",{"_index":2025,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.service.createrental",{"_index":675,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{}}}],["rental.service.editdetails",{"_index":829,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["rental.service.editpricing",{"_index":1573,"title":{},"body":{"classes/PricingDto.html":{}}}],["rental.service.removeunavailability",{"_index":1789,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{}}}],["rental.service.scheduleunavailability",{"_index":1735,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["rental.service.searchrentals",{"_index":2088,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.service.ts",{"_index":2161,"title":{},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["rental.service.ts:10",{"_index":2165,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.ts:15",{"_index":2167,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.ts:19",{"_index":2166,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.updateunavailability",{"_index":724,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{}}}],["rental/controller/rental.controller",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["rental/rental.module",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["rental_id",{"_index":1201,"title":{},"body":{"interfaces/ImageInterface.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["rentalcontroller",{"_index":211,"title":{"controllers/RentalController.html":{}},"body":{"modules/AppModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{}}}],["rentaldescription",{"_index":682,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["rentalduration",{"_index":942,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["rentaldurationpipe",{"_index":1138,"title":{"injectables/RentalDurationPipe.html":{}},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["rentaldurationpipe())@usepipes(new",{"_index":1832,"title":{},"body":{"controllers/RentalController.html":{}}}],["rentaldurationpipe(new",{"_index":1885,"title":{},"body":{"controllers/RentalController.html":{}}}],["rentaldurations",{"_index":962,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["rentaldurations.any",{"_index":979,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['1",{"_index":982,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['3",{"_index":981,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['5",{"_index":988,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentalendtime",{"_index":1131,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rentalid",{"_index":741,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["rentalinterface",{"_index":1914,"title":{"interfaces/RentalInterface.html":{}},"body":{"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"coverage.html":{}}}],["rentalmodel",{"_index":1965,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rentalmodule",{"_index":201,"title":{"modules/RentalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RentalModule.html":{},"modules.html":{},"overview.html":{}}}],["rentals",{"_index":996,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rentals.length",{"_index":2002,"title":{},"body":{"injectables/RentalService.html":{}}}],["rentalschema",{"_index":1941,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rentalschema.index",{"_index":1952,"title":{},"body":{"modules/RentalModule.html":{}}}],["rentalschemavalidation",{"_index":2341,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["rentalservice",{"_index":1840,"title":{"injectables/RentalService.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"coverage.html":{},"overview.html":{}}}],["rentalstarttime",{"_index":1130,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rentaltitle",{"_index":2955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rentmaxduration",{"_index":713,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["rentminduration",{"_index":712,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":1059,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["report",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["represent",{"_index":1610,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["req",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.body.y2",{"_index":2608,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.headers.cookie",{"_index":922,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["req.method",{"_index":1519,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.originalurl",{"_index":2424,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.url",{"_index":1520,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.user",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"injectables/CreateMulterUploadUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{}}}],["req.user._doc.password",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.email",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":882,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["request.url",{"_index":884,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["request/response",{"_index":1493,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request?.cookies?.authentication",{"_index":1430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestcoordinatesdto",{"_index":945,"title":{"classes/RequestCoordinatesDto.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["requestcoordinatespipe",{"_index":1856,"title":{"injectables/RequestCoordinatesPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["requestcoordinatespipe())@usepipes(new",{"_index":1831,"title":{},"body":{"controllers/RentalController.html":{}}}],["requestcoordinatespipe(new",{"_index":1884,"title":{},"body":{"controllers/RentalController.html":{}}}],["requested",{"_index":605,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"injectables/GivenNoticePipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["requesting",{"_index":782,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ForgotPasswordDto.html":{},"injectables/ImagesService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["requests",{"_index":1475,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["require(\"@hapi/joi",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["require('axios",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1309,"title":{},"body":{"injectables/ImagesService.html":{},"classes/RawCreateRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["requirednotice",{"_index":711,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["requires",{"_index":2175,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["res",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["res.deletedcount",{"_index":2332,"title":{},"body":{"injectables/UserService.html":{}}}],["res.send(req.user._doc",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.setheader('set",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(201).json(req.files[0].location",{"_index":1564,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["res.status(404).json(`failed",{"_index":1561,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["res.status(500).json(`failed",{"_index":1380,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/ForgotPasswordDto.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"injectables/ResetPasswordTokenDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["resetpass",{"_index":2068,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["resetpassword",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(data",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassworddto",{"_index":331,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resetpasswordexpires",{"_index":2257,"title":{},"body":{"interfaces/UserInterface.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordtoken",{"_index":2069,"title":{},"body":{"classes/ResetPasswordDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordtokendto",{"_index":2071,"title":{"injectables/ResetPasswordTokenDto.html":{}},"body":{"injectables/ResetPasswordTokenDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["resetplease",{"_index":858,"title":{},"body":{"injectables/EmailService.html":{}}}],["resets",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetting",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{}}}],["resettoken",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(url",{"_index":1391,"title":{},"body":{"injectables/ImagesService.html":{}}}],["response",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["response.data.items[0",{"_index":1045,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["response.data.items[0].position",{"_index":1078,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["response.status(status).json(err",{"_index":905,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["response.status(status).json(errorresponse",{"_index":1188,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["responses",{"_index":1177,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["responsible",{"_index":1158,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["respose",{"_index":1044,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["restriction",{"_index":2826,"title":{},"body":{"license.html":{}}}],["result",{"_index":92,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":94,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.dto",{"_index":1358,"title":{},"body":{"injectables/ImagesService.html":{}}}],["results.dto.ts",{"_index":1206,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"coverage.html":{}}}],["results.dto.ts:5",{"_index":1208,"title":{},"body":{"classes/ImageQueryResultsDto.html":{}}}],["results.dto.ts:6",{"_index":1209,"title":{},"body":{"classes/ImageQueryResultsDto.html":{}}}],["retnals",{"_index":1785,"title":{},"body":{"classes/RawSearchRentalDto.html":{}}}],["retrieve",{"_index":117,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["return",{"_index":153,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1136,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["returning",{"_index":2947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returnrentalmodel",{"_index":2164,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["returns",{"_index":119,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCoordinatesDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["reutrns",{"_index":866,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["reveals",{"_index":865,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["rights",{"_index":2829,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2749,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":2423,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["router",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routermodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroutes(routes",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/RentalModule.html":{}}}],["rsa",{"_index":2959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":2790,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1477,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1518,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["s3",{"_index":613,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["s3.getsignedurl('getobject",{"_index":1389,"title":{},"body":{"injectables/ImagesService.html":{}}}],["s3provider",{"_index":615,"title":{"injectables/S3Provider.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"overview.html":{}}}],["salt",{"_index":582,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["same",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["save",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{},"coverage.html":{}}}],["saved",{"_index":1250,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["saveimages",{"_index":1321,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["saveimages(req.files",{"_index":1563,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["saves",{"_index":1346,"title":{},"body":{"injectables/ImagesService.html":{}}}],["scalable",{"_index":2763,"title":{},"body":{"index.html":{}}}],["schedling",{"_index":1656,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["schedule",{"_index":654,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"index.html":{}}}],["schedule.days",{"_index":987,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["schedule.months",{"_index":977,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["schedule.weeks",{"_index":984,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["scheduled",{"_index":659,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["scheduleunavailability",{"_index":1800,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["scheduleunavailability(@body",{"_index":1892,"title":{},"body":{"controllers/RentalController.html":{}}}],["scheduleunavailability(processed",{"_index":1822,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["scheduling",{"_index":683,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["scheduling.rentmaxduration",{"_index":2026,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["scheduling.rentminduration",{"_index":2024,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["scheduling.requirednotice",{"_index":2027,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["schema",{"_index":1304,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/JoiValidationPipe.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":2691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema/images.schema",{"_index":1295,"title":{},"body":{"modules/ImagesModule.html":{}}}],["schema/rental.schema",{"_index":1942,"title":{},"body":{"modules/RentalModule.html":{}}}],["schema/unavailability",{"_index":1944,"title":{},"body":{"modules/RentalModule.html":{}}}],["schema/validation/create",{"_index":1849,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["schema/validation/search",{"_index":1862,"title":{},"body":{"controllers/RentalController.html":{}}}],["sd",{"_index":2568,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["sdk",{"_index":2081,"title":{},"body":{"injectables/S3Provider.html":{},"dependencies.html":{}}}],["search",{"_index":1028,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"coverage.html":{},"index.html":{}}}],["searching",{"_index":995,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["searchrental",{"_index":1801,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["searchrental(@query",{"_index":1886,"title":{},"body":{"controllers/RentalController.html":{}}}],["searchrental(rental",{"_index":1984,"title":{},"body":{"injectables/RentalService.html":{}}}],["searchrental(searchrentaldto",{"_index":1828,"title":{},"body":{"controllers/RentalController.html":{}}}],["searchrentaldto",{"_index":1829,"title":{"classes/SearchRentalDto.html":{}},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchrentalvalidationschema",{"_index":1861,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchs",{"_index":1972,"title":{},"body":{"injectables/RentalService.html":{}}}],["seats",{"_index":1755,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["second",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["secret",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secret_access_key",{"_index":67,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["secret_key",{"_index":70,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["secretaccesskey",{"_index":2084,"title":{},"body":{"injectables/S3Provider.html":{}}}],["secretorkey",{"_index":1432,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrets",{"_index":2698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secure",{"_index":1317,"title":{},"body":{"injectables/ImagesService.html":{}}}],["secureconnection",{"_index":2173,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["security",{"_index":1308,"title":{},"body":{"injectables/ImagesService.html":{}}}],["see",{"_index":1898,"title":{},"body":{"controllers/RentalController.html":{},"index.html":{}}}],["select",{"_index":856,"title":{},"body":{"injectables/EmailService.html":{}}}],["selected",{"_index":781,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"miscellaneous/variables.html":{}}}],["selective",{"_index":1314,"title":{},"body":{"injectables/ImagesService.html":{}}}],["sell",{"_index":2836,"title":{},"body":{"license.html":{}}}],["sells",{"_index":2796,"title":{},"body":{"index.html":{}}}],["semi",{"_index":1662,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["send",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{}}}],["sending",{"_index":1579,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["sendmail",{"_index":842,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendmail(mailoptions",{"_index":846,"title":{},"body":{"injectables/EmailService.html":{}}}],["sends",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["sense",{"_index":1591,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["sent",{"_index":935,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/HttpErrorFilter.html":{}}}],["separate",{"_index":2107,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sequential",{"_index":2113,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["series",{"_index":1658,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["server",{"_index":60,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["serves",{"_index":2211,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["servestaticmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":834,"title":{},"body":{"injectables/EmailService.html":{},"injectables/TestRentalService.html":{}}}],["service/auth.service",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["service/images.service",{"_index":1254,"title":{},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{}}}],["service/rental.service",{"_index":1841,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["service/user.service",{"_index":2243,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["session",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions",{"_index":914,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["set",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{}}}],["several",{"_index":2931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":2842,"title":{},"body":{"license.html":{}}}],["share",{"_index":2536,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["show",{"_index":1767,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["side",{"_index":2767,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{}}}],["simpler",{"_index":735,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["simplified",{"_index":2212,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["simply",{"_index":913,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["single",{"_index":789,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["size",{"_index":1202,"title":{},"body":{"interfaces/ImageInterface.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["slightly",{"_index":1313,"title":{},"body":{"injectables/ImagesService.html":{}}}],["smaller",{"_index":2797,"title":{},"body":{"index.html":{}}}],["smtp",{"_index":2741,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":2823,"title":{},"body":{"license.html":{}}}],["soon",{"_index":2793,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":1119,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["sort",{"_index":2092,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sort((a",{"_index":2144,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted",{"_index":2104,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["sorted.ya",{"_index":2125,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted.ya[0].year",{"_index":2127,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted.yb",{"_index":2124,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sortedunavailabilitydto",{"_index":2118,"title":{"interfaces/SortedUnavailabilityDto.html":{}},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"coverage.html":{}}}],["sortunavailabilitypipe",{"_index":1782,"title":{"injectables/SortUnavailabilityPipe.html":{}},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{},"overview.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["south",{"_index":1052,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["spaces",{"_index":1060,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["spans",{"_index":2153,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["spec",{"_index":2340,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["specific",{"_index":765,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"classes/UnavailabilityDto.html":{}}}],["specifications",{"_index":1751,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["specified",{"_index":1835,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{}}}],["specs",{"_index":684,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":791,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["src/.../const.ts",{"_index":2756,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../constant.ts",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.provider.ts",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.schema.ts",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2758,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../military",{"_index":2881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../rental.schema.ts",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../search",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../secrets.ts",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../to",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unavailability",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":171,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":178,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":269,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:7",{"_index":271,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":384,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/constant.ts",{"_index":2637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controller/auth.controller.ts",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controller/auth.controller.ts:26",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:40",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:52",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:61",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:70",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/dto/change",{"_index":594,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/check",{"_index":602,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"coverage.html":{}}}],["src/auth/dto/extract",{"_index":927,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{},"coverage.html":{}}}],["src/auth/dto/forgot",{"_index":932,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/jwt",{"_index":625,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"classes/JwtPayloadDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/auth/dto/login",{"_index":1537,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/reset",{"_index":2065,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/user",{"_index":2277,"title":{},"body":{"classes/UserPropertyDto.html":{},"coverage.html":{}}}],["src/auth/dto/verify",{"_index":2612,"title":{},"body":{"classes/VerifyNewPasswordDto.html":{},"coverage.html":{}}}],["src/auth/gaurds/jwt",{"_index":1406,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/gaurds/local",{"_index":1442,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/gaurds/logged",{"_index":1457,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts:124",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:148",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:22",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:39",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:57",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:76",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:95",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":1420,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:11",{"_index":1421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:27",{"_index":1423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":1445,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:10",{"_index":1447,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:21",{"_index":1449,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/util/extract",{"_index":908,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"coverage.html":{}}}],["src/auth/util/verify",{"_index":2312,"title":{},"body":{"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["src/common/const.ts",{"_index":2653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/error.filters.ts",{"_index":860,"title":{},"body":{"classes/ErrorFilter.html":{},"coverage.html":{}}}],["src/common/filters/error.filters.ts:20",{"_index":873,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["src/common/filters/http",{"_index":1145,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["src/common/interceptors/logging",{"_index":1488,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/pipes/joi",{"_index":1394,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/common/util/positive",{"_index":1566,"title":{},"body":{"injectables/PositiveNumber.html":{},"coverage.html":{}}}],["src/common/util/to",{"_index":2657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/util/typeof",{"_index":2178,"title":{},"body":{"classes/TypeOfValue.html":{},"coverage.html":{}}}],["src/config/configuration.module.ts",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["src/config/configuration.service",{"_index":1950,"title":{},"body":{"modules/RentalModule.html":{},"injectables/S3Provider.html":{}}}],["src/config/configuration.service.ts",{"_index":97,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/config/configuration.service.ts:20",{"_index":116,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:26",{"_index":122,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:32",{"_index":124,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:38",{"_index":126,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:44",{"_index":128,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:50",{"_index":130,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:56",{"_index":132,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:62",{"_index":135,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:68",{"_index":137,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:74",{"_index":139,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:79",{"_index":141,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:85",{"_index":143,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:9",{"_index":109,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:91",{"_index":145,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:97",{"_index":147,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/database/database.module.ts",{"_index":763,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/providers/database.provider.ts",{"_index":2659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/unavailability",{"_index":2660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/user",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/email/email.service.ts",{"_index":833,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/email/email.service.ts:15",{"_index":851,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:27",{"_index":845,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:42",{"_index":847,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:8",{"_index":843,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/interface/mailoptions.interface.ts",{"_index":1540,"title":{},"body":{"interfaces/MailOptionsInterface.html":{},"coverage.html":{}}}],["src/email/interface/transporter.interface.ts",{"_index":2171,"title":{},"body":{"interfaces/TransporterInterface.html":{},"coverage.html":{}}}],["src/images/controller/images.controller.ts",{"_index":1218,"title":{},"body":{"controllers/ImagesController.html":{},"coverage.html":{}}}],["src/images/controller/images.controller.ts:107",{"_index":1233,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:116",{"_index":1231,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:26",{"_index":1252,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:42",{"_index":1249,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:58",{"_index":1245,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:68",{"_index":1242,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:78",{"_index":1240,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:88",{"_index":1238,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:98",{"_index":1235,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/dto/image",{"_index":1205,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts",{"_index":1190,"title":{},"body":{"classes/ImageDto.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts:5",{"_index":1194,"title":{},"body":{"classes/ImageDto.html":{}}}],["src/images/dto/image.dto.ts:6",{"_index":1195,"title":{},"body":{"classes/ImageDto.html":{}}}],["src/images/dto/processed",{"_index":1725,"title":{},"body":{"classes/ProcessedSaveDataDto.html":{},"coverage.html":{}}}],["src/images/images.module.ts",{"_index":1290,"title":{},"body":{"modules/ImagesModule.html":{}}}],["src/images/interface/modelinterface/image.interface.ts",{"_index":1199,"title":{},"body":{"interfaces/ImageInterface.html":{},"coverage.html":{}}}],["src/images/providers/s3.provider.ts",{"_index":2074,"title":{},"body":{"injectables/S3Provider.html":{},"coverage.html":{}}}],["src/images/providers/s3.provider.ts:14",{"_index":2079,"title":{},"body":{"injectables/S3Provider.html":{}}}],["src/images/providers/s3.provider.ts:8",{"_index":2078,"title":{},"body":{"injectables/S3Provider.html":{}}}],["src/images/schema/images.schema.ts",{"_index":2670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/images/service/images.service.ts",{"_index":1306,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/images/service/images.service.ts:106",{"_index":1327,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:126",{"_index":1325,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:145",{"_index":1329,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:22",{"_index":1323,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:33",{"_index":1344,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:42",{"_index":1345,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:64",{"_index":1338,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:86",{"_index":1336,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/util/create",{"_index":609,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"coverage.html":{}}}],["src/images/util/delete",{"_index":771,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"coverage.html":{}}}],["src/images/util/multer",{"_index":1557,"title":{},"body":{"injectables/MulterUploadUtil.html":{},"coverage.html":{}}}],["src/images/util/process",{"_index":1615,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2675,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/redis/service/redis.service",{"_index":1478,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["src/rental/alias/military",{"_index":2883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/rental/const.ts",{"_index":2757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/rental/controller/rental.controller.ts",{"_index":1791,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{}}}],["src/rental/controller/rental.controller.ts:107",{"_index":1838,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:117",{"_index":1819,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:48",{"_index":1806,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:65",{"_index":1833,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:75",{"_index":1814,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:85",{"_index":1811,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:97",{"_index":1826,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/dto/createrental/create",{"_index":671,"title":{},"body":{"classes/CreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/createrental/loc",{"_index":1436,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/createrental/raw",{"_index":1746,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/details/edit",{"_index":825,"title":{},"body":{"classes/EditDetailsDto.html":{},"coverage.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts",{"_index":1572,"title":{},"body":{"classes/PricingDto.html":{},"coverage.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:6",{"_index":1576,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:7",{"_index":1575,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:8",{"_index":1574,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/searchrental/given",{"_index":1134,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/process",{"_index":1607,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/raw",{"_index":1784,"title":{},"body":{"classes/RawSearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/request",{"_index":2053,"title":{},"body":{"classes/RequestCoordinatesDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/search",{"_index":2086,"title":{},"body":{"classes/SearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/remove/remove",{"_index":1787,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/create",{"_index":647,"title":{},"body":{"classes/CreateQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/processed",{"_index":1729,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/raw",{"_index":1781,"title":{},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/sorted",{"_index":2152,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/unavailability",{"_index":2203,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/validate",{"_index":2443,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts",{"_index":2182,"title":{},"body":{"classes/UnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:10",{"_index":2187,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:11",{"_index":2190,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:6",{"_index":2188,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:7",{"_index":2191,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:8",{"_index":2186,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:9",{"_index":2189,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/update/update",{"_index":2208,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/update/validate",{"_index":2564,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/validated",{"_index":2610,"title":{},"body":{"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/interface/modelinterface/rental/rental.interface.ts",{"_index":1915,"title":{},"body":{"interfaces/RentalInterface.html":{},"coverage.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts",{"_index":2196,"title":{},"body":{"classes/UnavailabilityInterface.html":{},"coverage.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:10",{"_index":2201,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:5",{"_index":2199,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:6",{"_index":2202,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:7",{"_index":2197,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:8",{"_index":2200,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:9",{"_index":2198,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/middleware/validate",{"_index":2570,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["src/rental/pipes/create",{"_index":720,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/geo",{"_index":990,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/given",{"_index":1082,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"coverage.html":{}}}],["src/rental/pipes/map",{"_index":1541,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/pricing.pipe.ts",{"_index":1578,"title":{},"body":{"injectables/PricingPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/pricing.pipe.ts:14",{"_index":1587,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/pricing.pipe.ts:35",{"_index":1584,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/pricing.pipe.ts:51",{"_index":1582,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/process",{"_index":1636,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/rental",{"_index":1901,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/request",{"_index":2057,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/sort",{"_index":2091,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/validate",{"_index":2338,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/rental.module.ts",{"_index":1921,"title":{},"body":{"modules/RentalModule.html":{}}}],["src/rental/rental.module.ts:71",{"_index":1932,"title":{},"body":{"modules/RentalModule.html":{}}}],["src/rental/schema/rental.schema.ts",{"_index":2688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/unavailability",{"_index":2690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/validation/create",{"_index":2692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/validation/search",{"_index":2694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/service/rental.service.ts",{"_index":1958,"title":{},"body":{"injectables/RentalService.html":{},"coverage.html":{}}}],["src/rental/service/rental.service.ts:113",{"_index":1981,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:134",{"_index":1986,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:151",{"_index":1979,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:178",{"_index":1971,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:19",{"_index":1964,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:216",{"_index":1989,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:31",{"_index":1966,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:44",{"_index":1985,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:65",{"_index":1978,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:92",{"_index":1975,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/test",{"_index":2160,"title":{},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["src/rental/utils/generate",{"_index":938,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"coverage.html":{}}}],["src/rental/utils/geo",{"_index":1042,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{}}}],["src/secrets/secrets.ts",{"_index":2697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/controller/user.controller.ts",{"_index":2218,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/controller/user.controller.ts:26",{"_index":2226,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:39",{"_index":2237,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:50",{"_index":2233,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:63",{"_index":2230,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/dto/create",{"_index":756,"title":{},"body":{"injectables/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/delete",{"_index":822,"title":{},"body":{"injectables/DeleteUserDto.html":{},"coverage.html":{}}}],["src/user/dto/find",{"_index":931,"title":{},"body":{"injectables/FindUserDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts",{"_index":1533,"title":{},"body":{"injectables/LoginDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts:7",{"_index":1535,"title":{},"body":{"injectables/LoginDto.html":{}}}],["src/user/dto/login.dto.ts:8",{"_index":1534,"title":{},"body":{"injectables/LoginDto.html":{}}}],["src/user/dto/update",{"_index":2217,"title":{},"body":{"injectables/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/interface/modelinterface/user.interface.ts",{"_index":2256,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/middleware/validate",{"_index":2400,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["src/user/pipes/bcrypt.pipe.ts",{"_index":574,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"coverage.html":{}}}],["src/user/pipes/bcrypt.pipe.ts:14",{"_index":579,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["src/user/schema/user.schema.ts",{"_index":2700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/schema/validation/create",{"_index":2701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/service/user.service.ts",{"_index":2283,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/service/user.service.ts:126",{"_index":2297,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:139",{"_index":2307,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:19",{"_index":2292,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:31",{"_index":2295,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:46",{"_index":2302,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:59",{"_index":2304,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:73",{"_index":2309,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:98",{"_index":2300,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.module.ts",{"_index":2262,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.module.ts:33",{"_index":2265,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/util/validate",{"_index":2427,"title":{},"body":{"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["stack",{"_index":898,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["start",{"_index":661,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2760,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2515,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["starttime",{"_index":952,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["starttime.diffnow().toobject().milliseconds",{"_index":1117,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["state",{"_index":710,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":886,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"controllers/RentalController.html":{}}}],["status(500",{"_index":1266,"title":{},"body":{"controllers/ImagesController.html":{}}}],["steet",{"_index":1762,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["stop",{"_index":87,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["storage",{"_index":627,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["store",{"_index":2725,"title":{},"body":{"dependencies.html":{}}}],["stores",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["storing",{"_index":1507,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["strategies/jwt.strategy",{"_index":393,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1410,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["strategy**](http://www.passportjs.org/packages/passport",{"_index":1412,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{}}}],["stream",{"_index":1494,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["street",{"_index":1779,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["string",{"_index":120,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"classes/SearchRentalDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":704,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":854,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"license.html":{}}}],["sublicense",{"_index":2834,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/UserService.html":{}}}],["substantial",{"_index":2844,"title":{},"body":{"license.html":{}}}],["success",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["successful",{"_index":819,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["such",{"_index":2446,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["sumamry",{"_index":1328,"title":{},"body":{"injectables/ImagesService.html":{}}}],["summary",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":1427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super({usernamefield",{"_index":1451,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["support",{"_index":2870,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2871,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":900,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["symbols",{"_index":1061,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["t",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":1927,"title":{},"body":{"modules/RentalModule.html":{}}}],["table",{"_index":2704,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2703,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":643,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["take",{"_index":1185,"title":{},"body":{"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{}}}],["tap",{"_index":1517,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tap(err",{"_index":1526,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["teehee",{"_index":892,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["temp",{"_index":1621,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["temp.bucket",{"_index":1623,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.etag",{"_index":1625,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.key",{"_index":1624,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.location",{"_index":1627,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.size",{"_index":1626,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp1",{"_index":2590,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["temp2",{"_index":2591,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["termination",{"_index":1525,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":46,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["test.length",{"_index":2052,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["test1",{"_index":2042,"title":{},"body":{"injectables/RentalService.html":{}}}],["test1.length",{"_index":2050,"title":{},"body":{"injectables/RentalService.html":{}}}],["test2",{"_index":2044,"title":{},"body":{"injectables/RentalService.html":{}}}],["test2.length",{"_index":2051,"title":{},"body":{"injectables/RentalService.html":{}}}],["testable",{"_index":2766,"title":{},"body":{"index.html":{}}}],["testfile.ts",{"_index":2702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["testing",{"_index":2163,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["testrentalservice",{"_index":2159,"title":{"injectables/TestRentalService.html":{}},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["text",{"_index":855,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["they'll",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.addunavailabilityid(value",{"_index":1707,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.appconfig.access_key_id",{"_index":2083,"title":{},"body":{"injectables/S3Provider.html":{}}}],["this.appconfig.secret_access_key",{"_index":2085,"title":{},"body":{"injectables/S3Provider.html":{}}}],["this.authservice.changepassword(data",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.forgotpassword(data",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.user",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(req",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.resetpassword(data",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":1453,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.calculaterange(req.body.y1",{"_index":2607,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.checkdeadlist(request",{"_index":1487,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["this.checkforoverlap(processed",{"_index":2008,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.checkleapyear(start",{"_index":2559,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.configservice.get('app.access_key_id",{"_index":165,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.aws_s3_bucket_profile",{"_index":167,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.aws_s3_bucket_rentals",{"_index":166,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.cache_ttl",{"_index":163,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.geo_api_key",{"_index":154,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.geo_url",{"_index":155,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.jwt_exp_time",{"_index":159,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.local_db",{"_index":157,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.port",{"_index":160,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.redis_host",{"_index":161,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.redis_port",{"_index":162,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.remote_db",{"_index":156,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.secret_access_key",{"_index":164,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.secret_key",{"_index":158,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.converttodatetime(value.y1[0",{"_index":2503,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.converttodatetime(y1final)).daysinyear",{"_index":2510,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.createaddress(value",{"_index":1040,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.creategivennotice(starttime",{"_index":1128,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["this.createmulteruploadutil.create(req",{"_index":1376,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.createquery(createquery",{"_index":1724,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createquery(createquery1",{"_index":1721,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createquery(createquery2",{"_index":1723,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createrentalquery(rental",{"_index":2000,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.createupdatedata(raw",{"_index":755,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["this.createuserupdate(data",{"_index":2319,"title":{},"body":{"injectables/UserService.html":{}}}],["this.deletes3imagesutil.deletes3image(images",{"_index":1371,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.deletes3imagesutil.deletes3images(images",{"_index":1374,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.distilldto(value",{"_index":754,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["this.emailservice.createmailoptions(user.email",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.emailservice.sendmail(mailoptions",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.extractkeyvalueutil.extract(req",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.finduser({email",{"_index":2326,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateduration",{"_index":1909,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["this.generateduration.generaterentaldurationenum",{"_index":1910,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["this.geourlapiutil.getcoordinates",{"_index":1037,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["this.getcoordinates",{"_index":1011,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.getcoordinates(address",{"_index":1041,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.imagesmodel",{"_index":1378,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.deletemany",{"_index":1375,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.deleteone",{"_index":1372,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.find",{"_index":1366,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.findbyid(img_id",{"_index":1369,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesservice.deleteallimages(req.user",{"_index":1282,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.deleteimages(images",{"_index":1280,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.fileuploadandsave(req",{"_index":1263,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findprofileimages(req.user",{"_index":1275,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findrentalimages(null",{"_index":1271,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findrentalimages(params._id",{"_index":1273,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.saveimages",{"_index":1265,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.jwtservice.sign(payload",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logoutuser(req",{"_index":2321,"title":{},"body":{"injectables/UserService.html":{}}}],["this.makerequest",{"_index":1076,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["this.mappricingdto(value",{"_index":1606,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["this.multeruploadutil.upload(req",{"_index":1379,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.orderyears(sorted",{"_index":2149,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.positivenumber",{"_index":2349,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.citympg",{"_index":2363,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.hwympg",{"_index":2367,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.numdoors",{"_index":2393,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.numofseats",{"_index":2389,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.odometer",{"_index":2356,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.processrentaltime(starttime",{"_index":976,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["this.processsavedatautil.process(files",{"_index":1360,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.redisservice.get(key",{"_index":1480,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["this.redisservice.set(key",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.rentalmodel",{"_index":2168,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["this.rentalmodel(rental",{"_index":1998,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalmodel.find(query",{"_index":2001,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalmodel.findoneandupdate(filter",{"_index":2005,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalservice.createrental(rental",{"_index":1882,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.editdetails(editdetailsdto",{"_index":1891,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.editpricing(pricingdto",{"_index":1889,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.removeunavailability(data",{"_index":1897,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.scheduleunavailability(processed",{"_index":1893,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.searchrental(searchrentaldto",{"_index":1887,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.updateunavailability(data",{"_index":1895,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.s3",{"_index":628,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{}}}],["this.s3.deleteobject",{"_index":795,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["this.s3.deleteobjects(params",{"_index":815,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["this.s3provider.gets3",{"_index":621,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["this.saveimages",{"_index":1559,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["this.schema.validate(value",{"_index":1404,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["this.sort(value",{"_index":2148,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":859,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.typeofvalue",{"_index":2350,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.rentalid",{"_index":2351,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.citympg",{"_index":2362,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.color",{"_index":2385,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.description",{"_index":2376,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.fuel",{"_index":2370,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.gasgrade",{"_index":2373,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.hwympg",{"_index":2366,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.model",{"_index":2379,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.numdoors",{"_index":2392,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.numofseats",{"_index":2388,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.odometer",{"_index":2355,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.style",{"_index":2382,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.transmission",{"_index":2359,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(x",{"_index":2396,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.unavailability.deletemany",{"_index":2021,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.find",{"_index":2596,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.unavailability.find(y1query",{"_index":2043,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.find(y2query",{"_index":2045,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.insertmany(merged",{"_index":2015,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.insertmany(y1",{"_index":2017,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.updatemany",{"_index":2018,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.user.find",{"_index":2419,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.usermodel(user",{"_index":2314,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":2316,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findoneandupdate(filter",{"_index":2324,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(user",{"_index":2248,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(data",{"_index":2255,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduser(email",{"_index":2252,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduser(query",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduser({email",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduserbyresetpasswordtoken({token",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(update",{"_index":2250,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validate2years(tyearb",{"_index":2137,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.validatecrossover(value.y1",{"_index":2560,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatecrossyearcongruence(value.y1[0",{"_index":2561,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatedetails(value",{"_index":2399,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.validatedto(req.body",{"_index":2606,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.validatedto(value",{"_index":2442,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["this.validateeachunavailability(value.y1",{"_index":2557,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validateeachunavailability(value.y2",{"_index":2558,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validateemail(req.body",{"_index":2426,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateemailutil",{"_index":2418,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateemailutil.validateemail(check",{"_index":2421,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateexpectedunavailability(req.body",{"_index":2609,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.validateminnotice(currentdatetime",{"_index":2506,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatepricingdto(value",{"_index":1605,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["this.validaterelevance(value",{"_index":2555,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validaterequestedtime(starttime",{"_index":1127,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["this.verifynewpasswordutil.checktypos",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.checktypos({newpassword",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.verifymatch({newpassword",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.verifynewpasswordutil.verifynew",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.verifynew({newpassword",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["time",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["time.alias.ts",{"_index":2882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["time.dto",{"_index":965,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["time.dto.ts",{"_index":1608,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["time.dto.ts:6",{"_index":1613,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["time.dto.ts:7",{"_index":1614,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["time.dto.ts:8",{"_index":1612,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["times",{"_index":1096,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["timestamp",{"_index":1180,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":752,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["tls",{"_index":2174,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["toggle",{"_index":1900,"title":{},"body":{"controllers/RentalController.html":{}}}],["toitemindexes",{"_index":2478,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toitemindexes(unavailability",{"_index":2527,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["token",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["token.dto",{"_index":2311,"title":{},"body":{"injectables/UserService.html":{}}}],["token.dto.ts",{"_index":2072,"title":{},"body":{"injectables/ResetPasswordTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:7",{"_index":2073,"title":{},"body":{"injectables/ResetPasswordTokenDto.html":{}}}],["tokens",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokyo",{"_index":1546,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["tort",{"_index":2865,"title":{},"body":{"license.html":{}}}],["total",{"_index":2520,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["track",{"_index":1651,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["tranfer",{"_index":933,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["transer",{"_index":2066,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["transfer",{"_index":596,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LoginUserDto.html":{},"classes/UserPropertyDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["transform",{"_index":576,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["transform(value",{"_index":577,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["transformation",{"_index":1686,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["transforming",{"_index":2062,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["transmission",{"_index":698,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["transport",{"_index":2172,"title":{},"body":{"interfaces/TransporterInterface.html":{},"dependencies.html":{}}}],["transporter",{"_index":840,"title":{},"body":{"injectables/EmailService.html":{}}}],["transporterinterface",{"_index":2170,"title":{"interfaces/TransporterInterface.html":{}},"body":{"interfaces/TransporterInterface.html":{},"coverage.html":{}}}],["tree",{"_index":2585,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["true",{"_index":86,"title":{},"body":{"modules/AppConfigModule.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PositiveNumber.html":{},"injectables/RentalService.html":{},"classes/TypeOfValue.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["tuples",{"_index":2480,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["turrendas",{"_index":2798,"title":{},"body":{"index.html":{}}}],["twice",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["two",{"_index":2114,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["ty1",{"_index":1687,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty1.push",{"_index":1695,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty2",{"_index":1688,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty2.push",{"_index":1704,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["tyearb",{"_index":2132,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["tyearb.length",{"_index":2136,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["tyearb.sort((a",{"_index":2138,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["type",{"_index":113,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2879,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1597,"title":{},"body":{"injectables/PricingPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["typeofvalue",{"_index":2177,"title":{"classes/TypeOfValue.html":{}},"body":{"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["types/bcrypt",{"_index":2713,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":2715,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":2718,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2752,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typo",{"_index":604,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typo.dto",{"_index":2625,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["typo.dto.ts",{"_index":603,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"coverage.html":{}}}],["typo.dto.ts:5",{"_index":607,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typo.dto.ts:6",{"_index":606,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typos",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["u1",{"_index":2460,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.doy",{"_index":2494,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.isinleapyear",{"_index":2525,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.start",{"_index":2495,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.year",{"_index":2492,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unathi2020",{"_index":850,"title":{},"body":{"injectables/EmailService.html":{}}}],["unauthorizedexception('invalid",{"_index":1455,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unavailability",{"_index":655,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unavailability')@usepipes(new",{"_index":1817,"title":{},"body":{"controllers/RentalController.html":{}}}],["unavailability's",{"_index":2461,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.dto",{"_index":669,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.dto.ts",{"_index":1730,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["unavailability.dto.ts:10",{"_index":1737,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.dto.ts:11",{"_index":1738,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:12",{"_index":1736,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:16",{"_index":2566,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:17",{"_index":2565,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:18",{"_index":2567,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:6",{"_index":1790,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:7",{"_index":1783,"title":{},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:8",{"_index":2215,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.dto.ts:9",{"_index":2214,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.middleware",{"_index":1949,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailability.middleware.ts",{"_index":2571,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["unavailability.middleware.ts:11",{"_index":2576,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:144",{"_index":2577,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:22",{"_index":2580,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:47",{"_index":2586,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:69",{"_index":2584,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.pipe",{"_index":1869,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["unavailability.pipe.ts",{"_index":1637,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["unavailability.pipe.ts:12",{"_index":2440,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:121",{"_index":1647,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:122",{"_index":2457,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:133",{"_index":2476,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:16",{"_index":2108,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:184",{"_index":2474,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:19",{"_index":1664,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:210",{"_index":2455,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:24",{"_index":2439,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:28",{"_index":2462,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:30",{"_index":2112,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:40",{"_index":2103,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:47",{"_index":2483,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:57",{"_index":1654,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:58",{"_index":2106,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:60",{"_index":2484,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:79",{"_index":2467,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:85",{"_index":2101,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability[0",{"_index":2526,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability[index",{"_index":2542,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability[index].doy",{"_index":2541,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability_model",{"_index":2941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unavailabilitydto",{"_index":664,"title":{"classes/UnavailabilityDto.html":{}},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["unavailabilitydtos",{"_index":2096,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailabilityid",{"_index":739,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityinterface",{"_index":1994,"title":{"classes/UnavailabilityInterface.html":{}},"body":{"injectables/RentalService.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["unavailabilitymodel",{"_index":1993,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityprovider",{"_index":1945,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityquerydto",{"_index":1668,"title":{"classes/UnavailabilityQueryDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["unavailabilityschema",{"_index":1943,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityschema.index({rentalid",{"_index":1954,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailabilityschema.index({unavailabilityid",{"_index":1955,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailable",{"_index":1652,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavilable",{"_index":2183,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["undefined",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailUtil.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2804,"title":{},"body":{"index.html":{}}}],["underlying",{"_index":1162,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["unique",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":2162,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["unknown",{"_index":81,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["unschedule",{"_index":2437,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unvalidated",{"_index":2456,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["up",{"_index":2184,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["update",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"index.html":{}}}],["update.email",{"_index":2335,"title":{},"body":{"injectables/UserService.html":{}}}],["update.username",{"_index":2334,"title":{},"body":{"injectables/UserService.html":{}}}],["updated",{"_index":2587,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["updateprofile",{"_index":2222,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile(@body",{"_index":2249,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile(update",{"_index":2234,"title":{},"body":{"controllers/UserController.html":{}}}],["updater",{"_index":721,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updater1",{"_index":750,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["updater2",{"_index":751,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["updates",{"_index":2238,"title":{},"body":{"controllers/UserController.html":{}}}],["updateunavailability",{"_index":1795,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["updateunavailability(@body",{"_index":1894,"title":{},"body":{"controllers/RentalController.html":{}}}],["updateunavailability(data",{"_index":1836,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["updateunavailabilitydatadto",{"_index":723,"title":{"classes/UpdateUnavailabilityDataDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{}}}],["updateunavailabilitydto",{"_index":730,"title":{"classes/UpdateUnavailabilityDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":2290,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(data",{"_index":2308,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto",{"_index":2216,"title":{"injectables/UpdateUserDto.html":{}},"body":{"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":1743,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["upload",{"_index":619,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"index.html":{}}}],["upload.dto.ts",{"_index":1211,"title":{},"body":{"classes/ImageUploadDto.html":{},"coverage.html":{}}}],["upload.dto.ts:5",{"_index":1214,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["upload.dto.ts:6",{"_index":1215,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["upload.dto.ts:7",{"_index":1213,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["upload.util",{"_index":1297,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["upload.util.ts",{"_index":611,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/MulterUploadUtil.html":{},"coverage.html":{}}}],["upload.util.ts:10",{"_index":616,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["upload.util.ts:12",{"_index":622,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["upload.util.ts:19",{"_index":618,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/MulterUploadUtil.html":{}}}],["uploaded",{"_index":1347,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"index.html":{}}}],["uploader",{"_index":1558,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["uploading",{"_index":1212,"title":{},"body":{"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{}}}],["uploadprofileimage",{"_index":1227,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadprofileimage(@req",{"_index":1269,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadprofileimage(req",{"_index":1247,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages",{"_index":1228,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages(@req",{"_index":1262,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages(req",{"_index":1251,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploads",{"_index":1334,"title":{},"body":{"injectables/ImagesService.html":{}}}],["upon",{"_index":1522,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["uri",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":883,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":580,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"license.html":{}}}],["use(req",{"_index":2407,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["useclass",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":110,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ImagesService.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"modules/UserModule.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":190,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@redirect('http://localhost:3000/auth/login')@post('logout",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@get('find",{"_index":2232,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@get('profile",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@post('change",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@post('update",{"_index":2235,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@redirect('http://localhost:3000/auth/login",{"_index":2228,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(loggedoutgaurd",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":1839,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":1877,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/FindUserDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"modules/RentalModule.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user')@redirect('http://localhost:3000/auth/login",{"_index":2236,"title":{},"body":{"controllers/UserController.html":{}}}],["user's",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/EmailService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user._doc",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller.createuser",{"_index":2402,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["user.dto",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["user.dto.ts",{"_index":757,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":1539,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:6",{"_index":1538,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:7",{"_index":761,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"injectables/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":759,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/UpdateUserDto.html":{}}}],["user.dto.ts:9",{"_index":760,"title":{},"body":{"injectables/CreateUserDto.html":{}}}],["user.email",{"_index":2318,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email}/profile/${split[1",{"_index":801,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user.email}/rentals/${split[1",{"_index":793,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user.password",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.remove",{"_index":2330,"title":{},"body":{"injectables/UserService.html":{}}}],["user.resetpasswordexpires",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.resetpasswordtoken",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.save",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.setexpirationdate",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.setresettoken",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":1367,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["user/controller/user.controller",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["user/dto/find",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/interface/modelinterface/user.interface",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/schema/user.schema",{"_index":2267,"title":{},"body":{"modules/UserModule.html":{}}}],["user/service/user.service",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.module",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user_id",{"_index":1203,"title":{},"body":{"interfaces/ImageInterface.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["user_model",{"_index":2942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":210,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":1339,"title":{},"body":{"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{}}}],["userinterface",{"_index":458,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["usermodel",{"_index":2293,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodule",{"_index":202,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUserDto.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"miscellaneous/variables.html":{}}}],["userpropertydto",{"_index":454,"title":{"classes/UserPropertyDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/UserPropertyDto.html":{},"coverage.html":{}}}],["userprovider",{"_index":2270,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":839,"title":{},"body":{"injectables/EmailService.html":{},"controllers/UserController.html":{},"index.html":{}}}],["userschema",{"_index":2266,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":416,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,...userprovider",{"_index":2274,"title":{},"body":{"modules/UserModule.html":{}}}],["userservice.finduser",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["uses",{"_index":835,"title":{},"body":{"injectables/EmailService.html":{},"injectables/GivenNoticePipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["using",{"_index":955,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ValidateEmailUtil.html":{}}}],["usually",{"_index":2444,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["util",{"_index":2479,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["util.dto",{"_index":920,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["util.dto.ts",{"_index":928,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{},"coverage.html":{}}}],["util.dto.ts:5",{"_index":929,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{}}}],["util.dto.ts:6",{"_index":930,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{}}}],["util/create",{"_index":1296,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/delete",{"_index":1298,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/extract",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["util/multer",{"_index":1300,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/process",{"_index":1301,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/validate",{"_index":2415,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["util/verify",{"_index":399,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["utility",{"_index":773,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["utils/generate",{"_index":1853,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{}}}],["utils/geo",{"_index":1025,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["uuid",{"_index":1653,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["v1/rental/update",{"_index":2605,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["v1/user/create",{"_index":2425,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["v7",{"_index":1064,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["val",{"_index":2134,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["val.year",{"_index":2135,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["valdiate",{"_index":2413,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["valid",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["valid('development",{"_index":44,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validate",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["validate(email",{"_index":1448,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate2years",{"_index":2099,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["validatecrossover",{"_index":2450,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validatecrossyearcongruence",{"_index":2451,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validated",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatedetails",{"_index":2342,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["validatedto",{"_index":2438,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["validatedunavailabilitydto",{"_index":1646,"title":{"classes/ValidatedUnavailabilityDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["validateeachunavailability",{"_index":2452,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateeditdetailspipe",{"_index":1810,"title":{"injectables/ValidateEditDetailsPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validateemail",{"_index":2404,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{}}}],["validateemail(check",{"_index":2431,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["validateemail(value",{"_index":2410,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["validateemailmiddleware",{"_index":2264,"title":{"injectables/ValidateEmailMiddleware.html":{}},"body":{"modules/UserModule.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["validateemailutil",{"_index":2403,"title":{"injectables/ValidateEmailUtil.html":{}},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["validateexpectedunavailability",{"_index":2574,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["validateminnotice",{"_index":2453,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validatepricingdto",{"_index":1581,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["validaterelevance",{"_index":2454,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateremoveunavailabilitypipe",{"_index":1818,"title":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validaterequestedtime",{"_index":1098,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["validaterequestedtime(starttime",{"_index":1106,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["validates",{"_index":1933,"title":{},"body":{"modules/RentalModule.html":{}}}],["validatescheduleunavailabilitydto",{"_index":2102,"title":{"classes/ValidateScheduleUnavailabilityDto.html":{}},"body":{"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["validatesequential",{"_index":2100,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["validateunavailability",{"_index":2465,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateunavailabilitypipe",{"_index":1870,"title":{"injectables/ValidateUnavailabilityPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validateunavailabilitypipe())@usepipes(new",{"_index":1825,"title":{},"body":{"controllers/RentalController.html":{}}}],["validateupdateunavailability",{"_index":1924,"title":{},"body":{"modules/RentalModule.html":{}}}],["validateupdateunavailabilitydto",{"_index":728,"title":{"classes/ValidateUpdateUnavailabilityDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["validateupdateunavailabilitymiddleware",{"_index":1793,"title":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["validateuser",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validateuser(email",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":78,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["validation.pipe",{"_index":1847,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["validation.pipe.ts",{"_index":1395,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:13",{"_index":1400,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation.pipe.ts:16",{"_index":1401,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation.schema",{"_index":1850,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["validation.schema.ts",{"_index":2693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":74,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validationschema",{"_index":39,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/JoiValidationPipe.html":{}}}],["value",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value.address",{"_index":1129,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.coords",{"_index":1554,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.email",{"_index":2420,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["value.features",{"_index":1133,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["value.features.length",{"_index":2395,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.givennotice",{"_index":1913,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.location.city",{"_index":1032,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.location.street",{"_index":1031,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.location.zip",{"_index":1033,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.newend",{"_index":746,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.newstart",{"_index":744,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.newtitle",{"_index":748,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.password",{"_index":589,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["value.price",{"_index":1132,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.rentalduration",{"_index":2064,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["value.rentalendtime",{"_index":1912,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["value.rentalid",{"_index":742,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.rentalstarttime",{"_index":1911,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["value.specs",{"_index":2353,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.citympg",{"_index":2361,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.color",{"_index":2384,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.description",{"_index":2375,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.fuel",{"_index":2369,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.gasgrade",{"_index":2372,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.hwympg",{"_index":2365,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.model",{"_index":2378,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.numdoors",{"_index":2391,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.numofseats",{"_index":2387,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.odometer",{"_index":2354,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.style",{"_index":2381,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.transmission",{"_index":2358,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.ts",{"_index":2179,"title":{},"body":{"classes/TypeOfValue.html":{},"coverage.html":{}}}],["value.ts:5",{"_index":2181,"title":{},"body":{"classes/TypeOfValue.html":{}}}],["value.unavailability",{"_index":2142,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability.filter",{"_index":2133,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability.sort((a",{"_index":2147,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability[0].year",{"_index":2130,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailabilityid",{"_index":740,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.util",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["value.util.ts",{"_index":909,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"coverage.html":{}}}],["value.util.ts:12",{"_index":917,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["value.util.ts:9",{"_index":915,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["value.value.features",{"_index":1550,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.listed",{"_index":1556,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.photos",{"_index":1555,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.pricing",{"_index":1552,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.registration",{"_index":1549,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.scheduling",{"_index":1551,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.specs",{"_index":1548,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.y1",{"_index":2563,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["value.y1.ed",{"_index":2598,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y1.map(x",{"_index":1693,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["value.y1.sd",{"_index":2597,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2",{"_index":1692,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["value.y2.ed",{"_index":2603,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2.map(x",{"_index":1702,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["value.y2.sd",{"_index":2602,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2[0",{"_index":2562,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["values",{"_index":1585,"title":{},"body":{"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["variable",{"_index":118,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["variables",{"_index":84,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"miscellaneous/variables.html":{}}}],["vehicle",{"_index":1243,"title":{},"body":{"controllers/ImagesController.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"index.html":{}}}],["vehicle.address",{"_index":1030,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["vehicles",{"_index":2773,"title":{},"body":{"index.html":{}}}],["verified",{"_index":587,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["verifies",{"_index":2469,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["verify",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["verifying",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"classes/CheckPasswordTypoDto.html":{}}}],["verifymatch",{"_index":2615,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifymatch(data",{"_index":2619,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynew",{"_index":2616,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynew(data",{"_index":2621,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynewpassworddto",{"_index":2611,"title":{"classes/VerifyNewPasswordDto.html":{}},"body":{"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["verifynewpasswordutil",{"_index":381,"title":{"injectables/VerifyNewPasswordUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"overview.html":{}}}],["verifynewpasswordutil.verifymatch",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1732,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"index.html":{}}}],["veryify",{"_index":653,"title":{},"body":{"classes/CreateQueryDto.html":{}}}],["vin",{"_index":708,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["violate",{"_index":1589,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["void",{"_index":1166,"title":{},"body":{"classes/HttpErrorFilter.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/ValidateEmailUtil.html":{}}}],["warranties",{"_index":2850,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2846,"title":{},"body":{"license.html":{}}}],["web",{"_index":2772,"title":{},"body":{"index.html":{}}}],["wed",{"_index":1983,"title":{},"body":{"injectables/RentalService.html":{}}}],["week",{"_index":986,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["weekly",{"_index":716,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["weeks",{"_index":959,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"miscellaneous/enumerations.html":{}}}],["well",{"_index":767,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{}}}],["west",{"_index":1051,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["when('fuel",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":2863,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":2806,"title":{},"body":{"index.html":{}}}],["within",{"_index":1959,"title":{},"body":{"injectables/RentalService.html":{}}}],["without",{"_index":2825,"title":{},"body":{"license.html":{}}}],["working",{"_index":1922,"title":{},"body":{"modules/RentalModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["world",{"_index":273,"title":{},"body":{"injectables/AppService.html":{}}}],["wrapper",{"_index":1093,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["wraps",{"_index":1492,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["written",{"_index":2768,"title":{},"body":{"index.html":{}}}],["x",{"_index":2121,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["x.doy",{"_index":1698,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.end",{"_index":1700,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.rentalid",{"_index":1696,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.start",{"_index":1699,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.title",{"_index":1701,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.year",{"_index":1697,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["y1",{"_index":1694,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["y1's",{"_index":2507,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.concat(y2",{"_index":2013,"title":{},"body":{"injectables/RentalService.html":{}}}],["y1.ed",{"_index":2593,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y1.end",{"_index":2551,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.rentalid",{"_index":2547,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.sd",{"_index":2592,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y1.start",{"_index":2549,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.title",{"_index":2553,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1[0",{"_index":1709,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].end",{"_index":1713,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].start",{"_index":1712,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].year",{"_index":1711,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[y1.length",{"_index":1710,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final",{"_index":2508,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.doy",{"_index":2512,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.doy}/${y1final.year",{"_index":2514,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.year",{"_index":2513,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1query",{"_index":1720,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{}}}],["y2",{"_index":1703,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["y2.ed",{"_index":2595,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y2.end",{"_index":2552,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.rentalid",{"_index":2548,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.sd",{"_index":2594,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y2.start",{"_index":2550,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.title",{"_index":2554,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0",{"_index":1715,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0].doy",{"_index":2516,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0].end",{"_index":1719,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[0].start",{"_index":1718,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[0].year",{"_index":1717,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[y2.length",{"_index":1716,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2query",{"_index":1722,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{}}}],["ya",{"_index":2145,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{}}}],["yaer",{"_index":2583,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["yb",{"_index":2146,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{}}}],["year",{"_index":662,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["year's",{"_index":2094,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["year(s",{"_index":2131,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["year**](https://www.timeanddate.com/date/leapyear.html",{"_index":2524,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["year.end",{"_index":1682,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.max.doy",{"_index":1677,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.min.doy",{"_index":1679,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.min.rentalid",{"_index":1673,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.start",{"_index":1681,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.year",{"_index":1674,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["yeara",{"_index":2141,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["yearb",{"_index":2110,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["yearb[0].year",{"_index":2122,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["years",{"_index":1691,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["zip",{"_index":1764,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_providers\n\n\n\ncluster_AppConfigModule_exports\n\n\n\n\nAppConfigService \n\nAppConfigService \n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nAppConfigService  -->\n\nAppConfigModule->AppConfigService \n\n\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAppConfigModule -->\n\nAppConfigService->AppConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/configuration.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: import and provide app configuration related classes\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi = require(\"@hapi/joi\");\nimport { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport configuration from \"./configuration\";\nimport { AppConfigService } from \"./configuration.service\";\n/**\n * **summary**: import and provide app configuration related classes\n */\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            load: [configuration],\n            validationSchema: Joi.object({\n                // GENERAL\n                NODE_ENV: Joi.string()\n                  .valid('development', 'production', 'test')\n                  .default('development'),\n                PORT: Joi.number().default(3000),\n                // GEO LOCATION API\n                GEO_API_KEY: Joi.string().required(),\n                GEO_URL: Joi.string().required(),\n                // DATABASE\n                REMOTE_DB: Joi.string(),\n                LOCAL_DB: Joi.string(),\n                // REDIS SERVER\n                REDIS_HOST: Joi.string().required(),\n                REDIS_PORT: Joi.string().required(),\n                CACHE_TTL: Joi.string().required(),\n                // AWS API ACCESS\n                ACCESS_KEY_ID: Joi.string().required(),\n                SECRET_ACCESS_KEY: Joi.string().required(),\n                // JWT AUTHORIZATION\n                SECRET_KEY: Joi.string().required(),\n                JWT_EXP_TIME: Joi.string().required(),\n                AWS_S3_BUCKET_RENTALS: Joi.string().required(),\n                AWS_S3_BUCKET_PROFILE: Joi.string().required(),\n            }),\n            validationOptions: {\n                allowUnkown: false, // enforce validation, don't allow unknown keys in the env variables\n                abortEarly: true, // stop validation on first error\n            }\n        })\n    ],\n    providers: [ConfigService, AppConfigService],\n    exports: [ConfigService, AppConfigService]\n})\nexport class AppConfigModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: this class provides the configservice 'getter' functionality to get variables from the environment\nthat are registered to this custom configuration module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    geo_api_key\n                                \n                                \n                                    geo_url\n                                \n                                \n                                    remote_db\n                                \n                                \n                                    local_db\n                                \n                                \n                                    secret_key\n                                \n                                \n                                    jwt_exp_time\n                                \n                                \n                                    port\n                                \n                                \n                                    redis_host\n                                \n                                \n                                    redis_port\n                                \n                                \n                                    cache_ttl\n                                \n                                \n                                    secret_access_key\n                                \n                                \n                                    access_key_id\n                                \n                                \n                                    aws_s3_bucket_rentals\n                                \n                                \n                                    aws_s3_bucket_profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.service.ts:9\n                            \n                        \n\n                \n                    \n                            summary: The ConfigService is used to access the environment variables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        geo_api_key\n                    \n                \n\n                \n                    \n                        getgeo_api_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:20\n                                \n                            \n                    \n                        \n                                summary: retrieve the GEO_API_KEY environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        geo_url\n                    \n                \n\n                \n                    \n                        getgeo_url()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:26\n                                \n                            \n                    \n                        \n                                summary: retrieve the GEO_URL environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        remote_db\n                    \n                \n\n                \n                    \n                        getremote_db()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:32\n                                \n                            \n                    \n                        \n                                summary: retrieve the REMOTE_DB environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        local_db\n                    \n                \n\n                \n                    \n                        getlocal_db()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:38\n                                \n                            \n                    \n                        \n                                summary: retrieve the LOCAL_DB environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secret_key\n                    \n                \n\n                \n                    \n                        getsecret_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:44\n                                \n                            \n                    \n                        \n                                summary: retrieve the SECRET_KEY environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jwt_exp_time\n                    \n                \n\n                \n                    \n                        getjwt_exp_time()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:50\n                                \n                            \n                    \n                        \n                                summary: retrieve the JWT_EXP_TIME environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        port\n                    \n                \n\n                \n                    \n                        getport()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:56\n                                \n                            \n                    \n                        \n                                summary: retrieve the PORT environment variable\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        redis_host\n                    \n                \n\n                \n                    \n                        getredis_host()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:62\n                                \n                            \n                    \n                        \n                                summary: retrieve the REDIS_HOST environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        redis_port\n                    \n                \n\n                \n                    \n                        getredis_port()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:68\n                                \n                            \n                    \n                        \n                                summary: retrieve the REDIS_PORT environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        cache_ttl\n                    \n                \n\n                \n                    \n                        getcache_ttl()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:74\n                                \n                            \n                    \n                        \n                                summary: retrieve the CACHE_TTL environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secret_access_key\n                    \n                \n\n                \n                    \n                        getsecret_access_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:79\n                                \n                            \n                    \n                        \n                                summary: retrieve the SECRET_ACCESS_KEY environment variable \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        access_key_id\n                    \n                \n\n                \n                    \n                        getaccess_key_id()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:85\n                                \n                            \n                    \n                        \n                                summary: retrieve the ACCESS_KEY_ID environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        aws_s3_bucket_rentals\n                    \n                \n\n                \n                    \n                        getaws_s3_bucket_rentals()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:91\n                                \n                            \n                    \n                        \n                                summary: retrieve the AWS_S3_BUCKET_RENTALS environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        aws_s3_bucket_profile\n                    \n                \n\n                \n                    \n                        getaws_s3_bucket_profile()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:97\n                                \n                            \n                    \n                        \n                                summary: retrieve the AWS_S3_BUKCET_PROFILE environment variable\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\n/**\n * **summary**: this class provides the configservice 'getter' functionality to get variables from the environment\n * that are registered to this custom configuration module\n */\n@Injectable()\nexport class AppConfigService {\n\n    /**\n     * **summary**: The [**ConfigService**](https://docs.nestjs.com/techniques/configuration#using-the-configservice) is used to access the environment variables\n     * @param configService \n     */\n    constructor(private readonly configService: ConfigService) {}\n\n    /**\n     * **summary**: retrieve the **GEO_API_KEY** environment variable\n     */\n    get geo_api_key(): string {\n        return this.configService.get('app.geo_api_key');\n    }\n    /**\n     * **summary**: retrieve the **GEO_URL** environment variable\n     */\n    get geo_url(): string {\n        return this.configService.get('app.geo_url');\n    }\n    /**\n     * **summary**: retrieve the **REMOTE_DB** environment variable\n     */\n    get remote_db(): string {\n        return this.configService.get('app.remote_db');\n    }\n    /**\n     * **summary**: retrieve the **LOCAL_DB** environment variable\n     */\n    get local_db(): string {\n        return this.configService.get('app.local_db');\n    }\n    /**\n     * **summary**: retrieve the **SECRET_KEY** environment variable\n     */\n    get secret_key(): string {\n        return this.configService.get('app.secret_key');\n    }\n    /**\n     * **summary**: retrieve the **JWT_EXP_TIME** environment variable\n     */\n    get jwt_exp_time(): string {\n        return this.configService.get('app.jwt_exp_time');\n    }\n    /**\n     * **summary**: retrieve the **PORT** environment variable\n     */\n    get port(): number { \n        return this.configService.get('app.port');\n    }\n    /**\n     * **summary**: retrieve the **REDIS_HOST** environment variable\n     */\n    get redis_host(): string { \n        return this.configService.get('app.redis_host');\n    }\n    /**\n     * **summary**: retrieve the **REDIS_PORT** environment variable\n     */\n    get redis_port(): string { \n        return this.configService.get('app.redis_port');\n    }\n    /**\n     * **summary**: retrieve the **CACHE_TTL** environment variable\n     */\n    get cache_ttl(): string { \n        return this.configService.get('app.cache_ttl');\n    }\n   /**\n    * **summary**: retrieve the **SECRET_ACCESS_KEY** environment variable */ \n   get secret_access_key(): string {\n       return this.configService.get('app.secret_access_key');\n   }\n   /**\n    * **summary**: retrieve the **ACCESS_KEY_ID** environment variable\n    */\n   get access_key_id(): string {\n       return this.configService.get('app.access_key_id');\n   }\n   /**\n    * **summary**: retrieve the **AWS_S3_BUCKET_RENTALS** environment variable\n    */\n   get aws_s3_bucket_rentals(): string {\n       return this.configService.get('app.aws_s3_bucket_rentals');\n   }\n   /**\n    * **summary**: retrieve the **AWS_S3_BUKCET_PROFILE** environment variable\n    */\n   get aws_s3_bucket_profile(): string {\n       return this.configService.get('app.aws_s3_bucket_profile');\n   }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                summary: does not provide any real functionality for the app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Post, Request, Req, HttpCode } from '@nestjs/common';\nimport { JwtAuthGuard } from './auth/gaurds/jwt-auth.guard';\nimport { LoggedOutGaurd } from './auth/gaurds/logged-out.guard';\n/**\n * **summary**: does not provide any real functionality for the app\n */\n@Controller()\nexport class AppController {\n\n  @UseGuards(JwtAuthGuard)\n  @UseGuards(LoggedOutGaurd)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\nAppModule -->\n\nAppModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nRentalModule\n\nRentalModule\n\nAppModule -->\n\nRentalModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: register every module in the app and their dependencies. provide the HttpFilter, LoggingInterceptor, and the ErrorFilter for the application\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UserController\n                        \n                        \n                            RentalController\n                        \n                        \n                            ImagesController\n                        \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            AppModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ImagesModule\n                        \n                        \n                            RentalModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RentalModule } from './rental/rental.module';\nimport { UserModule } from './user/user.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RouterModule } from 'nest-router';\nimport { routes } from './common/routes';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { HttpErrorFilter } from './common/filters/http-error.filter';\nimport { ErrorFilter } from './common/filters/error.filters';\nimport { LoggingInterceptor } from './common/interceptors/logging-interceptor';\nimport { ImagesModule } from './images/images.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { AuthModule } from './auth/auth.module';\nimport { UserController } from './user/controller/user.controller';\nimport { RentalController } from './rental/controller/rental.controller';\nimport { ImagesController } from './images/controller/images.controller';\nimport { AppConfigModule } from './config/configuration.module';\nimport { AppConfigService } from './config/configuration.service';\nimport { AuthController } from './auth/controller/auth.controller';\nimport { RedisModule } from './redis/redis.module';\n\n/**\n * **summary**: register every module in the app and their dependencies. provide the HttpFilter, LoggingInterceptor, and the ErrorFilter for the application\n */\n@Module({\n  imports: [\n    AppModule,\n    RentalModule,\n    AuthModule,\n    UserModule,\n    ImagesModule,\n    RouterModule.forRoutes(routes),\n    // parses the .env file, assign key/value pairs to process.env, stores results in configService\n    // can set alternative .env file path\n    AppConfigModule,\n    RedisModule,\n    MongooseModule.forRootAsync({\n      imports: [AppConfigModule],\n      useFactory: async (appConfigService: AppConfigService) => ({\n        uri: appConfigService.remote_db,\n      }),\n      inject: [AppConfigService],\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '../client/build'),\n    }),\n  ],\n  controllers: [AppController, UserController, RentalController, ImagesController, AuthController],\n  providers: [\n    AppService,\n    { provide: APP_FILTER, useClass: HttpErrorFilter },\n    { provide: APP_INTERCEPTOR, useClass: LoggingInterceptor },\n    { provide: APP_FILTER, useClass: ErrorFilter },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: does not provide any real functionality for the app\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n/**\n * **summary**: does not provide any real functionality for the app\n */\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n            \n                Description\n            \n            \n                summary: controller for handling the authentication and authorization of a registered user\n\nnote: some methods in this controller are protected by JwtAuthGuard and LoggedOutGuard, which verify a user is Authorized\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(req, data: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Post('change-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:52\n                \n            \n\n\n            \n                \n                    summary: change the password of a logged in and authorized user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request with the user JWT payload\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new password data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(data: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:61\n                \n            \n\n\n            \n                \n                    summary: request to reset a forgotten password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the email address to send the forgot-password email to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:26\n                \n            \n\n\n            \n                \n                    summary: authenticate and login a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Redirect('http://localhost:3000/auth/login')@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:40\n                \n            \n\n\n            \n                \n                    summary: logout a user by adding their JWT to a Redis 'dead-list' that will end the user's authorized session prior to the JWT expiration time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request containing the user's JWT payload to be added to the logged-out 'dead-list' in the Redis cache\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(data: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:70\n                \n            \n\n\n            \n                \n                    summary: resets the user's password with the data submitted from the email redirect\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data submitted by the user to the reset-password email form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, HttpCode, Post, UseGuards, Request, Body, Req, Redirect, Res } from \"@nestjs/common\";\nimport { Response } from \"express\";\nimport { ChangePasswordDto } from \"../dto/change-password.dto\";\nimport { ForgotPasswordDto } from \"../dto/forgot-password.dto\";\nimport { ResetPasswordDto } from \"../dto/reset-password.dto\";\nimport { JwtAuthGuard } from \"../gaurds/jwt-auth.guard\";\nimport { LocalAuthGuard } from \"../gaurds/local-auth.guard\";\nimport { LoggedOutGaurd } from \"../gaurds/logged-out.guard\";\nimport { AuthService } from \"../service/auth.service\";\n/**\n * **summary**: controller for handling the authentication and authorization of a registered user\n * - note: some methods in this controller are protected by JwtAuthGuard and LoggedOutGuard, which verify a user is Authorized\n */\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) { }\n\n    /**\n     * **summary**: authenticate and login a user\n     * @param email the user's email\n     * @param password the user's submitted password to be validated\n     */\n    @HttpCode(200)\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Request() req, @Res() res: Response) {\n        const cookie = await this.authService.login(req.user);\n        res.setHeader('Set-Cookie', cookie);\n        req.user._doc.password = undefined;\n        return res.send(req.user._doc);\n    }\n\n    /**\n     * **summary**: logout a user by adding their JWT to a Redis 'dead-list' that will end the user's authorized session prior to the JWT expiration time\n     * @param req the request containing the user's JWT payload to be added to the logged-out 'dead-list' in the Redis cache\n     */\n    @UseGuards(JwtAuthGuard)\n    @Redirect('http://localhost:3000/auth/login')\n    @Post('logout')\n    async logout(@Request() req) {\n        return await this.authService.logout(req);\n    }\n\n    /**\n     * **summary**: change the password of a logged in and authorized user\n     * @param req the request with the user JWT payload\n     * @param data the new password data\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Post('change-password')\n    async changePassword(@Req() req, @Body() data: ChangePasswordDto) {\n        return this.authService.changePassword(data, req)\n    }\n\n    /**\n     * **summary**: request to reset a forgotten password\n     * @param data the email address to send the forgot-password email to\n     */\n    @Post('forgot-password')\n    async forgotPassword(@Body() data: ForgotPasswordDto) {\n        return this.authService.forgotPassword(data)\n    }\n\n    /**\n     * **summary**: resets the user's password with the data submitted from the email redirect\n     * @param data the data submitted by the user to the reset-password email form\n     */\n    @Post('reset-password')\n    async resetPassword(@Body() data: ResetPasswordDto) {\n        return await this.authService.resetPassword(data)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAppConfigModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nAuthModule->EmailService \n\n\n\n\n\nExtractKeyValueUtil \n\nExtractKeyValueUtil \n\nExtractKeyValueUtil  -->\n\nAuthModule->ExtractKeyValueUtil \n\n\n\n\n\nLoggedOutGaurd \n\nLoggedOutGaurd \n\nLoggedOutGaurd  -->\n\nAuthModule->LoggedOutGaurd \n\n\n\n\n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil  -->\n\nAuthModule->VerifyNewPasswordUtil \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAuthModule -->\n\nAppConfigService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nAuthModule -->\n\nExtractKeyValueUtil->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nAuthModule -->\n\nVerifyNewPasswordUtil->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: This module provides all of the functionality for authenticating and authorizing a user\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            LoggedOutGaurd\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserModule } from '../user/user.module';\nimport { AuthService } from './service/auth.service';\nimport { jwtConstants } from './constant';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { AuthController } from './controller/auth.controller';\nimport { RedisModule } from '../redis/redis.module';\nimport { LoggedOutGaurd } from './gaurds/logged-out.guard';\nimport { ExtractKeyValueUtil } from './util/extract-key-value.util';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { VerifyNewPasswordUtil } from './util/verify-new-password.util';\nimport { EmailService } from '../email/email.service';\nimport { AppConfigService } from '../config/configuration.service';\n/**\n * **summary**: This module provides all of the functionality for authenticating and authorizing a user\n */\n@Module({\n  imports: [\n    AppConfigModule,\n    ConfigModule,\n    UserModule,\n    PassportModule,\n    RedisModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: {expiresIn: `${jwtConstants.jwt_exp_time}s`}, // add this expiresIn value to the `jwtConstants` object\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy, LoggedOutGaurd, ExtractKeyValueUtil, VerifyNewPasswordUtil, EmailService, AppConfigService],\n  exports: [AuthService, LoggedOutGaurd, ExtractKeyValueUtil, VerifyNewPasswordUtil, EmailService],\n  controllers:[AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/service/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: provide the functionality to authenticate and authorize a user\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, redisService: RedisService, extractKeyValueUtil: ExtractKeyValueUtil, verifyNewPasswordUtil: VerifyNewPasswordUtil, emailService: EmailService, appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/service/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractKeyValueUtil\n                                                  \n                                                        \n                                                                        ExtractKeyValueUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyNewPasswordUtil\n                                                  \n                                                        \n                                                                        VerifyNewPasswordUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(data: ChangePasswordDto, req)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:95\n                \n            \n\n\n            \n                \n                    summary: change the logged in user's password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(data: ForgotPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:124\n                \n            \n\n\n            \n                \n                    summary: send an email to a valid user email address to request resetting their forgotten password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:57\n                \n            \n\n\n            \n                \n                    summary: return a JWT inside of a Cookie, which may only be interacted with by Http and not Javascript, to the now authenticated user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user logging into the application\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:76\n                \n            \n\n\n            \n                \n                    summary: set the user's JWT in the redis 'dead-list' to log the user out prior to the JWT expiration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(data: ResetPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:148\n                \n            \n\n\n            \n                \n                    summary: reset a user's password with the information submitted by a forgot-and-reset email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:39\n                \n            \n\n\n            \n                \n                    summary:  find the user in the database and authenticate their access to the application by verifying the present user credentials in the database\n\nnote: depends on the userService.findUser() and verifyNewPasswordUtil.verifyMatch() methods\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user email\n\n                                    \n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../../user/service/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { FindUserDto } from '../../user/dto/find-user.dto';\nimport { UserPropertyDto } from '../dto/user-property.dto';\nimport * as bcrypt from 'bcrypt';\nimport { UserInterface } from '../../user/interface/modelInterface/user.interface';\nimport { Request } from 'express';\nimport { RedisService } from '../../redis/service/redis.service';\nimport { ExtractKeyValueUtil } from '../util/extract-key-value.util';\nimport { ChangePasswordDto } from '../dto/change-password.dto';\nimport { VerifyNewPasswordUtil } from '../util/verify-new-password.util';\nimport { ForgotPasswordDto } from '../dto/forgot-password.dto';\nimport { EmailService } from '../../email/email.service';\nimport { ResetPasswordDto } from '../dto/reset-password.dto';\nimport { AppConfigService } from '../../config/configuration.service';\n\n/**\n * **summary**: provide the functionality to authenticate and authorize a user\n */\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly userService: UserService,\n        private readonly jwtService: JwtService,\n        private readonly redisService: RedisService,\n        private readonly extractKeyValueUtil: ExtractKeyValueUtil,\n        private readonly verifyNewPasswordUtil: VerifyNewPasswordUtil,\n        private readonly emailService: EmailService,\n        private readonly appConfig: AppConfigService,\n    ) { }\n\n    /**\n     * **summary**:  find the user in the database and authenticate their access to the application by verifying the present user credentials in the database\n     * - note: depends on the userService.findUser() and verifyNewPasswordUtil.verifyMatch() methods\n     * @param email the user email\n     * @param pass the user password\n     */\n    async validateUser(email: string, pass: string): Promise {\n        try {\n            const query: FindUserDto = { email: email };\n            const user: UserInterface = await this.userService.findUser(query); // find user in db by username\n            // validate the given password\n            await this.verifyNewPasswordUtil.verifyMatch({newPassword: pass, oldPassword: user.password});\n            const { password, ...result } = user;\n            return result;\n        } catch (err) {\n            throw new Error(err);\n            // catch and report the unique email error\n        }\n    }\n\n    /**\n     * summary: return a JWT inside of a Cookie, which may only be interacted with by Http and not Javascript, to the now authenticated user\n     * @param user the user logging into the application\n     */\n    async login(user: any) {\n        console.log(`here is the user property created by Passport`)\n        console.log(user._doc)\n        const packet: UserPropertyDto = user._doc;\n        // create the JWT payload\n        const payload = {\n            username: packet.username,\n            email: packet.email,\n            sub: packet._id,\n        };\n        // create JWT and return as a Cookie string\n        const token = await this.jwtService.sign(payload);\n        return `Authentication=${token}; HttpOnly; Path=/; Max-Age=${this.appConfig.jwt_exp_time}`;\n    }\n\n    /**\n     * **summary**: set the user's JWT in the redis 'dead-list' to log the user out prior to the JWT expiration\n     * @param user user property from the request object\n     */\n    async logout(req: Request) {\n        try {\n            // extract the jwt and the cachce key\n            const { key, jwt } = await this.extractKeyValueUtil.extract(req);\n            // save jwt to redis dead-list with key\n            await this.redisService.set(key, jwt);\n            // return success or error\n            return { key: key, value: jwt };\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: change the logged in user's password\n     * @param new_password\n     * @param confirm_password\n     * @param req\n     */\n    async changePassword(data: ChangePasswordDto, req) {\n        try {\n            // verify user submitted same pw twice\n            await this.verifyNewPasswordUtil.checkTypos({ newPassword: data.newPassword, confirmPassword: data.confirmPassword });\n            // extract the jwt and it's key (last 8 digits)\n            const { jwt, key } = await this.extractKeyValueUtil.extract(req);\n            // find user document\n            const user = await this.userService.findUser({email: req.user.email});\n            // verify new password does not match current password\n            await this.verifyNewPasswordUtil.verifyNew({ newPassword: data.newPassword, oldPassword: user.password });\n            // update the user's password\n            user.password = await bcrypt.hash(data.newPassword, 10);\n            user.save();\n            // logout the user, they'll need to log back in\n            await this.redisService.set(key, jwt);\n            // redirect to login page \n            console.log('redirect to login page...');\n            return;\n        } catch (err) {\n            throw new Error(err);\n        };\n    }\n\n\n    /**\n     * summary: send an email to a valid user email address to request resetting their forgotten password\n     * @param email the email for resetting the password\n     * **summary**: sends user a reset password link to the provided email, if it's an account associated email\n     */\n    async forgotPassword(data: ForgotPasswordDto) {\n        try {\n            // query user and confirm they exist\n            const user = await this.userService.findUser({email: data.email});\n            if (!user) { throw new Error('There is no User registered with the provided email')}\n            // set the reset-token and it's expiration on the user document\n            user.setResetToken();\n            user.setExpirationDate();\n            user.save();\n            // create mail options\n            const mailOptions = await this.emailService.createMailOptions(user.email);\n            const result = await this.emailService.sendMail(mailOptions);\n            return user.resetPasswordToken;\n        } catch(err) { \n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: reset a user's password with the information submitted by a forgot-and-reset email\n     * @param email the valid user email\n     * @param newPassword the new password entered the 1st time\n     * @param confirmPassword the identical new password entered a second time\n     */\n    async resetPassword(data: ResetPasswordDto) {\n        // check new password for typos\n        await this.verifyNewPasswordUtil.checkTypos({newPassword: data.confirmPass, confirmPassword: data.resetPass});\n        // query user by resetToken\n        const user = await this.userService.findUserByResetPasswordToken({token: data.resetPasswordToken});\n        // check reset token has not expired\n        if (Date.now() >= user.resetPasswordExpires) { throw new Error('This passowrd reset request has expired, please make a new request.')}\n        // verify new password is actually new\n        await this.verifyNewPasswordUtil.verifyNew({newPassword: data.resetPass, oldPassword: user.password})\n        // update user password\n        user.password = await bcrypt.hash(data.resetPass, 10);\n        // reset the 'reset tokens' to null\n        user.resetPasswordToken = null;\n        user.resetPasswordExpires = null;\n        // save the user\n        await user.save();\n        // redirect to login\n        return;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptHashPipe.html":{"url":"injectables/BcryptHashPipe.html","title":"injectable - BcryptHashPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BcryptHashPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/pipes/bcrypt.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: encrypt the user's password \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/pipes/bcrypt.pipe.ts:14\n                \n            \n\n\n            \n                \n                    summary: use bcrypt to hash and salt the user's password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from \"@nestjs/common\";\nimport { CreateUserDto } from \"../dto/create-user.dto\";\nimport * as bcrypt from 'bcrypt';\n/**\n * **summary**: encrypt the user's password \n */\n@Injectable()\nexport class BcryptHashPipe implements PipeTransform {\n\n    /**\n     * **summary**: use bcrypt to hash and salt the user's password\n     * @param value new user info\n     */\n    async transform(value: CreateUserDto) {\n        try {\n            const hash = await bcrypt.hash(value.password, 10);\n            const verified = await bcrypt.compare(value.password, hash);\n            if (verified) {\n                value.password = hash;\n                return value;\n            }\n            throw new Error('Bcrypt hashing failed, hash did not match the original')\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data transfer object for changing the password of a logged in user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/change-password.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/change-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ChangePasswordDto {\n\treadonly newPassword: string;\n\treadonly confirmPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckPasswordTypoDto.html":{"url":"classes/CheckPasswordTypoDto.html","title":"class - CheckPasswordTypoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckPasswordTypoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/check-password-typo.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data transfer object for verifying their is no typo in the requested new password data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/check-password-typo.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/check-password-typo.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CheckPasswordTypoDto {\n    newPassword: string;\n    confirmPassword: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMulterUploadUtil.html":{"url":"injectables/CreateMulterUploadUtil.html","title":"injectable - CreateMulterUploadUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMulterUploadUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/create-multer-upload.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a multerUpload object\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3Provider: S3Provider)\n                    \n                \n                        \n                            \n                                Defined in src/images/util/create-multer-upload.util.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/create-multer-upload.util.ts:19\n                            \n                        \n\n                \n                    \n                        summary: create the Multer upload object\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        req\n                                                \n                                                \n                                                        category\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/create-multer-upload.util.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport * as multer from 'multer';\nimport * as multerS3 from 'multer-s3';\nimport { JwtPayloadDto } from \"src/auth/dto/jwt-payload\";\nimport { S3Provider } from \"../providers/s3.provider\";\n/**\n * **summary**: create a multerUpload object\n */\n@Injectable()\nexport class CreateMulterUploadUtil {\n    constructor(private readonly s3Provider: S3Provider) { }\n    private s3 = this.s3Provider.getS3();\n\n    /**\n     * **summary**: create the Multer upload object\n     * @param req \n     * @param category \n     */\n    create = async (req, category) => {\n        try {\n            // create a multer upload\n            const user: JwtPayloadDto = req.user;\n            return multer({\n                storage: multerS3({\n                    s3: this.s3,\n                    bucket: `rent-a-car-photos/${user.email}/${category}`,\n                    acl: 'public-read',\n                    key: function (request, file, cb) {\n                        cb(null, `${Date.now()}-${file.originalname}`); // unique id generator for file (image tag)\n                    },\n                }),\n            }).array('upload', 9);\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQueryDto.html":{"url":"classes/CreateQueryDto.html","title":"class - CreateQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/create-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto is passed to the ProcessUnavailabilityPipe.createQuery() method to veryify the\nrequest to schedule Unavailability for the rental will not overlap with already scheduled Unavailability for the rental\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                start\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: this dto is passed to the ProcessUnavailabilityPipe.createQuery() method to veryify the\n * request to schedule Unavailability for the rental will not overlap with already scheduled Unavailability for the rental\n */\nexport class CreateQueryDto {\n    min: UnavailabilityDto;\n    max: UnavailabilityDto;\n    year: number;\n    start: number;\n    end: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRentalDto.html":{"url":"classes/CreateRentalDto.html","title":"class - CreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/create-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the final format for a new rental to be created\n\npassed to the rental.service.createRental method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                listed\n                            \n                            \n                                loc\n                            \n                            \n                                photos\n                            \n                            \n                                pricing\n                            \n                            \n                                registration\n                            \n                            \n                                rentalDescription\n                            \n                            \n                                scheduling\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pricing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRentalDto {\n  rentalDescription: string;\n  address: string;\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: string[];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: number;\n    discounts: {\n      weekly: number;\n      monthly: number;\n    };\n  };\n  loc: {\n    type: string;\n    coordinates: [number, number];\n  };\n  photos: string[];\n  listed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUpdaterDtoPipe.html":{"url":"injectables/CreateUpdaterDtoPipe.html","title":"injectable - CreateUpdaterDtoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUpdaterDtoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/create-updater-dto.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create the data the request UpdateUnavailabilityDataDto the rental.service.updateUnavailability() method needs\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUpdateData\n                            \n                            \n                                    Private\n                                distillDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidateUpdateUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:58\n                \n            \n\n\n            \n                \n                    summary: use the private methods to return a UpdateUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidateUpdateUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a validated UpdateUnavailabilityDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUpdateData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:30\n                            \n                        \n\n                \n                    \n                        summary: create a MongoDB update object from the UpdateUnavailabilityDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                UpdateUnavailabilityDto\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            distillDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:15\n                            \n                        \n\n                \n                    \n                        summary: map the ValidateUpdateUnavailabilityDto to a simpler UpdateUnavailabilityDto format\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                ValidateUpdateUnavailabilityDto\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { UpdateUnavailabilityDto } from '../dto/unavailability/update/update-unavailability.dto';\nimport { ValidateUpdateUnavailabilityDto } from '../dto/unavailability/update/validate-update-unavailability.dto';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto';\n/**\n * **summary**: create the data the request UpdateUnavailabilityDataDto the rental.service.updateUnavailability() method needs\n */\n@Injectable()\nexport class CreateUpdaterDtoPipe implements PipeTransform> {\n\n    /**\n     * **summary**: map the ValidateUpdateUnavailabilityDto to a simpler UpdateUnavailabilityDto format\n     * @param value ValidateUpdateUnavailabilityDto\n     */\n    private distillDto = async (value: ValidateUpdateUnavailabilityDto) => {\n        const data: UpdateUnavailabilityDto = {\n            unavailabilityId: value.unavailabilityId,\n            rentalId: value.rentalId,\n            newStart: value.newStart,\n            newEnd: value.newEnd,\n            newTitle: value.newTitle,\n        };\n        return data;\n    }\n\n    /**\n     * **summary**: create a MongoDB update object from the UpdateUnavailabilityDto\n     * @param value UpdateUnavailabilityDto\n     */\n    private createUpdateData = async (value: UpdateUnavailabilityDto) => {\n        const filter = {\n            rentalId: value.rentalId,\n            unavailabilityId: value.unavailabilityId,\n        };\n        if (value.newTitle === null) {\n          const updater1 = {\n              $set: {\n                start: value.newStart,\n                end: value.newEnd,\n              },\n          };\n          return {filter, updater: updater1};\n        }\n        const updater2 = {\n            $set: {\n                start: value.newStart,\n                end: value.newEnd,\n                title: value.newTitle,\n            },\n        };\n        return { filter, updater: updater2};\n    }\n\n    /**\n     * **summary**: use the private methods to return a UpdateUnavailabilityDto\n     * @param value a validated UpdateUnavailabilityDto\n     */\n    async transform(value: ValidateUpdateUnavailabilityDto): Promise {\n        // return an UpdateUnavailabilityDto\n        const raw =  await this.distillDto(value);\n        const data = await this.createUpdateData(raw);\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserDto.html":{"url":"injectables/CreateUserDto.html","title":"injectable - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data for creating a new user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: data for creating a new user\n */\n@Injectable()\nexport class CreateUserDto {\n    username: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: import and export the database provider\n\nnote: other specific model providers may be registered here as well as exports of the database module\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProvider } from './providers/database.provider';\nimport { ConfigModule } from '@nestjs/config';\n/**\n * **summary**: import and export the database provider\n * - note: other specific model providers may be registered here as well as exports of the database module\n */\n@Module({\n  imports: [ConfigModule],\n  providers: [...databaseProvider],\n  exports: [...databaseProvider],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteS3ImagesUtil.html":{"url":"injectables/DeleteS3ImagesUtil.html","title":"injectable - DeleteS3ImagesUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteS3ImagesUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/delete-s3-images.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: utility for removing images from an AWS S3 Bucket\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteS3Image\n                            \n                            \n                                deleteS3Images\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3Provider: S3Provider)\n                    \n                \n                        \n                            \n                                Defined in src/images/util/delete-s3-images.util.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteS3Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:16\n                            \n                        \n\n                \n                    \n                        summary: delete the selected image from their AWS S3 Bucket\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        images\n                                                        \n                                                                the image to be delete\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                        \n                                                                the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteS3Images\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:48\n                            \n                        \n\n                \n                    \n                        summary: deleted the selected images from their AWS S3 Bucket\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        images\n                                                        \n                                                                the images to be deleted\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                        \n                                                                the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from \"@nestjs/common\";\nimport { S3Provider } from \"../providers/s3.provider\";\n/**\n * **summary**: utility for removing images from an AWS S3 Bucket\n */\n@Injectable()\nexport class DeleteS3ImagesUtil {\n    constructor(private readonly s3Provider: S3Provider) { }\n    private s3 = this.s3Provider.getS3();\n\n    /**\n     * **summary**: delete the selected image from their AWS S3 Bucket\n     * @param images the image to be delete\n     * @param user the requesting user\n     */\n    deleteS3Image = async (images, user): Promise => {\n        const bucket = `rent-a-car-photos`;\n        if (images[0].location.match(/\\/rentals\\//)) {\n            console.log('Delete Single Image Location')\n            console.log(images[0].location);\n            const split = images[0].location.split(/\\/rentals\\//);\n            const key = `${user.email}/rentals/${split[1]}`;\n            console.log('Delete single Image Key')\n            console.log(key)\n            await this.s3.deleteObject({ Bucket: bucket, Key: key }, function (err, data) {\n                if (err) { Logger.log(err, err.stack) }\n                Logger.log(data);\n            });\n        }\n        // delete profile image from s3 bucket\n        console.log('Delete a single Profile Image Location')\n        console.log(images[0].location);\n        const split = images[0].location.split(/\\/profile\\//);\n        console.log('Delete Single Bucket Image Key');\n        const key = `${user.email}/profile/${split[1]}`;\n        await this.s3.deleteObject({ Bucket: bucket, Key: key }, function (err, data) {\n            if (err) { Logger.log(err, err.stack) }\n            Logger.log(data);\n        });\n        return;\n    }\n\n    /**\n     * **summary**: deleted the selected images from their AWS S3 Bucket\n     * @param images the images to be deleted\n     * @param user the requesting user\n     */\n    deleteS3Images = async (images, user): Promise => {\n        // multiple images\n        const ids: string[] = [];\n        const objects = [];\n        const bucket = `rent-a-car-photos`;\n        // delete multiple aws rental images\n        if (images[0].location.match(/\\/rentals\\//)) {\n            console.log(`Deleting multiple Rental Images`)\n            images.map(item => {\n                console.log(item.location);\n                const split = item.location.split(/\\/rentals\\//);\n                const key = `${user.email}/rentals/${split[1]}`;\n                objects.push({ Key: key })\n                ids.push(item._id);\n            });\n            const params = {\n                Bucket: bucket,\n                Delete: {\n                    Objects: objects,\n                    Quiet: false\n                }\n            }\n            console.log(`Delete Multiple Rental Images params`);\n            console.log(params);\n            await this.s3.deleteObjects(params, function (err, data) {\n                if (err) console.log(err, err.stack); // an error occurred\n                console.log(data);           // successful response\n            })\n            return ids;\n        }\n        // delete multiple aws profile images\n        console.log('Delete Multiple AWS Profile Images')\n        images.map(item => {\n            console.log(item.location);\n            const split = item.location.split(/\\/profile\\//);\n            const key = `${user.email}/profile/${split[1]}`;\n            objects.push({ Key: key })\n            ids.push(item._id);\n        });\n        const params = {\n            Bucket: bucket,\n            Delete: {\n                Objects: objects,\n                Quiet: false\n            }\n        }\n        console.log(`Delete Multiple Profile Images params`);\n        console.log(params);\n        await this.s3.deleteObjects(params, function (err, data) {\n            if (err) console.log(err, err.stack); // an error occurred\n            console.log(data);           // successful response\n        })\n\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserDto.html":{"url":"injectables/DeleteUserDto.html","title":"injectable - DeleteUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/delete-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: user password to confirm delteing their profile\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/delete-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: user password to confirm delteing their profile\n */\n@Injectable()\nexport class DeleteUserDto {\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditDetailsDto.html":{"url":"classes/EditDetailsDto.html","title":"class - EditDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/details/edit-details.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: edit the details of a rental\n\npassed to the rental.service.editDetails method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                features\n                            \n                            \n                                rentalId\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EditDetailsDto {\n  rentalId: string;\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  features: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: this email service uses the gmail nodemailer to send emails to the provided email; used to send the forgot password email to registered users\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMailOptions\n                            \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createMailOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMailOptions(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:27\n                \n            \n\n\n            \n                \n                    summary: create the mail options to be used to send the email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user's email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:42\n                \n            \n\n\n            \n                \n                    summary: use the nodemailer transporter to send the email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport( {\n        service: 'gmail', \n        auth: {\n            user: 'rentacar.team2020@gmail.com',\n            pass: 'Unathi2020!'\n        }\n    })\n                        \n                    \n                        \n                            \n                                    Defined in src/email/email.service.ts:15\n                            \n                        \n\n                \n                    \n                        summary: the gmail nodemailer transporter used to send emails\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport { MailOptionsInterface } from './interface/mailoptions.interface';\n/**\n * **summary**: this email service uses the gmail nodemailer to send emails to the provided email; used to send the forgot password email to registered users\n */\n@Injectable()\nexport class EmailService {\n    constructor() {}\n\n\n    /**\n     * **summary**: the gmail nodemailer transporter used to send emails\n     */\n    private transporter = nodemailer.createTransport( {\n        service: 'gmail', \n        auth: {\n            user: 'rentacar.team2020@gmail.com',\n            pass: 'Unathi2020!'\n        }\n    })\n\n    /**\n     * **summary**: create the mail options to be used to send the email\n     * @param email user's email\n     */\n    async createMailOptions (email: string): Promise {\n        const mailOptions: MailOptionsInterface = {\n            from: 'rentacar.team2020@gmail.com',\n            to: email,\n            subject: 'Reset Forgotten Email Password for Rent-A-Car',\n            text: 'Please select the reset email link to reset your password',\n            html: 'Rent-A-Car Password Resetplease select the reset email link to reset your passowrd'\n        }\n        return mailOptions;\n    }\n\n    /**\n     * **summary**: use the nodemailer transporter to send the email\n     * @param mailOptions \n     */\n    async sendMail(mailOptions): Promise {\n        try{\n            this.transporter.sendMail(mailOptions);\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorFilter.html":{"url":"classes/ErrorFilter.html","title":"class - ErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/error.filters.ts\n        \n\n            \n                Description\n            \n            \n                summary: this Error Filter catches all 500 INTERNAL_SERVER_ERRORs. It logs the Error, reveals the Error object, and reutrns a custom err message to the client\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: Error, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/error.filters.ts:20\n                \n            \n\n\n            \n                \n                    summary: catch http errors and use the Logger to log the appropiate error and data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  HttpException,\n  ArgumentsHost,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { DateTime } from 'luxon';\n/**\n * **summary**: this Error Filter catches all 500 INTERNAL_SERVER_ERRORs. It logs the Error, reveals the Error object, and reutrns a custom err message to the client\n */\n@Catch()\nexport class ErrorFilter implements ExceptionFilter {\n  /**\n   * **summary**: catch http errors and use the Logger to log the appropiate error and data\n   * @param error \n   * @param host \n   */\n  catch(error: Error, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    const request = host.switchToHttp().getRequest();\n    const method = request.method;\n    const url = request.url;\n    const now = DateTime.local();\n\n    const status =\n      error instanceof HttpException\n        ? error.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const err = {\n      message: error.message,\n      name: error.name,\n      teehee: `have a nice day :)`,\n    };\n    const log = {\n      method: `${method}`,\n      url: `${url}`,\n      DateTime: `${now.month}/${now.day} Time: ${now.hour}:${now.minute}:${\n        now.second\n      }`,\n      stack: `${error.stack}`,\n    };\n\n    switch (status) {\n      case HttpStatus.INTERNAL_SERVER_ERROR:\n      case HttpStatus.BAD_REQUEST:\n        if (process.env.NODE_ENV === 'production') {\n          Logger.error(error);\n          return response.status(status).json(err);\n        } else {\n          Logger.error(err);\n          Logger.log(log);\n          return response.status(status).json(err);\n        }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExtractKeyValueUtil.html":{"url":"injectables/ExtractKeyValueUtil.html","title":"injectable - ExtractKeyValueUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExtractKeyValueUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/util/extract-key-value.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: grab the Authorization header Cookie and the extract JWT and the key used for caching the token\n\nnote: the key is simply the last 8 digits of the this sessions JWT\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                extract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/util/extract-key-value.util.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            extract\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extract(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/extract-key-value.util.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { ExtractKeyValueUtilDto } from \"../dto/extract-key-value-util.dto\";\n/**\n * summary: grab the Authorization header Cookie and the extract JWT and the **key** used for caching the token\n * - note: the key is simply the last 8 digits of the this sessions JWT\n */\n@Injectable()\nexport class ExtractKeyValueUtil {\n    constructor() {}\n    \n    public async extract(req: Request): Promise {\n        if (req){\n            const rawAuth: string = req.headers.cookie\n            return {\n                jwt: await rawAuth.slice(15), // JWT\n                key: await rawAuth.slice(-8), // KEY\n            }\n        }\n        throw new Error('Cannot extract JWT and KEY from missing Request Object');\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExtractKeyValueUtilDto.html":{"url":"classes/ExtractKeyValueUtilDto.html","title":"class - ExtractKeyValueUtilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExtractKeyValueUtilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/extract-key-value-util.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for the JWT and it's key (last 8 digits of the JWT used for logging out) \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwt\n                            \n                            \n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/extract-key-value-util.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/extract-key-value-util.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExtractKeyValueUtilDto {\n    jwt: string;\n    key: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserDto.html":{"url":"injectables/FindUserDto.html","title":"injectable - FindUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FindUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/find-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: find a user profile by email\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/find-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n/**\n * **summary**: find a user profile by email\n */\n@Injectable()\nexport class FindUserDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/forgot-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data tranfer object for requesting to reset a forgotten passowrd. A reset passoword email is sent to only valid email addresses\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/forgot-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ForgotPasswordDto {\n\temail: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateRentalDurationEnumUtil.html":{"url":"injectables/GenerateRentalDurationEnumUtil.html","title":"injectable - GenerateRentalDurationEnumUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GenerateRentalDurationEnumUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/utils/generate-rental-duration-enum.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: generate RentalDuration Enums for the rentalDuration propery of the RequestCoordinatesDto\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateRentalDurationEnum\n                            \n                            \n                                    Private\n                                    Async\n                                processRentalTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateRentalDurationEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRentalDurationEnum(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/generate-rental-duration-enum.util.ts:36\n                \n            \n\n\n            \n                \n                    summary: create a RentalDuration Enum from the given start and end time \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            processRentalTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processRentalTime(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/generate-rental-duration-enum.util.ts:16\n                \n            \n\n\n            \n                \n                    summary: using the [Luxon Interval.fromDateTimes(https://moment.github.io/luxon/docs/class/src/interval.js~Interval.html#static-method-fromDateTimes)] method return the \nduration of the rental in months, weeks, and days\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Interval } from 'luxon';\nimport { RentalDurations } from '../const';\nimport { ProcessRentalTimeDto } from '../dto/searchRental/process-rental-time.dto';\n/**\n * **summary**: generate RentalDuration Enums for the rentalDuration propery of the RequestCoordinatesDto\n */\n@Injectable()\nexport class GenerateRentalDurationEnumUtil {\n  /**\n   * **summary**: using the [**Luxon Interval.fromDateTimes(https://moment.github.io/luxon/docs/class/src/interval.js~Interval.html#static-method-fromDateTimes)**] method return the \n   * duration of the rental in months, weeks, and days\n   * @param startTime \n   * @param endTime \n   */\n  private async processRentalTime(startTime, endTime):Promise {\n    try {\n      const base = Interval.fromDateTimes(startTime, endTime);\n      const months = base.length('months');\n      const weeks = base.length('weeks');\n      const days = base.length('days');\n      Logger.log(`The Base`);\n      Logger.log(base);\n      Logger.log(`months: ${months}, weeks: ${weeks}, days: ${days}`);\n      return { months, weeks, days };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: create a RentalDuration [**Enum**](https://www.typescriptlang.org/docs/handbook/enums.html) from the given start and end time \n   * @param startTime \n   * @param endTime \n   */\n  async generateRentalDurationEnum(startTime, endTime) {\n    try {\n      const schedule: ProcessRentalTimeDto = await this.processRentalTime(startTime, endTime);\n      if (schedule.months > 3) {\n        return RentalDurations.Any;\n      }\n      if (schedule.months  1) {\n        return RentalDurations['3 Months'];\n      }\n      if (schedule.months  3) {\n        return RentalDurations['1 Month'];\n      }\n      if (schedule.weeks  1) {\n        return RentalDurations['3 Weeks'];\n      }\n      if (schedule.weeks  5) {\n        return RentalDurations['1 Week'];\n      }\n      if (schedule.days  3) {\n        return RentalDurations['5 Days'];\n      }\n      if (schedule.days  1) {\n        return RentalDurations['3 Days'];\n      }\n      if (schedule.days === 1) {\n        return RentalDurations['1 Day'];\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoUrlApiPipe.html":{"url":"injectables/GeoUrlApiPipe.html","title":"injectable - GeoUrlApiPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoUrlApiPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/geo-url-api.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create an address from the incoming RawCreateRentalDto and then use the HERE Geocoding & Searching API\nto get the coordinates of the address. The coordinates allow Rentals to be geospatially queried in a radius near a user or selected location; e.g. 8 mile radius\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createAddress\n                            \n                            \n                                    Async\n                                getCoordinates\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geoUrlApiUtil: GeoUrlApiUtil, appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/geo-url-api.pipe.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geoUrlApiUtil\n                                                  \n                                                        \n                                                                        GeoUrlApiUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(value)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:19\n                \n            \n\n\n            \n                \n                    summary: convert the location property object into a single address property string; will be passed to this.getCoordinates method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw form data inputed by user to create a new Rental listing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoordinates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoordinates(address: string, geoUrl: string, apiKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:31\n                \n            \n\n\n            \n                \n                    summary: request coordinates for the provided address\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the address to fetch coordinates for from the API\n\n                                    \n                                \n                                \n                                    geoUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url for accessing the API\n\n                                    \n                                \n                                \n                                    apiKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key for accessing the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawCreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:46\n                \n            \n\n\n            \n                \n                    summary: use the createAddress() and getCoordinates() methods to return the request data with coordinates and an address string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawCreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw request from a client to create a new Rental listing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { LocCreateRentalDto } from '../dto/createRental/loc-create-rental.dto';\nimport { RawCreateRentalDto } from '../dto/createRental/raw-create-rental-dto';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\n\n/**\n * **summary**: create an address from the incoming RawCreateRentalDto and then use the [**HERE Geocoding & Searching API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html)\n * to get the coordinates of the address. The coordinates allow Rentals to be geospatially queried in a radius near a user or selected location; e.g. 8 mile radius\n */\n@Injectable()\nexport class GeoUrlApiPipe {\n  constructor(private readonly geoUrlApiUtil: GeoUrlApiUtil, private readonly appConfig: AppConfigService) {}\n\n  /**\n   * **summary**: convert the location property object into a single address property string; will be passed to this.getCoordinates method\n   * @param value the raw form data inputed by user to create a new Rental listing\n   */\n  private async createAddress(value) {\n    // create address string from incoming vehicle.address document\n    const address: string = `${value.location.street} ${value.location.city} ${value.location.zip}`;\n    return address;\n  }\n\n  /**\n   * **summary**: request coordinates for the provided address\n   * @param address the address to fetch coordinates for from the API\n   * @param geoUrl the url for accessing the API\n   * @param apiKey the key for accessing the API\n   */\n  async getCoordinates(address: string, geoUrl: string, apiKey: string,\n  ) {\n    Logger.log(`geoUrl: ${process.env.GEO_URL}`);\n    const coords = await this.geoUrlApiUtil.getCoordinates(\n      address,\n      geoUrl,\n     apiKey\n    );\n    return coords;\n  }\n\n  /**\n   * **summary**: use the createAddress() and getCoordinates() methods to return the request data with coordinates and an address string\n   * @param value the raw request from a client to create a new Rental listing\n   */\n  async transform(value: RawCreateRentalDto):Promise {\n    const apiKey = process.env.GEO_API_KEY;\n    const geoUrl = process.env.GEO_URL;\n    try {\n      // create the address\n      const address = await this.createAddress(value);\n      // request the coordinates from the API\n      const coords = await this.getCoordinates(address, geoUrl, apiKey);\n      return { value, coords, address };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoUrlApiUtil.html":{"url":"injectables/GeoUrlApiUtil.html","title":"injectable - GeoUrlApiUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoUrlApiUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/utils/geo-url-api.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: use Geocoding & Search API to get coordinates for an address\n\n[Respose Object] = response.data.items[0]\n.title: the complete address as a string\n.address the complete address as an object\n.position: {lat: number, lng: number}\n.mapView: {west: -number, south: number, east: -number, north: number}\n\n\n\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoordinates\n                            \n                            \n                                    Private\n                                    Async\n                                makeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoordinates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoordinates(address, geoUrl, apiKey)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/geo-url-api.util.ts:43\n                \n            \n\n\n            \n                \n                    summary: returns an address as a single string, and the corresponding coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        replace the spaces in the address with + symbols for the api request\n\n                                    \n                                \n                                \n                                    geoUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url for the api\n\n                                    \n                                \n                                \n                                    apiKey\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key for the api\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            makeRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRequest(location, geoUrl, apiKey)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/geo-url-api.util.ts:25\n                \n            \n\n\n            \n                \n                    Send Geocoding & Search API request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    location\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the address string\n\n                                    \n                                \n                                \n                                    geoUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the base HERE geocoding and search v7 api url\n\n                                    \n                                \n                                \n                                    apiKey\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the api key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as axios from 'axios';\nimport { RawCoordinatesDto } from '../dto/createRental/raw-coordinates.dto';\n\n/**\n * **summary**: use [**Geocoding & Search API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html) to get coordinates for an address\n * - [Respose Object] = response.data.items[0]\n *  - .title: the complete address as a string\n *  - .address the complete address as an object\n *  - .position: {lat: number, lng: number}\n *  - .mapView: {west: -number, south: number, east: -number, north: number}\n * @param {string} address the address to request coordinates for\n * @param {string} geoUrl base url of the Geocoding and Search geocoding request\n * @param {string} apiKey Geocoding and Search v7 API Key\n * \n */\n@Injectable()\nexport class GeoUrlApiUtil {\n  /**\n   * Send Geocoding & Search API request\n   * @param location the address string\n   * @param geoUrl the base HERE geocoding and search v7 api url\n   * @param apiKey the api key\n   */\n  private async makeRequest(location, geoUrl, apiKey) {\n    try {\n      console.log(`Geocoding & Search API Request: ${geoUrl}?q=${location}&apiKey=${apiKey}`)\n      const request: any = await axios.default.get(\n        `${geoUrl}?q=${location}&apiKey=${apiKey}`,\n      );\n      return request;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: returns an address as a single string, and the corresponding coordinates\n   * @param address replace the spaces in the address with + symbols for the api request\n   * @param geoUrl the url for the api\n   * @param apiKey the key for the api\n   */\n  async getCoordinates(address, geoUrl, apiKey):Promise {\n    try {\n      const location: string = address.replace(/\\s+/g, '+');\n      // make the API request\n      console.log('location before the request')\n      console.log(location);\n      const response: any = await this.makeRequest(\n        location,\n        geoUrl,\n        apiKey\n      );\n      // grab the coordinates\n      const rawCoordinates: RawCoordinatesDto =\n        response.data.items[0].position;\n      // map the coords object to return\n      const coords: [number, number] = [\n        rawCoordinates.lat,\n        rawCoordinates.lng,\n      ];\n      return coords;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GivenNoticePipe.html":{"url":"injectables/GivenNoticePipe.html","title":"injectable - GivenNoticePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GivenNoticePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/given-notice.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: creates a Luxon Interval from the startTime and currentTime\nand then uses Luxon methods to validate the Given Notice is at least 1 hour in duration; this is the minimum allowed for any user\n\nLuxon is \"a powerful, modern, and friendly wrapper for Javacript dates and times\"\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createGivenNotice\n                            \n                            \n                                    Async\n                                transform\n                            \n                            \n                                    Private\n                                    Async\n                                validateRequestedTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createGivenNotice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGivenNotice(startTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:20\n                \n            \n\n\n            \n                \n                    summary: create the givenNotice property value, it must be at least one hour\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request start time of the rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawSearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:51\n                \n            \n\n\n            \n                \n                    summary: use the validateRequestedTime and createGivenNotice methods to return a GivenNoticeSearchRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawSearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request data to search for rentals\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateRequestedTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequestedTime(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:36\n                \n            \n\n\n            \n                \n                    summary: validate that the rental start time is not before the requested rental end time. The frontend of course has validation for this on the form,\nthis is just another level of validation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested time for the Rental to begin\n\n                                    \n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested time for the Rental to end\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { GivenNoticeSearchRentalDto } from '../dto/searchRental/given-notice-search-rental-dto';\nimport { RawSearchRentalDto } from '../dto/searchRental/raw-search-rental.dto';\nimport { DateTime } from 'luxon';\n/**\n * **summary**: creates a [**Luxon**](https://moment.github.io/luxon/) [**Interval**](https://moment.github.io/luxon/docs/manual/tour.html#intervals) from the startTime and currentTime\n * and then uses Luxon methods to validate the Given Notice is at least 1 hour in duration; this is the minimum allowed for any user\n * - Luxon is \"a powerful, modern, and friendly wrapper for Javacript dates and times\"\n */\n@Injectable()\nexport class GivenNoticePipe implements PipeTransform {\n\n  /**\n   * **summary**: create the **givenNotice** property value, it must be at least one hour\n   * @param startTime the request start time of the rental\n   */\n  private async createGivenNotice(startTime) {\n    const givenNotice: number = startTime.diffNow().toObject().milliseconds;\n    if (givenNotice >= 3600000) {\n      return givenNotice;\n    }\n    throw new Error(\n      'Sorry, you cannot request a rental less than an hour before it begins',\n    );\n  }\n\n  /**\n   * **summary**: validate that the rental start time is not before the requested rental end time. The frontend of course has validation for this on the form,\n   * this is just another level of validation.\n   * @param startTime the requested time for the Rental to begin\n   * @param endTime the requested time for the Rental to end\n   */\n  private async validateRequestedTime(startTime, endTime) {\n    if (startTime > endTime) {\n      throw new Error(\n        'The rental start time cannot be after the rental end time',\n      );\n    }\n    if (endTime.diff(startTime).toObject().milliseconds  {\n    try {\n      // make start and end time into DateTimes\n      const startTime: DateTime = DateTime.fromISO(\n        new Date(value.rentalStartTime).toISOString(),\n      );\n      const endTime: DateTime = DateTime.fromISO(\n        new Date(value.rentalEndTime).toISOString(),\n      );\n      await this.validateRequestedTime(startTime, endTime);\n      const givenNotice = await this.createGivenNotice(startTime);\n      const dto: GivenNoticeSearchRentalDto = {\n        address: value.address,\n        rentalStartTime: startTime,\n        rentalEndTime: endTime,\n        price: value.price ? value.price : null,\n        features: value.features ? value.features : null,\n        givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GivenNoticeSearchRentalDto.html":{"url":"classes/GivenNoticeSearchRentalDto.html","title":"class - GivenNoticeSearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GivenNoticeSearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/given-notice-search-rental-dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the GivenNoticePipe after processing a RawSearchRentalDto\n\nThe GivenNoticePipe added the 'givenNotice' property\npassed to the RentalDurationPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                price\n                            \n                            \n                                rentalEndTime\n                            \n                            \n                                rentalStartTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalEndTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalStartTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DateTime } from 'luxon';\n/**\n * **summary**: returned by the GivenNoticePipe after processing a RawSearchRentalDto\n * - The GivenNoticePipe added the 'givenNotice' property\n * - passed to the RentalDurationPipe\n */\nexport class GivenNoticeSearchRentalDto {\n  address: string;\n  rentalStartTime: DateTime;\n  rentalEndTime: DateTime;\n  price: number;\n  features: string[];\n  givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorFilter.html":{"url":"classes/HttpErrorFilter.html","title":"class - HttpErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-error.filter.ts\n        \n\n            \n                Description\n            \n            \n                \nException filters give full control over the exceptions layer\nAdd Logging\nControl exact flow of control and the content of the response sent\nThis filter is responsible for catching exceptions which are an instance of the HttpException\nGrants us access to the underlying platform 'Request' & 'Response' objects\n\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/http-error.filter.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  ArgumentsHost,\n  Logger,\n} from '@nestjs/common';\nimport { DateTime } from 'luxon';\n\n/**\n * - Exception filters give full control over the exceptions layer\n * - Add Logging\n * - Control exact flow of control and the content of the response sent\n * - This filter is responsible for catching exceptions which are an instance of the HttpException\n * - Grants us access to the underlying platform 'Request' & 'Response' objects\n */\n@Catch(HttpException)\nexport class HttpErrorFilter implements ExceptionFilter {\n  /**\n   * @param {} exception\n   * @param {ArgumentsHost} host\n   */\n  catch(exception: HttpException, host: ArgumentsHost) {\n    // note: access the appropriate underlying arguments for any execution context with ArgumentHost\n    const context = host.switchToHttp();\n    const request = context.getRequest();\n    const response = context.getResponse();\n    const status = exception.getStatus();\n\n    /**\n     * error responses\n     */\n    const errorResponse = {\n      http_code: status,\n      timestamp: DateTime.local(),\n      path: request.url,\n      method: request.method,\n      message: exception.message.error || exception.message || null,\n    };\n\n    /**\n     * error logging\n     */\n    Logger.error(\n      `${request.method} ${request.url}`,\n      JSON.stringify(errorResponse),\n      'ExceptionFilter',\n    );\n\n    /**\n     * take direct control of the response with the json method\n     */\n    response.status(status).json(errorResponse);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageDto.html":{"url":"classes/ImageDto.html","title":"class - ImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the dto for identifying an image to take an action on\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageDto {\n    _id: string; // id of an Image\n    location: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageInterface.html":{"url":"interfaces/ImageInterface.html","title":"interface - ImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/modelInterface/image.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the Image Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucket\n                                \n                                \n                                        category\n                                \n                                \n                                        etag\n                                \n                                \n                                        key\n                                \n                                \n                                        location\n                                \n                                \n                                        rental_id\n                                \n                                \n                                        size\n                                \n                                \n                                        user_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rental_id\n                                    \n                                \n                                \n                                    \n                                        rental_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageInterface{\n    user_id: string;\n    rental_id: string;\n    bucket: string;\n    key: string;\n    etag: string;\n    category: string;\n    size: string;\n    location: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageQueryResultsDto.html":{"url":"classes/ImageQueryResultsDto.html","title":"class - ImageQueryResultsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageQueryResultsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image-query-results.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the dto for data returned from a request to find Rental or Profile images\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                images\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-query-results.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-query-results.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageQueryResultsDto {\n    count: number;\n    images: any;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageUploadDto.html":{"url":"classes/ImageUploadDto.html","title":"class - ImageUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image-upload.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: dto for uploading images to AWS\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Body\n                            \n                            \n                                Bucket\n                            \n                            \n                                Key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-upload.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-upload.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-upload.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageUploadDto {\n    Bucket: string; // bucket name and folder\n    Key: string; // file name\n    Body: string; // buffer\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagesController.html":{"url":"controllers/ImagesController.html","title":"controller - ImagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/controller/images.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                images\n            \n\n            \n                Description\n            \n            \n                summary: controller for managing images in the application\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllProfileImages\n                            \n                            \n                                    Async\n                                deleteAllRentalImages\n                            \n                            \n                                    Async\n                                deleteRentalImages\n                            \n                            \n                                    Async\n                                findProfileImage\n                            \n                            \n                                    Async\n                                findProfileImages\n                            \n                            \n                                    Async\n                                findRentalImage\n                            \n                            \n                                    Async\n                                findRentalImages\n                            \n                            \n                                    Async\n                                uploadProfileImage\n                            \n                            \n                                    Async\n                                uploadRentalImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllProfileImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllProfileImages(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-all-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:116\n                \n            \n\n\n            \n                \n                    Delete All Profile Images\nSummary: Delete all of the user's profile images\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllRentalImages(params, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-all-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:107\n                \n            \n\n\n            \n                \n                    Delete all Rental Images\nSummary: delete all images for a selected rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRentalImages(images: ImageDto[], req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:98\n                \n            \n\n\n            \n                \n                    Delete Rental Images\nSummary: Delete a single or multiple images of a rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    images\n                                    \n                                                ImageDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfileImage(req, image: ImageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-profile-image')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:88\n                \n            \n\n\n            \n                \n                    Find Profile Image\nSummary: Find a user profile image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request object\n\n                                    \n                                \n                                \n                                    image\n                                    \n                                                ImageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfileImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfileImages(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:78\n                \n            \n\n\n            \n                \n                    Find Profile Images\nSummary: Find a user profile image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRentalImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRentalImage(params: ImageDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-rental-image')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:68\n                \n            \n\n\n            \n                \n                    Find Rental Image\nSummary: Find a vehicle image by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ImageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRentalImages(params, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:58\n                \n            \n\n\n            \n                \n                    Finad Rental Images\nSummary: Find all of a rentals images\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object, which has a user property\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadProfileImage(req, res, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:42\n                \n            \n\n\n            \n                \n                    Upload Profile Images\nSummary: Upload a single or multiple profile photos to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadRentalImages(req, res, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:26\n                \n            \n\n\n            \n                \n                    Upload a single or multiple rental photos to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards, Body, Get, Query, Res } from '@nestjs/common';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { JwtAuthGuard } from '../../auth/gaurds/jwt-auth.guard';\nimport { ImagesService } from '../service/images.service';\nimport { response } from 'express';\nimport { profile, rentals } from '../../common/Const';\nimport { ImageDto } from '../dto/image.dto';\n/**\n * **summary**: controller for managing images in the application\n */\n@UseGuards(JwtAuthGuard)\n@Controller('images')\nexport class ImagesController {\n    constructor(\n        private readonly imagesService: ImagesService,\n        private readonly appConfig: AppConfigService,\n    ) { }\n\n    /**\n     * Upload a single or multiple rental photos to be saved\n     * @param files fieldName\n     * @param maxCount maxCount\n     * @param options option\n     */\n    @Post('upload-rental-images')\n    async uploadRentalImages(@Req() req, @Res() res, @Query() params) {\n        try {\n            await this.imagesService.fileuploadAndSave(req, res, rentals, params.rental_id, this.imagesService.saveImages)\n        } catch (err) {\n            return response\n                .status(500)\n                .json(`Failed to upload image file: ${err.message}`);\n        }\n    }\n\n    /**\n     * Upload Profile Images\n     * Summary: Upload a single or multiple profile photos to be saved\n     * @param files fieldName\n     */\n    @Post('upload-profile-images')\n    async uploadProfileImage(@Req() req, @Res() res, @Query() params) {\n        try {\n            await this.imagesService.fileuploadAndSave(req, res, profile, params.rental_id, this.imagesService.saveImages)\n        } catch (err) {\n            return response\n                .status(500)\n                .json(`Failed to upload image file: ${err.message}`);\n        }\n    }\n\n    /**\n     * Finad Rental Images\n     * Summary: Find all of a rentals images\n     * @param req the request object, which has a user property\n     */\n    @Get('find-rental-images')\n    async findRentalImages(@Query() params, @Req() req) {\n        return await this.imagesService.findRentalImages(null, params.rental_id, req.user);\n    }\n\n    /**\n     * Find Rental Image\n     * Summary: Find a vehicle image by id\n     * @param image the id of the image to find\n     */\n    @Get('find-rental-image')\n    async findRentalImage(@Query() params: ImageDto, @Req() req) {\n        return await this.imagesService.findRentalImages(params._id, null, req.user);\n    }\n\n    /**\n     * Find Profile Images\n     * Summary: Find a user profile image\n     * @param req request object\n     */\n    @Get('find-profile-images')\n    async findProfileImages(@Req() req) {\n        return await this.imagesService.findProfileImages(req.user);\n    }\n\n    /**\n     * Find Profile Image\n     * Summary: Find a user profile image\n     * @param req request object\n     */\n    @Get('find-profile-image')\n    async findProfileImage(@Req() req, @Body() image: ImageDto) {\n        return await this.imagesService.findProfileImages(req.user, image._id);\n    }\n\n    /**\n     * Delete Rental Images\n     * Summary: Delete a single or multiple images of a rental\n     * @param category both or a single one\n     */\n    @Post('delete-images')\n    async deleteRentalImages(@Body() images: ImageDto[], @Req() req) {\n        return await this.imagesService.deleteImages(images, req.user);\n    }\n\n    /**\n     * Delete all Rental Images\n     * Summary: delete all images for a selected rental\n     */\n    @Post('delete-all-rental-images')\n    async deleteAllRentalImages(@Query() params, @Req() req) {\n        return await this.imagesService.deleteAllImages(req.user, params.rental_id);\n    }\n\n   /**\n    * Delete All Profile Images\n    * Summary: Delete all of the user's profile images\n    */\n   @Post('delete-all-profile-images')\n   async deleteAllProfileImages(@Req() req) {\n        return await this.imagesService.deleteAllImages(req.user, null);\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagesModule.html":{"url":"modules/ImagesModule.html","title":"module - ImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_ImagesModule_imports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nAppConfigModule->ImagesModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nImagesModule -->\n\nDatabaseModule->ImagesModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nImagesModule -->\n\nAppConfigService->ImagesModule\n\n\n\n\n\nCreateMulterUploadUtil\n\nCreateMulterUploadUtil\n\nImagesModule -->\n\nCreateMulterUploadUtil->ImagesModule\n\n\n\n\n\nDeleteS3ImagesUtil\n\nDeleteS3ImagesUtil\n\nImagesModule -->\n\nDeleteS3ImagesUtil->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nMulterUploadUtil\n\nMulterUploadUtil\n\nImagesModule -->\n\nMulterUploadUtil->ImagesModule\n\n\n\n\n\nProcessSaveDataUtil\n\nProcessSaveDataUtil\n\nImagesModule -->\n\nProcessSaveDataUtil->ImagesModule\n\n\n\n\n\nS3Provider\n\nS3Provider\n\nImagesModule -->\n\nS3Provider->ImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/images/images.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: contians all of the functionality for managing images in the application\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            CreateMulterUploadUtil\n                        \n                        \n                            DeleteS3ImagesUtil\n                        \n                        \n                            ImagesService\n                        \n                        \n                            MulterUploadUtil\n                        \n                        \n                            ProcessSaveDataUtil\n                        \n                        \n                            S3Provider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { AppConfigService } from '../config/configuration.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { ImagesController } from './controller/images.controller';\nimport { S3Provider } from './providers/s3.provider';\nimport { ImageSchema } from './schema/images.schema';\nimport { ImagesService } from './service/images.service';\nimport { CreateMulterUploadUtil } from './util/create-multer-upload.util';\nimport { DeleteS3ImagesUtil } from './util/delete-s3-images.util';\nimport { MulterUploadUtil } from './util/multer-upload.util';\nimport { ProcessSaveDataUtil } from './util/process-save-data.util';\n/**\n * **summary**: contians all of the functionality for managing images in the application\n */\n@Module({\n    imports: [\n        DatabaseModule,\n        MongooseModule.forFeature([{ name: 'Images', schema: ImageSchema }]),\n        AppConfigModule,\n    ],\n    controllers: [ImagesController],\n    providers: [\n        ImagesService,\n        AppConfigService,\n        ProcessSaveDataUtil,\n        S3Provider,\n        CreateMulterUploadUtil,\n        MulterUploadUtil,\n        DeleteS3ImagesUtil,\n    ],\n    exports: [ImagesService]\n\n})\nexport class ImagesModule {\n    constructor() {\n        ImageSchema.index({ rental_id: 1 });\n        ImageSchema.index({ user_id: 1 });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/service/images.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: contains all of the functionality for uploading and managing photos in the application.\n\nnote: for security, user_id is required for all queries to verify the queried images belong to the requesting user.\nthis makes queries slightly less selective and less efficient, but more secure.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAllImages\n                            \n                            \n                                deleteImages\n                            \n                            \n                                fileuploadAndSave\n                            \n                            \n                                findProfileImages\n                            \n                            \n                                findRentalImages\n                            \n                            \n                                s3\n                            \n                            \n                                saveImages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imagesModel: Model, appConfig: AppConfigService, processSaveDataUtil: ProcessSaveDataUtil, s3Provider: S3Provider, createMulterUploadUtil: CreateMulterUploadUtil, multerUploadUtil: MulterUploadUtil, deleteS3ImagesUtil: DeleteS3ImagesUtil)\n                    \n                \n                        \n                            \n                                Defined in src/images/service/images.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imagesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processSaveDataUtil\n                                                  \n                                                        \n                                                                        ProcessSaveDataUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createMulterUploadUtil\n                                                  \n                                                        \n                                                                        CreateMulterUploadUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        multerUploadUtil\n                                                  \n                                                        \n                                                                        MulterUploadUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteS3ImagesUtil\n                                                  \n                                                        \n                                                                        DeleteS3ImagesUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAllImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:126\n                            \n                        \n\n                \n                    \n                        summary: delete all images of the selected rental or profile from the S3 bucket and database\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user_id\n                                                        \n                                                                used to locate the user's photos as well as verify they belong to them\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the id of the rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:106\n                            \n                        \n\n                \n                    \n                        sumamry: Delete a single or multiple of a user's selected images from the S3 Bucket and database\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        category\n                                                        \n                                                                the images category; rentals or profile\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                used to verify the photos belong to the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileuploadAndSave\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:145\n                            \n                        \n\n                \n                    \n                        summary: send the file(s) to the bucket and attach a timestamp to each filename\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        req\n                                                        \n                                                                the request\n\n                                                        \n                                                \n                                                \n                                                        res\n                                                        \n                                                                the response\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                rentals or profile\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the rental_id for rental image uploads\n\n                                                        \n                                                \n                                                \n                                                        saveImages\n                                                        \n                                                                the images.service.saveImages method\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findProfileImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:86\n                            \n                        \n\n                \n                    \n                        summary: query multiple profile images by user_id and profile category, or find a specific profile photo by id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                the user property of the request object\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findRentalImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:64\n                            \n                        \n\n                \n                    \n                        summary: query multiple rental images by userId and rental_id. The userId\nis just to ensure only the user's photos are returned and not another user's rental images\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                the user property of the request object\n\n                                                        \n                                                \n                                                \n                                                        img_id\n                                                        \n                                                                id of an image; if provided only this image will be found\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the id of the rental\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                used to verify the image belongs to the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:42\n                            \n                        \n\n                \n                    \n                        summary: saves AWS uploaded images to the database. This method is passed as an argument to the fileUploadAndSave method \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        files\n                                                        \n                                                                array of files\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                rentals / profile\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                user id to associate with the image\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                id of the rental (if it's a rental image): Check for null\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger, Req, Res } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ImageInterface } from '../interface/modelInterface/image.interface';\nimport { Model } from 'mongoose';\nimport { JwtPayloadDto } from '../../auth/dto/jwt-payload';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { profile } from '../../common/Const';\nimport { ImageDto } from '../dto/image.dto';\nimport { ProcessSaveDataUtil } from '../util/process-save-data.util';\nimport { ProcessedSaveDataDto } from '../dto/processed-save-data.dto';\nimport { S3Provider } from '../providers/s3.provider';\nimport { CreateMulterUploadUtil } from '../util/create-multer-upload.util';\nimport { MulterUploadUtil } from '../util/multer-upload.util';\nimport { ImageQueryResultsDto } from '../dto/image-query-results.dto';\nimport { DeleteS3ImagesUtil } from '../util/delete-s3-images.util';\n/**\n * **summary**: contains all of the functionality for uploading and managing photos in the application.\n * - note: for security, user_id is required for all queries to verify the queried images belong to the requesting user.\n * this makes queries slightly less selective and less efficient, but more secure.\n */\n@Injectable()\nexport class ImagesService {\n\n  constructor(\n    @InjectModel('Images') private readonly imagesModel: Model,\n    private readonly appConfig: AppConfigService,\n    private readonly processSaveDataUtil: ProcessSaveDataUtil,\n    private readonly s3Provider: S3Provider,\n    private readonly createMulterUploadUtil: CreateMulterUploadUtil,\n    private readonly multerUploadUtil: MulterUploadUtil,\n    private readonly deleteS3ImagesUtil: DeleteS3ImagesUtil,\n  ) { }\n  s3 = this.s3Provider.getS3();\n\n  /**\n   * **summary**: saves AWS uploaded images to the database. This method is passed as an argument to the fileUploadAndSave method \n   * @param files array of files\n   * @param category rentals / profile\n   * @param {string} user_id user id to associate with the image\n   * @param {string | null} rental_id id of the rental (if it's a rental image): Check for null\n   */\n  saveImages = async (files, category, user_id, rental_id, model) => {\n    try {\n      const { packet, image }: ProcessedSaveDataDto = await this.processSaveDataUtil.process(files, user_id, rental_id, category);\n      let flag;\n      packet === null ? flag = 'single' : flag = 'multiple';\n      if (flag === 'multiple') {\n        return await model.insertMany(packet);\n      }\n      return await model.save(image)\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: query multiple rental images by userId and rental_id. The userId\n   * is just to ensure only the user's photos are returned and not another user's rental images\n   * @param user the user property of the request object\n   * @param img_id id of an image; if provided only this image will be found\n   * @param rental_id the id of the rental\n   * @param user_id used to verify the image belongs to the requesting user\n   */\n  findRentalImages = async (img_id: string | null, rental_id: string | null, user: JwtPayloadDto): Promise => {\n    // img_id given from findVehicleImage endpoint\n    try {\n      let flag;\n      img_id !== null ? flag = 'single' : flag = 'multiple';\n      // find multiple images\n      if (flag === 'multiple') {\n        const images = await this.imagesModel.find({ rental_id: rental_id, user_id: user.userId });\n        return { count: images.length, images: images }\n      }\n      // find a specific image\n      const image = await this.imagesModel.findById(img_id);\n      return { count: 1, images: image }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: query multiple profile images by user_id and profile category, or find a specific profile photo by id\n   * @param user the user property of the request object\n   */\n  findProfileImages = async (user: JwtPayloadDto, img_id?: string) => {\n    try {\n      let flag;\n      img_id ? flag = 'single' : flag = 'multiple';\n      if (flag === 'multiple') {\n        const images = await this.imagesModel.find({ user_id: user.userId })\n        return { count: images.length, images: images };\n      };\n      const image = await this.imagesModel.findById(img_id);\n      return { count: 1, images: image }\n    } catch (err) {\n      throw new Error(err)\n    }\n  }\n\n  /**\n   * **sumamry**: Delete a single or multiple of a user's selected images from the S3 Bucket and database\n   * @param category the images category; rentals or profile\n   * @param user_id used to verify the photos belong to the requesting user\n   */\n  deleteImages = async (images: ImageDto[], user: JwtPayloadDto) => {\n    try {\n      if (images && images.length > 0) {\n        if (images.length === 1) {\n          await this.deleteS3ImagesUtil.deleteS3Image(images, user);\n          return await this.imagesModel.deleteOne({ _id: images[0]._id, user_id: user.userId });\n        }\n        const ids = await this.deleteS3ImagesUtil.deleteS3Images(images, user);\n        return await this.imagesModel.deleteMany({ _id: { $in: ids }, user_id: user.userId })\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: delete all images of the selected rental or profile from the S3 bucket and database\n   * @param user_id used to locate the user's photos as well as verify they belong to them\n   * @param rental_id the id of the rental\n   */\n  deleteAllImages = async (user: JwtPayloadDto, rental_id: string) => {\n    // delete all images of the selected rental\n    if (user && rental_id !== null) {\n      return await this.imagesModel.deleteMany({ rental_id: rental_id, user_id: user.userId });\n    }\n    // delete all of the user's profile images\n    if (user && rental_id === null) {\n      return await this.imagesModel.deleteMany({ user_id: user.userId, category: profile });\n    }\n  }\n\n  /**\n   * **summary**: send the file(s) to the bucket and attach a timestamp to each filename\n   * @param req the request\n   * @param res the response\n   * @param category rentals or profile\n   * @param rental_id the rental_id for rental image uploads\n   * @param saveImages the images.service.saveImages method\n   */\n  fileuploadAndSave = async (req, res, category, rental_id, saveimages) => {\n    try {\n      // create a multer upload\n      const user: JwtPayloadDto = req.user;\n      const multerUpload = await this.createMulterUploadUtil.create(req, category)\n      // Upload the image(s)\n      const model = this.imagesModel;\n      await this.multerUploadUtil.upload(req, res, multerUpload, saveimages, category, user, rental_id, model);\n    } catch (err) {\n      return res.status(500).json(`Failed to upload image file: ${err}`)\n    }\n  }\n\n  // Get Presigned Url to download file\n  /**\n   * @param originalname file name\n   * @param bucket location of the photo\n  private getSingedUrl = async (bucket, originalname) => {\n    const s3 = this.s3;\n    const params = {\n      Bucket: bucket,\n      Key: originalname,\n      Expires: 60 * 60, //1 hour\n    };\n    try {\n      const url = await new Promise((resolve, reject) => {\n        s3.getSignedUrl('getObject', params, (err, url) => {\n          err ? reject(err) : resolve(url);\n        });\n      });\n      Logger.log(url)\n      return url;\n    } catch (err) {\n      if (err) {\n        throw new Error(err);\n      }\n    }\n  }\n  */\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/joi-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: this class accepts a joi validationSchema when instantiated. It will validate an incoming value against the provided validation schema\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: Schema)\n                    \n                \n                        \n                            \n                                Defined in src/common/pipes/joi-validation.pipe.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        Schema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/joi-validation.pipe.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport { Schema } from '@hapi/joi';\n\n/**\n * **summary**: this class accepts a joi validationSchema when instantiated. It will validate an incoming value against the provided validation schema\n */\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private readonly schema: Schema) {}\n\n  transform(value: any) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      Logger.error(error);\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/gaurds/jwt-auth.guard.ts\n        \n\n            \n                Description\n            \n            \n                summary: the guard that calls the Passport jwt-strategy\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n/**\n * **summary**: the guard that calls the [**Passport jwt-strategy**](http://www.passportjs.org/packages/passport-jwt/)\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtPayloadDto.html":{"url":"classes/JwtPayloadDto.html","title":"class - JwtPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/jwt-payload.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for a decoded JWT\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/jwt-payload.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/jwt-payload.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/jwt-payload.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class JwtPayloadDto { \n    username: string;\n    email: string; \n    userId: string;\n    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                summary: Passport Jwt-Strategy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n                    summary: return the decoded payload of the JWT\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwtConstants } from '../constant';\nimport { Request } from 'express'\n/**\n * **summary**: [**Passport Jwt-Strategy**](http://www.passportjs.org/packages/passport-jwt/)\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      // read JWT from the Cookie Header\n      jwtFromRequest: ExtractJwt.fromExtractors([(request: Request) => {\n        return request?.cookies?.Authentication;\n      }]),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  /**\n   * **summary**: return the decoded payload of the JWT\n   * @param payload \n   */\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username, email: payload.email };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocCreateRentalDto.html":{"url":"classes/LocCreateRentalDto.html","title":"class - LocCreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocCreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/loc-create-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: contains the initial data submitted by a user to create a new rental listing. It also\ncontains the raw location information as a single \"address\" string ad the coordinates for the address\n\npassed to the MapNewRentalPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                coords\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RawCreateRentalDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RawCreateRentalDto } from './raw-create-rental-dto';\n/**\n * **summary**: contains the initial data submitted by a user to create a new rental listing. It also\n * contains the raw location information as a single \"address\" string ad the coordinates for the address\n * - passed to the MapNewRentalPipe\n */\nexport class LocCreateRentalDto {\n  value: RawCreateRentalDto;\n  coords: [number, number];\n  address: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/gaurds/local-auth.guard.ts\n        \n\n            \n                Description\n            \n            \n                summary: the guard the calls the Passport local-strategy\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n/**\n * **summary**: the guard the calls the [**Passport local-strategy**](http://www.passportjs.org/packages/passport-local/)\n */\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:21\n                \n            \n\n\n            \n                \n                    summary: every passport strategy calls the validate method (which calls the validateUser function in the auth.service) for any strategy. \nif the user is found, Passport will create a user property on the request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user email\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super({usernameField: 'email' }); // use email instead of username\n    }\n\n    /**\n     * **summary**: every passport strategy calls the validate method (which calls the validateUser function in the auth.service) for any strategy. \n     * if the user is found, Passport will create a user property on the request object\n     * @param email the user email\n     * @param password the user password\n     */\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validateUser(email, password);\n        if (!user) {\n            throw new Error('invalid credentials');\n            // throw new UnauthorizedException('invalid credentials');\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoggedOutGaurd.html":{"url":"guards/LoggedOutGaurd.html","title":"guard - LoggedOutGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoggedOutGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/gaurds/logged-out.guard.ts\n            \n\n                \n                Description\n                \n                \n                    summary: override the JWT expiration time and 'logout' a user by adding their JWT to a Redis cache 'dead-list'\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkDeadList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(redisService: RedisService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/gaurds/logged-out.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/gaurds/logged-out.guard.ts:38\n                \n            \n\n\n            \n                \n                    summary: method that decides if the request will continue to the handler or be blocked \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the execution context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            checkDeadList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDeadList(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/gaurds/logged-out.guard.ts:17\n                \n            \n\n\n            \n                \n                    summary: this is where we use redis to check the incoming jwt by it's last 8 digits. If the user's JWT is on the 'dead-list'\nthey are no longer authorized to make requests before logging in again\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { Observable } from \"rxjs\";\nimport { RedisService } from \"src/redis/service/redis.service\";\n/**\n * **summary**: override the JWT expiration time and 'logout' a user by adding their JWT to a Redis cache 'dead-list'\n */\n@Injectable()\nexport class LoggedOutGaurd implements CanActivate {\n    constructor(private readonly redisService: RedisService) {}\n\n    /**\n     * **summary**: this is where we use redis to check the incoming jwt by it's last 8 digits. If the user's JWT is on the 'dead-list'\n     * they are no longer authorized to make requests before logging in again\n     * @param req the request object\n     */\n    private async checkDeadList(req: Request): Promise {\n        // grab the key from the incoming jwt\n        const rawAuth = req.headers.cookie;\n        console.log(rawAuth);\n        const key = rawAuth.slice(-8);\n        const check = await this.redisService.get(key);\n        console.log(`LOGGED-OUT Guard Check Results: `);\n        console.log(check)\n        // if the key is found, deny access; User is Logged Out\n        if (check && check !== null) {\n            throw new Error('You are logged out, log back in to continue');\n            // REDIRECT to login\n        }\n        console.log('You are logged in :)')\n        return true;\n    }\n\n    /**\n     * **summary**: method that decides if the request will continue to the handler or be blocked \n     * @param context the execution context\n     */\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        const request = context.switchToHttp().getRequest();\n        return this.checkDeadList(request);\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logging-interceptor.ts\n        \n\n            \n                Description\n            \n            \n                summary: Interceptors capabilities:\n\nwraps the request/response stream so we can bind extra logic before / after method execution\ntransform the result returned from a function\nextend the basic function behavior\ncompletely override a function depending on specific conditions\nAspect Interception: log user interaction (e.g. storing user calls, async dispatching events, calculating a timestamp)\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logging-interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DateTime } from 'luxon';\n\n/**\n * **summary**: Interceptors capabilities:\n * - wraps the request/response stream so we can bind extra logic before / after method execution\n * - transform the result returned from a function\n * - extend the basic function behavior\n * - completely override a function depending on specific conditions\n * - Aspect Interception: log user interaction (e.g. storing user calls, async dispatching events, calculating a timestamp)\n */\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n\n    const req = context.switchToHttp().getRequest();\n    const method = req.method;\n    const url = req.url;\n    const now = DateTime.local();\n\n    return next.handle().pipe(\n      // calls Logger method upon graceful or exceptional termination of the observable stream\n      tap(err => {\n        Logger.log(\n          `${method} ${url} Date: ${now.month}/${now.day} Time: ${now.hour}:${\n            now.minute\n          }:${now.second}`,\n          `${context.getClass().name}.${context.getHandler().name}`,\n        );\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginDto.html":{"url":"injectables/LoginDto.html","title":"injectable - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: user credentials for logging into the application\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: user credentials for logging into the application\n */\n@Injectable()\nexport class LoginDto {\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for logging in a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pass\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    username: string;\n    pass: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailOptionsInterface.html":{"url":"interfaces/MailOptionsInterface.html","title":"interface - MailOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/interface/mailoptions.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: the mail options for the gmail NodeMailer\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        html\n                                \n                                \n                                        subject\n                                \n                                \n                                        text\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MailOptionsInterface {\n    from: string;\n    to: string;\n    subject: string;\n    text: string;\n    html: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapNewRentalPipe.html":{"url":"injectables/MapNewRentalPipe.html","title":"injectable - MapNewRentalPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapNewRentalPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/map-new-rental.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create the final CreateRentalDto that will be passed to the rental.service.createRental() method\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: LocCreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/map-new-rental.pipe.ts:13\n                \n            \n\n\n            \n                \n                    summary: transform the raw data into a CreateRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LocCreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request to create a rental with all of the necessary raw data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { LocCreateRentalDto } from '../dto/createRental/loc-create-rental.dto';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\n/**\n * **summary**: create the final CreateRentalDto that will be passed to the rental.service.createRental() method\n */\n@Injectable()\nexport class MapNewRentalPipe implements PipeTransform {\n  /**\n   * **summary**: transform the raw data into a CreateRentalDto\n   * @param value the request to create a rental with all of the necessary raw data\n   */\n  async transform(value: LocCreateRentalDto) {\n    try {\n      const data: CreateRentalDto = {\n        rentalDescription: 'this is a tokyo grocery getter',\n        address: value.address,\n        specs: value.value.specs,\n        registration: value.value.registration,\n        features: value.value.features,\n        scheduling: value.value.scheduling,\n        pricing: value.value.pricing,\n        loc: {\n          type: 'Point',\n          coordinates: value.coords,\n        },\n        photos: value.value.photos,\n        listed: value.value.listed,\n      };\n      return data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterUploadUtil.html":{"url":"injectables/MulterUploadUtil.html","title":"injectable - MulterUploadUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MulterUploadUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/multer-upload.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: upload a single or multiple files as a multerUpload\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/multer-upload.util.ts:19\n                            \n                        \n\n                \n                    \n                        summary: upload the provided files with the multerUpload object\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        req\n                                                        \n                                                                the client request\n\n                                                        \n                                                \n                                                \n                                                        res\n                                                        \n                                                                the response\n\n                                                        \n                                                \n                                                \n                                                        multerUpload\n                                                        \n                                                                uploader\n\n                                                        \n                                                \n                                                \n                                                        saveImages\n                                                        \n                                                                this.saveImages() method to save the uploaded image data\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                the image category: rentals || profile\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                        \n                                                                the user\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                id of the rental if this is a rental images upload\n\n                                                        \n                                                \n                                                \n                                                        model\n                                                        \n                                                                the database model which the this.saveImages() method will save images to\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: upload a single or multiple files as a multerUpload\n */\n@Injectable()\nexport class MulterUploadUtil {\n\n    /**\n     * **summary**: upload the provided files with the multerUpload object\n     * @param req the client request\n     * @param res the response\n     * @param multerUpload uploader\n     * @param saveImages this.saveImages() method to save the uploaded image data\n     * @param category the image category: rentals || profile\n     * @param user the user\n     * @param rental_id id of the rental if this is a rental images upload\n     * @param model the database model which the this.saveImages() method will save images to\n     */\n    upload = async (req, res, multerUpload, saveImages, category, user, rental_id, model): Promise => {\n        try {\n            await multerUpload(req, res, function (err) {\n                if (err) {\n                    console.log(err);\n                    return res.status(404).json(`Failed to upload image file: ${err}`);\n                }\n                // Save the Images\n                console.log(user)\n                saveImages(req.files, category, user.userId, rental_id, model);\n                return res.status(201).json(req.files[0].location);\n            });\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PositiveNumber.html":{"url":"injectables/PositiveNumber.html","title":"injectable - PositiveNumber","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PositiveNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/util/positive-number.ts\n        \n\n            \n                Description\n            \n            \n                summary: confirm the provided number is positive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/util/positive-number.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * **summary**: confirm the provided number is positive\n */\n@Injectable()\nexport class PositiveNumber {\n    validate = (data: number) => {\n        if (Math.sign(data) === -1) {\n            return false;\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PricingDto.html":{"url":"classes/PricingDto.html","title":"class - PricingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PricingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/pricing/pricing.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: edit the pricing of a rental\n\npassed to the rental.service.editPricing method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                discounts\n                            \n                            \n                                price\n                            \n                            \n                                rentalId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PricingDto {\n    rentalId: string;\n    price: number | null;\n    discounts: {\n        weekly: number | null;\n        monthly: number | null;\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PricingPipe.html":{"url":"injectables/PricingPipe.html","title":"injectable - PricingPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PricingPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/pricing.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate incoming price and discounts and map data into a PricingDto before sending to handler\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mapPricingDto\n                            \n                            \n                                    Private\n                                validatePricingDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: PricingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/pricing.pipe.ts:51\n                \n            \n\n\n            \n                \n                    summary: use the validatePricingDto() and mapPricingDto() methods to prepare the data for the request handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw request from a user to update the pricing of a Rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapPricingDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/pricing.pipe.ts:35\n                            \n                        \n\n                \n                    \n                        summary: map the final values of the PricingDto before passing to the handler\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        [object Object]\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validatePricingDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/pricing.pipe.ts:14\n                            \n                        \n\n                \n                    \n                        summary: validate the price and discounts do not have negative values nor violate common sense\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                the raw user request to update the Rental's pricing\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform} from '@nestjs/common';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\n\n/**\n * **summary**: validate incoming price and discounts and map data into a PricingDto before sending to handler\n */\n@Injectable()\nexport class PricingPipe implements PipeTransform {\n\n    /**\n     * **summary**: validate the price and discounts do not have negative values nor violate common sense\n     * @param data the raw user request to update the Rental's pricing\n     */\n    private validatePricingDto = async (data: PricingDto) => {\n        const minPrice: number = parseInt(process.env.MIN_PRICE, 10);\n        // check rentalId\n        if (!data.rentalId || (typeof data.rentalId !== 'string')) {\n            throw new Error('Invalid rentalID');\n        }\n        // check price is not negative && >= 9\n        if (Math.sign(data.price) === -1 || data.price  data.price) ||\n            (Math.sign(data.discounts.monthly) === -1 || data.discounts.monthly > data.price)) {\n            throw new Error('Discounts cannot be negative or greater than the price');\n        }\n    }\n\n    /**\n     * **summary**: map the final values of the PricingDto before passing to the handler\n     * @param \n     */\n    private mapPricingDto = async (data: PricingDto) => {\n        const value: PricingDto = {\n            rentalId: data.rentalId,\n            price: data.price ? data.price : null,\n            discounts: {\n                weekly: data.discounts.weekly ? data.discounts.weekly : null,\n                monthly: data.discounts.monthly ? data.discounts.monthly : null,\n            },\n        };\n        return value;\n    }\n\n    /**\n     * **summary**: use the validatePricingDto() and mapPricingDto() methods to prepare the data for the request handler\n     * @param value the raw request from a user to update the pricing of a Rental\n     */\n    async transform(value: PricingDto) {\n        try {\n            await this.validatePricingDto(value);\n            const data: PricingDto = await this.mapPricingDto(value);\n            return data;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessRentalTimeDto.html":{"url":"classes/ProcessRentalTimeDto.html","title":"class - ProcessRentalTimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessRentalTimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/process-rental-time.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the GenerateRentalDurationEnumUtil.processRentalTime() method\n\nthis dto is used to generate a RentalDuration Enum to represent this rentals scheduled duration; i.e. days, weeks, months\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                days\n                            \n                            \n                                months\n                            \n                            \n                                weeks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            days\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            months\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weeks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessRentalTimeDto {\n    months: number;\n    weeks: number;\n    days: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessSaveDataUtil.html":{"url":"injectables/ProcessSaveDataUtil.html","title":"injectable - ProcessSaveDataUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessSaveDataUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/process-save-data.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: utility to process the save image request data before passing it to the handler\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            process\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/process-save-data.util.ts:17\n                            \n                        \n\n                \n                    \n                        summary: create a new Image Document or an array of Image Documents to be saved\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        files\n                                                        \n                                                                the incoming file(s) to be saved\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                the user id\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the rental id\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                the category of the image: rentals or photos\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ImageInterface } from \"../interface/modelInterface/image.interface\";\nimport { ProcessedSaveDataDto } from \"../dto/processed-save-data.dto\";\n/**\n * **summary**: utility to process the save image request data before passing it to the handler\n */\n@Injectable()\nexport class ProcessSaveDataUtil {\n\n  /**\n   * **summary**: create a new Image Document or an array of Image Documents to be saved\n   * @param files the incoming file(s) to be saved\n   * @param user_id the user id\n   * @param rental_id the rental id\n   * @param category the category of the image: rentals or photos\n   */\n  process = async (files, user_id, rental_id, category): Promise => {\n    if (files && files.length > 0) {\n      // single file\n      if (files.length === 1) {\n        const temp = files[0];\n        const image: ImageInterface = {\n          user_id: user_id,\n          rental_id: rental_id,\n          bucket: temp.bucket,\n          key: temp.key,\n          etag: temp.etag,\n          category: category,\n          size: temp.size,\n          location: temp.location\n        }\n       return {packet: null, image: image}\n\n      }\n      // multiple files\n      const packet = files.map(item => {\n        const image: ImageInterface = {\n          user_id: user_id,\n          rental_id: rental_id,\n          bucket: item.bucket,\n          key: item.key,\n          etag: item.etag,\n          category: category,\n          size: item.size,\n          location: item.location\n        }\n        return image\n      });\n      return {packet: packet, image: null}\n    }\n    throw new Error('Failed to save: files were not found')\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessUnavailabilityPipe.html":{"url":"injectables/ProcessUnavailabilityPipe.html","title":"injectable - ProcessUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/process-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: query for any scheduled unavailability already in the database that would overlap with this request to add more unavailability to the Rental\nThis is to prevent the user on the front-end from accidentally overlapping 'blocks' of scheduled unavailability. The front-end of course should also block this\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addUnavailabilityId\n                            \n                            \n                                    Protected\n                                createQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidatedUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/process-unavailability.pipe.ts:121\n                \n            \n\n\n            \n                \n                    summary: process the request to update a rental's 'scheduled unavailability'\n\nthe user may schedule as far as a year ahead. To easily track the data as a single 'block' of unavailable time for the rental, each Unavailability document related to this query is given the same 'uuid'\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidatedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the validated unavailability request dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            addUnavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/process-unavailability.pipe.ts:57\n                            \n                        \n\n                \n                    \n                        summary: add unavailabilityId (uuid) to each UnavailabilityDto in the incoming ValidatedUnavailabilityDto\n\nthis method checks if the user is schedling time only for this year or into the next year as well\nthe uuid identifies a series of unavailability, allowing the entire block of time to be identified in the database\n\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the semi processed and validate client request data\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/process-unavailability.pipe.ts:19\n                            \n                        \n\n                \n                    \n                        summary: create a MongoDB query object from the provided CreateQueryDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        year\n                                                        \n                                                                data for creating a MongoDB update object\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { ValidatedUnavailabilityDto } from '../dto/unavailability/validated-unavailability.dto';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { UnavailabilityQueryDto } from '../dto/unavailability/schedule/unavailability-query.dto';\nimport { CreateQueryDto } from '../dto/unavailability/schedule/create-query.dto';\nimport { ProcessedUnavailabilityQueryDto } from '../dto/unavailability/schedule/processed-unavailability-query.dto';\n/**\n * **summary**: query for any scheduled unavailability already in the database that would overlap with this request to add more unavailability to the Rental\n * This is to prevent the user on the front-end from accidentally overlapping 'blocks' of scheduled unavailability. The front-end of course should also block this\n * @param year \n */\n@Injectable()\nexport class ProcessUnavailabilityPipe implements PipeTransform {\n\n  /**\n   * **summary**: create a MongoDB query object from the provided CreateQueryDto\n   * @param year data for creating a MongoDB update object\n   */\n  protected createQuery = async (\n    year: CreateQueryDto,\n  ): Promise => {\n    return {\n      rentalId: year.min.rentalId,\n      year: year.year,\n      doy: { $lte: year.max.doy, $gte: year.min.doy },\n      $or: [\n        {\n          // enclosed\n          start: { $gte: year.start },\n          end: { $lte: year.end },\n        },\n        {\n          // offset before start\n          start: { $lte: year.start },\n          end: { $gte: year.start },\n        },\n        {\n          // offset after end\n          start: { $lte: year.end },\n          end: { $gte: year.end },\n        },\n        {\n          // outside\n          start: { $lte: year.start },\n          end: { $gte: year.end },\n        },\n      ],\n    };\n  }\n\n  /**\n   * **summary**: add unavailabilityId (uuid) to each UnavailabilityDto in the incoming ValidatedUnavailabilityDto\n   * - this method checks if the user is schedling time only for this year or into the next year as well\n   * - the uuid identifies a series of unavailability, allowing the entire block of time to be identified in the database\n   * @param value the semi processed and validate client request data\n   */\n  protected addUnavailabilityId = async (\n    value: ValidatedUnavailabilityDto,\n  ): Promise => {\n    // temp arrays for transformation\n    const tY1 = [];\n    const tY2 = [];\n    const uuid = Date.now().toString();\n    // process 2 years\n    if (value.y2) {\n      value.y1.map(x => {\n        // y1\n        tY1.push({\n          unavailabilityId: uuid,\n          rentalId: x.rentalId,\n          year: x.year,\n          doy: x.doy,\n          start: x.start,\n          end: x.end,\n          title: x.title,\n        });\n      });\n      value.y2.map(x => {\n        // y2\n        tY2.push({\n          unavailabilityId: uuid,\n          rentalId: x.rentalId,\n          year: x.year,\n          doy: x.doy,\n          start: x.start,\n          end: x.end,\n          title: x.title,\n        });\n      });\n      // return processedUnavailabilityDto\n      const pY1: ProcessedUnavailabilityQueryDto[] = tY1;\n      const pY2: ProcessedUnavailabilityQueryDto[] = tY2;\n      return { pY1, pY2 };\n    }\n    // process 1 year\n    const ty1 = [];\n    value.y1.map(x => {\n      // y1\n      ty1.push({\n        unavailabilityId: uuid,\n        rentalId: x.rentalId,\n        year: x.year,\n        doy: x.doy,\n        start: x.start,\n        end: x.end,\n        title: x.title,\n      });\n    });\n    const py1: ProcessedUnavailabilityQueryDto[] = ty1;\n    return { pY1: py1, pY2: null };\n  }\n\n  /**\n   * **summary**: process the request to update a rental's 'scheduled unavailability'\n   * - the user may schedule as far as a year ahead. To easily track the data as a single 'block' of unavailable time for the rental, each Unavailability document related to this query is given the same 'uuid'\n   * @param value the validated unavailability request dto\n   */\n  async transform(\n    value: ValidatedUnavailabilityDto,\n  ): Promise {\n    // add uuid\n    const {pY1, pY2} = await this.addUnavailabilityId(value);\n    const { y1, y2 } = value;\n    // create Unavailability model queries for each year\n    if (y2 !== null) {\n      const createQuery1: CreateQueryDto = {\n        min: y1[0],\n        max: y1[y1.length - 1],\n        year: y1[0].year,\n        start: y1[0].start,\n        end: y1[0].end,\n      };\n      const createQuery2: CreateQueryDto = {\n        min: y2[0],\n        max: y2[y2.length - 1],\n        year: y2[0].year,\n        start: y2[0].start,\n        end: y2[0].end,\n      };\n      return {\n        y1Query: await this.createQuery(createQuery1),\n        y2Query: await this.createQuery(createQuery2),\n        data: {\n          y1: pY1,\n          y2: pY2,\n        },\n      };\n    }\n    // create an Unavailability model query for just one year\n    const createQuery = {\n      min: y1[0],\n      max: y1[y1.length - 1],\n      year: y1[0].year,\n      start: y1[0].start,\n      end: y1[0].end,\n    };\n    return {\n      y1Query: await this.createQuery(createQuery),\n      y2Query: null,\n      data: {\n        y1: pY1,\n        y2: null,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedSaveDataDto.html":{"url":"classes/ProcessedSaveDataDto.html","title":"class - ProcessedSaveDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedSaveDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/processed-save-data.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the dto for image data to be passed to the images.service.saveImages() method\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                image\n                            \n                            \n                                packet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/processed-save-data.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            packet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageInterface[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/processed-save-data.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ImageInterface } from \"../interface/modelInterface/image.interface\";\n/**\n * **summary**: the dto for image data to be passed to the images.service.saveImages() method\n */\nexport class ProcessedSaveDataDto {\n    packet: ImageInterface[];\n    image: ImageInterface;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedUnavailabilityDto.html":{"url":"classes/ProcessedUnavailabilityDto.html","title":"class - ProcessedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the final procesed version of the request to schedule unavailability. It contains the UnavailabilityQueryDto data that was used\nto create the ProcessedUnavailabilityQueryDtos as well as the returned ProcessedUnavailabilityQueryDto[]s that will be used by the handler\nto schedule the new unavailability.\n\npassed to the rental.service.scheduleUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                y1Query\n                            \n                            \n                                y2Query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1Query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityQueryDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2Query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityQueryDto | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityQueryDto } from './unavailability-query.dto';\nimport { ProcessedUnavailabilityQueryDto } from './processed-unavailability-query.dto';\n/**\n * **summary**: the final procesed version of the request to schedule unavailability. It contains the UnavailabilityQueryDto data that was used\n * to create the ProcessedUnavailabilityQueryDtos as well as the returned ProcessedUnavailabilityQueryDto[]s that will be used by the handler\n * to schedule the new unavailability.\n * - passed to the rental.service.scheduleUnavailability() method\n */\nexport class ProcessedUnavailabilityDto {\n    y1Query: UnavailabilityQueryDto;\n    y2Query: UnavailabilityQueryDto | null;\n    data: {\n        y1: ProcessedUnavailabilityQueryDto[];\n        y2: ProcessedUnavailabilityQueryDto[] | null;\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedUnavailabilityQueryDto.html":{"url":"classes/ProcessedUnavailabilityQueryDto.html","title":"class - ProcessedUnavailabilityQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedUnavailabilityQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this is a modified version of the UnavailabilityDto that is ready to be used in the CreateQueryDto\n\npassed as a property of the CreateQueryDto\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                unavailabilityId\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessedUnavailabilityQueryDto {\n    unavailabilityId: string; // for updating and quick indexing\n    rentalId: string;\n    year: number;\n    doy: number;\n    start: number;\n    end: number;\n    title: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawCoordinatesDto.html":{"url":"classes/RawCoordinatesDto.html","title":"class - RawCoordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawCoordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/raw-coordinates.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the Geocoding & Searching v7 API returns the following coordinates object when passed an address\n\npassed to GeoUrlApiUtil\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lat\n                            \n                            \n                                lng\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-coordinates.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lng\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-coordinates.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawCoordinatesDto {\n    lat: number;\n    lng: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawCreateRentalDto.html":{"url":"classes/RawCreateRentalDto.html","title":"class - RawCreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawCreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/raw-create-rental-dto.ts\n        \n\n            \n                Description\n            \n            \n                summary:\n\nThe initial values submitted by a user to create a new rental listing\nspecs: specifications about the vehicle\nregistration: basic vehicle registration data\nfeatures: e.g. 'bike rack', 'heated seats', 'auto-pilot', etc.\nscheduling: list the required advance notice, as well as min & max rental duration\npricing: the rental rate as well as discount conditions; e.g. weekly rentals get $5 off\nlocation: the steet, city, and zip of the user\nphotos: a max of 10 image references\nlisted: hide or show the rental to the application community\npassed to the GeoUrlApiPipe transform method. This is the raw data before the GeoJSON object is added and the final\nCreateRentalDto has not been created\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                features\n                            \n                            \n                                listed\n                            \n                            \n                                location\n                            \n                            \n                                photos\n                            \n                            \n                                pricing\n                            \n                            \n                                registration\n                            \n                            \n                                scheduling\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pricing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawCreateRentalDto {\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number | null;\n    hwyMpg: number | null;\n    mpgE: number | null;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: string[];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: number;\n    discounts: {\n      weekly: number;\n      monthly: number;\n    };\n  };\n  location: {\n    street: string;\n    city: string;\n    zip: number;\n  };\n  photos: string[];\n  listed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawScheduleUnavailabilityDto.html":{"url":"classes/RawScheduleUnavailabilityDto.html","title":"class - RawScheduleUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawScheduleUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the initial form data submitted from the client to request to schedule Unavailability for a rental\n\npassed to the SortUnavailabilityPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                unavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: the initial form data submitted from the client to request to schedule Unavailability for a rental\n * - passed to the SortUnavailabilityPipe\n */\nexport class RawScheduleUnavailabilityDto {\n  unavailability: UnavailabilityDto[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawSearchRentalDto.html":{"url":"classes/RawSearchRentalDto.html","title":"class - RawSearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawSearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/raw-search-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: search for retnals by address, a start and end time, price, and features\n\npassed to the GivenNoticePipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                price\n                            \n                            \n                                rentalEndTime\n                            \n                            \n                                rentalStartTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalEndTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalStartTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawSearchRentalDto {\n    address: string;\n    rentalStartTime: Date;\n    rentalEndTime: Date;\n    price: number;\n    features: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveUnavailabilityDto.html":{"url":"classes/RemoveUnavailabilityDto.html","title":"class - RemoveUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/remove/remove-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the information necessary to delte an Unavailability document from the database\n\npassed to the rental.service.removeUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/remove/remove-unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/remove/remove-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveUnavailabilityDto {\n  rentalId: string;\n  unavailabilityId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RentalController.html":{"url":"controllers/RentalController.html","title":"controller - RentalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RentalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/controller/rental.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rental\n            \n\n            \n                Description\n            \n            \n                \nsummary: controller for managing rentals in the application\nMiddleware: The ValidateUpdateUnavailabilityMiddleware class is applied to the updateUnavailability method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRental\n                            \n                            \n                                    Async\n                                editDetails\n                            \n                            \n                                    Async\n                                editPricing\n                            \n                            \n                                    Async\n                                removeUnavailability\n                            \n                            \n                                    Async\n                                scheduleUnavailability\n                            \n                            \n                                    Async\n                                searchRental\n                            \n                            \n                                    Async\n                                updateUnavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRental(rental: CreateRentalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new JoiValidationPipe())@UsePipes(new MapNewRentalPipe())@UsePipes(new GeoUrlApiPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:48\n                \n            \n\n\n            \n                \n                    Create Rental:\ncreate a new vehicle rental listing\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                CreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editDetails(editDetailsDto: EditDetailsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit-details')@UsePipes(new ValidateEditDetailsPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:85\n                \n            \n\n\n            \n                \n                    Edit Rental Details:\nedit the details of the Rental (# of seats, color, etc.)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editDetailsDto\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editPricing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editPricing(pricingDto: PricingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit-price')@UsePipes(new PricingPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:75\n                \n            \n\n\n            \n                \n                    Edit Pricing:\nedit the rental price\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pricingDto\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUnavailability(data: RemoveUnavailabilityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('remove-unavailability')@UsePipes(new ValidateRemoveUnavailabilityPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:117\n                \n            \n\n\n            \n                \n                    Remove Unavailability\nremove existing unavailability\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleUnavailability(processed: ProcessedUnavailabilityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('schedule-unavailability')@UsePipes(new ProcessUnavailabilityPipe())@UsePipes(new ValidateUnavailabilityPipe())@UsePipes(new SortUnavailabilityPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:97\n                \n            \n\n\n            \n                \n                    Schedule Unavailability\nset a period of unavailability for the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    processed\n                                    \n                                                ProcessedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRental(searchRentalDto: SearchRentalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UsePipes(new JoiValidationPipe())@UsePipes(new RequestCoordinatesPipe())@UsePipes(new RentalDurationPipe())@UsePipes(new GivenNoticePipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:65\n                \n            \n\n\n            \n                \n                    Search Rental:\nfind rentals available near a specified location (user's location)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchRentalDto\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUnavailability(data: UpdateUnavailabilityDataDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update-unavailability')@UsePipes(new CreateUpdaterDtoPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:107\n                \n            \n\n\n            \n                \n                    Update Unavailability\nedit current unavailability\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUnavailabilityDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, Param, UsePipes, Query, Res, Req } from '@nestjs/common';\nimport { RentalService } from '../service/rental.service';\nimport { GeoUrlApiPipe } from '../pipes/geo-url-api.pipe';\nimport { MapNewRentalPipe } from '../pipes/map-new-rental.pipe';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\nimport { JoiValidationPipe } from '../../common/pipes/joi-validation.pipe';\nimport { CreateRentalValidationSchema } from '../schema/validation/create-rental-validation.schema';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\nimport { RentalDurationPipe } from '../pipes/rental-duration.pipe';\nimport { GenerateRentalDurationEnumUtil } from '../utils/generate-rental-duration-enum.util';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\nimport { RequestCoordinatesPipe } from '../pipes/request-coordinates.pipe';\nimport { GivenNoticePipe } from '../pipes/given-notice.pipe';\nimport { SearchRentalValidationSchema } from '../schema/validation/search-rental-validation.schema';\nimport { PricingPipe } from '../pipes/pricing.pipe';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\nimport { ValidateEditDetailsPipe } from '../pipes/validate-edit-details.pipe';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { SortUnavailabilityPipe } from '../pipes/sort-unavailability.pipe';\nimport { ValidateUnavailabilityPipe } from '../pipes/validate-unavailability.pipe';\nimport { ProcessUnavailabilityPipe } from '../pipes/process-unavailability.pipe';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { CreateUpdaterDtoPipe } from '../pipes/create-updater-dto.pipe';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto' // '../dto/update-unavailability-data.dto';\nimport { ValidateRemoveUnavailabilityPipe } from '../pipes/validate-remove-unavailability.pipe';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * - **summary**: controller for managing rentals in the application\n * - **Middleware**: The ValidateUpdateUnavailabilityMiddleware class is applied to the updateUnavailability method\n */\n@Controller('rental')\nexport class RentalController {\n  constructor(\n    private readonly rentalService: RentalService,\n    ) {}\n\n  /**\n   * Create Rental:\n   * create a new vehicle rental listing\n   */\n  @Post()\n  @UsePipes(new JoiValidationPipe(CreateRentalValidationSchema))\n  @UsePipes(new MapNewRentalPipe())\n  @UsePipes(new GeoUrlApiPipe(new GeoUrlApiUtil(), new AppConfigService(new ConfigService)))\n  async createRental(@Body() rental: CreateRentalDto) {\n    try {\n      return await this.rentalService.createRental(rental);\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * Search Rental:\n   * find rentals available near a specified location (user's location)\n   */\n  @Get()\n  @UsePipes(new JoiValidationPipe(SearchRentalValidationSchema))\n  @UsePipes(new RequestCoordinatesPipe(new GeoUrlApiUtil()))\n  @UsePipes(new RentalDurationPipe(new GenerateRentalDurationEnumUtil()))\n  @UsePipes(new GivenNoticePipe())\n  async searchRental(@Query() searchRentalDto: SearchRentalDto) {\n      return await this.rentalService.searchRental(searchRentalDto);\n  }\n\n  /**\n   * Edit Pricing:\n   * edit the rental price\n   */\n  @Post('edit-price')\n  @UsePipes(new PricingPipe())\n  async editPricing(@Body() pricingDto: PricingDto) {\n      return await this.rentalService.editPricing(pricingDto);\n  }\n\n  /**\n   * Edit Rental Details:\n   * edit the details of the Rental (# of seats, color, etc.)\n   */\n  @Post('edit-details')\n  @UsePipes(new ValidateEditDetailsPipe())\n  async editDetails(@Body() editDetailsDto: EditDetailsDto) {\n      return await this.rentalService.editDetails(editDetailsDto);\n  }\n\n  /**\n   * Schedule Unavailability\n   * set a period of unavailability for the rental\n   */\n  @Post('schedule-unavailability')\n  @UsePipes(new ProcessUnavailabilityPipe())\n  @UsePipes(new ValidateUnavailabilityPipe())\n  @UsePipes(new SortUnavailabilityPipe())\n  async scheduleUnavailability(@Body() processed: ProcessedUnavailabilityDto ) {\n    return await this.rentalService.scheduleUnavailability(processed);\n  }\n\n  /**\n   * Update Unavailability\n   * edit current unavailability\n   */\n  @Post('update-unavailability')\n  @UsePipes(new CreateUpdaterDtoPipe())\n  async updateUnavailability(@Body() data: UpdateUnavailabilityDataDto) {\n    return await this.rentalService.updateUnavailability(data);\n  }\n\n   /**\n    * Remove Unavailability\n    * remove existing unavailability\n    */\n   @Post('remove-unavailability')\n   @UsePipes(new ValidateRemoveUnavailabilityPipe())\n   async removeUnavailability(@Body() data: RemoveUnavailabilityDto) {\n     return await this.rentalService.removeUnavailability(data);\n   }\n\n   /**\n    * Upload Rental Photos\n    * upload photos of your rental listing\n    * ! see the images/controller\n    */\n\n    /**\n     * Toggle Rental listed status\n     */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalDurationPipe.html":{"url":"injectables/RentalDurationPipe.html","title":"injectable - RentalDurationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RentalDurationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/rental-duration.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a rental Duration from the incoming GivenNoticeSearchRentalDto\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(generateDuration: GenerateRentalDurationEnumUtil)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/rental-duration.pipe.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        generateDuration\n                                                  \n                                                        \n                                                                        GenerateRentalDurationEnumUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: GivenNoticeSearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/rental-duration.pipe.ts:19\n                \n            \n\n\n            \n                \n                    summary: use the generateRentalDurationEnumUtil() to create a RentalDuration Enum for the\nRental query\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                GivenNoticeSearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the semi processed client request data to query a rental near their, or a specified, locaion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { GivenNoticeSearchRentalDto } from '../dto/searchRental/given-notice-search-rental-dto';\nimport { GenerateRentalDurationEnumUtil } from '../utils/generate-rental-duration-enum.util';\nimport { RequestCoordinatesDto } from '../dto/searchRental/request-coordinates.dto';\n/**\n * **summary**: create a rental Duration from the incoming GivenNoticeSearchRentalDto\n */\n@Injectable()\nexport class RentalDurationPipe implements PipeTransform {\n  constructor(private generateDuration: GenerateRentalDurationEnumUtil) {\n    this.generateDuration = generateDuration;\n  }\n\n  /**\n   * **summary**: use the generateRentalDurationEnumUtil() to create a RentalDuration [**Enum**](https://www.typescriptlang.org/docs/handbook/enums.html) for the\n   * Rental query\n   * @param value the semi processed client request data to query a rental near their, or a specified, locaion\n   */\n  async transform(value: GivenNoticeSearchRentalDto) {\n    try {\n      const dto: RequestCoordinatesDto = {\n        address: value.address,\n        price: value.price,\n        features: value.features,\n        rentalDuration: await this.generateDuration.generateRentalDurationEnum(\n          value.rentalStartTime,\n          value.rentalEndTime,\n        ),\n        givenNotice: value.givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RentalInterface.html":{"url":"interfaces/RentalInterface.html","title":"interface - RentalInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RentalInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/interface/modelInterface/Rental/rental.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the 'Rental' Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        features\n                                \n                                \n                                        listed\n                                \n                                \n                                        loc\n                                \n                                \n                                        photos\n                                \n                                \n                                        pricing\n                                \n                                \n                                        registration\n                                \n                                \n                                        rentalDescription\n                                \n                                \n                                        scheduling\n                                \n                                \n                                        specs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     [string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listed\n                                    \n                                \n                                \n                                    \n                                        listed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loc\n                                    \n                                \n                                \n                                    \n                                        loc:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:     [string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pricing\n                                    \n                                \n                                \n                                    \n                                        pricing:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration\n                                    \n                                \n                                \n                                    \n                                        registration:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rentalDescription\n                                    \n                                \n                                \n                                    \n                                        rentalDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduling\n                                    \n                                \n                                \n                                    \n                                        scheduling:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        specs\n                                    \n                                \n                                \n                                    \n                                        specs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RentalInterface {\n  rentalDescription: string;\n  address: string;\n  loc: {\n    type: string;\n    coordinates: string;\n  };\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: [string];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: { type: number /*; default: DEFAULT_PRICE*/ };\n    discounts: {\n      weekly: { type: number; default: null };\n      monthly: { type: number; default: null };\n    };\n  };\n  photos: [string];\n  listed: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RentalModule.html":{"url":"modules/RentalModule.html","title":"module - RentalModule","body":"\n                   \n\n\n\n\n    Modules\n    RentalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RentalModule\n\n\n\ncluster_RentalModule_exports\n\n\n\ncluster_RentalModule_imports\n\n\n\ncluster_RentalModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nRentalModule\n\nRentalModule\n\nRentalModule -->\n\nDatabaseModule->RentalModule\n\n\n\n\n\nRentalService \n\nRentalService \n\nRentalService  -->\n\nRentalModule->RentalService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nRentalModule -->\n\nAppConfigService->RentalModule\n\n\n\n\n\nCreateUpdaterDtoPipe\n\nCreateUpdaterDtoPipe\n\nRentalModule -->\n\nCreateUpdaterDtoPipe->RentalModule\n\n\n\n\n\nGenerateRentalDurationEnumUtil\n\nGenerateRentalDurationEnumUtil\n\nRentalModule -->\n\nGenerateRentalDurationEnumUtil->RentalModule\n\n\n\n\n\nGeoUrlApiPipe\n\nGeoUrlApiPipe\n\nRentalModule -->\n\nGeoUrlApiPipe->RentalModule\n\n\n\n\n\nGeoUrlApiUtil\n\nGeoUrlApiUtil\n\nRentalModule -->\n\nGeoUrlApiUtil->RentalModule\n\n\n\n\n\nGivenNoticePipe\n\nGivenNoticePipe\n\nRentalModule -->\n\nGivenNoticePipe->RentalModule\n\n\n\n\n\nMapNewRentalPipe\n\nMapNewRentalPipe\n\nRentalModule -->\n\nMapNewRentalPipe->RentalModule\n\n\n\n\n\nPricingPipe\n\nPricingPipe\n\nRentalModule -->\n\nPricingPipe->RentalModule\n\n\n\n\n\nProcessUnavailabilityPipe\n\nProcessUnavailabilityPipe\n\nRentalModule -->\n\nProcessUnavailabilityPipe->RentalModule\n\n\n\n\n\nRentalDurationPipe\n\nRentalDurationPipe\n\nRentalModule -->\n\nRentalDurationPipe->RentalModule\n\n\n\n\n\nRentalService\n\nRentalService\n\nRentalModule -->\n\nRentalService->RentalModule\n\n\n\n\n\nRequestCoordinatesPipe\n\nRequestCoordinatesPipe\n\nRentalModule -->\n\nRequestCoordinatesPipe->RentalModule\n\n\n\n\n\nSortUnavailabilityPipe\n\nSortUnavailabilityPipe\n\nRentalModule -->\n\nSortUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateEditDetailsPipe\n\nValidateEditDetailsPipe\n\nRentalModule -->\n\nValidateEditDetailsPipe->RentalModule\n\n\n\n\n\nValidateRemoveUnavailabilityPipe\n\nValidateRemoveUnavailabilityPipe\n\nRentalModule -->\n\nValidateRemoveUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateUnavailabilityPipe\n\nValidateUnavailabilityPipe\n\nRentalModule -->\n\nValidateUnavailabilityPipe->RentalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rental/rental.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nsummary: This module provides all of the functionality for working with Rentals\nMiddleware: This module consumes the ValidateUpdateUnavailability middleware; for more details, in the documentation checkout the Injectables ValidateUpdateUnavailability tab\nDatabase: This module applies indexing to the Unavailability model of the database\n\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            CreateUpdaterDtoPipe\n                        \n                        \n                            GenerateRentalDurationEnumUtil\n                        \n                        \n                            GeoUrlApiPipe\n                        \n                        \n                            GeoUrlApiUtil\n                        \n                        \n                            GivenNoticePipe\n                        \n                        \n                            MapNewRentalPipe\n                        \n                        \n                            PricingPipe\n                        \n                        \n                            ProcessUnavailabilityPipe\n                        \n                        \n                            RentalDurationPipe\n                        \n                        \n                            RentalService\n                        \n                        \n                            RequestCoordinatesPipe\n                        \n                        \n                            SortUnavailabilityPipe\n                        \n                        \n                            ValidateEditDetailsPipe\n                        \n                        \n                            ValidateRemoveUnavailabilityPipe\n                        \n                        \n                            ValidateUnavailabilityPipe\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RentalController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RentalService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/rental.module.ts:71\n                \n            \n\n\n            \n                \n                    summary: applies the ValidateUpdateUnavailability which validates a user's request to the rental.controller.updateUnavaialability method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        interfacing defining method for applying user defined middleware to routes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { RentalController } from './controller/rental.controller';\nimport { RentalService } from './service/rental.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RentalSchema } from './schema/rental.schema';\nimport { GeoUrlApiUtil } from './utils/geo-url-api.util';\nimport { UnavailabilitySchema } from './schema/unavailability-schema';\nimport { DatabaseModule } from '../database/database.module';\nimport { unavailabilityProvider } from '../database/providers/unavailability-model.provider';\nimport { ValidateUpdateUnavailabilityMiddleware } from './middleware/validate-update-unavailability.middleware';\nimport { MapNewRentalPipe } from './pipes/map-new-rental.pipe';\nimport { GeoUrlApiPipe } from './pipes/geo-url-api.pipe';\nimport { RequestCoordinatesPipe } from './pipes/request-coordinates.pipe';\nimport { RentalDurationPipe } from './pipes/rental-duration.pipe';\nimport { GivenNoticePipe } from './pipes/given-notice.pipe';\nimport { PricingPipe } from './pipes/pricing.pipe';\nimport { ValidateEditDetailsPipe } from './pipes/validate-edit-details.pipe';\nimport { ProcessUnavailabilityPipe } from './pipes/process-unavailability.pipe';\nimport { ValidateUnavailabilityPipe } from './pipes/validate-unavailability.pipe';\nimport { SortUnavailabilityPipe } from './pipes/sort-unavailability.pipe';\nimport { CreateUpdaterDtoPipe } from './pipes/create-updater-dto.pipe';\nimport { ValidateRemoveUnavailabilityPipe } from './pipes/validate-remove-unavailability.pipe';\nimport { AppConfigService } from 'src/config/configuration.service';\nimport { GenerateRentalDurationEnumUtil } from './utils/generate-rental-duration-enum.util';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n/**\n * - **summary**: This module provides all of the functionality for working with Rentals\n * - **Middleware**: This module consumes the **ValidateUpdateUnavailability** middleware; for more details, in the documentation checkout the **Injectables** ValidateUpdateUnavailability tab\n * - **Database**: This module applies indexing to the **Unavailability** model of the database\n */\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Rental', schema: RentalSchema }]),\n    MongooseModule.forFeature([{name: 'Unavailability', schema: UnavailabilitySchema}]),\n    DatabaseModule,\n    ConfigModule,\n  ],\n  controllers: [RentalController],\n  providers: [\n    RentalService,\n    GeoUrlApiUtil,\n    ...unavailabilityProvider,\n    MapNewRentalPipe,\n    GeoUrlApiPipe,\n    RequestCoordinatesPipe,\n    RentalDurationPipe,\n    GenerateRentalDurationEnumUtil,\n    GivenNoticePipe,\n    PricingPipe,\n    ValidateEditDetailsPipe,\n    ProcessUnavailabilityPipe,\n    ValidateUnavailabilityPipe,\n    SortUnavailabilityPipe,\n    CreateUpdaterDtoPipe,\n    ValidateRemoveUnavailabilityPipe,\n    AppConfigService,\n    ConfigService\n  ],\n  exports: [RentalService],\n})\nexport class RentalModule implements NestModule {\n  constructor() {\n    RentalSchema.index({ loc: '2dsphere' });\n    UnavailabilitySchema.index({rentalId: 1});\n    UnavailabilitySchema.index({UnavailabilityId: 1});\n  }\n  /**\n   * **summary**: applies the ValidateUpdateUnavailability which validates a user's request to the rental.controller.updateUnavaialability method\n   * @param consumer interfacing defining method for applying user defined middleware to routes\n   */\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ValidateUpdateUnavailabilityMiddleware)\n      .forRoutes('v1/rental');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalService.html":{"url":"injectables/RentalService.html","title":"injectable - RentalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RentalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/service/rental.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: create, search for near (within a radius: e.g. 10 miles of) a location, update details, and schedule blocks of unavailable time for Rentals\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkForOverlap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRental\n                            \n                            \n                                    Private\n                                    Async\n                                createRentalQuery\n                            \n                            \n                                    Async\n                                editDetails\n                            \n                            \n                                    Async\n                                editPricing\n                            \n                            \n                                    Async\n                                removeUnavailability\n                            \n                            \n                                    Async\n                                scheduleUnavailability\n                            \n                            \n                                    Async\n                                searchRental\n                            \n                            \n                                    Async\n                                updateUnavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rentalModel: Model, unavailability: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/service/rental.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rentalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unavailability\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRental(rental: CreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:31\n                \n            \n\n\n            \n                \n                    summary: create a new rental listing with attached geolocation coordinates\nso the rental may be found by a geospatial query\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                CreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new rental to be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createRentalQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRentalQuery(rental: SearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:178\n                \n            \n\n\n            \n                \n                    summary: convert a searchRentalDto into a mongoose query for the searchRental method\n\nThe query searchs a maxium 8 mile radius for rentals\nFilters: \nrental min duration\nrental max duration\nadvance notice minimum; e.g. 1 hour\nloc: GeoJSON object\nrental price: optional\nrental features: optional\n\n\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        searchRentalDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editDetails(data: EditDetailsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:92\n                \n            \n\n\n            \n                \n                    summary: edit the details of the Rental (# of seats, color, etc.)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data comes as an EditDetailsDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editPricing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editPricing(data: PricingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:65\n                \n            \n\n\n            \n                \n                    summary: edit the rental pricing\n\nprice\ndiscounts:\nweekly\nmonthly\n\n\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUnavailability(data: RemoveUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:151\n                \n            \n\n\n            \n                \n                    summary: remove an amount of time from a scheduled duration of unavailability on the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleUnavailability(processed: ProcessedUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:113\n                \n            \n\n\n            \n                \n                    summary: set a period of unavailability for the rental (e.g. mon - wed)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    processed\n                                    \n                                                ProcessedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRental(rental: SearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:44\n                \n            \n\n\n            \n                \n                    summary: query rentals in the database with the data provided in the SearchRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SearchRentalDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUnavailability(data: UpdateUnavailabilityDataDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:134\n                \n            \n\n\n            \n                \n                    summary: edit a block of scheduled unavailability by either extending or reducing the scheduled duration of time on the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUnavailabilityDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkForOverlap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/service/rental.service.ts:216\n                            \n                        \n\n                \n                    \n                        summary: validate there currently is no scheduled unavailability for the rental in the database that overlaps \nwith the requested unavailability \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                query for 1 or 2 years\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger } from '@nestjs/common';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RentalInterface } from '../interface/modelInterface/Rental/rental.interface';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { unavailabilityModel } from '../../common/Const';\nimport { UnavailabilityInterface } from '../interface/modelInterface/Unavailability/unavailability.interface';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\n\n/**\n * **summary**: create, search for near (within a radius: e.g. 10 miles of) a location, update details, and schedule blocks of unavailable time for Rentals\n */\n@Injectable()\nexport class RentalService {\n  constructor(\n    @InjectModel('Rental') private readonly rentalModel: Model,\n    @Inject(unavailabilityModel)\n    private readonly unavailability: Model,\n  ) { }\n\n  /**\n   * **summary**: create a new rental listing with attached geolocation coordinates\n   * so the rental may be found by a geospatial query\n   * @param rental the new rental to be created\n   */\n  async createRental(rental: CreateRentalDto) {\n    try {\n      const document = await new this.rentalModel(rental);\n      return await document.save();\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: query rentals in the database with the data provided in the SearchRentalDto\n   * @param rental SearchRentalDto\n   */\n  async searchRental(rental: SearchRentalDto) {\n    try {\n      const query = await this.createRentalQuery(rental);\n      const rentals = await this.rentalModel.find(query);\n      if (rentals.length > 0) {\n        return rentals;\n      } else {\n        throw new Error('No rentals were found');\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit the rental pricing\n   * - price\n   * - discounts:\n   *   - weekly\n   *   - monthly\n   */\n  async editPricing(data: PricingDto) {\n    // make an update document\n    try {\n      const filter = { _id: data.rentalId };\n      const update = {\n        pricing: {\n          price: data.price,\n          discounts: {\n            weekly: data.discounts.weekly,\n            monthly: data.discounts.monthly,\n          },\n        },\n      };\n      const updater = {\n        $set: update,\n      };\n      const doc = await this.rentalModel.findOneAndUpdate(filter, updater, { new: true });\n      return doc;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit the details of the Rental (# of seats, color, etc.)\n   * @param data the data comes as an EditDetailsDto\n   */\n  async editDetails(data: EditDetailsDto) {\n    // make an update document\n    try {\n      const filter = { _id: data.rentalId };\n      const update = {\n        specs: data.specs,\n        features: data.features,\n      };\n      const updater = {\n        $set: update,\n      };\n      const doc = await this.rentalModel.findOneAndUpdate(filter, updater, { new: true });\n      return doc;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: set a period of unavailability for the rental (e.g. mon - wed)\n   */\n  async scheduleUnavailability(processed: ProcessedUnavailabilityDto) {\n    try {\n      await this.checkForOverlap(processed);\n      // if it passed, combine data into one array and insert\n      const { y1, y2 } = processed.data;\n      if (y2 !== null) {\n        const merged = y1.concat(y2);\n        Logger.log(`the merged years`);\n        Logger.log(merged);\n        return await this.unavailability.insertMany(merged, { ordered: true });\n      }\n      return await this.unavailability.insertMany(y1, { ordered: true });\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit a block of scheduled unavailability by either extending or reducing the scheduled duration of time on the rental\n   * @param data \n   */\n  async updateUnavailability(data: UpdateUnavailabilityDataDto) {\n    // send the update\n    try {\n      const update = await this.unavailability.updateMany(\n        data.filter,\n        data.updater,\n      );\n      return update;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: remove an amount of time from a scheduled duration of unavailability on the rental\n   * @param data \n   */\n  async removeUnavailability(data: RemoveUnavailabilityDto) {\n    try {\n      const remove = await this.unavailability.deleteMany({\n        rentalId: data.rentalId,\n        unavailabilityId: data.unavailabilityId,\n      });\n      if (remove.deletedCount === 0) {\n        throw new Error('No Unavailability documents were found, no documents were deleted');\n      }\n      return remove;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: convert a searchRentalDto into a mongoose query for the searchRental method\n   * - The query searchs a maxium 8 mile radius for rentals\n   * - Filters: \n   *   - rental min duration\n   *   - rental max duration\n   *   - advance notice minimum; e.g. 1 hour\n   *   - loc: GeoJSON object\n   *   - rental price: optional\n   *   - rental features: optional\n   * @param rental searchRentalDto\n   */\n  private async createRentalQuery(rental: SearchRentalDto) {\n    try {\n      const query: any = {\n        'scheduling.rentMinDuration': { $lte: rental.rentalDuration },\n        'scheduling.rentMaxDuration': { $gte: rental.rentalDuration },\n        'scheduling.requiredNotice': { $lte: rental.givenNotice },\n        'loc': {\n          $near: {\n            $maxDistance: 12875, // 8 miles\n            $geometry: {\n              type: rental.loc.type,\n              coordinates: [\n                rental.loc.coordinates[0], // latitude\n                rental.loc.coordinates[1], // longitude\n              ],\n            },\n          },\n        },\n      };\n      rental.price\n        ? (query.pricing = {\n          price: rental.price, // add price as optional search parameter\n        })\n        : (rental.price = null);\n      rental.features\n        ? (query.features = { $in: rental.features })\n        : (rental.features = null);\n      return query;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: validate there currently is no scheduled unavailability for the rental in the database that overlaps \n   * with the requested unavailability \n   * @param data query for 1 or 2 years\n   */\n  private checkForOverlap = async (data: ProcessedUnavailabilityDto) => {\n    const { y1Query, y2Query } = data;\n    // if there are 2 years\n    if (y2Query !== null) {\n      const test1 = await this.unavailability.find(y1Query);\n      const test2 = await this.unavailability.find(y2Query);\n      Logger.log(`test1`);\n      Logger.log(test1);\n      Logger.log(`test2`);\n      Logger.log(test2);\n      if (test1.length || test2.length) {\n        throw new Error('this request overlaps with existing unavailability');\n      }\n    }\n    // else\n    const test = await this.unavailability.find(y1Query);\n    if (test.length) {\n      throw new Error('this request overlaps with existing unavailability');\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCoordinatesDto.html":{"url":"classes/RequestCoordinatesDto.html","title":"class - RequestCoordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCoordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/request-coordinates.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto contains the results of the GivenNoticePipe; which added the givenNotice property to this data\n\npassed to the RequestCoordinatesPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                price\n                            \n                            \n                                rentalDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RequestCoordinatesDto {\n  address: string;\n  price: number;\n  features: string[];\n  rentalDuration: number; // enum\n  givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestCoordinatesPipe.html":{"url":"injectables/RequestCoordinatesPipe.html","title":"injectable - RequestCoordinatesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestCoordinatesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/request-coordinates.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a SearchRentalDto with the GeoJSON loc property with the HERE Geocoding & Searching API\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geoUrlApiUtil: GeoUrlApiUtil)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/request-coordinates.pipe.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geoUrlApiUtil\n                                                  \n                                                        \n                                                                        GeoUrlApiUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RequestCoordinatesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/request-coordinates.pipe.ts:17\n                \n            \n\n\n            \n                \n                    summary: finish transforming the client request into a SearchRentalDto using the geoUrlApiUtil.getCoordinates() method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RequestCoordinatesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the semi-processed client request data to search for Rentals\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { RequestCoordinatesDto } from '../dto/searchRental/request-coordinates.dto';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\n\n/**\n * **summary**: create a SearchRentalDto with the GeoJSON loc property with the [**HERE Geocoding & Searching API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html)\n */\n@Injectable()\nexport class RequestCoordinatesPipe implements PipeTransform {\n  constructor(private readonly geoUrlApiUtil: GeoUrlApiUtil) {}\n\n  /**\n   * **summary**: finish transforming the client request into a SearchRentalDto using the geoUrlApiUtil.getCoordinates() method\n   * @param value the semi-processed client request data to search for Rentals\n   */\n  async transform(value: RequestCoordinatesDto) {\n    const geoUrl = process.env.GEO_URL;\n    const apiKey = process.env.GEO_API_KEY; \n    try {\n      const dto: SearchRentalDto = {\n        address: value.address,\n        price: value.price,\n        features: value.features,\n        rentalDuration: value.rentalDuration,\n        loc: {\n          type: 'Point',\n          coordinates: await this.geoUrlApiUtil.getCoordinates(\n            value.address,\n            geoUrl,\n            apiKey\n          ),\n        },\n        givenNotice: value.givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/reset-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transer object for resetting a user password\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPass\n                            \n                            \n                                    Readonly\n                                resetPass\n                            \n                            \n                                    Readonly\n                                resetPasswordToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            confirmPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resetPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resetPasswordToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ResetPasswordDto {\n\treadonly resetPass: string;\n\treadonly confirmPass: string;\n\treadonly resetPasswordToken: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordTokenDto.html":{"url":"injectables/ResetPasswordTokenDto.html","title":"injectable - ResetPasswordTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/find-user-by-reset-password-token.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: find a user by the reset password token\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/find-user-by-reset-password-token.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: find a user by the reset password token\n */\n@Injectable()\nexport class ResetPasswordTokenDto {\n    token: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Provider.html":{"url":"injectables/S3Provider.html","title":"injectable - S3Provider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Provider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/providers/s3.provider.ts\n        \n\n            \n                Description\n            \n            \n                summary: provide connection to the AWS S3 bucket\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getS3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/images/providers/s3.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/providers/s3.provider.ts:14\n                            \n                        \n\n                \n                    \n                        summary: connect to the S3 bucket with the access key and it's ID\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AppConfigService } from \"src/config/configuration.service\";\nimport { S3 } from 'aws-sdk'\n/**\n * **summary**: provide connection to the AWS S3 bucket\n */\n@Injectable()\nexport class S3Provider {\n    constructor(private readonly appConfig: AppConfigService) {\n    }\n    /**\n     * **summary**: connect to the S3 bucket with the access key and it's ID\n     */\n    getS3 = () => {\n        return new S3({\n            accessKeyId: this.appConfig.access_key_id,\n            secretAccessKey: this.appConfig.secret_access_key\n        })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchRentalDto.html":{"url":"classes/SearchRentalDto.html","title":"class - SearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/search-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto is the final form of the request to search for a rental. It includes the givenNotice,\nthe rentalDuration, and the GeoJSON loc property\n\npassed to the rental.service.searchRentals method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                loc\n                            \n                            \n                                price\n                            \n                            \n                                rentalDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SearchRentalDto {\n    address: string;\n    price: number;\n    features: string[];\n    rentalDuration: number;\n    loc: {\n        type: 'Point'\n        coordinates: [number, number];\n    };\n    givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SortUnavailabilityPipe.html":{"url":"injectables/SortUnavailabilityPipe.html","title":"injectable - SortUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SortUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/sort-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: sort the requested Rental Unavailability into a single or 2 year groupings (arrays). Sort each year's (array's) UnavailabilityDtos by ascending DOY (Day of the Year)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderYears\n                            \n                            \n                                    Private\n                                sort\n                            \n                            \n                                    Private\n                                validate2Years\n                            \n                            \n                                    Private\n                                validateSequential\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawScheduleUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:85\n                \n            \n\n\n            \n                \n                    summary: use the sort(), orderYears(), validateSequential(), and validate2Years() methods to sort and return the data as a ValidateScheduleUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawScheduleUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            orderYears\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:40\n                            \n                        \n\n                \n                    \n                        summary: return the sorted (by DOY) years in order, or return a single year\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        sorted\n                                                        \n                                                                the incoming data to be sorted\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:58\n                            \n                        \n\n                \n                    \n                        summary: separate years into y1 and y2 array and sort each by DOY\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw client request to schedule Unavailability on a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validate2Years\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:16\n                            \n                        \n\n                \n                    \n                        summary: validate that the requested Unavailability does not cross more than a one year duration\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        yearB\n                                                        \n                                                                this value is exactly 1 year from the current date\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateSequential\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:30\n                            \n                        \n\n                \n                    \n                        summary: validate that the request to schedule unavailability is sequential and not two separate blocks of time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        a\n                                                        \n                                                                year 1\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                year 2\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { UnavailabilityDto } from '../dto/unavailability/unavailability.dto';\nimport { RawScheduleUnavailabilityDto } from '../dto/unavailability/schedule/raw-schedule-unavailability.dto';\nimport { SortedUnavailabilityDto } from '../dto/unavailability/schedule/sorted-unavailability.dto';\nimport { ValidateScheduleUnavailabilityDto } from '../dto/unavailability/schedule/validate-schedule-unavailability.dto';\n/**\n * **summary**: sort the requested Rental Unavailability into a single or 2 year groupings (arrays). Sort each year's (array's) UnavailabilityDtos by ascending DOY (Day of the Year)\n */\n@Injectable()\nexport class SortUnavailabilityPipe implements PipeTransform {\n  \n  /**\n   * **summary**: validate that the requested Unavailability does not cross more than a one year duration\n   * @param yearB this value is exactly 1 year from the current date\n   */\n  private validate2Years = async (yearB: UnavailabilityDto[]): Promise => {\n    for (const x of yearB) {\n      if (x.year !== yearB[0].year) {\n        throw new Error('Cannot request 3 years of unavailability');\n      }\n    }\n    return;\n  }\n\n  /**\n   * **summary**: validate that the request to schedule unavailability is sequential and not two separate blocks of time\n   * @param a year 1\n   * @param b year 2\n   */\n  private validateSequential = async (a, b): Promise => {\n    if (a + 1 !== b) {\n      throw new Error('years must be sequential');\n    }\n  }\n\n  /**\n   * **summary**: return the sorted (by DOY) years in order, or return a single year\n   * @param sorted the incoming data to be sorted\n   */\n  private orderYears = async (sorted: SortedUnavailabilityDto): Promise => {\n    // return a single year\n    if (sorted.yB === null) {\n      return { y1: sorted.yA, y2: null };\n    }\n    // place 2 years in order & validate they are sequential\n    if (sorted.yA[0].year  => {\n    // grab the year property from the first element\n    const iYear: number = value.unavailability[0].year;\n    // filter for other year(s)\n    const tYearB: UnavailabilityDto[] = value.unavailability.filter(\n      val => val.year !== iYear,\n    );\n    // return 2 sorted years\n    if (tYearB && tYearB.length) {\n      await this.validate2Years(tYearB);\n      const yearB = tYearB.sort((a, b) => a.doy - b.doy);\n      const yearA: UnavailabilityDto[] = value.unavailability\n        .filter(val => val.year === iYear)\n        .sort((a, b) => a.doy - b.doy);\n      return { yA: yearA, yB: yearB };\n    }\n    // return a single sorted year\n    return {\n      yA: value.unavailability.sort((a, b) => a.doy - b.doy),\n      yB: null,\n    };\n  }\n\n  /**\n   * **summary**: use the sort(), orderYears(), validateSequential(), and validate2Years() methods to sort and return the data as a ValidateScheduleUnavailabilityDto\n   * @param value the raw client request data\n   */\n  async transform(value: RawScheduleUnavailabilityDto): Promise {\n    try {\n      const sorted: SortedUnavailabilityDto = await this.sort(value);\n      const ordered = await this.orderYears(sorted);\n      Logger.log(`the ordered data below:`);\n      Logger.log(ordered);\n      return ordered;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SortedUnavailabilityDto.html":{"url":"interfaces/SortedUnavailabilityDto.html","title":"interface - SortedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SortedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/sorted-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the raw unavailability request has now been sorted into two year groupings, if the requested unavailability\nspans across two years; e.g. December 20 2020 - January 5 2021\n\npassed to the ValidateUnavailabilityPipe\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        yA\n                                \n                                \n                                        yB\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        yA\n                                    \n                                \n                                \n                                    \n                                        yA:         UnavailabilityDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnavailabilityDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yB\n                                    \n                                \n                                \n                                    \n                                        yB:         UnavailabilityDto[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnavailabilityDto[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: the raw unavailability request has now been sorted into two year groupings, if the requested unavailability\n * spans across two years; e.g. December 20 2020 - January 5 2021\n * - passed to the ValidateUnavailabilityPipe\n */\nexport interface SortedUnavailabilityDto {\n    yA: UnavailabilityDto[];\n    yB: UnavailabilityDto[] | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestRentalService.html":{"url":"injectables/TestRentalService.html","title":"injectable - TestRentalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestRentalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/service/test-rental.service.ts\n        \n\n            \n                Description\n            \n            \n                Test Rental Service provides access to private rentalModel for Unit Testing\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRentalQuery\n                            \n                            \n                                    Async\n                                returnRentalModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rentalModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/service/test-rental.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rentalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRentalQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRentalQuery(rental)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/test-rental.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rental\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            returnRentalModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    returnRentalModel()\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/test-rental.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RentalInterface } from '../interface/modelInterface/Rental/rental.interface';\nimport { Injectable } from '@nestjs/common';\n\n/**\n * Test Rental Service provides access to private rentalModel for Unit Testing\n */\n@Injectable()\nexport class TestRentalService {\n  constructor(\n    @InjectModel('Rental') private readonly rentalModel: Model,\n  ) {}\n\n  async returnRentalModel() {\n    return this.rentalModel;\n  }\n\n  async createRentalQuery(rental) {\n    const query: any = {\n      'scheduling.rentMinDuration': { $lte: rental.rentalDuration },\n      'scheduling.rentMaxDuration': { $gte: rental.rentalDuration },\n      'scheduling.requiredNotice': { $lte: rental.givenNotice },\n      'loc': {\n        $near: {\n          $maxDistance: 12875, // 8 miles\n          $geometry: {\n            type: rental.loc.type,\n            coordinates: [\n              rental.loc.coordinates[0], // latitude\n              rental.loc.coordinates[1], // longitude\n            ],\n          },\n        },\n      },\n    };\n    rental.price\n      ? (query.pricing = {\n          price: rental.price, // add price as optional search parameter\n        })\n      : (rental.priceRange = null);\n    rental.features\n      ? (query.features = { $in: rental.features })\n      : (rental.features = null);\n    return query;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransporterInterface.html":{"url":"interfaces/TransporterInterface.html","title":"interface - TransporterInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransporterInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/interface/transporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: transport interface for the gmail NodeMailer\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                                \n                                        host\n                                \n                                \n                                        port\n                                \n                                \n                                        secureConnection\n                                \n                                \n                                        tls\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secureConnection\n                                    \n                                \n                                \n                                    \n                                        secureConnection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tls\n                                    \n                                \n                                \n                                    \n                                        tls:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransporterInterface {\n    host: string;\n    secureConnection: boolean // TLS requires secureConnection to be false\n    port: number;\n    tls: {\n        ciphers: string;\n    }\n    auth: {\n        user: string;\n        pass: string;\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeOfValue.html":{"url":"classes/TypeOfValue.html","title":"class - TypeOfValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeOfValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/util/typeof-value.ts\n        \n\n            \n                Description\n            \n            \n                summary: confirm the provided value is the expected type or null\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/util/typeof-value.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TypeOfValue {\n    validate = (value: any, expected: string) => {\n        if ((typeof value) !== expected && value !== null) {\n            return false;\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityDto.html":{"url":"classes/UnavailabilityDto.html","title":"class - UnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: schedule a block of unavilable time for the rental on a given day and year\n\na user may schedule up to a year in the future so the specific \"year\" and \"day of the year\" is required\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityDto {\n    rentalId: string;\n    year: number;\n    doy: number; // day of the year\n    start: number; // min: 0; max: 24 military time\n    end: number; // min: 0; max: 24 military time\n    title: string; // e.g. Christmas Break\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityInterface.html":{"url":"classes/UnavailabilityInterface.html","title":"class - UnavailabilityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the 'Unavailability' Model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityInterface {\n    rentalId: string;\n    year: number;\n    doy: number; // day of the year\n    start: number; // min: 0; max: 24 military time\n    end: number; // min: 0; max: 24 military time\n    title: string; // e.g. Christmas Break\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityQueryDto.html":{"url":"classes/UnavailabilityQueryDto.html","title":"class - UnavailabilityQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/unavailability-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is used to check if the request to schedule Unavailability will overlap with Unavailability already scheduled for the rental in the database.\nThis dto uses a MongoDB $or aggregator to check the following Unavailability overlap conditions:\n\n1: verify the requested Unavailability does not 'enclose' an already scheduled Unavailability for this rental\n2: verify the requested Unavailability does not 'overlap' the end of an already scheduled Unavailability for this rental\n3: verify the requested Unavailability does not 'overlap' the start of an already scheduled Unavailability for this rental\n4: verify the requested Unavailability is not 'enclosed by' an already scheduled Unavailability for this rental\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $or\n                            \n                            \n                                doy\n                            \n                            \n                                rentalId\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $or\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type, literal type, literal type, literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityQueryDto {\n  rentalId: string;\n  year: number;\n  doy: { $lte: number; $gte: number };\n  $or: [\n    {\n      start: { $gte: number};\n      end: { $lte: number };\n    },\n    {\n      start: {$lte: number};\n      end: { $gte: number };\n    },\n    {\n        start: {$lte: number},\n        end: {$gte: number},\n    },\n    {\n        start: {$lte: number},\n        end: {$gte: number},\n    }\n  ];\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUnavailabilityDataDto.html":{"url":"classes/UpdateUnavailabilityDataDto.html","title":"class - UpdateUnavailabilityDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUnavailabilityDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/update-unavailability-data.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the mongoose update object created by the CreateUpdaterDtoPipe, it's the data to update an Unavailability for a rental\n\npassed to the rental.service.updateUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability-data.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability-data.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUnavailabilityDataDto {\n    filter: {\n        rentalId: string,\n        unavailabilityId: string,\n    };\n    updater: {\n        $set: {\n            start: number,\n            end: number,\n        },\n    } | {\n        $set: {\n            start: number,\n            end: number,\n            title: string,\n        },\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUnavailabilityDto.html":{"url":"classes/UpdateUnavailabilityDto.html","title":"class - UpdateUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/update-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this is a mapped version of the raw request to update a Rental's already scheduled Unavailability.\nIt serves a simplified reference to the original data that will be used by the handler\n\npassed to rental.service.updateUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEnd\n                            \n                            \n                                newStart\n                            \n                            \n                                newTitle\n                            \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEnd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUnavailabilityDto {\n  unavailabilityId: string;\n  rentalId: string;\n  newStart: number;\n  newEnd: number;\n  newTitle: string; // not required\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserDto.html":{"url":"injectables/UpdateUserDto.html","title":"injectable - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data for updating a user profile\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: data for updating a user profile\n */\n@Injectable()\nexport class UpdateUserDto {\n    username?: string;\n    email?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n            \n                Description\n            \n            \n                summary: controller for managing users in the application\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(user: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new BcryptHashPipe())@UsePipes(new JoiValidationPipe())@Post('create-user')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:26\n                \n            \n\n\n            \n                \n                    summary: create a new user profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(data: DeleteUserDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Redirect('http://localhost:3000/auth/login', 302)@Post('delete-profile')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:63\n                \n            \n\n\n            \n                \n                    summary: delete a user profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user credentials\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(email: FindUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Get('find-user')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:50\n                \n            \n\n\n            \n                \n                    summary: find a user by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                FindUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(update: UpdateUserDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Post('update-user')@Redirect('http://localhost:3000/auth/login')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:39\n                \n            \n\n\n            \n                \n                    summary: update a user's profile data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        updates\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, UsePipes, UseGuards, Req, Redirect } from '@nestjs/common';\nimport { JwtAuthGuard } from '../../auth/gaurds/jwt-auth.guard';\nimport { LoggedOutGaurd } from '../../auth/gaurds/logged-out.guard';\nimport { JoiValidationPipe } from '../../common/pipes/joi-validation.pipe';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { DeleteUserDto } from '../dto/delete-user.dto';\nimport { FindUserDto } from '../dto/find-user.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { BcryptHashPipe } from '../pipes/bcrypt.pipe';\nimport { CreateUserValidation } from '../schema/validation/create-user-validation.schema';\nimport { UserService } from '../service/user.service';\n/**\n * **summary**: controller for managing users in the application\n */\n@Controller('user')\nexport class UserController {\n    constructor(private readonly userService: UserService) {}\n    \n    /**\n     * **summary**: create a new user profile\n     * @param user new user data\n     */\n    @UsePipes(new BcryptHashPipe())\n    @UsePipes(new JoiValidationPipe(CreateUserValidation))\n    @Post('create-user')\n    async createProfile(@Body() user: CreateUserDto) {\n        return await this.userService.createUser(user);\n    }\n\n    /**\n     * **summary**: update a user's profile data\n     * @param update updates\n     * @param req client request\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Post('update-user')\n    @Redirect('http://localhost:3000/auth/login')\n    async updateProfile(@Body() update: UpdateUserDto, @Req() req) {\n        return await this.userService.updateUser(update, req);\n    }\n\n    /**\n     * summary: find a user by email\n     * @param email \n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Get('find-user')\n    async findUser(@Body() email: FindUserDto) {\n        return await this.userService.findUser(email)\n    }\n\n\n    /**\n     * **summary**: delete a user profile\n     * @param data user credentials\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Redirect('http://localhost:3000/auth/login', 302)\n    @Post('delete-profile')\n    async deleteProfile(@Body() data: DeleteUserDto, @Req() req) {\n        return this.userService.deleteUser(data, req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/modelInterface/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the User model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        resetPasswordExpires\n                                \n                                \n                                        resetPasswordToken\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordExpires\n                                    \n                                \n                                \n                                    \n                                        resetPasswordExpires:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordToken\n                                    \n                                \n                                \n                                    \n                                        resetPasswordToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n    username: string;\n    email: string;\n    password: string;\n    resetPasswordToken: string;\n    resetPasswordExpires: Date;\n  }\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_imports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppConfigModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nUserModule -->\n\nExtractKeyValueUtil->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nUserModule -->\n\nVerifyNewPasswordUtil->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nsummary: this module provides all of the functionality for managing user profiles\nMiddleware: this module consumes the ValidateEmailMiddleware middleware\n\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            UserService\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from '../user/schema/user.schema'\nimport { UserController } from './controller/user.controller';\nimport { UserService } from './service/user.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { ValidateEmailMiddleware } from './middleware/validate-email.middleware';\nimport { userProvider} from '../database/providers/user-model.provider';\nimport { RedisModule } from '../redis/redis.module';\nimport { ExtractKeyValueUtil } from '../auth/util/extract-key-value.util';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { VerifyNewPasswordUtil } from '../auth/util/verify-new-password.util';\nimport { RedisService } from '../redis/service/redis.service';\n/**\n * - **summary**: this module provides all of the functionality for managing user profiles\n * - **Middleware**: this module consumes the **ValidateEmailMiddleware** middleware\n */\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema}]),\n    DatabaseModule,\n    RedisModule,\n    AppConfigModule,\n    RedisModule\n  ],\n  providers: [UserService,...userProvider, ExtractKeyValueUtil, VerifyNewPasswordUtil, RedisService],\n  controllers: [UserController],\n  exports: [UserService], // used in the AuthService\n})\nexport class UserModule  {\n  constructor() {\n  }\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ValidateEmailMiddleware)\n      .forRoutes('v1/user')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPropertyDto.html":{"url":"classes/UserPropertyDto.html","title":"class - UserPropertyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPropertyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user-property.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for the req.user property added to the request by passport when a user is authenticated\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserPropertyDto {\n    _id: string;\n    username: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/user.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: contains all of the functionality to manage a user profile\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Private\n                                createUserUpdate\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                findUserByResetPasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                logoutUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, extractKeyValueUtil: ExtractKeyValueUtil, verifyNewPasswordUtil: VerifyNewPasswordUtil, redisService: RedisService)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractKeyValueUtil\n                                                  \n                                                        \n                                                                        ExtractKeyValueUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyNewPasswordUtil\n                                                  \n                                                        \n                                                                        VerifyNewPasswordUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:31\n                \n            \n\n\n            \n                \n                    summary: create a new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createUserUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserUpdate(data: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:126\n                \n            \n\n\n            \n                \n                    *** Private Functions ****\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(data: DeleteUserDto, req)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:98\n                \n            \n\n\n            \n                \n                    summary: delete a user's account\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user credentials\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(data: FindUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:46\n                \n            \n\n\n            \n                \n                    summary: find a user by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FindUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserByResetPasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByResetPasswordToken(data: ResetPasswordTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:59\n                \n            \n\n\n            \n                \n                    summary: find a user by their resetPasswordToken once they have submitted the reset password email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutUser(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:139\n                \n            \n\n\n            \n                \n                    summary: log a user out of the application by adding their JWT to the Redis cache 'dead-list'\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(data: UpdateUserDto, req)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:73\n                \n            \n\n\n            \n                \n                    summary: update an existing user's information\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the update user data\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { UserInterface } from '../interface/modelInterface/user.interface';\nimport { FindUserDto } from '../dto/find-user.dto';\nimport { ResetPasswordTokenDto } from '../dto/find-user-by-reset-password-token.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { Request } from 'express';\nimport { ExtractKeyValueUtil } from '../../auth/util/extract-key-value.util';\nimport { DeleteUserDto } from '../dto/delete-user.dto';\nimport { VerifyNewPasswordUtil } from 'src/auth/util/verify-new-password.util';\nimport { RedisService } from '../../redis/service/redis.service';\nimport { JwtPayloadDto } from 'src/auth/dto/jwt-payload';\n/**\n * **summary**: contains all of the functionality to manage a user profile\n */\n@Injectable()\nexport class UserService {\n    constructor(\n        @InjectModel('User') private readonly userModel: Model,\n        private readonly extractKeyValueUtil: ExtractKeyValueUtil,\n        private readonly verifyNewPasswordUtil: VerifyNewPasswordUtil,\n        private readonly redisService: RedisService,\n    ) { }\n\n    /**\n     * **summary**: create a new user\n     * @param user \n     */\n    async createUser(user: CreateUserDto) {\n        try {\n            const document = await new this.userModel(user);\n            await document.save();\n            document.password = undefined;\n            return document;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: find a user by email\n     * @param data email\n     */\n    async findUser(data: FindUserDto) {\n        try {\n            const user = await this.userModel.findOne({ email: data.email });\n            return user;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: find a user by their resetPasswordToken once they have submitted the reset password email\n     * @param data the token\n     */\n    async findUserByResetPasswordToken(data: ResetPasswordTokenDto) {\n        try {\n            const user = await this.userModel.findOne({ resetPasswordToken: data.token });\n            return user;\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n\n    /**\n     * **summary**: update an existing user's information\n     * @param data the update user data\n     * @param req the client request\n     */\n    async updateUser(data: UpdateUserDto, req ) {\n        try {\n            // extract user email\n            const user: JwtPayloadDto = req.user;\n            const filter = {email: user.email };\n            // create an update object\n            let update = this.createUserUpdate(data);\n            const updater = {\n                $set: update,\n            }\n            // logout the user and return the data before redirecting to login\n            await this.logoutUser(req);\n            console.log('UPDATE USER: RETURN')\n            console.log(await this.userModel.findOneAndUpdate(filter, updater, {new: true}));\n            return await this.userModel.findOneAndUpdate(filter, updater, {new: true});\n       } catch(err) {\n           throw new Error(err)\n       }\n    }\n\n    /**\n     * **summary**: delete a user's account\n     * @param data user credentials\n     * @param req the client request\n     */\n    async deleteUser(data: DeleteUserDto, req) {\n        try {\n            // extract user email\n            const doc:JwtPayloadDto = req.user;\n            // query the user\n            const user = await this.findUser({email: doc.email});\n            // verify their password matches the current\n            await this.verifyNewPasswordUtil.verifyMatch({newPassword: data.password, oldPassword: user.password})\n            // logout\n            await this.logoutUser(req);\n            // delete\n            const res = await user.remove();\n            console.log('DELETE USER: RETURN')\n            console.log(res);\n            return res.deletedCount;\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     ************************ Private Functions ************************\n    */\n\n    /**\n     * **summary**: create a MongoDB update object for updating a user profile\n     * @param data raw request data to update a user\n     */\n    private createUserUpdate(data: UpdateUserDto) {\n        let update: UpdateUserDto = {}\n        data.username ? update.username = data.username : data.username = null;\n        data.email ? update.email = data.email : data.email = null;\n        console.log('CREATE USER UPDATE: RETURN')\n        console.log(update);\n        return update;\n    }\n\n    /**\n     * **summary**: log a user out of the application by adding their JWT to the Redis cache 'dead-list'\n     * @param req the client request\n     */\n    private async logoutUser(req: Request){\n        const {jwt, key} = await this.extractKeyValueUtil.extract(req);\n        await this.redisService.set(key, jwt);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEditDetailsPipe.html":{"url":"injectables/ValidateEditDetailsPipe.html","title":"injectable - ValidateEditDetailsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEditDetailsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-edit-details.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate that the request to update the Rental's details (the spec property) will not violate the\nRentalSchemaValidation\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                positiveNumber\n                            \n                            \n                                typeOfValue\n                            \n                            \n                                    Private\n                                validateDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/validate-edit-details.pipe.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: EditDetailsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:99\n                \n            \n\n\n            \n                \n                    summary: use the validateDetails() method to validate the request before passing to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request to edit the details (spec property) of a Rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positiveNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PositiveNumber\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeOfValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TypeOfValue\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:23\n                            \n                        \n\n                \n                    \n                        summary: validate EditDetailsDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the request data to edit the rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { PositiveNumber } from '../../common/util/positive-number';\nimport { TypeOfValue } from '../../common/util/typeof-value';\n/**\n * **summary**: validate that the request to update the Rental's details (the spec property) will not violate the\n * RentalSchemaValidation\n */\n@Injectable()\nexport class ValidateEditDetailsPipe implements PipeTransform {\n\n    positiveNumber: PositiveNumber;\n    typeOfValue: TypeOfValue;\n    constructor() {\n        this.positiveNumber = new PositiveNumber();\n        this.typeOfValue = new TypeOfValue();\n    }\n\n    /**\n     * **summary**: validate EditDetailsDto\n     * @param value the request data to edit the rental\n     */\n    private validateDetails = async (value: EditDetailsDto) => {\n        // check rentalId\n        if (!value.rentalId || !this.typeOfValue.validate(value.rentalId, 'string')) {\n            throw new Error('Invalid rental id');\n        }\n        // must have at least one detail to update\n        if (!value.specs && !value.features) {\n            throw new Error('Invalid request, no details given');\n        }\n        // validate each spec value\n        if (value.specs) {\n            if (value.specs.odometer &&\n                !this.typeOfValue.validate(value.specs.odometer, 'number') || !this.positiveNumber.validate(value.specs.odometer)\n                ) {\n                    throw new Error('Odometer must be a positive number');\n                }\n            if (value.specs.transmission &&\n                !this.typeOfValue.validate(value.specs.transmission, 'string')) {\n                    throw new Error('transmission must be a valid value (string)');\n                }\n            if (value.specs.cityMpg &&\n                !this.typeOfValue.validate(value.specs.cityMpg, 'number') || !this.positiveNumber.validate(value.specs.cityMpg)) {\n                    throw new Error('cityMpg must be a positive number');\n                }\n            if (value.specs.hwyMpg &&\n                !this.typeOfValue.validate(value.specs.hwyMpg, 'number') || !this.positiveNumber.validate(value.specs.hwyMpg)) {\n                    throw new Error('hwyMpg must be a positive number');\n                }\n            if (value.specs.fuel &&\n                !this.typeOfValue.validate(value.specs.fuel, 'string')) {\n                    throw new Error('fuel must be a valid value (string)');\n                }\n            if (value.specs.gasGrade &&\n                !this.typeOfValue.validate(value.specs.gasGrade, 'string')) {\n                    throw new Error('gasGrade must be a valid value (string)');\n                }\n            if (value.specs.description &&\n                !this.typeOfValue.validate(value.specs.description, 'string')) {\n                    throw new Error('description must be a valid value (string)');\n                }\n            if (value.specs.model &&\n                !this.typeOfValue.validate(value.specs.model, 'string')) {\n                    throw new Error('model must be a valid value (string)');\n                }\n            if (value.specs.style &&\n                !this.typeOfValue.validate(value.specs.style, 'string')) {\n                    throw new Error('style must be a valid value (string)');\n                }\n            if (value.specs.color &&\n                !this.typeOfValue.validate(value.specs.color, 'string')) {\n                    throw new Error('color must be a valid value (string)');\n                }\n            if (value.specs.numOfSeats &&\n                !this.typeOfValue.validate(value.specs.numOfSeats, 'number') || !this.positiveNumber.validate(value.specs.numOfSeats)) {\n                    throw new Error('numOfSeats must be a positive number');\n                }\n            if (value.specs.numDoors &&\n                !this.typeOfValue.validate(value.specs.numDoors, 'number') || !this.positiveNumber.validate(value.specs.numDoors)) {\n                    throw new Error('numDoors must be a positive number');\n                }\n        }\n        if (value.features) {\n            if (value.features.length > 0) {\n                for (const x of value.features) {\n                    if (!this.typeOfValue.validate(x, 'string')) {\n                        throw new Error('features must be valid values (string)');\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * **summary**: use the validateDetails() method to validate the request before passing to the handler\n     * @param value the raw client request to edit the details (spec property) of a Rental\n     */\n    async transform(value: EditDetailsDto):Promise {\n        await this.validateDetails(value);\n        return value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEmailMiddleware.html":{"url":"injectables/ValidateEmailMiddleware.html","title":"injectable - ValidateEmailMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEmailMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/middleware/validate-email.middleware.ts\n        \n\n            \n                Description\n            \n            \n                summary: before creating a new user, validate that their email is not already in the database. this middleware is only applied to the \nuser.controller.createUser() method\n\nnote: uses the ValidateEmailUtil class\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validateEmailUtil\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Private\n                                    Async\n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/middleware/validate-email.middleware.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/user/middleware/validate-email.middleware.ts:39\n                \n            \n\n\n            \n                \n                    summary: use the validateEmail method to validate the requested new user email does not already exist before continuing to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the client request\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the response\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the next method to continue to the request handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmail(value: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/middleware/validate-email.middleware.ts:28\n                \n            \n\n\n            \n                \n                    summary: query the databse to valdiate the requested new email is unique to the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested new user email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateEmailUtil\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateEmailUtil\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/middleware/validate-email.middleware.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, NestMiddleware } from '@nestjs/common'\nimport { Request, Response } from 'express';\nimport { userModel } from '../../common/Const';\nimport { UserInterface } from '../interface/modelInterface/user.interface';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { ValidateEmailUtil } from '../util/validate-email.util';\n/**\n * **summary**: before creating a new user, validate that their email is not already in the database. this middleware is only applied to the \n * user.controller.createUser() method\n * - note: uses the ValidateEmailUtil class\n */\n@Injectable()\nexport class ValidateEmailMiddleware implements NestMiddleware {\n\n    validateEmailUtil: ValidateEmailUtil;\n    constructor(\n        @Inject(userModel)\n        private readonly user: Model,\n    ) {\n        this.validateEmailUtil = new ValidateEmailUtil()\n    }\n\n    /**\n     * **summary**: query the databse to valdiate the requested new email is unique to the database\n     * @param value the requested new user email\n     */\n    private async validateEmail(value: CreateUserDto) {\n        const check = await this.user.find({ email: value.email });\n        this.validateEmailUtil.validateEmail(check)\n    }\n\n    /**\n     * **summary**: use the validateEmail method to validate the requested new user email does not already exist before continuing to the handler\n     * @param req the client request\n     * @param res the response\n     * @param next the next method to continue to the request handler\n     */\n    async use(req: Request, res: Response, next: Function) {\n        // apply to create-user route\n        if (req.originalUrl === '/v1/user/create-user') {\n            await this.validateEmail(req.body);\n        }\n        next();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEmailUtil.html":{"url":"injectables/ValidateEmailUtil.html","title":"injectable - ValidateEmailUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEmailUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/util/validate-email.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: throw an error if the user email already exists\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/user/util/validate-email.util.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateEmail(check)\n                \n            \n\n\n            \n                \n                    Defined in src/user/util/validate-email.util.ts:14\n                \n            \n\n\n            \n                \n                    summary: if the array has a length greater than 0, a user with the email already exists\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    check\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: throw an error if the user email already exists\n * @param check the results of a find user by email query\n */\n@Injectable()\nexport class ValidateEmailUtil {\n    constructor() {}\n\n    /**\n     * **summary**: if the array has a length greater than 0, a user with the email already exists\n     * @param check \n     */\n    validateEmail(check){\n        if(check.length === 0 || check.length === undefined) return\n        throw new Error('A User exists that is already using this email');\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateRemoveUnavailabilityPipe.html":{"url":"injectables/ValidateRemoveUnavailabilityPipe.html","title":"injectable - ValidateRemoveUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateRemoveUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-remove-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate a client request to remove (unschedule) Unavailability from a Rental\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                validateDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: RemoveUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-remove-unavailability.pipe.ts:24\n                \n            \n\n\n            \n                \n                    summary: use the validateDto method to validate the request before passing it on\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RemoveUnavailabilityDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-remove-unavailability.pipe.ts:12\n                            \n                        \n\n                \n                    \n                        summary: check the request has a valid rentalId and unavailabilityId\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw client request to remove Unavailability from a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\n/**\n * **summary**: validate a client request to remove (unschedule) Unavailability from a Rental\n */\n@Injectable()\nexport class ValidateRemoveUnavailabilityPipe implements PipeTransform {\n    /**\n     * **summary**: check the request has a valid rentalId and unavailabilityId\n     * @param value the raw client request to remove Unavailability from a Rental\n     */\n    private validateDto = (value: RemoveUnavailabilityDto) => {\n        if (typeof value.rentalId !== 'string') {\n            throw new Error('invalid rental ID; must be a string');\n        }\n        if (typeof value.unavailabilityId !== 'string') {\n            throw new Error('invalid unavailability ID; must be a string');\n        }\n    }\n    /**\n     * **summary**: use the validateDto method to validate the request before passing it on\n     * @param value the raw client request\n     */\n    transform(value: RemoveUnavailabilityDto):RemoveUnavailabilityDto {\n        this.validateDto(value);\n        return value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateScheduleUnavailabilityDto.html":{"url":"classes/ValidateScheduleUnavailabilityDto.html","title":"class - ValidateScheduleUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateScheduleUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the SortUnavailabilityPipe, this dto contains the raw request to schedule Unavailability\nfor a rental sorted into two year groupings; if the requested Unavailability spans across 2 years. This would usually occur\nnear the end of a year, such as from Decemeber 20, 2020 - January 5, 2021\n\npassed to the ValidateUnavailabilityPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[] | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: returned by the SortUnavailabilityPipe, this dto contains the raw request to schedule Unavailability\n * for a rental sorted into two year groupings; if the requested Unavailability spans across 2 years. This would usually occur\n * near the end of a year, such as from Decemeber 20, 2020 - January 5, 2021\n * - passed to the ValidateUnavailabilityPipe\n */\nexport class ValidateScheduleUnavailabilityDto {\n    y1: UnavailabilityDto[];\n    y2: UnavailabilityDto[] | null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateUnavailabilityPipe.html":{"url":"injectables/ValidateUnavailabilityPipe.html","title":"injectable - ValidateUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-unavailability.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLeapYear\n                            \n                            \n                                    Private\n                                convertToDateTime\n                            \n                            \n                                    Private\n                                validateCrossover\n                            \n                            \n                                    Private\n                                validateCrossYearCongruence\n                            \n                            \n                                    Private\n                                validateEachUnavailability\n                            \n                            \n                                    Private\n                                validateMinNotice\n                            \n                            \n                                    Private\n                                validateRelevance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidateScheduleUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:210\n                \n            \n\n\n            \n                \n                    summary: use the validateRelevance(), validateEachUnavailability(), validateCrossover(), validateCrossYearCongruence(),\nvalidateMinNotice(), and checkLeapYear() methods to validate the client request and return a ValidatedUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidateScheduleUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sorted but unvalidated client request data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkLeapYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:122\n                            \n                        \n\n                \n                    \n                        summary: use the Luxon DateTime.isInLeapYear() method\nto check if the this current year is a leap year. For example, this year 2020 is actually a leap year!\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        u1\n                                                        \n                                                                the initial unavailability's DateTime\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            convertToDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:28\n                            \n                        \n\n                \n                    \n                        summary: confirm that the user is requesting to schedule a single block of Unavailable time for their Rental that is logically and will\nnot cause an error in the application\n-validate requested rental start DateTime is not before the current DateTime\n\nif 2 years\nvalidate each unavailability for y1 and y2 (private validateUnavailability)\ncheck if y1 is a leap year, validate the number of days in the year (DOY) if it is a leap year\nvalidate DOY crossover from y1 to y2; validate the extra DOY if it's a leap year\n\n\nelse: \nvalidate each unavailability in the single year\n\n\nreturn the validated year(s)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateCrossover\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:79\n                            \n                        \n\n                \n                    \n                        summary: this method is called when the requested Unavailability spans into the next year. this method verifies that the crossover into the next year\nincludes the extra day if it's a leapYear. Even if it's not a leap year, this method verifies there are no missing or extra days as the Unavailability enters the\nstart of the next year\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                \n                                                \n                                                        y2\n                                                \n                                                \n                                                        ly\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateCrossYearCongruence\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:184\n                            \n                        \n\n                \n                    \n                        summary: validate congruence in rentalId, start, end, and title across y1 and y2\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                        \n                                                                the first year of the requested Unavailability\n\n                                                        \n                                                \n                                                \n                                                        y2\n                                                        \n                                                                the second year of the requested Unavailability\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateEachUnavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:133\n                            \n                        \n\n                \n                    \n                        summary: validate the data inisde of each UnavailabilityDto that will be used to schedule a sequential single 'block of Unavailability' for the Rental\n\nnote: uses the toItemIndexes() util to map a new array of tuples conataining an UnavailabilityDto and it's index in the array\n\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        unavailability\n                                                        \n                                                                an array of UnavailabilityDtos, which is the data to create an individual Unavailability Document in the database\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateMinNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:47\n                            \n                        \n\n                \n                    \n                        summary: validate that the requested unavailability is not before the current date & time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        a\n                                                        \n                                                                = request start DateTime\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                = current DateTime\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateRelevance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:60\n                            \n                        \n\n                \n                    \n                        summary: validate the requested unavailability start time is not in the past\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the ordered unavailability from previous pipe\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { DateTime, Interval } from 'luxon';\nimport { ValidateScheduleUnavailabilityDto } from '../dto/unavailability/schedule/validate-schedule-unavailability.dto';\nimport { UnavailabilityDto } from '../dto/unavailability/unavailability.dto';\nimport { toItemIndexes } from '../../common/util/to-item-indexes';\nimport { validated } from '../../common/Const';\nimport { ValidatedUnavailabilityDto } from '../dto/unavailability/validated-unavailability.dto';\n\n@Injectable()\nexport class ValidateUnavailabilityPipe implements PipeTransform {\n  /**\n   * **summary**: confirm that the user is requesting to schedule a single block of Unavailable time for their Rental that is logically and will\n   * not cause an error in the application\n   * -validate requested rental start DateTime is not before the current DateTime\n   * - if 2 years\n   *   - validate each unavailability for y1 and y2 (private validateUnavailability)\n   *   - check if y1 is a leap year, validate the number of days in the year (DOY) if it is a leap year\n   *   - validate DOY crossover from y1 to y2; validate the extra DOY if it's a leap year\n   * - else: \n   *   - validate each unavailability in the single year\n   * - return the validated year(s)\n   */\n\n  /**\n   * **summary**: use the [**Luxon DateTime.fromObject()**]() method to create a new DateTime from the raw client requested startTime\n   * @param u1 the 1st unavailabilityDto\n   */\n  private convertToDateTime = async (u1: UnavailabilityDto): Promise => {\n    if (!u1) {\n      throw new Error('There is no requested unavailability');\n    }\n    const start: DateTime = DateTime.fromObject({\n      year: u1.year,\n      ordinal: u1.doy,\n      hour: u1.start,\n    });\n    Logger.log(`the requested start DateTime below:`);\n    Logger.log(start);\n    return start;\n  }\n\n  /**\n   * **summary**: validate that the requested unavailability is not before the current date & time\n   * @param a = request start DateTime\n   * @param b = current DateTime\n   */\n  private validateMinNotice = async (a: DateTime, b: DateTime) => {\n    const notice: Interval = Interval.fromDateTimes(a, b).count('hours');\n    if (isNaN(notice) || notice  => {\n    // should already know y1 and y2\n    const currentDateTime = DateTime.local();\n    Logger.log(`the current DateTime below:`);\n    Logger.log(currentDateTime);\n    const start: DateTime = await this.convertToDateTime(value.y1[0]);\n    // compare current DT and start DT\n    await this.validateMinNotice(currentDateTime, start);\n    return start;\n  }\n\n  /**\n   * **summary**: this method is called when the requested Unavailability spans into the next year. this method verifies that the crossover into the next year\n   * includes the extra day if it's a leapYear. Even if it's not a leap year, this method verifies there are no missing or extra days as the Unavailability enters the\n   * start of the next year\n   * @param y1 \n   * @param y2 \n   * @param ly \n   */\n  private validateCrossover = async (\n    y1: UnavailabilityDto[],\n    y2: UnavailabilityDto[],\n    ly: boolean,\n  ): Promise => {\n    // y1's final Unavailability\n    const y1Final = y1[y1.length - 1];\n    // # of days in y1\n    const diy = (await this.convertToDateTime(y1Final)).daysInYear;\n    // final DOY of y1 must equal diy of y1\n    if (diy !== y1Final.doy) {\n      if (ly) {\n        throw new Error(\n          `the final day of this leap year, ${y1Final.doy}/${\n            y1Final.year\n          }, is missing`,\n        );\n      }\n      throw new Error(\n        `the final day of this year, ${y1Final.doy}/${y1Final.year}, is missing`,\n      );\n    }\n    // validate y2 starts at 0, we already know it's sequential\n    if (y2[0]) {\n      if (y2[0].doy !== 0) {\n        throw new Error('the 1st day of the second year is missing');\n      }\n    } else {\n      throw new Error('there is not a second year');\n    }\n    Logger.log('the final unavailability of y1');\n    Logger.log(y1Final);\n    Logger.log(\n      `the total days in y1: ${diy} & the final day of y1: ${y1Final.doy}`,\n    );\n    Logger.log(`this is a leap year: ${ly}`);\n  }\n\n  /**\n   * **summary**: use the [*Luxon DateTime.isInLeapYear()*](https://moment.github.io/luxon/docs/class/src/datetime.js~DateTime.html#instance-get-isInLeapYear) method\n   * to check if the this current year is a [**leap year**](https://www.timeanddate.com/date/leapyear.html). For example, this year 2020 is actually a leap year!\n   * @param u1 the initial unavailability's DateTime\n   */\n  private checkLeapYear = async (u1: DateTime) => {\n    const check = u1.isInLeapYear;\n\n    return check; // true or false\n  }\n\n  /**\n   * **summary**: validate the data inisde of each UnavailabilityDto that will be used to schedule a sequential single 'block of Unavailability' for the Rental\n   * - note: uses the toItemIndexes() util to map a new array of **tuples** conataining an UnavailabilityDto and it's index in the array\n   * @param unavailability an array of UnavailabilityDtos, which is the data to create an individual Unavailability Document in the database\n   */\n  private validateEachUnavailability = async (\n    unavailability: UnavailabilityDto[],\n  ) => {\n    const base = unavailability[0];\n    for (const { item, index } of toItemIndexes(unavailability)) {\n      // rentalId congruence\n      if (item.rentalId !== base.rentalId) {\n        throw new Error('request cannot have more than 1 Rental ID');\n      }\n      // interval\n      if (item.start >= item.end) {\n        throw new Error('start time cannot be before end time');\n      }\n      // interval congruence\n      if (item.start !== base.start || item.end !== base.end) {\n        throw new Error(\n          'each requested day of unavailability must share the same start end time',\n        );\n      }\n      // MTime\n      if (item.start  24 || item.end  24) {\n        throw new Error('the unavailable time must be in military time format');\n      }\n      // year congruence\n      if (item.year !== base.year) {\n        throw new Error(\n          `invalid year: first year ${item.year} second year ${base.year}`,\n        );\n      }\n      // sequential DOY\n      if (index > 0) {\n        if (unavailability[index].doy - 1 !== unavailability[index - 1].doy) {\n          throw new Error('The requested unavailability is not sequential');\n        }\n      }\n      // title congruence\n      if (item.title !== base.title) {\n        throw new Error(\n          `request cannot have more than one title: 1st year title \"${\n            item.title\n          }\" 2nd year title \"${base.title}\"`,\n        );\n      }\n    }\n  }\n\n  /**\n   * **summary**: validate congruence in rentalId, start, end, and title across y1 and y2\n   * @param y1 the first year of the requested Unavailability\n   * @param y2 the second year of the requested Unavailability\n   */\n  private validateCrossYearCongruence = async (\n    y1: UnavailabilityDto,\n    y2: UnavailabilityDto,\n  ) => {\n    if (y1.rentalId !== y2.rentalId) {\n      throw new Error('request cannot have more than 1 Rental ID');\n    }\n    if (y1.start !== y2.start || y1.end !== y2.end) {\n      throw new Error(\n        'each requested day of unavailability must share the same start end time',\n      );\n    }\n    if (y1.title !== y2.title) {\n      throw new Error(\n        `request cannot have more than one title: 1st year title \"${\n          y1.title\n        }\" 2nd year title \"${y2.title}\"`,\n      );\n    }\n  }\n\n  /**\n   * **summary**: use the validateRelevance(), validateEachUnavailability(), validateCrossover(), validateCrossYearCongruence(),\n   * validateMinNotice(), and checkLeapYear() methods to validate the client request and return a ValidatedUnavailabilityDto\n   * @param value the sorted but unvalidated client request data\n   */\n  async transform(value: ValidateScheduleUnavailabilityDto): Promise {\n    try {\n      const start: DateTime = await this.validateRelevance(value);\n      // if 2 years; if there are 2 years we know y1 must include the final doy of y1\n      if (value.y2 !== null) {\n        // validate 2 years\n        await this.validateEachUnavailability(value.y1);\n        await this.validateEachUnavailability(value.y2);\n        // check if y1 is a leap year\n        const ly = await this.checkLeapYear(start);\n        // validate crossover from y1 to y2; account for if it's a leap year\n        await this.validateCrossover(value.y1, value.y2, ly);\n        await this.validateCrossYearCongruence(value.y1[0], value.y2[0]);\n        // return a ValidatedUnavailabilityDto\n        return { y1: value.y1, y2: value.y2, validated };\n      }\n      await this.validateEachUnavailability(value.y1);\n      return { y1: value.y1, y2: null, validated };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateUpdateUnavailabilityDto.html":{"url":"classes/ValidateUpdateUnavailabilityDto.html","title":"class - ValidateUpdateUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateUpdateUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is used to query and validate that the Rental actually has the scheduled Unavailability\nthat the user is requesting to update\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEnd\n                            \n                            \n                                newStart\n                            \n                            \n                                newTitle\n                            \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEnd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidateUpdateUnavailabilityDto {\n  unavailabilityId: string;\n  rentalId: string;\n  y1: {\n    sD: number;\n    eD: number;\n  };\n  y2: {\n    sD: number;\n    eD: number;\n  };\n  newStart: number;\n  newEnd: number;\n  newTitle: string | null; // not required\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{"url":"injectables/ValidateUpdateUnavailabilityMiddleware.html","title":"injectable - ValidateUpdateUnavailabilityMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateUpdateUnavailabilityMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/middleware/validate-update-unavailability.middleware.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate that incoming request to update a rental's already scheduled Unavailability. Validate that the expected # of unavailability docs are present in the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateRange\n                            \n                            \n                                    Private\n                                validateDto\n                            \n                            \n                                    Private\n                                validateExpectedUnavailability\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(unavailability: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        unavailability\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:144\n                \n            \n\n\n            \n                \n                    summary: apply the validatedto(), calculateRange(), and validateExpectedUnavailability() methods to incoming requests to the\nrental.controller.updateUnavailability() method. Validate the request before passing the data to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the response object\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the next method to continue onto the next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:22\n                            \n                        \n\n                \n                    \n                        summary: calculate the range of the requested Unavailability to update for the Rental\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                        \n                                                                the start and end day of the first year that the Unavailability is scheduled across\n\n                                                        \n                                                \n                                                \n                                                        y2\n                                                        \n                                                                the start and end day of the second yaer that the Unavailability is scheduled across; if there is a second year\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:69\n                            \n                        \n\n                \n                    \n                        summary: validate the incoming dto data does not break the below validation tree\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the sorted request to update already scheduled Unavailability on a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateExpectedUnavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:47\n                            \n                        \n\n                \n                    \n                        summary: validate that the unavailability to be updated is present in the database, and verify that the expected range (number of days) of the Unavailability to update\nmatches the actual range of the Unavailability as it's saved in the database. Use the results of the calculateRange() method, to compare the range of the Unavailability in\nthe database to the range of the request\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw request data\n\n                                                        \n                                                \n                                                \n                                                        range\n                                                        \n                                                                the range of the requested update Unavailability data\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { unavailabilityModel } from '../../common/Const';\nimport { Model } from 'mongoose';\nimport { UnavailabilityInterface } from '../interface/modelInterface/Unavailability/unavailability.interface';\nimport { ValidateUpdateUnavailabilityDto } from '../dto/unavailability/update/validate-update-unavailability.dto';\n/**\n * **summary**: validate that incoming request to update a rental's already scheduled Unavailability. Validate that the expected # of unavailability docs are present in the database\n */\n@Injectable()\nexport class ValidateUpdateUnavailabilityMiddleware implements NestMiddleware {\n  constructor(\n    @Inject(unavailabilityModel)\n    private readonly unavailability: Model,\n  ) {}\n\n  /**\n   * **summary**: calculate the [**range**](https://www.mathsisfun.com/data/range.html) of the requested Unavailability to update for the Rental\n   * @param y1 the start and end day of the first year that the Unavailability is scheduled across\n   * @param y2 the start and end day of the second yaer that the Unavailability is scheduled across; if there is a second year\n   */\n  private calculateRange = async (\n    y1: { sD: number; eD: number },\n    y2: { sD: number; eD: number } | null,\n  ) => {\n    if (y2 !== null) {\n      // calculate range for 2 years\n      let temp1: number;\n      let temp2: number;\n      y1.sD === y1.eD ? temp1 = 1 : temp1 = y1.eD - y1.sD + 1;\n      y2.sD === y2.eD ? temp2 = 1 : temp2 = y2.eD - y2.sD + 1;\n      return {range: temp1 + temp2};\n    }\n    if (y1.sD !== y1.eD) {\n      return { range: y1.eD - y1.sD + 1 };\n    }\n    return { range: 1 };\n  }\n\n  /**\n   * **summary**: validate that the unavailability to be updated is present in the database, and verify that the expected **range** (number of days) of the Unavailability to update\n   * matches the actual range of the Unavailability as it's saved in the database. Use the results of the calculateRange() method, to compare the range of the Unavailability in\n   * the database to the range of the request\n   * @param value the raw request data\n   * @param range the range of the requested update Unavailability data\n   */\n  private validateExpectedUnavailability = async (\n    value: ValidateUpdateUnavailabilityDto, range: {range: number},\n  ) => {\n    const test = await this.unavailability.find({\n      rentalId: value.rentalId,\n      unavailabilityId: value.unavailabilityId,\n    });\n\n    if (test.length  {\n    if (typeof value.unavailabilityId !== 'string') {\n      throw new Error('invalid unavailabilityId; must be a string');\n    }\n    if (typeof value.rentalId !== 'string') {\n      throw new Error('invalid rental ID; must be a string');\n    }\n    if (\n      typeof value.newStart !== 'number' ||\n      value.newStart  24\n    ) {\n      throw new Error('invalid start time; must be a number');\n    }\n    if (\n      typeof value.newEnd !== 'number' ||\n      value.newEnd  24\n    ) {\n      throw new Error('invalid end time; must be a number');\n    }\n    if (value.newStart >= value.newEnd) {\n      throw new Error(\n        'start time cannot be the same as, or before, the end time',\n      );\n    }\n    if (typeof value.y1.sD !== 'number') {\n      throw new Error('invalid minimum DOY; must be a number');\n    }\n    if (typeof value.y1.eD !== 'number') {\n      throw new Error('invalid maximum DOY; must be a number');\n    }\n    if (value.y1.sD > value.y1.eD) {\n      throw new Error('minimum DOY cannot be larger than maximum DOY');\n    }\n    if (typeof value.y2.sD !== 'number') {\n      throw new Error('invalid minimum DOY; must be a number');\n    }\n    if (typeof value.y2.eD !== 'number') {\n      throw new Error('invalid maximum DOY; must be a number');\n    }\n    if (value.y2.sD > value.y2.eD) {\n      throw new Error('minimum DOY cannot be larger than maximum DOY');\n    }\n    if (typeof value.newTitle !== 'string' && value.newTitle !== null) {\n      throw new Error('invalid title; must be a string');\n    }\n    if (\n      typeof value.newStart !== 'number' ||\n      value.newStart  24\n    ) {\n      throw new Error('invalid update start time; must be a number');\n    }\n    if (\n      typeof value.newEnd !== 'number' ||\n      value.newEnd  24\n    ) {\n      throw new Error('invalid update end time; must be a number');\n    }\n    if (value.newStart >= value.newEnd) {\n      throw new Error(\n        'update start time cannot be the same as, or before, the update end time',\n      );\n    }\n  }\n\n  /**\n   * **summary**: apply the validatedto(), calculateRange(), and validateExpectedUnavailability() methods to incoming requests to the\n   * rental.controller.updateUnavailability() method. Validate the request before passing the data to the handler\n   * @param req the request object\n   * @param res the response object\n   * @param next the next method to continue onto the next handler\n   */\n  async use(req: Request, res: Response, next: Function):Promise {\n    // apply only to update-unavailability request\n    if (req.originalUrl === '/v1/rental/update-unavailability') {\n      await this.validateDto(req.body);\n      const range = await this.calculateRange(req.body.y1, req.body.y2); // to validate expected # of Unavailability docs\n      await this.validateExpectedUnavailability(req.body, range);\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidatedUnavailabilityDto.html":{"url":"classes/ValidatedUnavailabilityDto.html","title":"class - ValidatedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidatedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/validated-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is the now validated UnavailabilityDto that will be used to create the final dto to be passed to\nthe rental.service.scheduleUnavailability() method\n\npassed to the ProcessUnavailabilityPipe, the last pipe before the rental.service.scheduleUnavailability() handler method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validated\n                            \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[] | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../../dto/unavailability/unavailability.dto';\n/**\n * **summary**: this data is the now validated UnavailabilityDto that will be used to create the final dto to be passed to\n * the rental.service.scheduleUnavailability() method\n * - passed to the ProcessUnavailabilityPipe, the last pipe before the rental.service.scheduleUnavailability() handler method\n */\nexport class ValidatedUnavailabilityDto {\n    y1: UnavailabilityDto[];\n    y2: UnavailabilityDto[] | null;\n    validated: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyNewPasswordDto.html":{"url":"classes/VerifyNewPasswordDto.html","title":"class - VerifyNewPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyNewPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/verify-new-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data transfer object for creating a new passowrd\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/verify-new-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/verify-new-password.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class VerifyNewPasswordDto {\n    newPassword: string;\n    oldPassword: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyNewPasswordUtil.html":{"url":"injectables/VerifyNewPasswordUtil.html","title":"injectable - VerifyNewPasswordUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VerifyNewPasswordUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/util/verify-new-password.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate incoming new password data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkTypos\n                            \n                            \n                                    Async\n                                verifyMatch\n                            \n                            \n                                    Async\n                                verifyNew\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkTypos\n                        \n                        \n                    \n                \n            \n            \n                \ncheckTypos(data: CheckPasswordTypoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:35\n                \n            \n\n\n            \n                \n                    summary: verify the user entered the same password twice\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CheckPasswordTypoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyMatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyMatch(data: VerifyNewPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:25\n                \n            \n\n\n            \n                \n                    summary: verify the entered password matches the password saved in the database for this user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VerifyNewPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyNew\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyNew(data: VerifyNewPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:15\n                \n            \n\n\n            \n                \n                    summary: verify the new password does not match the database password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VerifyNewPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { VerifyNewPasswordDto } from \"../dto/verify-new-password.dto\";\nimport * as bcrypt from 'bcrypt';\nimport { CheckPasswordTypoDto } from \"../dto/check-password-typo.dto\";\n/**\n * **summary**: validate incoming new password data\n */\n@Injectable()\nexport class VerifyNewPasswordUtil {\n\n    /**\n     * **summary**: verify the new password does not match the database password\n     * @param data \n     */\n    async verifyNew(data: VerifyNewPasswordDto): Promise{\n        const check = await bcrypt.compare(data.newPassword, data.oldPassword);\n        if (check) { throw new Error('Error: The new password cannot mathch the current password.') };\n        return;\n    }\n\n    /**\n     * **summary**: verify the entered password matches the password saved in the database for this user\n     * @param data \n     */\n    async verifyMatch(data: VerifyNewPasswordDto): Promise{\n        const check = await bcrypt.compare(data.newPassword, data.oldPassword);\n        if (!check) { throw new Error('Error: incorrect password entered')};\n        return;\n    }\n\n    /**\n     * **summary**: verify the user entered the same password twice\n     * @param data \n     */\n    checkTypos(data: CheckPasswordTypoDto): Promise {\n        const check = data.newPassword === data.confirmPassword;\n        if (check) { return };\n        throw new Error('You did not enter the same password twice, please try again')\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/constant.ts\n            \n            variable\n            jwtConstants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/check-password-typo.dto.ts\n            \n            class\n            CheckPasswordTypoDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/extract-key-value-util.dto.ts\n            \n            class\n            ExtractKeyValueUtilDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/dto/jwt-payload.ts\n            \n            class\n            JwtPayloadDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/dto/user-property.dto.ts\n            \n            class\n            UserPropertyDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/auth/dto/verify-new-password.dto.ts\n            \n            class\n            VerifyNewPasswordDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/gaurds/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/gaurds/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/gaurds/logged-out.guard.ts\n            \n            guard\n            LoggedOutGaurd\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/auth/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/util/extract-key-value.util.ts\n            \n            injectable\n            ExtractKeyValueUtil\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/util/verify-new-password.util.ts\n            \n            injectable\n            VerifyNewPasswordUtil\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            databaseConnection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            rentals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            unavailabilityModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            userModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            validated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/error.filters.ts\n            \n            class\n            ErrorFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/common/filters/http-error.filter.ts\n            \n            class\n            HttpErrorFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/logging-interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/pipes/joi-validation.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/util/positive-number.ts\n            \n            injectable\n            PositiveNumber\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/util/to-item-indexes.ts\n            \n            variable\n            toItemIndexes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/util/typeof-value.ts\n            \n            class\n            TypeOfValue\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/config/configuration.service.ts\n            \n            injectable\n            AppConfigService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/database/providers/database.provider.ts\n            \n            variable\n            databaseProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/providers/unavailability-model.provider.ts\n            \n            variable\n            unavailabilityProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/providers/user-model.provider.ts\n            \n            variable\n            userProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/email/interface/mailoptions.interface.ts\n            \n            interface\n            MailOptionsInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/email/interface/transporter.interface.ts\n            \n            interface\n            TransporterInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/images/controller/images.controller.ts\n            \n            controller\n            ImagesController\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/images/dto/image-query-results.dto.ts\n            \n            class\n            ImageQueryResultsDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/images/dto/image-upload.dto.ts\n            \n            class\n            ImageUploadDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/images/dto/image.dto.ts\n            \n            class\n            ImageDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/images/dto/processed-save-data.dto.ts\n            \n            class\n            ProcessedSaveDataDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/images/interface/modelInterface/image.interface.ts\n            \n            interface\n            ImageInterface\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/images/providers/s3.provider.ts\n            \n            injectable\n            S3Provider\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/images/schema/images.schema.ts\n            \n            variable\n            ImageSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/images/schema/images.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/service/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/images/util/create-multer-upload.util.ts\n            \n            injectable\n            CreateMulterUploadUtil\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/images/util/delete-s3-images.util.ts\n            \n            injectable\n            DeleteS3ImagesUtil\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/images/util/multer-upload.util.ts\n            \n            injectable\n            MulterUploadUtil\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/images/util/process-save-data.util.ts\n            \n            injectable\n            ProcessSaveDataUtil\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/controller/rental.controller.ts\n            \n            controller\n            RentalController\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/create-rental.dto.ts\n            \n            class\n            CreateRentalDto\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/loc-create-rental.dto.ts\n            \n            class\n            LocCreateRentalDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/raw-coordinates.dto.ts\n            \n            class\n            RawCoordinatesDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/raw-create-rental-dto.ts\n            \n            class\n            RawCreateRentalDto\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/rental/dto/details/edit-details.dto.ts\n            \n            class\n            EditDetailsDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/pricing/pricing.dto.ts\n            \n            class\n            PricingDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/given-notice-search-rental-dto.ts\n            \n            class\n            GivenNoticeSearchRentalDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/process-rental-time.dto.ts\n            \n            class\n            ProcessRentalTimeDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/raw-search-rental.dto.ts\n            \n            class\n            RawSearchRentalDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/request-coordinates.dto.ts\n            \n            class\n            RequestCoordinatesDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/search-rental.dto.ts\n            \n            class\n            SearchRentalDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/remove/remove-unavailability.dto.ts\n            \n            class\n            RemoveUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/create-query.dto.ts\n            \n            class\n            CreateQueryDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts\n            \n            class\n            ProcessedUnavailabilityQueryDto\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts\n            \n            class\n            ProcessedUnavailabilityDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts\n            \n            class\n            RawScheduleUnavailabilityDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/sorted-unavailability.dto.ts\n            \n            interface\n            SortedUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/unavailability-query.dto.ts\n            \n            class\n            UnavailabilityQueryDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts\n            \n            class\n            ValidateScheduleUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/unavailability.dto.ts\n            \n            class\n            UnavailabilityDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/update-unavailability-data.dto.ts\n            \n            class\n            UpdateUnavailabilityDataDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/update-unavailability.dto.ts\n            \n            class\n            UpdateUnavailabilityDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts\n            \n            class\n            ValidateUpdateUnavailabilityDto\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/validated-unavailability.dto.ts\n            \n            class\n            ValidatedUnavailabilityDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/interface/modelInterface/Rental/rental.interface.ts\n            \n            interface\n            RentalInterface\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts\n            \n            class\n            UnavailabilityInterface\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/middleware/validate-update-unavailability.middleware.ts\n            \n            injectable\n            ValidateUpdateUnavailabilityMiddleware\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/create-updater-dto.pipe.ts\n            \n            injectable\n            CreateUpdaterDtoPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/geo-url-api.pipe.ts\n            \n            injectable\n            GeoUrlApiPipe\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/rental/pipes/given-notice.pipe.ts\n            \n            injectable\n            GivenNoticePipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/map-new-rental.pipe.ts\n            \n            injectable\n            MapNewRentalPipe\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/rental/pipes/pricing.pipe.ts\n            \n            injectable\n            PricingPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/process-unavailability.pipe.ts\n            \n            injectable\n            ProcessUnavailabilityPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/rental-duration.pipe.ts\n            \n            injectable\n            RentalDurationPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/request-coordinates.pipe.ts\n            \n            injectable\n            RequestCoordinatesPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/sort-unavailability.pipe.ts\n            \n            injectable\n            SortUnavailabilityPipe\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-edit-details.pipe.ts\n            \n            injectable\n            ValidateEditDetailsPipe\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-remove-unavailability.pipe.ts\n            \n            injectable\n            ValidateRemoveUnavailabilityPipe\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-unavailability.pipe.ts\n            \n            injectable\n            ValidateUnavailabilityPipe\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            ObjectID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            RentalSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/unavailability-schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/unavailability-schema.ts\n            \n            variable\n            UnavailabilitySchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/validation/create-rental-validation.schema.ts\n            \n            variable\n            CreateRentalValidationSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/validation/search-rental-validation.schema.ts\n            \n            variable\n            SearchRentalValidationSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/service/rental.service.ts\n            \n            injectable\n            RentalService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/rental/service/test-rental.service.ts\n            \n            injectable\n            TestRentalService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/utils/generate-rental-duration-enum.util.ts\n            \n            injectable\n            GenerateRentalDurationEnumUtil\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/rental/utils/geo-url-api.util.ts\n            \n            injectable\n            GeoUrlApiUtil\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/secrets/secrets.ts\n            \n            variable\n            Secrets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            injectable\n            CreateUserDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/user/dto/delete-user.dto.ts\n            \n            injectable\n            DeleteUserDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/dto/find-user-by-reset-password-token.dto.ts\n            \n            injectable\n            ResetPasswordTokenDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/dto/find-user.dto.ts\n            \n            injectable\n            FindUserDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/dto/login.dto.ts\n            \n            injectable\n            LoginDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            injectable\n            UpdateUserDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/interface/modelInterface/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/user/middleware/validate-email.middleware.ts\n            \n            injectable\n            ValidateEmailMiddleware\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/user/pipes/bcrypt.pipe.ts\n            \n            injectable\n            BcryptHashPipe\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/schema/validation/create-user-validation.schema.ts\n            \n            variable\n            CreateUserValidation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/user/util/validate-email.util.ts\n            \n            injectable\n            ValidateEmailUtil\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            apiKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            axios\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            geoUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            makeRequest\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.0\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/mongoose : ^6.3.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/serve-static : ^2.1.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/cookie-parser : ^1.4.2\n        \n            @types/node : 11.13.4\n        \n            aws-sdk : ^2.635.0\n        \n            axios : ^0.19.2\n        \n            bcrypt : ^5.0.0\n        \n            cache-manager : ^3.4.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            cookie-parser : ^1.4.5\n        \n            crypto : ^1.0.1\n        \n            dotenv : ^8.2.0\n        \n            helmet : ^4.2.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            luxon : ^1.22.0\n        \n            mongoose : ^5.9.1\n        \n            multer : ^1.4.2\n        \n            multer-s3 : ^2.9.0\n        \n            nest-router : ^1.0.9\n        \n            nodemailer : ^6.4.16\n        \n            nodemailer-smtp-transport : ^2.7.4\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            typescript : 3.7.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RentalDurations   (src/.../const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rental/const.ts\n    \n        \n            \n                \n                    \n                        \n                        RentalDurations\n                    \n                \n                    \n                        \n                            summary: an enum for easily storing and working with the time duration of a rental\n\n                        \n                    \n                        \n                            \n                                 Any\n                            \n                        \n                        \n                            \n                                 1 Day\n                            \n                        \n                        \n                            \n                                 3 Days\n                            \n                        \n                        \n                            \n                                 5 Days\n                            \n                        \n                        \n                            \n                                 1 Week\n                            \n                        \n                        \n                            \n                                 3 Weeks\n                            \n                        \n                        \n                            \n                                 1 Month\n                            \n                        \n                        \n                            \n                                 3 Months\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRent-A-Car\nThis project is a demonstration of a scalable, loosely-coupled, testable, server-side application written with TypeScript and the NestJS framework. Rent-A-Car is a demonstrative car rental web application for authorized users to list their vehicle as available for rental, and to find rental vehicles available in their area. The application uses the powerful HERE Developer Geocoder API to create rentals with geocoordinate location data as well as to search for listed rentals near a user's address or device location. User profile and rental images are uploaded to an AWS S3 bucket, and the image download links and metadata are saved to a MongoDB Atlas cluster. Once a user has listed a rental, they may upload photos, edit the rental's pricing, schedule unavailability on the calendar, and update the rental's details.\nInstallation\nTry the App with Postman:\n\n\nNote: If Postman Web never launches try downloading the app to your pc, it will import the collection and environment and run fine. \nwill be deployed soon :)\n\nContributing\n\nJonathan Sells\nThis project is a smaller demonstrative version of the original project Turrendas that I was working on with Jean Canales, who was creating the React frontend.\n\nLicense\nThis project is licensed under the MIT license. See the LICENSE file for more info.\nDocumentation\nRent-A-Car Wiki\nplease check out the wiki for a more detailed look at the application.\nhttps://github.com/Pioneer18/Rent-A-Car/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 RentACar J\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RentalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_exports\n\n\n\ncluster_AppConfigModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_imports\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_RentalModule\n\n\n\ncluster_RentalModule_exports\n\n\n\ncluster_RentalModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppConfigService \n\nAppConfigService \n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nAppConfigService  -->\n\nAppConfigModule->AppConfigService \n\n\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAppConfigModule->AuthModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nAppConfigModule->ImagesModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppConfigModule->UserModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAppConfigModule -->\n\nAppConfigService->AppConfigModule\n\n\n\nAuthModule -->\n\nAppConfigService->AuthModule\n\n\n\nImagesModule -->\n\nAppConfigService->ImagesModule\n\n\n\n\n\nRentalModule\n\nRentalModule\n\nRentalModule -->\n\nAppConfigService->RentalModule\n\n\n\nAppModule -->\n\nAppModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nAuthModule->EmailService \n\n\n\n\n\nExtractKeyValueUtil \n\nExtractKeyValueUtil \n\nExtractKeyValueUtil  -->\n\nAuthModule->ExtractKeyValueUtil \n\n\n\n\n\nLoggedOutGaurd \n\nLoggedOutGaurd \n\nLoggedOutGaurd  -->\n\nAuthModule->LoggedOutGaurd \n\n\n\n\n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil  -->\n\nAuthModule->VerifyNewPasswordUtil \n\n\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\nAppModule -->\n\nRentalModule->AppModule\n\n\n\n\n\nRentalService \n\nRentalService \n\nRentalService  -->\n\nRentalModule->RentalService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nAuthModule -->\n\nExtractKeyValueUtil->AuthModule\n\n\n\nUserModule -->\n\nExtractKeyValueUtil->UserModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nAuthModule -->\n\nVerifyNewPasswordUtil->AuthModule\n\n\n\nUserModule -->\n\nVerifyNewPasswordUtil->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nImagesModule -->\n\nDatabaseModule->ImagesModule\n\n\n\nRentalModule -->\n\nDatabaseModule->RentalModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nCreateMulterUploadUtil\n\nCreateMulterUploadUtil\n\nImagesModule -->\n\nCreateMulterUploadUtil->ImagesModule\n\n\n\n\n\nDeleteS3ImagesUtil\n\nDeleteS3ImagesUtil\n\nImagesModule -->\n\nDeleteS3ImagesUtil->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nMulterUploadUtil\n\nMulterUploadUtil\n\nImagesModule -->\n\nMulterUploadUtil->ImagesModule\n\n\n\n\n\nProcessSaveDataUtil\n\nProcessSaveDataUtil\n\nImagesModule -->\n\nProcessSaveDataUtil->ImagesModule\n\n\n\n\n\nS3Provider\n\nS3Provider\n\nImagesModule -->\n\nS3Provider->ImagesModule\n\n\n\n\n\nCreateUpdaterDtoPipe\n\nCreateUpdaterDtoPipe\n\nRentalModule -->\n\nCreateUpdaterDtoPipe->RentalModule\n\n\n\n\n\nGenerateRentalDurationEnumUtil\n\nGenerateRentalDurationEnumUtil\n\nRentalModule -->\n\nGenerateRentalDurationEnumUtil->RentalModule\n\n\n\n\n\nGeoUrlApiPipe\n\nGeoUrlApiPipe\n\nRentalModule -->\n\nGeoUrlApiPipe->RentalModule\n\n\n\n\n\nGeoUrlApiUtil\n\nGeoUrlApiUtil\n\nRentalModule -->\n\nGeoUrlApiUtil->RentalModule\n\n\n\n\n\nGivenNoticePipe\n\nGivenNoticePipe\n\nRentalModule -->\n\nGivenNoticePipe->RentalModule\n\n\n\n\n\nMapNewRentalPipe\n\nMapNewRentalPipe\n\nRentalModule -->\n\nMapNewRentalPipe->RentalModule\n\n\n\n\n\nPricingPipe\n\nPricingPipe\n\nRentalModule -->\n\nPricingPipe->RentalModule\n\n\n\n\n\nProcessUnavailabilityPipe\n\nProcessUnavailabilityPipe\n\nRentalModule -->\n\nProcessUnavailabilityPipe->RentalModule\n\n\n\n\n\nRentalDurationPipe\n\nRentalDurationPipe\n\nRentalModule -->\n\nRentalDurationPipe->RentalModule\n\n\n\n\n\nRentalService\n\nRentalService\n\nRentalModule -->\n\nRentalService->RentalModule\n\n\n\n\n\nRequestCoordinatesPipe\n\nRequestCoordinatesPipe\n\nRentalModule -->\n\nRequestCoordinatesPipe->RentalModule\n\n\n\n\n\nSortUnavailabilityPipe\n\nSortUnavailabilityPipe\n\nRentalModule -->\n\nSortUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateEditDetailsPipe\n\nValidateEditDetailsPipe\n\nRentalModule -->\n\nValidateEditDetailsPipe->RentalModule\n\n\n\n\n\nValidateRemoveUnavailabilityPipe\n\nValidateRemoveUnavailabilityPipe\n\nRentalModule -->\n\nValidateRemoveUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateUnavailabilityPipe\n\nValidateUnavailabilityPipe\n\nRentalModule -->\n\nValidateUnavailabilityPipe->RentalModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    46 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    40 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MTime   (src/.../military-time.alias.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rental/alias/military-time.alias.ts\n    \n    \n        \n            \n                \n                    \n                    MTime\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            address   (testfile.ts)\n                        \n                        \n                            apiKey   (testfile.ts)\n                        \n                        \n                            axios   (testfile.ts)\n                        \n                        \n                            CreateRentalValidationSchema   (src/.../create-rental-validation.schema.ts)\n                        \n                        \n                            CreateUserValidation   (src/.../create-user-validation.schema.ts)\n                        \n                        \n                            databaseConnection   (src/.../Const.ts)\n                        \n                        \n                            databaseProvider   (src/.../database.provider.ts)\n                        \n                        \n                            geoUrl   (testfile.ts)\n                        \n                        \n                            ImageSchema   (src/.../images.schema.ts)\n                        \n                        \n                            jwtConstants   (src/.../constant.ts)\n                        \n                        \n                            makeRequest   (testfile.ts)\n                        \n                        \n                            ObjectID   (src/.../rental.schema.ts)\n                        \n                        \n                            profile   (src/.../Const.ts)\n                        \n                        \n                            rentals   (src/.../Const.ts)\n                        \n                        \n                            RentalSchema   (src/.../rental.schema.ts)\n                        \n                        \n                            Schema   (src/.../images.schema.ts)\n                        \n                        \n                            Schema   (src/.../rental.schema.ts)\n                        \n                        \n                            Schema   (src/.../unavailability-schema.ts)\n                        \n                        \n                            Schema   (src/.../user.schema.ts)\n                        \n                        \n                            SearchRentalValidationSchema   (src/.../search-rental-validation.schema.ts)\n                        \n                        \n                            Secrets   (src/.../secrets.ts)\n                        \n                        \n                            toItemIndexes   (src/.../to-item-indexes.ts)\n                        \n                        \n                            unavailabilityModel   (src/.../Const.ts)\n                        \n                        \n                            unavailabilityProvider   (src/.../unavailability-model.provider.ts)\n                        \n                        \n                            UnavailabilitySchema   (src/.../unavailability-schema.ts)\n                        \n                        \n                            userModel   (src/.../Const.ts)\n                        \n                        \n                            userProvider   (src/.../user-model.provider.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            validated   (src/.../Const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    testfile.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `9706+Forestdale+Ct+Riverview+33578`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '4ol_YAcp0Lkuu9pN2j2Iu_UY5lDRKWoDyJLQE2Zo6IA'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            axios\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('axios')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocode.search.hereapi.com/v1/geocode'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (geoUrl, address, apiKey) => {\n    const request = await axios.default.get(\n      `${geoUrl}?q=${address}&apiKey=${apiKey}`,\n    );\n    \n    console.log(`Response Data Below`);\n    console.log(JSON.stringify(request.data, null, 2));\n    console.log(JSON.stringify(request.data.items[0].position, null, 2))\n    console.log(JSON.stringify(request.data.items[0].title, null, 2))\n    console.log(JSON.stringify(request.data.items[0].address, null, 2))\n    return;\n}\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/validation/create-rental-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CreateRentalValidationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n  rentalDescription: joi.string(),\n  address: joi.string().required(),\n  specs: joi.object({\n    odometer: joi.number().required(),\n    transmission: joi.string().required(),\n    cityMpg: joi.number().required()\n      .when('fuel', {is: 'electric', then: joi.valid(null)}),\n    hwyMpg: joi.number().required()\n      .when('fuel', {is: 'electric', then: joi.valid(null)}),\n    mpgE: joi.number()\n      .when('fuel', {is: 'electric', then: joi.number().required()})\n      .when('fuel', {not: 'electric', then: joi.valid(null) }),\n    fuel: joi.string().valid('gas', 'hybrid','electric').required(),\n    gasGrade: joi.string().valid('regular', 'mid', 'premium', 'N/A').required()\n      .when('fuel', {is: 'electric', then: joi.valid('N/A')}),\n    description: joi.string().required(),\n    make: joi.string().required(),\n    model: joi.string().required(),\n    style: joi.string().required(),\n    color: joi.string().required(),\n    numOfSeats: joi.number().required(),\n    numDoors: joi.number().required(),\n  }),\n  registration: joi.object({\n    vin: joi.string().required(),\n    licensePlate: joi.string().required(),\n    state: joi.string().required(),\n  }),\n  features: joi.array().items(joi.string()),\n  scheduling: joi.object({\n    requiredNotice: joi.number().required(),\n    rentMinDuration: joi.number().required(),\n    rentMaxDuration: joi.number().required(),\n  }),\n  pricing: joi.object({\n    price: joi.number().required(),\n    discounts: joi.object({\n      weekly: joi.number(),\n      monthly: joi.number(),\n    }),\n  }),\n  loc: joi.object({\n    type: joi.string().required(),\n    coordinates: joi\n      .array()\n      .items(joi.number())\n      .length(2)\n      .required(),\n  }),\n  photos: joi.array().items(joi.string()),\n  listed: joi.boolean().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate requested new rental before passing to the handler\n\nfuel: when the selected fuel type is electric and not gas or hybrid, several fields must change their validation\nmpgE: the metric for electric mileage. When the selected fuel type is electric, mpgE is required, otherwise it must be null\ncityMpg: the metric for gas mileage in the city. cityMpg must be null if the fuel type is electric\nhwyMpg: the metric for gas mileage on the highway. hwyMpg must be null if the fuel type is electric\ngasGrade: the gas grade must be 'N/A' if the selected fuel type is electric\n\n\n\n\n                    \n                \n\n            \n        \n\n    src/user/schema/validation/create-user-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n    username: joi.string().required(),\n    email: joi.string().email().required(),\n    password: joi.string().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate the requested new User data confirms to the User model\n\n                    \n                \n\n            \n        \n\n    src/common/Const.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'profile'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rentals'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UNAVAILABILITY_MODEL'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_MODEL'\n                        \n                    \n\n                \n                    \n                        summary: export constants to be used in the application. These are mostly names of providers\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'VALIDATED'\n                        \n                    \n\n\n            \n        \n\n    src/database/providers/database.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: databaseConnection,\n    useFactory: (configService: ConfigService): Promise =>\n      mongoose.connect(configService.get('REMOTE_DB')), // currently returning undefined, needs a .env file\n      import: [ConfigModule],\n      inject: [ConfigService],\n  },\n]\n                        \n                    \n\n                \n                    \n                        summary: provide a connection to the remote database\n\n                    \n                \n\n            \n        \n\n    src/images/schema/images.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ImageSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    user_id: String, // ObjectId of the logged in user\n    rental_id: {type: String || null }, // null for profile images\n    bucket: String, // 'rent-a-car-photos/{user_email}/{category}'\n    key: String, // 'timestamp-originalname'\n    originalName: String, \n    etag: String || null,\n    category: String, // rentals or profile\n    size: String,\n    location: String, // aws url for image download\n})\n                        \n                    \n\n                \n                    \n                        summary: the schema for the Image Model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    src/auth/constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret: process.env.SECRET_KEY,\n    jwt_exp_time: process.env.JWT_EXP_TIME,\n}\n                        \n                    \n\n                \n                    \n                        summary: holds the secret key and expiration time of the JWT token for the Passport Jwt-Strategy\n\n                    \n                \n\n            \n        \n\n    src/rental/schema/rental.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ObjectID\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.ObjectId\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RentalSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  rentalId: ObjectID,\n  rentalTitle: String,\n  rentalDescription: String,\n  address: String,\n  loc: {\n    type: { type: String },\n    coordinates: Object,\n  },\n  specs: {\n    odometer: Number,\n    transmission: String,\n    cityMpg: Number || null,\n    hwyMpg: Number || null,\n    mpgE: Number || null,\n    fuel: String,\n    gasGrade: String,\n    description: String,\n    make: String,\n    model: String,\n    style: String,\n    color: String,\n    numOfSeats: Number,\n    numDoors: Number,\n  },\n  registration: {\n    vin: String,\n    licensePlate: String,\n    state: String,\n  },\n  features: [String],\n  scheduling: {\n    requiredNotice: Number,\n    rentMinDuration: Number,\n    rentMaxDuration: Number,\n  },\n  pricing: {\n    price: { type: Number /*, default: DEFAULT_PRICE*/ },\n    discounts: {\n      weekly: { type: Number, default: null },\n      monthly: { type: Number, default: null },\n    },\n  },\n  photos: [String],\n  listed: Boolean,\n})\n                        \n                    \n\n                \n                    \n                        summary: the schema for the Rental Model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/unavailability-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UnavailabilitySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    unavailabilityId: String,\n    rentalId: String,\n    year: Number,\n    doy: Number, // day of the year\n    start: {type: Number, min: 0, max: 24}, // min: 0; max: 24 military time\n    end: {type: Number, min: 0, max: 24}, // min: 0; max: 24 military time\n    title: String, // e.g. Christmas Break\n})\n                        \n                    \n\n                \n                    \n                        summary: the schema for the Unavailability Model\n\n                    \n                \n\n            \n        \n\n    src/user/schema/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    username: String,\n    email: { \n        type: String, \n        unique: true\n    },\n    password: String,\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n})\n                        \n                    \n\n                \n                    \n                        summary: schema for the User model\n\n                    \n                \n\n            \n        \n\n    src/rental/schema/validation/search-rental-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SearchRentalValidationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n  address: joi.string().required(),\n  features: joi.array().items(joi.string()).allow(null),\n  price: joi.number().allow(null),\n  rentalDuration: joi.number().required(),\n  loc: {\n    type: joi.string().required(),\n    coordinates: joi\n      .array()\n      .items(joi.number(), joi.number())\n      .required(),\n  },\n  givenNotice: joi.number().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate an incoming SearchRentalDto\n\n                    \n                \n\n            \n        \n\n    src/secrets/secrets.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Secrets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    key: process.env.PRIVATE_KEY\n}\n                        \n                    \n\n                \n                    \n                        private rsa key for https\n\n                    \n                \n\n            \n        \n\n    src/common/util/to-item-indexes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toItemIndexes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (a: T[]) => {\n    return a.map((item, index) => ({item, index}));\n}\n                        \n                    \n\n                \n                    \n                        summary: map the passed array, of any Type, into a new array of tuples with the index for each value\n\n                    \n                \n\n            \n        \n\n    src/database/providers/unavailability-model.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: unavailabilityModel,// UNAVAILABILITY_MODEL\n    useFactory: (connection: Connection) => connection.model('Unavailability', UnavailabilitySchema),\n    inject: [databaseConnection],\n  },\n]\n                        \n                    \n\n                \n                    \n                        summary: provide a connection to the Unavailability Model\n\n                    \n                \n\n            \n        \n\n    src/database/providers/user-model.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: userModel,// USER_MODEL\n    useFactory: (connection: Connection) => connection.model('User', UserSchema),\n    inject: [databaseConnection],\n  },\n]\n                        \n                    \n\n                \n                    \n                        summary: provide connection to the User Model\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
