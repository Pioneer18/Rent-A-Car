var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,1.991,1,2.662]],["body/modules/AppConfigModule.html",[0,3.195,1,5.108,2,2.579,3,2.686,4,2.938,5,2.938,6,2.686,7,4.092,8,4.273,9,4.109,10,4.109,11,4.109,12,4.102,13,5.351,14,0.009,15,3.958,16,2.235,17,2.311,18,0.089,19,0.099,20,0.07,21,4.654,22,0.307,23,0.567,24,0.878,25,4.164,26,4.404,27,6.992,28,5.536,29,1.536,30,3.751,31,4.654,32,0.661,33,3.091,34,2.805,35,4.654,36,2.938,37,4.654,38,4.654,39,4.109,40,4.109,41,4.654,42,4.654,43,6.26,44,4.654,45,4.109,46,3.483,47,4.654,48,3.751,49,4.654,50,4.654,51,2.235,52,4.164,53,4.109,54,7.732,55,4.109,56,2.235,57,4.109,58,4.109,59,3.269,60,4.109,61,4.109,62,4.109,63,4.109,64,3.091,65,3.269,66,4.109,67,4.109,68,2.393,69,3.751,70,4.109,71,3.751,72,4.109,73,4.109,74,4.654,75,4.654,76,2.805,77,4.654,78,4.404,79,4.654,80,4.109,81,4.654,82,4.654,83,3.751,84,3.483,85,4.654,86,2.805,87,4.654,88,3.483,89,2.579,90,0.089,91,0.141,92,0.005,93,0.006,94,0.005]],["title/injectables/AppConfigService.html",[12,2.054,95,0.204]],["body/injectables/AppConfigService.html",[0,2.669,12,2.754,13,5.247,14,0.009,18,0.082,19,0.091,20,0.064,22,0.282,23,0.536,24,0.624,27,5.229,32,0.608,34,2.58,48,5.472,53,5.995,55,5.995,57,5.995,58,5.995,61,5.995,62,5.995,63,5.995,66,5.995,67,5.995,70,5.995,71,5.472,72,5.995,73,5.995,84,4.432,90,0.082,91,0.206,92,0.004,93,0.006,94,0.004,95,0.273,96,0.852,97,3.78,98,4.432,99,5.229,100,3.933,101,5.229,102,4.16,103,5.229,104,0.129,105,5.922,106,1.393,107,4.281,108,0.517,109,4.281,110,0.913,111,0.872,112,0.207,113,0.913,114,4.281,115,4.281,116,4.281,117,4.281,118,4.281,119,4.281,120,4.281,121,4.281,122,4.281,123,4.281,124,4.281,125,4.281,126,4.281,127,4.281,128,4.281,129,4.281,130,4.281,131,4.281,132,4.281,133,4.281,134,4.281,135,4.281,136,4.281,137,4.281,138,4.281,139,4.281,140,4.281,141,4.281,142,2.202,143,1.67,144,1.479,145,1.839,146,4.281,147,4.281,148,4.281,149,4.281,150,4.281,151,4.281,152,1.265,153,4.281,154,4.281,155,4.281,156,4.281,157,4.281,158,4.281,159,4.281,160,4.281]],["title/controllers/AppController.html",[161,2.356,162,3.306]],["body/controllers/AppController.html",[14,0.009,18,0.113,19,0.126,20,0.089,22,0.388,23,0.661,24,0.836,25,4.849,26,5.128,32,0.836,90,0.113,91,0.179,92,0.006,93,0.007,94,0.006,100,4.849,104,0.177,108,0.343,110,1.256,111,1.2,113,1.256,145,1.228,161,3.894,162,5.464,163,3.141,164,5.2,165,7.301,166,1.748,167,7.301,168,5.889,169,4.136,170,5.889,171,5.889,172,3.576,173,1.378,174,4.407,175,4.136,176,1.41,177,5.2,178,3.718,179,4.746,180,4.407,181,3.549,182,5.2,183,4.407,184,4.407,185,4.746,186,5.889,187,5.889,188,3.911]],["title/modules/AppModule.html",[0,1.991,189,3.306]],["body/modules/AppModule.html",[0,3.304,1,4.739,2,2.088,3,3.655,4,2.378,5,2.378,6,2.174,7,3.655,8,2.27,12,3.219,13,3.416,14,0.009,15,3.416,16,1.809,17,1.871,18,0.072,19,0.08,20,0.095,22,0.248,23,0.49,24,0.95,25,4.206,26,3.801,32,0.535,33,2.502,34,2.27,36,3.998,83,4.361,90,0.072,91,0.114,92,0.004,93,0.005,94,0.005,162,4.739,163,2.886,189,6.693,190,3.326,191,3.326,192,3.326,193,5.361,194,5.361,195,5.361,196,5.069,197,5.361,198,3.767,199,5.411,200,4.448,201,4.448,202,4.448,203,4.448,204,3.767,205,3.767,206,3.767,207,3.326,208,2.819,209,2.088,210,3.767,211,3.326,212,3.326,213,3.326,214,3.767,215,6.333,216,5.411,217,3.326,218,4.05,219,3.767,220,3.767,221,4.05,222,3.767,223,4.05,224,3.767,225,3.767,226,3.767,227,3.767,228,3.326,229,3.326,230,3.767,231,4.361,232,3.767,233,3.767,234,3.767,235,3.767,236,2.819,237,2.27,238,3.767,239,4.361,240,3.036,241,3.767,242,3.767,243,3.767,244,3.767,245,3.767,246,3.767,247,3.767,248,2.378,249,3.767,250,3.767,251,3.326,252,0.944,253,3.767,254,3.767,255,2.646,256,3.767,257,3.767,258,3.767,259,3.767,260,6.333]],["title/injectables/AppService.html",[95,0.204,197,3.103]],["body/injectables/AppService.html",[14,0.009,18,0.121,19,0.134,20,0.095,22,0.415,23,0.688,24,0.664,25,5.052,26,5.344,32,0.894,90,0.121,91,0.191,92,0.006,93,0.007,94,0.006,95,0.351,96,1.254,100,5.052,104,0.189,108,0.367,144,1.284,145,1.313,166,1.821,173,1.474,197,5.344,261,5.562,262,7.608,263,8.49,264,6.299,265,6.299,266,6.299]],["title/controllers/AuthController.html",[161,2.356,203,3.103]],["body/controllers/AuthController.html",[14,0.009,16,2.924,17,2.214,18,0.056,19,0.062,20,0.044,22,0.433,23,0.729,24,0.805,32,0.412,59,4.277,68,3.833,69,3.592,90,0.056,91,0.088,92,0.003,93,0.004,94,0.003,102,3.131,104,0.087,108,0.383,110,1.402,111,1.338,112,0.295,113,1.402,142,1.493,143,1.132,145,1.37,161,3.504,163,1.548,166,1.458,169,4.614,172,3.445,173,1.537,174,2.172,175,2.039,176,1.729,177,2.563,178,3.426,180,3.336,181,1.749,183,2.172,184,3.336,185,2.339,203,3.131,252,2.086,267,2.563,268,2.172,269,2.339,270,4.458,271,4.458,272,1.974,273,2.686,274,3.936,275,4.458,276,2.814,277,5.589,278,3.936,279,3.936,280,4.557,281,4.557,282,3.936,283,2.902,284,1.875,285,4.277,286,2.902,287,3.655,288,2.902,289,3.592,290,4.277,291,3.844,292,0.996,293,2.563,294,4.277,295,4.458,296,2.902,297,3.336,298,3.312,299,1.838,300,2.96,301,3.592,302,2.902,303,3.959,304,3.514,305,2.902,306,2.902,307,3.936,308,2.563,309,2.902,310,2.902,311,3.936,312,4.907,313,4.277,314,2.009,315,4.13,316,4.458,317,3.936,318,3.336,319,1.949,320,4.458,321,3.131,322,3.592,323,2.563,324,4.277,325,4.458,326,2.902,327,4.458,328,4.614,329,4.061,330,3.131,331,2.039,332,1.442,333,2.563,334,4.374,335,2.563,336,2.563,337,2.902,338,2.172,339,2.902,340,2.563,341,3.27,342,2.339,343,2.902,344,2.034,345,1.832,346,2.902,347,2.902,348,2.902,349,2.902,350,0.78,351,3.812,352,1.682,353,2.902,354,2.902,355,2.902,356,2.172,357,2.902,358,2.563,359,2.902,360,2.902,361,2.902,362,2.902,363,2.902,364,2.902,365,2.902,366,2.902,367,2.902,368,2.902,369,2.902]],["title/modules/AuthModule.html",[0,1.991,193,3.103]],["body/modules/AuthModule.html",[0,3.323,1,4.622,2,2.118,3,2.206,4,2.413,5,2.413,6,2.206,7,3.685,8,3.847,12,3.567,14,0.009,15,3.452,16,1.836,17,1.898,18,0.073,19,0.082,20,0.057,22,0.252,23,0.495,24,0.933,32,0.543,33,3.631,34,2.303,36,3.452,90,0.073,91,0.116,92,0.004,93,0.005,94,0.004,98,4.092,100,3.631,163,2.039,181,4.867,183,2.86,193,6.411,196,5.093,203,3.84,207,3.375,236,2.86,237,2.303,239,4.407,240,3.08,272,1.309,292,0.854,340,3.375,341,5.14,342,3.08,370,3.375,371,3.375,372,3.822,373,3.375,374,5.664,375,5.14,376,5.14,377,4.622,378,5.387,379,5.387,380,3.822,381,5.468,382,5.468,383,3.822,384,3.08,385,5.468,386,2.538,387,4.092,388,3.375,389,3.822,390,3.822,391,3.822,392,2.86,393,1.671,394,2.86,395,3.375,396,2.86,397,3.375,398,3.375,399,2.86,400,3.822,401,3.375,402,3.375,403,3.822,404,5.468,405,3.822,406,2.684,407,1.102,408,1.214,409,3.822]],["title/injectables/AuthService.html",[95,0.204,341,2.662]],["body/injectables/AuthService.html",[12,2.17,14,0.009,16,3.241,17,1.531,18,0.035,19,0.039,20,0.028,22,0.263,23,0.678,24,0.81,25,2.047,32,0.261,56,2.241,59,2.798,65,2.165,68,3.906,89,1.708,90,0.035,91,0.056,92,0.005,93,0.003,94,0.002,95,0.142,96,0.365,100,2.047,102,1.289,104,0.055,106,1.003,108,0.349,110,1.277,111,1.219,112,0.29,113,1.277,143,2.45,144,1.01,145,1.407,166,1.117,172,2.344,173,1.317,176,1.7,231,1.479,237,1.106,248,2.515,252,1.949,272,2.089,273,1.857,276,2.515,278,2.721,279,2.721,280,3.892,281,2.981,282,2.721,284,1.043,285,3.278,287,3.393,289,2.484,290,2.165,291,1.946,292,1.647,293,2.721,294,3.278,297,2.306,298,3.393,299,1.271,300,2.047,301,2.484,307,4.12,308,2.721,312,3.211,313,2.798,315,3.317,317,2.721,318,2.981,319,1.348,323,2.721,324,3.278,328,2.798,329,2.306,332,0.912,333,1.621,334,3.211,335,1.621,336,1.621,341,1.857,344,1.954,350,1.982,351,2.798,352,2.457,374,3.975,375,3.607,376,3.607,377,3.607,384,1.479,392,1.374,393,2.746,394,1.374,395,1.621,396,1.374,397,1.621,398,1.621,399,1.374,407,0.529,408,0.583,410,1.621,411,3.082,412,2.721,413,1.836,414,3.555,415,5.985,416,4.479,417,2.798,418,1.836,419,3.082,420,1.836,421,1.836,422,2.981,423,3.518,424,3.082,425,1.836,426,3.082,427,3.082,428,2.721,429,3.082,430,2.165,431,2.721,432,2.165,433,3.278,434,1.836,435,2.981,436,1.836,437,2.484,438,3.082,439,3.892,440,1.836,441,2.946,442,2.721,443,2.721,444,2.306,445,3.082,446,3.082,447,3.082,448,1.17,449,1.836,450,2.047,451,1.836,452,1.289,453,2.306,454,1.836,455,1.836,456,2.306,457,2.047,458,1.836,459,1.479,460,2.322,461,1.772,462,2.049,463,1.836,464,1.836,465,1.585,466,0.757,467,1.159,468,1.621,469,3.211,470,4.593,471,1.871,472,1.597,473,1.788,474,1.925,475,1.836,476,1.374,477,1.836,478,1.48,479,1.289,480,1.106,481,1.836,482,1.374,483,1.836,484,1.363,485,1.836,486,1.836,487,1.836,488,1.836,489,2.798,490,1.836,491,1.836,492,1.836,493,1.106,494,1.836,495,2.981,496,1.836,497,2.721,498,1.946,499,2.721,500,1.836,501,1.836,502,1.836,503,1.836,504,1.479,505,1.289,506,1.836,507,1.621,508,1.836,509,2.981,510,2.721,511,3.211,512,1.621,513,1.479,514,1.621,515,1.857,516,3.082,517,1.621,518,1.479,519,1.219,520,1.836,521,1.389,522,1.836,523,2.047,524,3.984,525,1.836,526,1.836,527,1.621,528,3.082,529,1.836,530,1.836,531,1.621,532,1.708,533,1.946,534,1.621,535,1.621,536,1.374,537,1.836,538,1.621,539,1.621,540,1.836,541,1.836,542,1.479,543,1.374,544,1.621,545,1.836,546,1.836,547,3.082,548,1.374,549,2.721,550,1.621,551,1.836,552,1.479,553,1.585,554,1.836,555,1.836,556,1.836,557,3.082,558,1.836,559,1.836,560,1.836,561,3.082,562,1.621,563,3.082,564,1.621,565,1.374,566,1.374,567,1.017,568,1.479,569,1.836,570,1.836,571,1.836,572,1.329]],["title/injectables/BcryptHashPipe.html",[95,0.204,573,3.306]],["body/injectables/BcryptHashPipe.html",[14,0.009,18,0.145,19,0.112,20,0.079,22,0.346,24,0.793,32,0.746,90,0.101,91,0.16,92,0.005,93,0.007,94,0.005,95,0.313,96,1.046,104,0.158,108,0.306,110,1.122,111,1.071,112,0.255,113,1.122,145,1.096,166,1.627,173,1.23,252,1.888,272,1.627,287,2.884,292,1.778,315,3.766,344,1.481,350,1.826,352,2.106,407,2.172,452,3.693,456,5.956,461,1.996,473,2.158,474,2.168,518,4.237,523,3.491,548,3.934,573,5.085,574,4.642,575,3.062,576,3.263,577,5.024,578,5.257,579,2.884,580,8.441,581,6.795,582,3.375,583,3.934,584,2.108,585,5.257,586,5.257,587,5.257,588,5.257,589,6.795,590,5.257,591,5.257,592,5.257,593,5.257,594,5.257,595,4.642,596,4.237]],["title/classes/ChangePasswordDto.html",[91,0.134,285,3.103]],["body/classes/ChangePasswordDto.html",[14,0.009,18,0.121,19,0.134,20,0.095,22,0.414,23,0.568,29,1.539,90,0.121,91,0.191,92,0.006,93,0.007,94,0.006,104,0.189,108,0.443,112,0.368,143,3.442,144,1.431,272,1.504,284,1.403,285,5.335,287,2.667,290,4.412,408,1.995,509,6.11,511,6.58,597,7.209,598,4.412,599,3.966,600,6.282,601,0.921,602,5.063,603,4.701]],["title/classes/CheckPasswordTypoDto.html",[91,0.134,604,3.306]],["body/classes/CheckPasswordTypoDto.html",[14,0.009,18,0.121,19,0.134,20,0.095,22,0.415,23,0.57,29,1.543,90,0.121,91,0.191,92,0.006,93,0.007,94,0.006,104,0.189,108,0.443,112,0.369,144,1.432,284,1.7,287,3.604,292,1.407,408,2,442,5.562,509,6.117,511,6.588,599,3.977,601,0.923,604,5.693,605,7.218,606,5.562,607,6.299,608,3.36,609,6.299,610,6.299]],["title/injectables/CreateMulterUploadUtil.html",[95,0.204,611,2.934]],["body/injectables/CreateMulterUploadUtil.html",[14,0.009,18,0.095,19,0.106,20,0.11,24,0.852,32,0.704,90,0.095,91,0.151,92,0.005,93,0.006,94,0.005,95,0.301,96,0.987,104,0.149,106,1.614,108,0.426,110,1.058,111,1.01,112,0.24,113,1.058,142,2.55,143,1.934,145,1.034,172,2.235,176,1.187,188,3.293,252,1.243,272,1.187,291,3.13,292,1.108,350,1.333,393,2.168,407,1.886,460,2.705,461,1.882,471,1.988,472,1.988,473,1.575,474,2.045,476,3.71,484,2.662,562,4.378,601,0.793,611,4.343,612,6.87,613,6.109,614,3.996,615,4.874,616,4.378,617,5.006,618,4.958,619,2.622,620,4.958,621,5.27,622,4.958,623,6.54,624,4.129,625,3.71,626,3.71,627,3.13,628,2.862,629,4.958,630,4.378,631,2.988,632,3.482,633,3.482,634,4.958,635,4.958,636,4.378,637,4.378,638,2.988,639,4.958,640,4.958,641,4.958,642,2.862,643,4.958,644,2.55,645,4.958,646,4.958,647,3.482]],["title/classes/CreateQueryDto.html",[91,0.134,648,3.103]],["body/classes/CreateQueryDto.html",[14,0.009,18,0.115,19,0.127,20,0.09,24,0.628,29,1.461,90,0.115,91,0.181,92,0.006,93,0.007,94,0.006,104,0.179,108,0.499,112,0.415,152,2.575,314,3.596,493,4.809,601,0.892,648,5.168,649,7.697,650,4.463,651,5.038,652,3.833,653,4.104,654,4.806,655,4.402,656,5.266,657,5.266,658,4.806,659,4.806,660,3.067]],["title/classes/CreateRentalDto.html",[91,0.134,661,2.789]],["body/classes/CreateRentalDto.html",[14,0.009,18,0.088,19,0.098,20,0.069,22,0.41,23,0.416,29,1.127,90,0.088,91,0.14,92,0.004,93,0.006,94,0.004,104,0.138,108,0.505,112,0.436,144,1.537,152,2.618,292,1.028,299,2.907,479,3.23,567,2.549,601,0.754,661,3.927,662,7.716,663,3.23,664,2.772,665,3.707,666,1.153,667,1.656,668,4.061,669,1.426,670,3.385,671,4.449,672,4.068,673,3.759,674,3.906,675,4.95,676,5.274,677,4.95,678,4.449,679,3.707,680,4.599,681,3.927,682,4.599,683,4.207,684,4.599,685,4.599,686,4.599,687,4.599,688,4.061,689,4.599,690,3.442,691,3.23,692,3.23,693,3.23,694,3.23,695,3.23,696,3.23,697,2.011,698,3.23,699,2.904,700,3.23,701,3.23,702,3.442,703,3.442,704,3.442,705,3.442,706,3.442,707,3.442,708,2.073,709,2.904,710,2.904,711,2.904,712,2.365]],["title/injectables/CreateUpdaterDtoPipe.html",[95,0.204,713,2.789]],["body/injectables/CreateUpdaterDtoPipe.html",[14,0.009,18,0.073,19,0.081,20,0.057,22,0.458,23,0.73,24,0.733,32,0.54,90,0.073,91,0.116,92,0.004,93,0.005,94,0.004,95,0.251,96,0.757,104,0.114,108,0.371,110,1.358,111,1.297,112,0.184,113,0.811,145,1.644,166,1.664,173,0.89,176,1.304,248,3.44,252,1.845,284,1.711,314,2.456,344,1.794,345,3.44,350,2.058,352,1.689,407,2.404,408,1.73,448,2.069,460,2.982,484,2.379,521,2.87,572,1.269,575,2.456,576,2.617,579,2.313,582,2.706,584,1.525,601,0.661,619,2.185,652,2.617,660,2.802,665,4.391,669,1.689,713,3.44,714,6.139,715,4.834,716,3.358,717,4.228,718,4.391,719,4.811,720,6.367,721,6.367,722,5.768,723,3.804,724,6.481,725,3.804,726,4.078,727,3.804,728,3.827,729,5.449,730,4.391,731,3.358,732,1.406,733,3.065,734,2.906,735,4.391,736,2.247,737,4.078,738,3.065,739,5.622,740,3.065,741,5.622,742,3.065,743,5.622,744,4.02,745,5.449,746,5.449,747,2.108,748,1.769,749,3.804,750,3.804]],["title/injectables/CreateUserDto.html",[95,0.204,577,2.789]],["body/injectables/CreateUserDto.html",[14,0.009,18,0.12,19,0.134,20,0.094,24,0.66,32,0.889,90,0.12,91,0.19,92,0.006,93,0.007,94,0.006,95,0.349,96,1.247,104,0.188,108,0.475,112,0.395,144,1.488,287,3.462,298,3.462,465,4.194,577,4.788,601,0.92,751,7.483,752,4.161,753,5.049,754,6.266,755,4.401]],["title/modules/DatabaseModule.html",[0,1.991,756,2.789]],["body/modules/DatabaseModule.html",[0,3.769,2,3.339,7,4.627,8,4.831,14,0.009,18,0.116,19,0.129,20,0.091,22,0.397,24,0.904,32,0.855,33,4.917,34,3.631,36,3.804,56,4.016,90,0.154,91,0.183,92,0.006,93,0.007,94,0.006,102,5.201,273,4.462,697,3.237,756,4.674,757,6.025,758,7.404,759,5.541,760,5.201,761,4.917,762,6.46,763,6.025]],["title/injectables/DeleteS3ImagesUtil.html",[95,0.204,764,2.934]],["body/injectables/DeleteS3ImagesUtil.html",[14,0.009,18,0.065,19,0.072,20,0.051,22,0.222,24,0.525,32,0.478,51,2.395,64,3.944,76,3.005,89,2.764,90,0.065,91,0.102,92,0.003,93,0.005,94,0.003,95,0.23,96,0.67,104,0.101,106,1.096,108,0.383,110,0.718,111,1.21,112,0.163,113,0.718,142,1.732,143,1.314,144,0.568,145,1.04,252,1.25,272,1.194,284,1.467,304,2.878,350,2.28,352,2.035,393,3.763,407,1.713,448,1.893,460,2.195,472,3.127,504,4.019,601,0.605,615,4.883,616,2.974,617,4.423,619,2.381,621,4.019,626,2.52,631,5.152,632,4.611,633,4.611,638,3.956,644,3.774,666,1.646,673,3.502,764,3.312,765,6.188,766,2.974,767,4.987,768,5.938,769,5.938,770,3.368,771,3.368,772,3.368,773,3.368,774,1.618,775,4.597,776,5.154,777,4.987,778,6.188,779,3.638,780,4.987,781,6.565,782,3.368,783,4.987,784,3.368,785,4.987,786,4.987,787,5.797,788,4.987,789,4.223,790,3.368,791,4.987,792,5.683,793,4.403,794,5.648,795,3.368,796,4.987,797,4.987,798,3.368,799,4.987,800,4.987,801,4.913,802,4.403,803,4.987,804,4.987,805,4.987,806,4.019,807,4.403,808,4.403,809,3.368]],["title/injectables/DeleteUserDto.html",[95,0.204,810,3.103]],["body/injectables/DeleteUserDto.html",[14,0.009,18,0.127,19,0.141,20,0.1,24,0.697,32,0.939,90,0.127,91,0.201,92,0.006,93,0.008,94,0.006,95,0.361,96,1.317,104,0.199,108,0.386,112,0.321,144,1.322,287,3.544,601,0.95,752,4.395,755,4.648,810,5.504,811,6.919]],["title/classes/EditDetailsDto.html",[91,0.134,812,2.934]],["body/classes/EditDetailsDto.html",[14,0.009,18,0.112,19,0.124,20,0.087,22,0.477,23,0.525,29,1.421,90,0.112,91,0.176,92,0.006,93,0.007,94,0.006,104,0.174,108,0.459,112,0.4,144,1.536,152,2.508,567,3.216,601,0.877,666,1.455,667,2.089,669,1.798,670,3.786,678,4.976,683,3.095,691,4.075,692,4.075,693,4.075,694,4.075,695,4.075,696,4.075,697,2.537,698,4.075,699,3.663,700,4.075,701,4.075,736,3.251,812,4.804,813,7.286,814,5.123,815,3.496,816,3.853,817,5.802,818,5.802,819,5.802,820,5.802]],["title/injectables/EmailService.html",[95,0.204,374,2.934]],["body/injectables/EmailService.html",[14,0.009,16,3.584,18,0.076,19,0.084,20,0.059,22,0.368,23,0.737,24,0.786,32,0.56,90,0.076,91,0.12,92,0.004,93,0.005,94,0.004,95,0.258,96,0.785,102,3.927,104,0.118,106,2.114,108,0.412,110,1.193,111,1.139,112,0.191,113,1.193,144,1.096,145,0.822,166,1.339,173,1.308,252,1.943,269,4.506,272,1.339,287,3.167,292,0.881,297,2.951,298,3.79,300,5.577,301,4.506,315,3.099,344,1.575,350,1.06,374,3.713,407,1.138,439,4.184,448,2.683,460,2.401,461,1.497,473,1.252,474,1.627,484,1.913,531,4.937,532,3.099,542,4.506,543,4.184,544,6.241,548,2.951,565,2.951,566,2.951,579,2.373,601,0.678,619,1.581,632,3.927,633,3.927,821,3.482,822,5.696,823,3.927,824,6.246,825,6.198,826,7.068,827,3.722,828,4.937,829,7.97,830,6.496,831,5.592,832,3.944,833,3.944,834,3.944,835,5.592,836,3.944,837,5.592,838,6.496,839,5.592,840,3.944,841,3.944,842,3.482,843,3.178,844,4.184,845,3.944,846,2.951,847,3.944,848,3.178,849,3.482,850,5.592,851,3.482,852,3.944,853,3.944]],["title/classes/ErrorFilter.html",[91,0.134,221,3.306]],["body/classes/ErrorFilter.html",[14,0.009,18,0.085,19,0.095,20,0.067,22,0.292,23,0.673,24,0.639,29,1.086,32,0.629,45,3.916,89,4.913,90,0.085,91,0.135,92,0.004,93,0.006,94,0.004,103,5.357,104,0.133,108,0.258,110,0.946,111,1.236,112,0.215,113,0.946,145,1.265,166,1.452,173,1.037,176,1.062,221,4.54,284,1.355,304,2.559,319,1.939,344,1.709,350,2.253,408,1.927,428,5.357,430,3.115,435,5.176,471,3.224,472,2.773,579,2.575,584,2.433,669,2.144,744,3.83,774,3.322,854,3.916,855,6.067,856,6.067,857,6.067,858,6.067,859,6.067,860,6.067,861,6.107,862,3.236,863,6.107,864,6.067,865,5.993,866,6.566,867,4.435,868,6.067,869,6.067,870,5.357,871,4.435,872,4.029,873,2.672,874,4.435,875,4.435,876,3.916,877,3.833,878,3.916,879,3.319,880,4.89,881,4.435,882,4.435,883,6.067,884,4.435,885,4.435,886,4.435,887,4.435,888,2.559,889,3.916,890,4.435,891,3.916,892,4.435,893,4.435,894,4.435,895,6.067,896,4.435,897,4.435,898,3.916,899,6.067,900,4.435,901,4.435]],["title/injectables/ExtractKeyValueUtil.html",[95,0.204,375,2.662]],["body/injectables/ExtractKeyValueUtil.html",[14,0.009,18,0.096,19,0.107,20,0.075,22,0.33,23,0.596,24,0.775,32,0.711,68,4.367,69,5.307,90,0.096,91,0.152,92,0.005,93,0.006,94,0.005,95,0.303,96,0.997,104,0.151,106,2.394,108,0.384,110,1.069,111,1.021,112,0.243,113,1.069,144,0.845,145,1.045,166,1.577,172,2.968,173,1.172,176,1.943,252,1.844,273,3.969,292,1.119,332,2.489,350,1.347,351,4.625,352,2.041,375,3.969,393,3.876,407,1.445,408,1.591,448,2.5,473,1.591,489,4.625,495,6.073,636,6.495,827,3.163,902,6.495,903,4.425,904,4.928,905,5.815,906,6.586,907,6.586,908,4.928,909,4.644,910,5.307,911,6.586,912,5.011,913,5.815,914,5.011,915,3.75,916,5.011,917,5.011,918,4.425,919,4.425,920,5.011,921,4.425,922,4.425,923,4.425]],["title/classes/ExtractKeyValueUtilDto.html",[91,0.134,915,3.306]],["body/classes/ExtractKeyValueUtilDto.html",[14,0.009,17,3.071,18,0.119,19,0.132,20,0.093,22,0.407,23,0.559,29,1.515,68,4.447,90,0.119,91,0.188,92,0.006,93,0.007,94,0.006,104,0.186,108,0.438,112,0.365,144,1.423,284,1.381,393,3.891,407,2.339,408,1.964,432,4.343,533,3.904,599,3.904,601,0.912,827,2.97,908,4.627,909,3.904,910,4.983,915,5.63,924,7.16,925,5.46,926,6.183,927,6.183]],["title/injectables/ExtractUserUtil.html",[95,0.204,377,2.662]],["body/injectables/ExtractUserUtil.html",[14,0.009,18,0.111,19,0.124,20,0.087,24,0.829,32,0.822,90,0.111,91,0.176,92,0.006,93,0.007,94,0.006,95,0.333,96,1.152,104,0.174,106,2.563,108,0.421,110,1.235,111,1.179,112,0.28,113,1.235,145,1.206,166,1.729,172,2.608,173,1.354,176,1.974,188,3.844,252,1.974,272,1.729,291,3.654,298,2.457,332,2.874,350,1.941,377,4.353,448,2.742,465,2.977,495,5.405,624,4.56,913,6.377,928,6.952,929,5.11,930,5.788,931,5.788,932,5.11,933,4.664,934,5.788,935,5.788,936,4.331,937,5.788]],["title/injectables/FindUserDto.html",[95,0.204,450,2.934]],["body/injectables/FindUserDto.html",[14,0.009,18,0.127,19,0.141,20,0.1,24,0.697,32,0.939,90,0.127,91,0.201,92,0.006,93,0.008,94,0.006,95,0.361,96,1.317,104,0.199,108,0.386,112,0.321,144,1.322,298,3.544,450,5.204,601,0.95,752,4.395,755,4.648,938,6.315]],["title/classes/ForgotPasswordDto.html",[91,0.134,294,3.103]],["body/classes/ForgotPasswordDto.html",[14,0.009,16,3.702,18,0.124,19,0.137,20,0.097,22,0.424,23,0.582,29,1.577,90,0.124,91,0.196,92,0.006,93,0.007,94,0.006,104,0.193,108,0.375,112,0.312,144,1.3,284,1.438,294,5.414,297,4.817,298,3.711,408,2.044,422,4.817,565,4.817,598,4.521,601,0.935,603,4.817,939,6.806,940,6.437,941,4.817,942,6.437,943,5.684,944,6.437]],["title/injectables/GenerateRentalDurationEnumUtil.html",[95,0.204,945,2.789]],["body/injectables/GenerateRentalDurationEnumUtil.html",[14,0.009,18,0.074,19,0.082,20,0.058,22,0.253,23,0.695,24,0.735,32,0.544,90,0.074,91,0.117,92,0.004,93,0.005,94,0.004,95,0.253,96,0.763,104,0.115,108,0.319,110,1.169,111,1.116,113,1.169,145,1.761,166,1.312,173,1.282,252,1.925,292,1.224,314,2.47,319,2.396,344,1.966,350,2.064,352,1.188,448,1.456,460,2.364,461,2.081,467,3.46,471,2.198,472,2.198,473,1.741,474,2.26,484,1.875,652,2.632,666,1.925,669,2.163,774,1.842,873,3.854,888,2.213,945,3.46,946,5.648,947,3.938,948,3.386,949,4.839,950,4.847,951,5.481,952,5.481,953,3.64,954,5.481,955,5.481,956,5.481,957,7.265,958,3.835,959,2.693,960,5.624,961,5.481,962,3.835,963,4.417,964,5.481,965,5.481,966,6.188,967,6.37,968,5.677,969,3.09,970,3.386,971,4.101,972,3.835,973,3.835,974,3.835,975,4.417,976,3.835,977,3.835,978,3.835,979,3.835,980,2.87,981,3.835,982,3.835,983,3.386,984,1.904,985,3.835,986,6.396,987,4.492,988,3.835,989,3.051,990,6.396,991,6.396,992,3.386,993,5.481,994,2.421,995,3.386,996,6.396,997,3.835]],["title/injectables/GeoUrlApiPipe.html",[95,0.204,998,2.789]],["body/injectables/GeoUrlApiPipe.html",[12,2.934,14,0.009,18,0.06,19,0.066,20,0.047,22,0.416,23,0.689,24,0.714,32,0.441,51,3.03,52,5.057,80,4.148,90,0.06,91,0.094,92,0.003,93,0.005,94,0.003,95,0.216,96,0.619,104,0.093,106,1.012,108,0.368,110,1.346,111,1.285,112,0.274,113,1.346,142,1.599,143,1.832,144,1.422,145,1.412,166,1.51,173,1.325,176,1.771,237,1.874,252,1.954,272,1.51,284,1.41,292,1.513,299,3.602,330,3.3,344,1.908,350,1.915,352,1.755,393,2.054,407,1.954,408,1.492,417,3.977,448,1.181,460,2.332,461,1.181,471,1.247,472,1.247,473,0.988,474,1.282,478,3.03,484,2.718,515,1.874,532,2.604,575,2.117,576,2.256,579,2.678,666,1.698,667,1.692,669,1.456,712,4.151,748,2.934,760,3.3,774,1.494,779,2.604,862,2.506,877,4.221,909,2.966,998,2.966,999,5.981,1000,2.746,1001,2.912,1002,4.758,1003,3.516,1004,3.786,1005,2.256,1006,4.698,1007,4.148,1008,5.571,1009,2.966,1010,3.516,1011,2.831,1012,4.148,1013,6.309,1014,5.571,1015,2.746,1016,4.112,1017,3.11,1018,4.698,1019,3.11,1020,4.148,1021,4.698,1022,4.698,1023,4.432,1024,4.148,1025,5.195,1026,5.195,1027,3.11,1028,4.698,1029,6.309,1030,3.11,1031,2.184,1032,2.746,1033,2.065,1034,2.746,1035,1.544,1036,2.327,1037,2.327,1038,2.506,1039,1.544,1040,2.506,1041,3.11,1042,3.11,1043,3.11,1044,3.11,1045,3.11,1046,4.148,1047,5.085,1048,2.746,1049,3.11,1050,2.746,1051,3.11,1052,3.11]],["title/injectables/GeoUrlApiUtil.html",[95,0.204,1016,2.55]],["body/injectables/GeoUrlApiUtil.html",[14,0.009,18,0.065,19,0.072,20,0.051,22,0.391,23,0.594,24,0.626,32,0.478,51,3.153,52,5.716,90,0.065,91,0.102,92,0.003,93,0.005,94,0.003,95,0.23,96,0.67,104,0.101,108,0.291,110,1.064,111,1.016,113,1.064,144,1.367,145,1.238,152,2.505,166,1.194,173,1.536,176,1.968,252,1.84,292,1.114,299,3.591,300,3.312,304,1.944,344,2.244,350,1.884,352,1.546,393,3.064,408,2.226,448,1.279,460,2.195,461,1.893,471,2,472,2,473,1.584,474,2.057,567,1.867,579,2.117,712,3.774,728,2.365,747,2.764,760,3.503,779,2.764,877,4.322,904,2.52,975,4.786,1003,5.96,1014,4.403,1016,2.878,1024,4.403,1025,5.691,1026,5.594,1034,2.974,1038,2.714,1039,4.024,1040,2.714,1047,4.786,1053,5.244,1054,2.974,1055,4.987,1056,4.987,1057,6.565,1058,4.987,1059,4.403,1060,4.403,1061,4.987,1062,4.987,1063,4.987,1064,4.987,1065,4.987,1066,2.714,1067,4.019,1068,3.368,1069,4.987,1070,4.987,1071,4.987,1072,4.987,1073,4.987,1074,3.368,1075,5.244,1076,3.732,1077,3.732,1078,2.714,1079,3.368,1080,4.987,1081,2.974,1082,3.368,1083,3.368,1084,3.368,1085,1.618,1086,3.368,1087,3.368,1088,3.368,1089,3.368,1090,3.368,1091,3.368]],["title/injectables/GivenNoticePipe.html",[95,0.204,1092,2.55]],["body/injectables/GivenNoticePipe.html",[14,0.009,18,0.064,19,0.071,20,0.05,22,0.431,23,0.685,24,0.688,32,0.473,78,4.588,89,2.744,90,0.064,91,0.101,92,0.003,93,0.005,94,0.003,95,0.228,96,0.664,104,0.1,108,0.344,110,1.259,111,1.202,112,0.162,113,1.259,145,1.231,152,0.985,166,1.671,173,1.381,176,1.564,252,1.949,272,1.185,284,0.745,292,1.559,299,1.375,314,3.295,319,3.668,330,3.477,344,1.663,350,1.876,352,1.534,407,1.703,448,1.266,460,2.703,461,1.266,466,2.694,467,3.125,471,1.337,472,1.337,473,1.875,474,1.375,478,2.377,484,1.694,567,1.848,572,1.652,575,2.231,576,1.601,579,1.415,582,2.459,584,1.337,608,3.9,652,3.512,666,2.123,670,1.601,708,1.503,748,1.551,823,3.477,862,1.779,872,3.921,873,4.407,947,2.64,957,6.866,960,6.402,969,2.687,989,2.164,1005,1.601,1033,2.214,1035,2.932,1039,2.932,1085,2.835,1092,2.857,1093,5.768,1094,2.944,1095,4.95,1096,4.95,1097,3.558,1098,5.223,1099,3.989,1100,4.95,1101,4.371,1102,4.95,1103,4.95,1104,4.95,1105,4.95,1106,4.95,1107,4.95,1108,5.904,1109,5.904,1110,4.95,1111,3.334,1112,4.779,1113,3.125,1114,4.147,1115,3.334,1116,4.147,1117,4.95,1118,3.334,1119,4.371,1120,4.371,1121,4.95,1122,4.95,1123,4.95,1124,2.944,1125,3.334,1126,3.334,1127,3.334,1128,3.334,1129,3.334,1130,3.334,1131,2.944,1132,3.334,1133,3.334,1134,3.334,1135,4.95,1136,3.334,1137,3.334,1138,3.334,1139,3.334,1140,2.495,1141,2.687,1142,2.687,1143,3.989,1144,3.704]],["title/classes/GivenNoticeSearchRentalDto.html",[91,0.134,1116,3.103]],["body/classes/GivenNoticeSearchRentalDto.html",[14,0.009,18,0.1,19,0.111,20,0.078,22,0.342,23,0.609,24,0.547,29,1.271,90,0.1,91,0.158,92,0.005,93,0.007,94,0.005,104,0.156,108,0.49,112,0.408,144,1.336,152,2.339,299,3.085,321,4.731,478,3.235,601,0.817,666,2.147,667,2.426,670,3.593,708,3.372,872,5.45,873,3.126,1039,4.252,1092,4.57,1097,5.16,1112,5.181,1114,4.731,1116,4.731,1141,6.029,1142,6.029,1145,7.56,1146,4.181,1147,4.731,1148,6.736,1149,4.253,1150,5.188,1151,5.188,1152,5.188,1153,5.188,1154,5.188,1155,5.188]],["title/classes/HttpErrorFilter.html",[91,0.134,218,3.306]],["body/classes/HttpErrorFilter.html",[14,0.009,18,0.084,19,0.094,20,0.066,22,0.29,24,0.635,29,1.076,32,0.624,65,4.834,89,3.341,90,0.084,91,0.133,92,0.004,93,0.006,94,0.004,104,0.132,108,0.256,110,0.937,111,0.895,112,0.213,113,0.937,166,1.443,173,1.028,176,1.648,218,4.511,231,3.54,273,2.648,304,4.628,344,1.698,350,2.087,406,4.234,432,4.834,471,2.76,572,1.466,584,2.417,669,1.869,744,3.806,774,2.11,794,4.858,861,3.879,863,6.54,865,5.97,866,6.854,870,7.08,872,2.917,873,2.648,876,5.323,878,5.323,879,3.288,880,4.858,943,5.323,1156,5.323,1157,3.879,1158,7.407,1159,5.323,1160,6.029,1161,6.029,1162,8.212,1163,6.029,1164,7.407,1165,6.029,1166,6.029,1167,6.029,1168,6.029,1169,6.029,1170,6.029,1171,6.029,1172,6.029,1173,6.883,1174,6.029,1175,6.029,1176,4.393,1177,3.288,1178,4.393,1179,4.393,1180,4.393,1181,3.54,1182,4.858,1183,4.393,1184,4.393,1185,4.393,1186,4.393,1187,4.393,1188,3.879,1189,4.393,1190,4.393,1191,3.288,1192,4.393,1193,4.393,1194,4.393,1195,4.393,1196,4.393,1197,4.393,1198,4.393,1199,4.393]],["title/classes/ImageDto.html",[91,0.134,1200,3.103]],["body/classes/ImageDto.html",[14,0.009,18,0.126,19,0.14,20,0.098,29,1.603,51,3.991,90,0.126,91,0.199,92,0.006,93,0.008,94,0.006,104,0.197,108,0.454,112,0.377,144,1.451,601,0.944,642,3.777,644,3.366,1200,5.467,1201,5.779,1202,6.218,1203,6.545,1204,6.545]],["title/interfaces/ImageInterface.html",[1205,1.771,1206,2.934]],["body/interfaces/ImageInterface.html",[14,0.009,18,0.11,19,0.123,20,0.086,51,3.949,90,0.11,92,0.006,93,0.007,94,0.006,104,0.173,112,0.429,144,1.576,393,3.595,601,0.872,627,5.191,631,4.955,1205,2.304,1206,4.774,1207,3.184,1208,5.073,1209,6.627,1210,5.461,1211,6.627,1212,5.775]],["title/classes/ImageQueryResultsDto.html",[91,0.134,1213,3.306]],["body/classes/ImageQueryResultsDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,29,1.599,90,0.125,91,0.198,92,0.006,93,0.008,94,0.006,104,0.196,108,0.453,112,0.377,152,2.296,462,4.268,601,0.942,775,4.79,1213,5.816,1214,7.328,1215,5.763,1216,7.328,1217,6.526,1218,6.526]],["title/interfaces/ImageUploadInterface.html",[1205,1.771,1219,3.306]],["body/interfaces/ImageUploadInterface.html",[14,0.009,18,0.12,19,0.134,20,0.114,90,0.12,92,0.006,93,0.007,94,0.006,104,0.188,111,1.545,112,0.395,144,1.53,331,5.952,393,3.705,601,0.92,631,5.23,1205,2.512,1207,3.473,1219,5.675,1220,5.532,1221,5.532,1222,6.266,1223,6.266]],["title/controllers/ImagesController.html",[161,2.356,202,3.103]],["body/controllers/ImagesController.html",[12,1.734,14,0.009,18,0.044,19,0.049,20,0.07,22,0.354,23,0.726,24,0.698,32,0.329,90,0.044,91,0.07,92,0.002,93,0.004,94,0.002,104,0.07,106,0.753,108,0.414,110,1.518,111,1.449,112,0.227,113,1.518,143,1.455,145,1.483,161,2.499,163,1.234,166,0.893,169,4.996,172,3.917,173,1.664,174,1.732,175,1.625,176,1.508,178,1.461,179,1.865,180,1.732,184,1.732,188,3.111,202,2.62,237,1.395,252,2.156,268,1.732,272,1.508,303,4.499,304,2.704,315,2.067,331,2.62,332,1.149,344,2.004,352,2.205,408,2,417,1.625,441,5.011,460,1.379,461,1.416,462,2.409,471,1.495,472,1.495,478,1.791,543,1.732,572,1.244,627,1.461,628,3.977,642,2.704,644,4.344,666,2.106,673,2.866,775,5.108,776,5.343,779,3.671,789,5.162,792,4.713,801,5.692,1005,2.58,1010,2.791,1113,1.461,1200,5.129,1224,2.043,1225,3.006,1226,3.006,1227,3.006,1228,3.73,1229,3.73,1230,3.73,1231,3.73,1232,3.293,1233,3.73,1234,3.293,1235,3.73,1236,3.73,1237,2.314,1238,5.561,1239,2.314,1240,2.314,1241,2.314,1242,2.314,1243,2.314,1244,2.314,1245,6.084,1246,2.314,1247,2.314,1248,2.314,1249,2.314,1250,2.314,1251,2.791,1252,2.314,1253,2.314,1254,3.73,1255,2.314,1256,5.373,1257,2.314,1258,3.774,1259,2.314,1260,2.314,1261,3.111,1262,2.043,1263,1.537,1264,2.043,1265,2.314,1266,2.791,1267,3.73,1268,3.73,1269,2.314,1270,2.314,1271,3.73,1272,5.373,1273,3.73,1274,3.73,1275,3.73,1276,3.73,1277,2.314,1278,2.314,1279,2.314,1280,2.314,1281,2.314,1282,2.314,1283,3.73,1284,2.314,1285,2.314,1286,2.314,1287,2.314,1288,2.314,1289,2.314,1290,3.73,1291,2.314]],["title/modules/ImagesModule.html",[0,1.991,194,3.103]],["body/modules/ImagesModule.html",[0,3.096,1,4.827,2,2.426,3,2.526,4,2.763,5,2.763,6,2.526,7,3.965,8,4.14,12,3.724,14,0.009,15,3.796,16,2.102,17,2.174,18,0.084,19,0.093,20,0.066,24,0.927,32,0.621,36,3.796,90,0.084,91,0.133,92,0.004,93,0.006,94,0.004,106,1.425,111,0.891,163,3.207,194,6.412,202,4.825,208,3.275,209,2.426,236,3.275,237,2.638,498,2.763,611,5.319,613,3.074,615,2.638,617,4.827,626,3.275,756,5.056,764,5.319,775,2.526,989,2.629,1210,2.907,1212,3.074,1261,5.8,1262,3.865,1292,3.865,1293,3.865,1294,3.865,1295,3.865,1296,5.319,1297,5.319,1298,4.377,1299,3.527,1300,4.377,1301,4.846,1302,4.377,1303,3.865,1304,5.31,1305,3.865,1306,3.865,1307,3.865,1308,3.865,1309,3.865,1310,3.527,1311,2.907,1312,6.013]],["title/injectables/ImagesService.html",[95,0.204,1261,2.934]],["body/injectables/ImagesService.html",[12,1.92,14,0.009,18,0.029,19,0.033,20,0.062,22,0.36,23,0.547,24,0.748,32,0.216,51,0.732,56,1.263,76,1.585,89,1.458,90,0.029,91,0.046,92,0.001,93,0.003,94,0.001,95,0.121,96,0.303,104,0.046,106,0.856,108,0.337,110,1.166,111,1.176,112,0.074,113,0.325,143,2.131,144,0.922,145,1.388,172,1.861,176,1.221,188,1.012,209,0.845,237,0.918,252,1.37,272,1.922,273,1.585,276,3.45,284,0.588,291,0.962,292,1.139,300,1.747,303,2.809,304,2.384,315,2.289,344,2.18,350,1.79,352,2.236,393,2.038,407,1.576,408,1.312,417,2.438,441,3.646,448,0.579,460,2.135,461,1.936,462,2.397,467,0.962,471,2.044,472,2.671,473,1.48,474,1.922,478,1.984,482,1.969,484,0.521,498,2.607,504,2.12,532,1.458,533,1.661,553,1.353,572,2.016,601,0.319,611,3.629,613,1.848,615,3.293,617,3.293,619,2.191,621,2.12,624,2.943,626,1.14,627,4.554,628,2.69,630,1.346,631,3.782,642,3.74,644,3.861,666,1.779,667,0.947,669,1.58,673,1.851,697,2.389,759,2.597,761,1.012,764,3.629,774,0.732,775,4.879,776,4.408,779,2.583,787,2.323,789,4.471,792,5.105,793,2.323,794,2.12,801,3.091,802,2.323,806,2.12,807,2.323,808,2.323,822,2.12,827,2.239,877,2.289,932,1.346,936,1.969,941,3.815,989,1.806,1005,2.449,1007,2.323,1010,3.091,1098,1.14,1131,3.647,1191,1.969,1200,1.848,1202,1.969,1206,1.012,1210,5.262,1212,5.385,1213,1.14,1216,3.647,1225,2.12,1226,2.12,1227,2.12,1232,3.064,1234,3.064,1261,1.747,1263,1.012,1264,1.346,1266,3.488,1296,3.629,1297,3.629,1303,1.346,1304,2.323,1305,1.346,1306,1.346,1307,1.346,1308,1.346,1309,1.346,1313,1.346,1314,2.631,1315,1.747,1316,3.647,1317,4.661,1318,2.631,1319,2.631,1320,2.631,1321,2.631,1322,1.747,1323,2.631,1324,3.471,1325,3.471,1326,4.661,1327,4.825,1328,1.524,1329,1.524,1330,2.631,1331,1.524,1332,2.631,1333,2.631,1334,4.13,1335,4.13,1336,2.631,1337,2.631,1338,2.631,1339,2.631,1340,1.524,1341,2.631,1342,1.524,1343,2.323,1344,2.631,1345,1.747,1346,2.631,1347,2.631,1348,2.631,1349,1.524,1350,3.471,1351,1.524,1352,5.465,1353,1.848,1354,2.631,1355,1.524,1356,1.524,1357,3.647,1358,2.631,1359,2.631,1360,1.747,1361,2.631,1362,1.07,1363,1.346,1364,0.88,1365,1.848,1366,1.346,1367,1.346,1368,1.524,1369,1.524,1370,1.524,1371,1.524,1372,6.661,1373,1.524,1374,1.524,1375,1.524,1376,1.524,1377,2.631,1378,4.13,1379,2.631,1380,4.116,1381,0.813,1382,1.524,1383,1.524,1384,1.524,1385,1.524,1386,3.471,1387,1.524,1388,2.323,1389,1.524,1390,1.346,1391,1.524,1392,1.524,1393,1.524,1394,1.524,1395,1.228,1396,3.064,1397,1.524,1398,1.524,1399,2.631,1400,1.524,1401,1.524,1402,1.524,1403,1.524,1404,1.524,1405,1.524]],["title/injectables/JoiValidationPipe.html",[95,0.204,1406,3.103]],["body/injectables/JoiValidationPipe.html",[14,0.009,18,0.104,19,0.115,20,0.081,22,0.355,23,0.625,24,0.727,30,5.564,32,0.765,39,6.097,78,4.849,89,3.827,90,0.104,91,0.231,92,0.005,93,0.007,94,0.005,95,0.318,96,1.073,104,0.162,106,1.754,108,0.402,110,1.473,111,1.406,112,0.335,113,1.473,142,2.772,143,2.102,145,1.124,166,1.653,173,1.261,292,1.204,350,1.449,407,2.317,466,2.848,473,1.712,532,3.827,575,3.112,576,3.316,582,3.429,584,2.161,595,4.759,774,2.589,898,4.759,1001,3.551,1311,5.81,1406,4.849,1407,6.727,1408,4.759,1409,6.905,1410,6.905,1411,6.905,1412,5.39,1413,5.39,1414,5.39,1415,5.39,1416,4.759,1417,5.39,1418,5.39]],["title/injectables/JwtAuthGuard.html",[95,0.204,178,2.789]],["body/injectables/JwtAuthGuard.html",[14,0.009,18,0.124,19,0.137,20,0.097,22,0.424,23,0.697,24,0.812,32,0.914,68,4.243,90,0.124,91,0.196,92,0.006,93,0.007,94,0.006,95,0.355,96,1.281,178,4.866,386,4.275,480,4.645,1419,5.684,1420,5.188,1421,5.119,1422,5.768,1423,4.521,1424,5.684,1425,5.188,1426,4.817,1427,6.437]],["title/classes/JwtPayloadDto.html",[91,0.134,624,2.789]],["body/classes/JwtPayloadDto.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.412,23,0.565,29,1.531,68,3.214,90,0.12,91,0.19,92,0.006,93,0.007,94,0.006,104,0.188,108,0.475,112,0.395,144,1.487,284,1.396,298,3.458,408,1.985,465,4.189,599,3.945,601,0.918,624,4.78,625,6.336,936,6.096,1428,5.518,1429,5.518,1430,6.249,1431,6.249,1432,6.249]],["title/injectables/JwtStrategy.html",[95,0.204,378,3.103]],["body/injectables/JwtStrategy.html",[14,0.009,18,0.1,19,0.111,20,0.078,22,0.343,23,0.717,24,0.865,32,0.738,68,4.406,76,3.133,90,0.1,91,0.158,92,0.005,93,0.007,94,0.005,95,0.311,96,1.035,104,0.156,106,2.437,108,0.393,110,1.109,111,1.059,112,0.252,113,1.109,145,1.652,166,1.615,173,1.216,176,1.615,252,1.878,291,5.003,298,2.207,332,2.582,344,1.465,351,3.652,378,4.738,386,3.453,387,3.891,388,4.591,402,4.591,465,2.674,466,2.782,480,4.513,637,4.591,905,4.591,936,3.891,1423,4.738,1425,4.19,1426,3.891,1429,5.957,1433,4.591,1434,5.199,1435,6.746,1436,5.199,1437,4.591,1438,5.199,1439,4.591,1440,5.199,1441,5.199,1442,5.199,1443,5.199,1444,5.199,1445,5.199,1446,5.199,1447,5.199,1448,5.199]],["title/classes/LocCreateRentalDto.html",[91,0.134,1031,3.103]],["body/classes/LocCreateRentalDto.html",[14,0.009,18,0.104,19,0.116,20,0.082,22,0.358,23,0.627,24,0.572,29,1.33,51,3.331,90,0.104,91,0.165,92,0.005,93,0.007,94,0.005,104,0.163,108,0.445,112,0.37,144,1.359,152,2.379,272,1.66,284,1.549,292,1.549,299,3.568,328,4.871,407,2.205,437,5.589,484,2.96,601,0.841,663,3.812,666,1.916,667,2.497,690,4.061,712,3.567,748,3.554,779,3.844,1002,5.368,1023,4.871,1031,4.871,1035,2.695,1047,6.159,1449,7.112,1450,6.027,1451,5.19,1452,6.935,1453,4.378,1454,4.374,1455,4.374]],["title/injectables/LocalAuthGuard.html",[95,0.204,338,3.306]],["body/injectables/LocalAuthGuard.html",[14,0.009,18,0.124,19,0.137,20,0.097,22,0.424,23,0.697,24,0.812,32,0.914,90,0.124,91,0.196,92,0.006,93,0.007,94,0.006,95,0.355,96,1.281,338,5.768,386,4.275,480,4.645,1420,5.188,1421,5.119,1422,5.768,1423,4.521,1424,5.684,1425,5.188,1426,4.817,1456,5.684,1457,6.649,1458,6.437]],["title/injectables/LocalStrategy.html",[95,0.204,379,3.103]],["body/injectables/LocalStrategy.html",[14,0.009,18,0.091,19,0.102,20,0.072,22,0.314,23,0.576,24,0.806,32,0.675,90,0.091,91,0.145,92,0.005,93,0.006,94,0.005,95,0.293,96,0.947,104,0.143,106,1.548,108,0.371,110,1.357,111,1.296,112,0.308,113,1.357,142,2.447,144,1.385,145,0.992,166,1.523,173,1.113,176,1.523,252,1.797,272,2.104,287,3.559,292,1.421,298,3.485,341,4.947,342,3.834,344,1.792,350,1.279,352,1.475,379,4.469,386,3.159,408,2.021,412,5.618,444,4.762,448,2.416,465,2.447,466,3.157,473,2.021,478,3.056,480,4.808,484,2.177,579,2.019,638,3.834,669,1.972,1353,4.469,1422,5.728,1423,5.604,1426,3.56,1437,4.201,1439,4.201,1457,3.834,1459,4.201,1460,4.758,1461,4.758,1462,6.363,1463,4.758,1464,6.363,1465,4.758,1466,4.758,1467,4.758,1468,3.341,1469,4.758]],["title/guards/LoggedOutGaurd.html",[181,2.662,1421,2.934]],["body/guards/LoggedOutGaurd.html",[14,0.009,17,3.171,18,0.073,19,0.082,20,0.057,22,0.421,23,0.694,24,0.734,32,0.543,59,4.894,65,2.684,68,4.228,86,2.303,90,0.073,91,0.116,92,0.004,93,0.005,94,0.005,95,0.252,104,0.115,106,1.244,108,0.372,110,1.362,111,1.3,112,0.309,113,1.362,142,1.966,143,1.491,145,1.14,166,1.309,172,2.464,173,1.279,176,1.968,181,3.295,252,1.601,272,1.528,277,4.407,280,2.86,281,4.092,290,4.484,292,0.854,311,4.828,312,5.616,313,4.894,315,3.031,318,4.092,319,2.391,322,4.407,329,2.86,332,1.898,344,1.54,350,1.873,352,1.185,393,2.791,408,1.737,416,5.74,432,3.84,435,2.86,448,2.645,460,2.36,473,1.214,527,3.375,533,3.452,553,3.944,567,3.031,572,1.275,579,2.321,584,1.533,669,1.695,681,3.452,904,2.86,908,4.092,909,4.031,910,4.407,918,3.375,919,3.375,921,3.375,1001,3.283,1085,2.626,1181,4.407,1182,5.942,1353,2.684,1421,2.538,1470,3.822,1471,6.153,1472,3.375,1473,4.828,1474,7.373,1475,5.468,1476,3.822,1477,3.822,1478,3.822,1479,6.153,1480,3.822,1481,5.468,1482,5.637,1483,3.295,1484,5.468,1485,5.637,1486,5.468,1487,3.822,1488,5.468,1489,4.407,1490,4.828,1491,3.08,1492,3.822,1493,3.822,1494,3.822,1495,3.822,1496,3.822,1497,3.822,1498,3.375,1499,3.822,1500,3.375,1501,3.822]],["title/injectables/LoggingInterceptor.html",[95,0.204,223,3.306]],["body/injectables/LoggingInterceptor.html",[14,0.009,18,0.085,19,0.095,20,0.067,22,0.293,23,0.55,24,0.784,32,0.631,90,0.085,91,0.135,92,0.007,93,0.006,94,0.004,95,0.28,96,0.884,104,0.133,108,0.259,110,0.948,111,0.905,112,0.215,113,0.948,145,0.926,166,1.454,172,2.002,173,1.039,223,4.546,252,1.523,272,1.782,319,1.942,350,2.001,430,3.121,435,4.546,575,2.738,584,1.781,638,4.849,669,2.415,759,4.546,774,2.918,872,2.951,873,2.678,877,3.367,879,3.325,889,3.923,891,3.923,1011,3.661,1085,2.918,1147,4.267,1181,4.896,1182,3.581,1191,4.546,1422,5.181,1473,5.364,1479,6.572,1485,6.572,1491,3.581,1500,3.923,1502,5.364,1503,3.923,1504,6.075,1505,6.075,1506,6.075,1507,6.075,1508,6.923,1509,6.075,1510,5.364,1511,6.075,1512,6.075,1513,5.364,1514,6.075,1515,6.075,1516,6.075,1517,4.546,1518,6.075,1519,6.075,1520,6.075,1521,5.364,1522,6.075,1523,6.075,1524,6.075,1525,6.075,1526,6.075,1527,4.863,1528,7.442,1529,4.443,1530,6.075,1531,4.443,1532,4.443,1533,4.443,1534,4.443,1535,4.443,1536,4.443,1537,4.443,1538,4.443,1539,4.443,1540,4.443,1541,3.923,1542,2.951,1543,4.443,1544,4.443,1545,4.443]],["title/injectables/LoginDto.html",[95,0.204,1546,3.56]],["body/injectables/LoginDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,24,0.684,32,0.921,90,0.125,91,0.197,92,0.006,93,0.008,94,0.006,95,0.357,96,1.292,104,0.195,108,0.451,112,0.375,144,1.447,287,3.515,465,4.258,601,0.939,1546,6.242,1547,5.731,1548,6.49,1549,6.49]],["title/classes/LoginUserDto.html",[91,0.134,1550,3.56]],["body/classes/LoginUserDto.html",[14,0.009,18,0.123,19,0.137,20,0.097,22,0.423,23,0.581,29,1.573,90,0.123,91,0.195,92,0.006,93,0.007,94,0.006,104,0.193,108,0.448,112,0.373,144,1.441,272,1.537,284,1.434,408,2.039,432,4.509,439,6.167,465,4.238,599,4.053,601,0.933,752,4.263,753,5.173,755,4.509,1550,6.202,1551,7.277]],["title/interfaces/MailOptionsInterface.html",[844,3.306,1205,1.771]],["body/interfaces/MailOptionsInterface.html",[14,0.009,18,0.119,19,0.132,20,0.093,22,0.406,23,0.558,90,0.119,92,0.006,93,0.007,94,0.006,104,0.185,112,0.419,144,1.562,542,4.97,543,4.615,601,0.911,824,4.97,825,4.615,844,5.621,848,6.793,849,7.443,851,7.443,1205,2.473,1207,3.418,1552,5.445]],["title/injectables/MapNewRentalPipe.html",[95,0.204,1453,2.789]],["body/injectables/MapNewRentalPipe.html",[14,0.009,18,0.094,19,0.105,20,0.074,22,0.428,23,0.701,24,0.767,32,0.696,90,0.094,91,0.149,92,0.005,93,0.006,94,0.005,95,0.299,96,0.976,99,4.332,104,0.147,108,0.286,110,1.047,111,0.999,112,0.315,113,1.047,145,1.023,166,1.555,173,1.148,176,1.555,252,1.825,284,1.85,292,1.626,299,2.023,344,1.382,350,1.319,407,1.873,461,1.863,471,1.967,472,1.967,473,1.558,474,2.023,484,2.758,575,3.492,576,3.119,582,3.226,584,1.967,661,5.228,664,3.914,666,1.628,667,2.339,668,5.735,669,2.013,670,2.356,671,3.097,672,2.832,673,2.617,674,2.719,675,3.446,676,3.672,677,3.446,678,3.097,712,2.523,748,3.603,1031,5.442,1032,4.332,1033,4.313,1140,3.672,1453,4.1,1553,5.735,1554,4.332,1555,4.906,1556,5.735,1557,3.954,1558,4.906,1559,4.906,1560,4.906,1561,4.906,1562,4.906,1563,4.906,1564,4.906,1565,3.954,1566,4.906,1567,4.906,1568,4.906]],["title/injectables/MulterUploadUtil.html",[95,0.204,1296,2.934]],["body/injectables/MulterUploadUtil.html",[14,0.009,18,0.11,19,0.123,20,0.108,24,0.605,32,0.816,90,0.11,91,0.175,92,0.006,93,0.007,94,0.006,95,0.331,96,1.143,104,0.173,108,0.335,145,1.499,172,2.589,252,1.44,272,1.375,292,1.284,303,4.333,352,1.781,407,1.657,448,2.181,461,2.181,471,2.304,472,3.297,473,1.825,474,2.369,498,3.627,601,0.872,614,4.63,619,2.304,627,4.539,628,4.746,638,3.462,644,2.955,697,3.143,775,3.316,806,4.63,1210,4.774,1296,4.774,1327,5.073,1380,5.073,1388,5.073,1569,6.348,1570,5.745,1571,5.745,1572,5.745,1573,5.073,1574,5.745,1575,5.745]],["title/injectables/PositiveNumber.html",[95,0.204,1576,3.306]],["body/injectables/PositiveNumber.html",[14,0.009,18,0.117,19,0.13,20,0.092,22,0.401,23,0.674,24,0.641,32,0.864,76,3.668,86,3.668,90,0.117,91,0.185,92,0.006,93,0.007,94,0.006,95,0.343,96,1.211,104,0.183,108,0.355,145,1.553,152,2.379,284,1.36,407,1.756,466,3.321,532,4.13,536,5.576,601,0.904,619,2.441,989,2.661,1576,5.576,1577,6.579,1578,5.375,1579,6.579,1580,6.087,1581,6.087]],["title/classes/PricingDto.html",[91,0.134,1582,2.934]],["body/classes/PricingDto.html",[14,0.009,18,0.117,19,0.13,20,0.091,22,0.4,23,0.549,29,1.487,90,0.117,91,0.184,92,0.006,93,0.007,94,0.006,104,0.182,108,0.469,112,0.406,144,1.255,152,2.477,572,2.797,601,0.902,666,1.522,667,2.187,669,1.882,674,3.365,683,3.238,708,3.625,709,5.078,710,3.833,711,3.833,736,3.317,815,3.659,1582,4.941,1583,5.361,1584,6.072,1585,6.072,1586,6.072,1587,6.072]],["title/injectables/PricingPipe.html",[95,0.204,1588,2.934]],["body/injectables/PricingPipe.html",[14,0.009,18,0.07,19,0.077,20,0.054,22,0.408,23,0.72,24,0.554,32,0.514,90,0.07,91,0.11,92,0.004,93,0.005,94,0.004,95,0.242,96,0.721,104,0.109,108,0.361,110,1.321,111,1.262,112,0.176,113,0.773,144,0.611,145,1.097,152,1.07,166,1.627,173,0.847,176,1.803,252,1.81,272,1.627,284,1.841,292,1.384,344,1.745,350,1.665,352,1.63,407,2.172,408,1.671,460,2.784,461,1.375,466,2.803,471,1.452,472,1.452,473,1.967,474,1.494,521,3.063,523,2.405,553,2.705,572,2.067,575,2.371,576,2.526,579,2.233,582,2.612,584,1.452,601,0.638,619,2.109,647,2.544,664,3.17,666,1.319,674,3.767,708,3.502,709,4.557,710,2.287,711,2.287,728,4.774,736,2.554,748,3.161,989,2.3,1001,2.705,1085,3.265,1468,2.544,1483,4.538,1582,5.606,1588,3.493,1589,3.198,1590,5.26,1591,7.219,1592,7.219,1593,3.622,1594,5.26,1595,3.622,1596,5.478,1597,3.694,1598,3.622,1599,6.797,1600,4.645,1601,5.26,1602,5.26,1603,3.493,1604,2.919,1605,3.622,1606,3.622,1607,5.469,1608,2.71,1609,3.622,1610,6.374,1611,3.622,1612,5.469,1613,3.622,1614,3.622,1615,4.645,1616,3.622,1617,3.622]],["title/classes/ProcessRentalTimeDto.html",[91,0.134,971,3.306]],["body/classes/ProcessRentalTimeDto.html",[14,0.009,18,0.116,19,0.128,20,0.09,22,0.396,23,0.544,29,1.472,90,0.116,91,0.183,92,0.006,93,0.007,94,0.006,104,0.181,108,0.467,112,0.388,152,2.58,601,0.897,666,2.094,669,1.863,827,2.886,947,3.205,949,5.306,950,3.794,959,4.221,966,6.733,967,6.733,968,5.868,971,5.532,1005,2.886,1035,2.985,1147,4.221,1618,7.377,1619,5.306,1620,6.01,1621,6.01,1622,3.794,1623,6.01,1624,6.01,1625,6.01,1626,6.01]],["title/injectables/ProcessSaveDataUtil.html",[95,0.204,1297,2.934]],["body/injectables/ProcessSaveDataUtil.html",[14,0.009,18,0.082,19,0.092,20,0.089,22,0.283,23,0.536,24,0.811,32,0.609,51,2.848,90,0.082,91,0.13,92,0.004,93,0.006,94,0.004,95,0.273,96,0.854,104,0.129,108,0.25,110,0.915,111,0.874,145,1.417,209,2.377,252,1.075,272,1.42,292,1.518,344,2.066,350,1.971,393,2.593,407,1.237,448,1.628,473,1.362,482,5.487,484,2.029,498,4.629,515,3.573,572,1.979,601,0.719,619,1.72,627,5.329,631,3.573,642,4.232,644,4.477,666,1.487,673,3.163,697,1.875,779,2.377,792,3.21,933,3.457,989,1.875,1001,3.05,1005,2.848,1206,4.513,1209,4.779,1210,5.418,1211,4.779,1212,5.731,1258,5.15,1266,5.956,1297,3.938,1343,5.236,1353,3.012,1360,3.938,1362,3.012,1363,3.787,1364,2.475,1365,3.012,1366,3.787,1367,3.787,1381,2.288,1627,5.236,1628,3.787,1629,6.796,1630,4.289,1631,5.236,1632,5.93,1633,4.289,1634,4.289,1635,4.289,1636,4.289,1637,4.289,1638,4.289,1639,4.289,1640,4.289,1641,4.289,1642,4.289,1643,4.289,1644,4.289,1645,4.289]],["title/injectables/ProcessUnavailabilityPipe.html",[95,0.204,1646,2.789]],["body/injectables/ProcessUnavailabilityPipe.html",[14,0.009,18,0.044,19,0.049,20,0.035,22,0.353,23,0.622,24,0.662,28,3.278,32,0.327,56,2.572,90,0.044,91,0.07,92,0.002,93,0.004,94,0.002,95,0.171,96,0.458,104,0.069,108,0.272,110,0.995,111,0.95,112,0.111,113,0.491,145,1.309,166,0.889,173,0.538,176,1.646,252,1.473,272,1.504,274,5.546,284,1.536,314,3.572,319,2.746,344,1.508,345,2.343,350,2.041,352,1.66,406,4.126,407,2.048,408,1.7,448,2.033,462,3.398,466,1.531,467,2.343,484,1.832,493,2.812,505,2.607,515,2.237,521,2.413,532,2.057,572,1.787,575,2.103,576,1.105,582,1.844,584,0.922,601,0.45,619,1.488,648,4.411,651,2.946,652,3.579,653,4.262,655,1.909,660,1.909,666,1.342,669,1.15,697,1.623,726,4.007,732,2.992,734,3.133,736,2.208,747,2.586,761,2.465,774,1.105,779,2.057,862,1.98,933,1.854,984,1.844,989,2.341,1001,1.909,1035,1.844,1066,1.854,1085,1.105,1113,1.452,1120,3.278,1316,2.031,1322,2.465,1345,3.901,1527,2.607,1603,2.465,1622,3.965,1629,4.728,1646,2.343,1647,4.728,1648,1.616,1649,2.465,1650,3.278,1651,3.712,1652,5.354,1653,3.712,1654,3.712,1655,2.991,1656,4.7,1657,4.666,1658,5.354,1659,4.641,1660,2.301,1661,3.712,1662,3.712,1663,3.278,1664,3.712,1665,2.991,1666,7.453,1667,2.301,1668,3.712,1669,3.712,1670,3.712,1671,3.712,1672,3.712,1673,3.712,1674,3.712,1675,2.991,1676,2.465,1677,2.301,1678,2.991,1679,2.031,1680,2.465,1681,2.991,1682,1.616,1683,2.301,1684,4.12,1685,2.301,1686,3.761,1687,2.301,1688,2.301,1689,3.09,1690,4.396,1691,2.301,1692,4.396,1693,2.301,1694,2.031,1695,5.354,1696,5.354,1697,3.712,1698,2.301,1699,2.031,1700,2.301,1701,5.354,1702,3.712,1703,2.301,1704,1.328,1705,1.452,1706,2.031,1707,3.712,1708,3.39,1709,3.712,1710,4.666,1711,4.12,1712,4.666,1713,4.666,1714,4.666,1715,4.666,1716,2.301,1717,3.39,1718,2.301,1719,6.875,1720,5.874,1721,2.301,1722,2.301,1723,3.712,1724,3.278,1725,3.712,1726,3.712,1727,3.712,1728,2.301,1729,2.031,1730,2.301,1731,2.301,1732,2.301,1733,2.301,1734,2.991,1735,2.301,1736,2.991,1737,2.301,1738,2.301]],["title/interfaces/ProcessedSaveDataInterface.html",[1205,1.771,1365,3.103]],["body/interfaces/ProcessedSaveDataInterface.html",[14,0.009,18,0.124,19,0.138,20,0.097,24,0.682,90,0.124,92,0.006,93,0.008,94,0.006,104,0.194,112,0.375,482,6.411,498,4.086,601,0.938,644,4.406,1205,2.595,1206,5.965,1207,3.587,1365,5.431,1739,5.216,1740,5.216,1741,6.473]],["title/classes/ProcessedUnavailabilityDto.html",[91,0.134,1680,2.934]],["body/classes/ProcessedUnavailabilityDto.html",[14,0.009,18,0.101,19,0.112,20,0.079,22,0.345,23,0.613,24,0.714,29,1.282,90,0.101,91,0.159,92,0.005,93,0.007,94,0.005,104,0.157,108,0.438,112,0.385,176,1.622,284,1.838,292,1.514,484,2.318,572,2.507,601,0.822,664,4.083,667,2.44,669,2.1,683,2.792,732,3.116,761,4.499,827,3.816,984,3.946,1147,4.759,1450,5.07,1483,4.083,1676,3.476,1680,4.499,1682,6.026,1684,5.982,1686,5.277,1708,3.021,1717,3.021,1734,6.055,1736,6.055,1742,6.403,1743,3.021,1744,6.775,1745,5.07,1746,6.775,1747,6.775,1748,5.982,1749,4.621,1750,3.917,1751,4.621]],["title/classes/ProcessedUnavailabilityQueryDto.html",[91,0.134,1686,3.103]],["body/classes/ProcessedUnavailabilityQueryDto.html",[14,0.009,18,0.105,19,0.116,20,0.082,22,0.358,23,0.492,29,1.333,90,0.105,91,0.165,92,0.005,93,0.007,94,0.005,104,0.163,108,0.504,112,0.42,144,1.437,152,2.589,314,3.448,478,2.613,601,0.842,648,4.878,650,4.071,652,3.675,653,3.935,654,4.384,655,2.798,656,4.803,657,4.803,658,4.384,659,4.384,667,1.959,732,3.24,734,4.081,736,3.155,747,4.241,827,2.613,1686,4.878,1689,4.416,1742,7.064,1745,4.071,1752,5.44,1753,5.44,1754,5.44,1755,5.44,1756,5.44,1757,5.44,1758,4.803]],["title/interfaces/ProcessedUploadDataInterface.html",[1205,1.771,1759,3.56]],["body/interfaces/ProcessedUploadDataInterface.html",[14,0.009,18,0.12,19,0.133,20,0.094,24,0.658,90,0.12,92,0.006,93,0.007,94,0.006,104,0.188,112,0.367,344,2.385,572,2.941,601,0.918,628,3.607,644,3.214,801,6.336,1205,2.506,1207,3.463,1219,6.675,1739,5.036,1740,5.036,1759,6.102,1760,6.249]],["title/classes/RawCoordinatesDto.html",[91,0.134,1077,3.306]],["body/classes/RawCoordinatesDto.html",[14,0.009,18,0.121,19,0.134,20,0.095,22,0.414,23,0.568,29,1.539,52,4.172,90,0.121,91,0.191,92,0.006,93,0.007,94,0.006,104,0.189,108,0.443,112,0.368,152,2.506,173,1.47,299,2.591,408,1.995,601,0.921,667,2.735,712,3.231,1003,4.701,1004,5.063,1016,3.626,1059,7.209,1060,7.209,1075,5.547,1077,5.684,1761,6.58,1762,5.063,1763,5.063,1764,5.547,1765,5.547]],["title/classes/RawCreateRentalDto.html",[91,0.134,1002,3.103]],["body/classes/RawCreateRentalDto.html",[14,0.009,18,0.077,19,0.086,20,0.06,22,0.373,23,0.364,29,0.984,51,3.423,90,0.077,91,0.122,92,0.004,93,0.006,94,0.004,104,0.121,108,0.477,112,0.42,144,1.498,152,2.563,272,1.356,284,1.266,292,0.898,313,2.822,321,2.822,328,2.822,408,1.276,433,2.822,479,2.822,484,2.885,493,3.414,523,2.668,567,2.227,572,2.19,575,1.811,601,0.687,644,2.066,651,2.537,661,2.537,664,2.421,666,2.175,667,1.447,669,1.245,670,3.423,671,4.499,673,3.801,674,3.95,675,5.278,677,5.006,678,4.499,681,3.577,683,4.008,691,2.822,692,2.822,693,2.822,694,2.822,695,2.822,696,2.822,697,1.757,698,2.822,699,2.537,700,2.822,701,2.822,702,3.007,703,3.007,704,3.007,705,3.007,706,3.007,707,3.007,708,1.811,709,2.537,710,3.577,711,2.537,748,1.868,761,3.762,947,2.143,994,2.537,998,2.537,1002,3.979,1005,1.93,1011,3.414,1023,2.822,1085,1.93,1097,2.421,1146,3.238,1251,4.24,1315,2.668,1451,3.007,1513,3.548,1517,3.007,1596,3.238,1761,6.704,1766,4.018,1767,4.018,1768,4.018,1769,4.018,1770,3.238,1771,4.018,1772,4.018,1773,3.238,1774,3.548,1775,4.018,1776,4.018,1777,4.018,1778,5.003,1779,5.666,1780,4.018,1781,4.018,1782,4.018,1783,4.018,1784,3.007,1785,4.018,1786,4.018,1787,4.018,1788,4.018,1789,4.018,1790,4.018,1791,4.018,1792,4.018,1793,3.548,1794,4.018]],["title/classes/RawScheduleUnavailabilityDto.html",[91,0.134,1795,3.306]],["body/classes/RawScheduleUnavailabilityDto.html",[14,0.009,18,0.117,19,0.13,20,0.092,22,0.402,23,0.675,24,0.643,29,1.495,90,0.117,91,0.185,92,0.006,93,0.007,94,0.006,104,0.183,108,0.356,112,0.296,176,1.787,284,1.667,328,5.242,330,5.242,601,0.905,655,4.146,660,3.139,666,1.871,667,2.688,732,3.185,862,3.981,984,4.171,1451,5.585,1743,3.522,1795,5.585,1796,6.59,1797,4.498,1798,4.567]],["title/classes/RawSearchRentalDto.html",[91,0.134,1114,3.103]],["body/classes/RawSearchRentalDto.html",[14,0.009,18,0.111,19,0.123,20,0.087,22,0.38,23,0.522,29,1.414,90,0.111,91,0.175,92,0.006,93,0.007,94,0.006,104,0.173,108,0.494,112,0.411,144,1.39,152,2.13,299,3.397,314,2.602,319,2.524,601,0.875,652,2.773,663,4.055,667,2.079,670,3.956,679,4.653,688,5.098,690,4.32,708,3.712,1039,4.357,1092,3.332,1114,5.065,1141,6.338,1142,6.338,1454,4.653,1455,4.653,1542,5.47,1799,7.635,1800,5.774]],["title/classes/RemoveUnavailabilityDto.html",[91,0.134,1801,2.934]],["body/classes/RemoveUnavailabilityDto.html",[14,0.009,18,0.122,19,0.136,20,0.096,22,0.419,23,0.575,29,1.556,56,3.05,90,0.122,91,0.193,92,0.006,93,0.007,94,0.006,104,0.191,108,0.445,112,0.371,144,1.436,437,5.118,515,3.827,601,0.927,667,2.287,669,1.968,732,2.347,734,4.375,736,3.383,1556,5.607,1743,3.665,1798,4.752,1801,5.077,1802,7.243,1803,6.35,1804,6.35,1805,5.607]],["title/controllers/RentalController.html",[161,2.356,201,3.103]],["body/controllers/RentalController.html",[12,1.096,13,2.389,14,0.009,18,0.045,19,0.05,20,0.035,22,0.155,24,0.912,32,0.334,34,1.42,51,2.607,90,0.045,91,0.144,92,0.002,93,0.004,94,0.002,104,0.071,106,0.767,108,0.389,110,1.423,111,1.359,112,0.323,113,1.423,143,0.919,145,1.492,161,2.529,163,1.257,166,0.906,169,4.686,172,1.062,173,1.561,175,2.657,201,2.657,237,1.42,248,2.389,252,2.1,268,1.763,284,1.213,292,1.328,303,1.42,315,2.097,331,1.655,344,0.664,352,2.068,441,2.389,460,0.871,461,0.894,462,1.212,471,0.945,472,0.945,473,0.748,474,0.972,484,1.857,519,2.513,521,1.705,628,2.184,660,1.946,661,3.427,666,2.144,669,1.173,671,1.487,673,2.018,674,2.097,699,2.389,708,2.137,713,2.993,715,1.487,717,3.605,730,1.899,732,3.006,733,3.049,812,4.216,815,4.523,816,3.948,877,2.097,880,1.899,945,2.389,947,1.257,984,1.879,998,2.389,1001,1.946,1005,2.607,1009,2.389,1016,2.737,1023,3.33,1033,2.513,1036,1.763,1037,1.763,1039,1.879,1092,2.737,1149,1.487,1188,3.341,1251,2.831,1406,1.655,1453,2.389,1489,3.049,1557,1.899,1582,4.216,1588,3.149,1604,1.899,1646,2.389,1676,2.513,1680,3.605,1681,1.899,1770,3.049,1773,3.049,1797,2.857,1801,3.605,1806,2.08,1807,3.784,1808,3.784,1809,3.341,1810,2.657,1811,3.784,1812,4.793,1813,3.341,1814,3.341,1815,3.341,1816,3.341,1817,3.341,1818,3.341,1819,2.08,1820,2.356,1821,3.784,1822,2.356,1823,2.356,1824,2.356,1825,5.429,1826,2.356,1827,3.149,1828,2.356,1829,2.356,1830,2.356,1831,2.356,1832,2.08,1833,3.784,1834,4.741,1835,3.149,1836,2.356,1837,4.176,1838,3.341,1839,2.08,1840,3.784,1841,2.356,1842,2.356,1843,2.356,1844,3.341,1845,2.356,1846,4.008,1847,2.356,1848,2.356,1849,2.356,1850,2.356,1851,3.049,1852,3.341,1853,2.08,1854,3.341,1855,2.356,1856,2.08,1857,3.149,1858,2.08,1859,2.08,1860,2.08,1861,2.08,1862,2.08,1863,2.08,1864,2.08,1865,1.899,1866,2.08,1867,3.341,1868,2.08,1869,2.08,1870,1.899,1871,1.899,1872,1.899,1873,1.487,1874,2.08,1875,2.08,1876,2.08,1877,2.08,1878,1.899,1879,2.356,1880,2.08,1881,4.187,1882,2.08,1883,1.899,1884,1.899,1885,2.08,1886,4.793,1887,2.28,1888,2.08,1889,2.08,1890,2.08,1891,1.899,1892,1.899,1893,2.356,1894,6.952,1895,2.356,1896,2.356,1897,2.356,1898,2.356,1899,2.356,1900,2.356,1901,2.356,1902,2.356,1903,2.356,1904,2.356,1905,2.356,1906,2.356,1907,2.356,1908,2.356,1909,2.356,1910,2.356,1911,2.356,1912,2.356,1913,2.356,1914,2.356,1915,1.899,1916,2.356,1917,2.356]],["title/injectables/RentalDurationPipe.html",[95,0.204,1149,2.789]],["body/injectables/RentalDurationPipe.html",[14,0.009,18,0.089,19,0.099,20,0.07,22,0.412,23,0.685,24,0.797,32,0.657,90,0.089,91,0.141,92,0.005,93,0.006,94,0.005,95,0.288,96,0.921,104,0.139,106,1.506,108,0.364,110,1.332,111,1.272,112,0.303,113,1.332,142,2.379,145,0.964,166,1.495,173,1.082,176,1.495,252,1.772,284,1.395,292,1.034,299,1.908,344,1.303,350,1.244,352,1.434,407,1.801,461,1.756,462,3.892,471,1.855,472,1.855,473,1.469,474,1.908,484,2.589,575,2.814,576,2.999,579,2.651,582,3.101,584,1.855,666,2.122,670,2.222,708,2.085,862,3.331,945,5.141,947,3.77,950,4.463,953,4.147,959,3.249,983,4.085,1001,3.212,1009,3.942,1035,3.511,1039,2.298,1078,3.729,1097,2.788,1112,2.921,1116,5.72,1124,4.085,1140,3.462,1143,3.729,1144,3.462,1149,3.942,1675,5.033,1676,4.147,1852,5.514,1870,3.729,1871,3.729,1918,6.242,1919,4.085,1920,4.627,1921,4.627,1922,7.069,1923,4.627,1924,6.245,1925,4.085,1926,4.627,1927,4.627,1928,4.627,1929,4.627,1930,4.085]],["title/interfaces/RentalInterface.html",[1205,1.771,1931,3.103]],["body/interfaces/RentalInterface.html",[14,0.009,18,0.088,19,0.097,20,0.069,22,0.408,23,0.413,90,0.088,92,0.004,93,0.006,94,0.004,104,0.137,112,0.445,144,1.552,152,2.578,299,3.104,567,2.529,572,2.064,601,0.75,619,2.815,666,1.144,670,3.614,671,4.751,672,4.344,673,4.014,674,4.171,675,5.286,676,5.632,677,5.286,678,4.751,681,4.431,683,4.613,691,3.205,692,3.205,693,3.205,694,3.205,695,3.205,696,3.205,697,2.705,698,3.205,699,2.881,700,3.205,701,3.205,702,3.415,703,3.415,704,3.415,705,3.415,706,3.415,707,3.415,708,2.057,709,2.881,710,2.881,711,2.881,712,2.347,1205,2.481,1207,2.529,1931,4.346,1932,4.03,1933,4.03]],["title/modules/RentalModule.html",[0,1.991,195,3.103]],["body/modules/RentalModule.html",[0,3.446,2,1.611,3,1.677,4,1.835,5,1.835,6,1.677,7,3.135,8,3.273,12,3.226,13,2.817,14,0.009,15,2.817,16,1.396,17,1.443,18,0.056,19,0.062,20,0.044,22,0.294,23,0.551,24,0.926,32,0.413,33,2.963,34,1.751,36,2.817,56,2.926,90,0.056,91,0.088,92,0.003,93,0.004,94,0.003,96,0.888,98,3.339,100,2.963,106,0.946,108,0.316,110,0.62,111,0.909,112,0.141,113,0.62,163,2.38,166,0.696,173,0.68,176,1.068,195,6.369,201,3.815,208,2.175,209,1.611,213,3.94,272,1.068,292,0.649,315,2.473,344,0.819,521,1.31,584,1.165,666,1.119,669,1.888,672,1.677,697,1.951,713,4.38,715,1.835,732,2.008,756,4.38,815,1.751,816,2.963,877,2.473,945,4.38,947,1.55,989,1.951,998,4.38,1005,2.143,1016,4.004,1036,2.175,1037,2.175,1092,4.004,1149,4.38,1177,2.175,1299,2.342,1310,2.342,1311,3.607,1322,2.963,1453,4.38,1588,4.608,1646,4.38,1758,3.94,1797,4.181,1809,6.126,1810,2.041,1827,4.608,1835,4.608,1837,2.041,1857,5.35,1858,2.566,1859,2.566,1860,2.566,1861,2.566,1862,2.566,1868,2.566,1869,2.566,1870,2.342,1871,2.342,1873,4.38,1874,2.566,1875,2.566,1876,2.566,1877,2.566,1880,2.566,1881,4.796,1882,2.566,1885,2.566,1886,5.38,1887,4.181,1888,2.566,1889,2.566,1890,2.566,1934,2.566,1935,2.566,1936,2.906,1937,2.566,1938,2.906,1939,3.596,1940,4.462,1941,6.938,1942,3.339,1943,4.462,1944,4.462,1945,6.093,1946,2.566,1947,3.94,1948,5.38,1949,2.906,1950,4.462,1951,4.462,1952,4.796,1953,4.462,1954,4.462,1955,4.462,1956,4.462,1957,2.906,1958,3.596,1959,2.906,1960,3.596,1961,2.906,1962,3.596,1963,2.906,1964,2.566,1965,2.566,1966,2.906,1967,2.566,1968,2.906,1969,2.906,1970,2.906,1971,2.906,1972,2.906,1973,2.906,1974,2.906]],["title/injectables/RentalService.html",[95,0.204,1857,2.934]],["body/injectables/RentalService.html",[14,0.009,18,0.032,19,0.035,20,0.025,22,0.352,23,0.701,24,0.74,32,0.236,46,1.244,51,1.361,56,2.102,86,2.637,90,0.032,91,0.05,92,0.002,93,0.003,94,0.002,95,0.131,96,0.331,104,0.05,106,0.922,108,0.379,110,1.386,111,1.324,112,0.315,113,1.527,143,1.105,145,1.308,166,0.678,173,1.406,176,0.678,209,0.921,248,2.762,252,2.021,255,1.167,284,1.652,292,1.714,300,1.104,319,2.337,344,1.608,350,2.084,352,2.219,406,1.167,407,0.479,408,0.9,460,2.222,461,2.282,462,3.611,466,1.169,471,2.411,472,2.411,473,2.181,474,2.479,479,1.99,484,1.497,493,1.707,513,3.526,515,2.232,521,3.017,523,1.882,532,1.57,564,2.502,567,1.57,572,1.46,601,0.344,608,1.511,619,0.666,651,1.789,660,1.457,661,2.762,666,2.095,667,0.598,669,0.878,670,1.779,672,2.138,674,2.053,678,1.049,697,2.495,699,1.789,708,2.572,709,2.338,710,2.338,711,2.338,712,1.905,715,2.762,717,2.906,730,1.339,732,2.771,733,1.339,734,0.886,736,0.685,744,1.789,774,0.798,812,3.55,815,3.222,816,2.906,909,2.338,947,3.207,980,1.244,984,1.407,989,1.913,1005,3.013,1008,3.864,1009,2.338,1011,3.222,1012,2.502,1020,2.502,1023,1.99,1033,1.882,1039,1.839,1097,1.707,1098,2.12,1099,2.283,1113,1.049,1159,2.502,1202,2.12,1263,1.104,1353,3.073,1360,1.104,1362,1.167,1364,2.138,1381,1.511,1557,1.339,1582,2.906,1604,1.339,1607,3.27,1610,1.467,1612,1.467,1615,1.467,1622,3.795,1631,2.502,1655,2.283,1656,2.12,1665,2.283,1676,1.104,1680,3.261,1681,1.339,1690,2.12,1692,1.244,1704,2.138,1705,2.762,1708,0.959,1717,1.635,1734,1.339,1736,2.283,1770,2.283,1773,2.283,1774,2.502,1784,2.12,1801,2.906,1812,2.502,1813,2.502,1814,2.502,1815,2.502,1816,2.502,1817,2.502,1818,3.864,1819,2.502,1832,2.502,1837,3.073,1838,2.502,1839,2.502,1844,2.502,1846,4.598,1853,2.502,1857,1.882,1872,1.339,1883,1.339,1884,1.339,1892,1.339,1931,1.167,1975,1.467,1976,2.833,1977,3.27,1978,3.704,1979,2.502,1980,1.467,1981,1.662,1982,2.502,1983,1.662,1984,2.833,1985,2.833,1986,2.833,1987,2.502,1988,1.662,1989,2.833,1990,2.833,1991,2.833,1992,1.662,1993,2.833,1994,2.833,1995,1.662,1996,1.662,1997,2.833,1998,1.662,1999,2.833,2000,2.833,2001,2.833,2002,1.662,2003,1.662,2004,2.833,2005,2.833,2006,1.662,2007,2.502,2008,4.376,2009,1.467,2010,1.244,2011,1.167,2012,1.467,2013,1.467,2014,1.467,2015,1.662,2016,1.467,2017,1.662,2018,1.662,2019,1.662,2020,2.833,2021,2.833,2022,1.662,2023,1.662,2024,1.662,2025,1.662,2026,1.662,2027,1.662,2028,2.833,2029,1.662,2030,1.662,2031,1.662,2032,2.283,2033,1.662,2034,1.662,2035,1.662,2036,1.662,2037,1.662,2038,1.662,2039,1.662,2040,1.662,2041,1.467,2042,2.502,2043,1.467,2044,1.467,2045,1.467,2046,1.467,2047,1.467,2048,1.467,2049,1.467,2050,1.467,2051,1.467,2052,1.467,2053,1.467,2054,3.27,2055,1.467,2056,1.467,2057,3.27,2058,1.467,2059,1.662,2060,2.833,2061,1.662,2062,1.662,2063,1.662,2064,1.662,2065,1.662,2066,1.662,2067,1.662,2068,1.662,2069,1.467]],["title/classes/RequestCoordinatesDto.html",[91,0.134,953,2.934]],["body/classes/RequestCoordinatesDto.html",[14,0.009,18,0.112,19,0.124,20,0.088,22,0.384,23,0.528,29,1.428,90,0.112,91,0.177,92,0.006,93,0.007,94,0.007,104,0.175,108,0.495,112,0.412,144,1.395,152,2.561,284,1.303,299,3.258,321,4.095,478,2.8,601,0.88,667,2.1,670,3.794,708,3.56,950,4.987,953,4.819,959,4.095,1035,2.896,1092,3.365,1112,5.219,1450,4.363,1762,4.699,1764,5.148,1765,5.148,1873,3.681,2070,7.654,2071,5.831,2072,5.831,2073,5.831]],["title/injectables/RequestCoordinatesPipe.html",[95,0.204,1873,2.789]],["body/injectables/RequestCoordinatesPipe.html",[14,0.009,18,0.086,19,0.096,20,0.067,22,0.402,23,0.675,24,0.787,32,0.635,52,2.973,90,0.086,91,0.136,92,0.004,93,0.006,94,0.004,95,0.281,96,0.891,104,0.134,106,1.457,108,0.356,110,1.303,111,1.244,112,0.337,113,1.303,142,2.302,143,1.746,145,0.933,166,1.462,173,1.047,176,1.787,252,1.743,284,1.364,292,1,299,1.846,344,1.261,350,1.868,352,1.388,407,1.762,461,1.7,471,1.795,472,1.795,473,1.422,474,1.846,478,2.933,484,2.089,575,2.752,576,2.933,582,3.033,584,1.795,669,1.893,670,2.15,672,4.011,708,2.018,712,2.302,760,4.289,774,2.15,862,3.982,877,2.481,950,2.826,953,4.958,963,4.922,1003,4.57,1004,4.922,1005,2.933,1015,3.953,1016,4.654,1025,4.289,1026,4.289,1033,2.973,1035,3.033,1036,3.35,1037,3.35,1038,3.608,1039,3.452,1040,3.608,1046,3.953,1048,3.953,1050,3.953,1078,3.608,1112,2.826,1140,4.57,1143,3.608,1144,3.35,1565,3.608,1675,4.922,1676,4.055,1784,4.57,1846,5.091,1872,3.608,1873,3.855,1925,3.953,1930,3.953,2074,6.137,2075,3.953,2076,4.477,2077,4.477,2078,6.107,2079,6.107,2080,6.107,2081,4.477]],["title/classes/ResetPasswordDto.html",[91,0.134,324,3.103]],["body/classes/ResetPasswordDto.html",[14,0.009,18,0.117,19,0.13,20,0.092,22,0.401,23,0.551,29,1.491,90,0.117,91,0.185,92,0.006,93,0.007,94,0.006,104,0.183,108,0.469,112,0.39,143,3.52,144,1.478,272,1.457,284,1.36,287,2.584,324,5.234,408,1.933,423,5.375,598,4.275,601,0.904,602,4.906,603,4.555,2082,7.41,2083,6.087,2084,8.053,2085,8.053,2086,6.026,2087,6.087]],["title/injectables/ResetPasswordTokenDto.html",[95,0.204,2088,3.306]],["body/injectables/ResetPasswordTokenDto.html",[14,0.009,16,3.726,18,0.125,19,0.139,20,0.098,24,0.686,32,0.924,90,0.125,91,0.198,92,0.006,93,0.008,94,0.006,95,0.358,96,1.295,104,0.195,108,0.379,112,0.315,144,1.309,272,1.857,287,3.293,489,5.822,601,0.941,938,6.253,2088,5.806,2089,5.747,2090,6.508]],["title/injectables/S3Provider.html",[95,0.204,617,2.662]],["body/injectables/S3Provider.html",[12,3.864,14,0.009,18,0.114,19,0.126,20,0.089,24,0.838,32,0.84,64,3.931,90,0.114,91,0.18,92,0.006,93,0.007,94,0.006,95,0.337,96,1.178,104,0.178,106,1.926,108,0.427,110,1.263,111,1.206,112,0.287,113,1.263,142,3.044,143,2.309,145,1.234,292,1.322,407,1.707,417,5.144,601,0.888,615,4.414,617,4.414,619,2.373,1967,5.226,2091,5.226,2092,7.953,2093,5.919,2094,5.919,2095,5.919,2096,5.226,2097,5.919,2098,5.919,2099,5.919,2100,5.919]],["title/classes/SearchRentalDto.html",[91,0.134,1846,2.789]],["body/classes/SearchRentalDto.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.366,23,0.503,29,1.361,90,0.107,91,0.169,92,0.005,93,0.007,94,0.005,104,0.167,108,0.499,112,0.427,144,1.371,152,2.6,176,1.33,299,3.187,330,3.902,478,2.668,601,0.854,663,3.902,664,3.348,666,1.393,667,2.001,669,1.722,670,3.711,672,4.689,679,4.477,683,2.963,690,4.157,708,3.482,712,2.857,950,5.128,1035,2.759,1039,2.759,1112,5.128,1454,4.477,1455,4.477,1565,4.477,1784,4.157,1846,4.444,2101,7.68,2102,4.905,2103,5.555,2104,5.555,2105,5.555]],["title/injectables/SortUnavailabilityPipe.html",[95,0.204,1797,2.662]],["body/injectables/SortUnavailabilityPipe.html",[14,0.009,18,0.052,19,0.058,20,0.041,22,0.445,23,0.706,24,0.672,32,0.386,88,2.036,90,0.052,91,0.083,92,0.003,93,0.004,94,0.003,95,0.195,96,0.542,104,0.082,108,0.372,110,1.361,111,1.299,112,0.132,113,0.58,145,1.696,152,0.804,166,1.408,173,0.637,176,1.617,252,1.694,284,1.576,292,1.164,319,1.854,344,1.797,350,1.896,352,1.615,407,2.162,448,2.421,460,2.886,461,1.033,466,2.63,471,1.091,472,1.091,473,1.655,474,1.122,478,1.307,519,2.816,572,1.739,575,1.911,576,2.037,579,1.8,582,2.106,584,1.091,601,0.514,608,3.138,619,2.359,653,4.299,655,3.026,660,2.68,666,1.306,732,2.697,744,1.718,748,2.423,774,1.307,779,3.744,862,2.779,888,2.448,904,2.036,922,2.403,947,2.262,980,2.036,984,3.167,987,1.911,989,2.788,1001,2.181,1113,2.677,1322,2.816,1345,3.46,1360,1.807,1542,2.816,1648,1.911,1655,3.418,1689,3.681,1699,3.744,1704,3.899,1705,4.265,1708,2.448,1711,2.403,1717,2.448,1795,4.403,1797,2.556,2032,4.199,2106,5.965,2107,7.808,2108,3.418,2109,4.241,2110,4.241,2111,3.744,2112,4.241,2113,6.377,2114,6.377,2115,6.377,2116,2.721,2117,3.66,2118,2.721,2119,5.383,2120,5.211,2121,2.721,2122,5.211,2123,2.721,2124,4.241,2125,6.756,2126,4.241,2127,2.721,2128,5.195,2129,3.418,2130,6.229,2131,2.193,2132,2.721,2133,3.899,2134,2.721,2135,2.403,2136,2.403,2137,2.721,2138,2.721,2139,2.721,2140,2.721,2141,2.721,2142,2.721,2143,2.721,2144,5.211,2145,2.721,2146,2.403,2147,4.241,2148,2.721,2149,2.721,2150,4.241,2151,2.721,2152,2.721,2153,2.721,2154,5.211,2155,5.211,2156,4.241,2157,2.721,2158,2.721,2159,2.721,2160,3.744,2161,3.744,2162,2.721,2163,2.721,2164,2.721,2165,2.036,2166,2.721]],["title/interfaces/SortedUnavailabilityDto.html",[1205,1.771,2133,3.306]],["body/interfaces/SortedUnavailabilityDto.html",[14,0.009,18,0.108,19,0.119,20,0.084,22,0.369,23,0.64,24,0.589,90,0.108,92,0.005,93,0.007,94,0.005,104,0.168,112,0.343,176,1.693,430,4.966,572,2.587,601,0.857,608,3.771,653,3.636,655,4.48,660,2.877,667,2.546,732,3.011,748,3.288,994,4.464,1011,4.261,1205,2.243,1207,3.101,1705,4.464,1743,3.229,1887,4.261,2108,5.698,2119,4.966,2129,6.564,2133,5.291,2160,7.192,2161,7.192,2167,4.94,2168,5.698,2169,7.071,2170,5.291,2171,5.291,2172,6.243,2173,6.243]],["title/injectables/TestRentalService.html",[95,0.204,2174,3.56]],["body/injectables/TestRentalService.html",[14,0.009,18,0.088,19,0.097,20,0.069,22,0.3,24,0.792,32,0.647,46,4.624,65,4.34,90,0.088,91,0.138,92,0.004,93,0.006,94,0.004,95,0.285,96,0.906,98,4.624,104,0.137,106,2.011,108,0.409,110,1.318,111,1.259,112,0.299,113,1.496,143,1.777,145,1.288,166,1.479,173,1.446,209,2.524,252,2.032,350,1.224,406,3.199,460,2.592,462,3.178,572,2.062,666,1.758,672,2.629,697,3.288,708,2.785,712,2.342,822,4.98,909,2.876,1009,2.876,1039,2.262,1362,3.199,1364,2.629,1690,4.624,1692,3.409,1931,3.199,1977,4.022,1979,5.456,1980,4.022,1982,6.64,1987,5.456,2009,4.022,2013,4.022,2041,4.022,2042,5.456,2043,4.022,2044,4.022,2045,4.022,2046,4.022,2047,4.022,2048,4.022,2049,4.022,2050,4.022,2051,4.022,2052,4.022,2053,4.022,2054,5.456,2055,4.022,2056,4.022,2057,6.192,2058,4.022,2174,4.98,2175,6.64,2176,4.022,2177,6.179,2178,6.179,2179,7.52,2180,4.555,2181,4.555,2182,4.555,2183,4.555,2184,4.555]],["title/interfaces/TransporterInterface.html",[846,3.306,1205,1.771]],["body/interfaces/TransporterInterface.html",[14,0.009,18,0.111,19,0.124,20,0.087,22,0.381,23,0.524,48,6.644,76,3.488,90,0.111,92,0.006,93,0.007,94,0.006,104,0.174,112,0.434,144,1.46,152,2.326,269,6.644,272,1.386,439,4.331,601,0.876,681,4.97,683,4.398,824,4.664,825,4.331,843,4.664,846,5.405,865,6.644,1205,2.896,1207,3.208,2185,5.11,2186,8.485,2187,8.485,2188,5.788,2189,5.788]],["title/classes/TypeOfValue.html",[91,0.134,2190,3.306]],["body/classes/TypeOfValue.html",[14,0.009,18,0.119,19,0.132,20,0.093,22,0.407,23,0.559,29,1.515,76,3.726,86,3.726,90,0.119,91,0.188,92,0.006,93,0.007,94,0.006,104,0.186,108,0.36,112,0.3,144,1.043,145,1.568,407,2.494,466,3.344,532,3.427,536,4.627,572,2.51,601,0.912,619,2.479,1608,4.627,2190,5.63,2191,6.643,2192,5.46,2193,7.16,2194,6.183]],["title/classes/UnavailabilityDto.html",[91,0.134,655,2.272]],["body/classes/UnavailabilityDto.html",[14,0.009,18,0.104,19,0.116,20,0.082,22,0.358,23,0.491,29,1.33,90,0.104,91,0.165,92,0.005,93,0.007,94,0.005,104,0.163,108,0.496,112,0.413,144,1.359,152,2.588,272,1.299,314,3.445,319,3.342,467,3.426,493,4.179,601,0.841,651,4.378,652,3.671,653,4.506,655,3.567,666,1.361,736,3.152,747,4.236,759,4.061,888,4.411,984,3.444,1011,3.271,1315,3.604,1381,3.699,1656,4.061,1689,4.411,2195,4.792,2196,5.427,2197,5.427,2198,5.427,2199,5.427,2200,5.427,2201,5.427,2202,5.427,2203,5.427,2204,5.427,2205,4.606,2206,5.19,2207,4.374,2208,4.061]],["title/classes/UnavailabilityInterface.html",[91,0.134,2011,3.103]],["body/classes/UnavailabilityInterface.html",[14,0.009,18,0.108,19,0.12,20,0.085,22,0.37,23,0.509,29,1.377,90,0.108,91,0.171,92,0.005,93,0.007,94,0.005,104,0.169,108,0.5,112,0.416,144,1.376,152,2.606,314,3.501,319,3.101,493,4.274,601,0.86,651,4.477,652,3.731,653,4.196,697,2.458,732,2.078,736,3.204,747,4.306,888,3.245,1011,3.388,1205,2.254,1381,3.783,1689,4.484,2011,4.981,2205,4.71,2206,5.307,2207,4.531,2208,4.207,2209,4.964,2210,5.622,2211,5.622,2212,5.622,2213,5.622,2214,5.622,2215,5.622]],["title/classes/UnavailabilityQueryDto.html",[91,0.134,1682,3.103]],["body/classes/UnavailabilityQueryDto.html",[14,0.009,18,0.093,19,0.103,20,0.072,22,0.317,23,0.436,29,1.18,56,2.313,90,0.093,91,0.146,92,0.005,93,0.006,94,0.005,104,0.145,108,0.448,112,0.419,144,1.082,152,2.62,176,1.153,276,4.856,284,1.076,314,3.61,553,3.299,601,0.778,608,4.103,650,3.604,652,3.847,653,3.71,654,3.881,658,3.881,659,3.881,666,2.008,683,4.273,726,3.604,732,3.256,736,2.975,823,3.383,827,2.313,984,2.392,987,3.383,989,2.106,1035,2.392,1517,3.604,1622,5.057,1649,5.32,1650,6.792,1682,4.506,1689,4.163,1690,5.995,1692,5.995,1694,4.252,1704,2.78,1763,3.881,2216,7.073,2217,4.816,2218,4.816,2219,4.252,2220,4.816]],["title/classes/UpdateUnavailabilityDataDto.html",[91,0.134,717,2.934]],["body/classes/UpdateUnavailabilityDataDto.html",[14,0.009,18,0.111,19,0.123,20,0.087,22,0.38,23,0.522,29,1.414,90,0.111,91,0.175,92,0.006,93,0.007,94,0.006,104,0.173,108,0.42,112,0.411,144,1.327,152,2.433,248,4.553,284,1.29,314,3.25,408,1.834,479,4.055,521,3.25,533,3.645,601,0.875,652,3.464,666,1.447,667,2.079,669,1.789,683,4.195,713,3.645,715,4.965,717,4.789,718,4.653,732,3.045,734,3.079,736,2.381,744,4.965,747,3.2,1364,3.332,2221,6.338,2222,5.098,2223,5.774,2224,5.774]],["title/classes/UpdateUnavailabilityDto.html",[91,0.134,724,3.306]],["body/classes/UpdateUnavailabilityDto.html",[14,0.009,18,0.11,19,0.122,20,0.086,22,0.376,23,0.516,29,1.397,90,0.11,91,0.173,92,0.006,93,0.007,94,0.006,104,0.171,108,0.492,112,0.409,144,1.454,152,2.423,176,1.365,284,1.274,521,2.57,596,4.596,601,0.868,667,2.054,669,1.768,718,4.596,724,5.356,732,2.108,734,4.172,736,3.225,738,6.303,740,6.303,742,6.303,748,2.652,827,2.739,1315,3.788,1483,3.437,1603,3.788,1622,3.601,1649,3.788,1743,3.292,1745,4.268,1750,4.268,1751,5.036,1798,4.268,2221,6.948,2225,5.704,2226,5.704,2227,5.704,2228,5.704,2229,4.596,2230,4.596]],["title/injectables/UpdateUserDto.html",[95,0.204,2231,3.103]],["body/injectables/UpdateUserDto.html",[14,0.009,18,0.122,19,0.136,20,0.096,24,0.671,32,0.904,90,0.122,91,0.193,92,0.006,93,0.007,94,0.006,95,0.353,96,1.267,104,0.191,108,0.446,112,0.371,113,1.818,144,1.438,298,3.486,465,4.223,601,0.929,752,4.229,753,5.131,755,4.472,2231,5.378,2232,7.251]],["title/controllers/UserController.html",[161,2.356,200,3.103]],["body/controllers/UserController.html",[14,0.009,18,0.069,19,0.077,20,0.054,22,0.407,24,0.888,32,0.511,90,0.069,91,0.109,92,0.004,93,0.005,94,0.004,104,0.108,108,0.395,110,1.446,111,1.38,112,0.328,113,1.446,142,1.851,143,1.404,145,1.413,161,2.793,163,1.92,166,1.254,169,4.76,172,3.8,173,1.586,174,2.694,175,2.528,176,1.857,178,2.273,179,2.901,180,2.694,181,2.169,182,3.179,183,2.694,184,4.619,185,4.974,200,3.678,252,2.114,268,2.694,272,2.16,284,1.379,292,1.17,298,2.223,329,2.694,331,2.528,332,1.788,344,2.029,352,1.913,358,4.624,414,3.897,441,3.306,444,3.919,450,4.501,452,4.76,484,1.792,521,3.246,573,3.919,577,4.279,583,2.694,628,2.078,775,2.078,776,3.678,789,4.084,810,4.76,1238,3.179,1245,3.179,1390,3.179,1406,2.528,1854,3.179,1856,3.179,1863,3.179,1864,3.179,1866,3.179,1867,3.179,1891,2.901,1894,5.45,1915,2.901,2231,4.76,2233,3.179,2234,5.237,2235,5.237,2236,4.624,2237,5.237,2238,3.6,2239,3.6,2240,3.6,2241,3.6,2242,3.6,2243,3.6,2244,3.6,2245,3.6,2246,3.6,2247,3.6,2248,3.6,2249,3.6,2250,3.6,2251,3.6,2252,3.6,2253,5.237,2254,3.179,2255,3.179,2256,3.6,2257,2.901,2258,3.179,2259,3.6,2260,3.6,2261,3.6,2262,3.6,2263,3.6,2264,3.6,2265,3.6,2266,3.6,2267,3.6,2268,3.6,2269,3.6,2270,3.6]],["title/interfaces/UserInterface.html",[457,2.934,1205,1.771]],["body/interfaces/UserInterface.html",[14,0.009,18,0.117,19,0.13,20,0.092,22,0.401,90,0.117,92,0.006,93,0.007,94,0.006,104,0.183,112,0.417,144,1.546,272,1.457,287,3.562,298,3.562,457,4.948,465,4.316,601,0.904,1205,2.988,1207,3.374,1542,5.348,2086,6.28,2271,5.375,2272,7.41]],["title/modules/UserModule.html",[0,1.991,196,2.934]],["body/modules/UserModule.html",[0,3.099,1,4.829,2,2.43,3,2.531,4,2.768,5,2.768,6,2.531,7,3.968,8,4.144,14,0.009,15,3.801,16,2.106,17,2.178,18,0.084,19,0.094,20,0.066,24,0.932,32,0.622,36,3.801,90,0.084,91,0.133,92,0.004,93,0.006,94,0.004,106,1.427,108,0.256,110,0.935,111,1.226,112,0.213,113,0.935,163,3.211,166,1.05,173,1.026,196,5.96,200,4.829,208,3.281,209,2.43,236,3.281,239,5.541,240,3.534,272,1.05,292,0.98,341,2.643,375,4.829,376,4.829,377,4.829,392,3.281,393,1.917,394,3.281,396,3.281,399,3.281,414,5.471,416,4.506,459,3.534,756,5.059,827,2.106,1177,3.281,1299,3.534,1310,3.534,1311,2.912,1946,3.872,1947,5.316,1948,6.535,1952,5.316,1964,3.872,1965,3.872,2258,3.872,2273,3.872,2274,3.872,2275,4.385,2276,3.872,2277,4.385,2278,4.385,2279,4.852,2280,4.385,2281,4.385,2282,3.281,2283,4.385,2284,3.534,2285,4.385,2286,3.872,2287,4.385,2288,4.385,2289,4.385,2290,4.385]],["title/classes/UserPropertyDto.html",[91,0.134,453,3.306]],["body/classes/UserPropertyDto.html",[14,0.009,18,0.116,19,0.128,20,0.09,22,0.396,23,0.544,29,1.472,90,0.116,91,0.183,92,0.006,93,0.007,94,0.006,104,0.181,108,0.487,112,0.405,144,1.507,176,1.439,188,3.991,272,1.439,284,1.343,287,3.399,298,3.399,321,4.221,408,1.908,431,5.306,453,5.532,465,4.118,478,2.886,480,3.622,599,3.794,601,0.897,1202,5.992,2291,7.574,2292,5.306,2293,6.01,2294,6.01,2295,6.01,2296,6.01]],["title/injectables/UserService.html",[95,0.204,414,2.789]],["body/injectables/UserService.html",[14,0.009,16,1.867,18,0.047,19,0.052,20,0.037,22,0.32,24,0.846,32,0.346,68,1.999,86,2.342,90,0.047,91,0.074,92,0.002,93,0.004,94,0.002,95,0.179,96,0.485,104,0.073,106,1.265,108,0.409,110,1.498,111,1.43,112,0.34,113,1.498,143,2.358,145,1.633,166,0.93,172,3.165,173,1.582,176,1.776,209,1.35,248,1.538,252,2.069,272,2.1,276,1.538,280,1.823,281,2.909,284,1.617,287,2.058,291,1.538,292,1.617,298,2.98,303,1.468,332,1.21,344,1.703,350,1.995,352,2.46,356,1.823,375,4.075,376,4.075,377,4.075,392,1.823,393,1.699,394,1.823,396,1.823,399,1.823,408,0.774,414,2.454,416,5.06,441,3.494,444,2.909,450,3.675,452,3.887,457,1.618,459,1.964,460,2.895,461,2.295,462,1.253,468,2.151,469,1.964,470,2.151,471,1.944,472,1.944,473,1.92,474,2.494,484,1.659,489,3.406,495,2.909,497,2.151,499,2.151,513,1.964,514,3.432,515,2.342,517,2.151,519,1.618,521,3.165,538,4.886,548,2.909,572,1.297,577,3.494,583,1.823,624,2.454,625,1.823,697,2.419,715,3.061,744,1.538,776,3.406,778,2.151,789,2.342,810,3.887,1085,1.17,1362,1.711,1364,1.406,1573,3.432,1891,1.964,2016,2.151,2086,3.629,2088,4.141,2231,4.932,2236,3.432,2254,2.151,2255,3.432,2286,2.151,2297,2.151,2298,3.887,2299,3.887,2300,3.887,2301,3.887,2302,3.887,2303,3.887,2304,2.436,2305,2.436,2306,2.909,2307,3.887,2308,2.436,2309,3.887,2310,2.436,2311,3.132,2312,3.887,2313,2.436,2314,3.887,2315,2.436,2316,3.887,2317,2.436,2318,3.887,2319,2.436,2320,3.887,2321,2.436,2322,2.151,2323,2.436,2324,1.964,2325,2.436,2326,2.436,2327,2.436,2328,3.887,2329,2.436,2330,3.887,2331,3.887,2332,2.436,2333,2.436,2334,2.436,2335,2.436,2336,3.887,2337,2.436,2338,2.436,2339,3.887,2340,2.436,2341,1.964,2342,2.436,2343,2.436,2344,2.436,2345,2.436,2346,4.849,2347,2.436,2348,2.436,2349,2.436]],["title/injectables/ValidateEditDetailsPipe.html",[95,0.204,1827,2.934]],["body/injectables/ValidateEditDetailsPipe.html",[14,0.009,18,0.059,19,0.066,20,0.046,22,0.372,23,0.643,24,0.662,32,0.439,90,0.059,91,0.094,92,0.003,93,0.005,94,0.003,95,0.215,96,0.615,104,0.093,106,1.836,108,0.394,110,0.997,111,0.952,112,0.273,113,0.659,144,1.441,145,0.644,152,2.38,166,1.119,173,0.723,176,1.863,252,1.577,284,1.044,292,1.909,344,1.317,350,0.83,352,0.957,407,2.448,422,5.687,448,1.173,460,2.085,466,3.044,467,1.95,473,2.674,478,3.02,521,2.542,553,1.589,575,2.107,576,2.245,579,1.984,582,2.322,584,1.239,601,0.567,619,1.239,642,1.783,666,1.693,669,1.449,736,1.274,737,2.312,748,2.174,812,4.719,815,4.78,816,4.486,862,2.493,1085,2.245,1113,1.95,1144,4.22,1345,2.052,1381,1.648,1468,3.283,1483,2.817,1576,5.523,1579,5.964,1596,2.49,1597,3.283,1600,4.128,1603,3.104,1827,3.104,1883,2.49,1884,2.49,2136,2.728,2190,5.523,2350,5.318,2351,2.728,2352,6.755,2353,4.675,2354,6.755,2355,4.675,2356,3.089,2357,3.089,2358,3.089,2359,3.089,2360,3.089,2361,3.089,2362,3.089,2363,3.089,2364,3.089,2365,4.675,2366,3.089,2367,3.089,2368,3.089,2369,3.089,2370,3.089,2371,3.089,2372,3.089,2373,3.089,2374,3.089,2375,3.089,2376,3.089,2377,3.089,2378,3.089,2379,3.089,2380,3.089,2381,3.089,2382,3.089,2383,3.089,2384,3.089,2385,3.089,2386,3.089,2387,3.089,2388,3.089,2389,3.089,2390,3.089,2391,3.089,2392,3.089,2393,3.089,2394,3.089,2395,3.089,2396,3.089,2397,3.089,2398,3.089,2399,3.089,2400,3.089,2401,3.089,2402,3.089,2403,3.089,2404,3.089,2405,3.089,2406,3.089,2407,3.089,2408,3.089,2409,3.089,2410,3.089,2411,3.089]],["title/injectables/ValidateEmailMiddleware.html",[95,0.204,2282,3.306]],["body/injectables/ValidateEmailMiddleware.html",[14,0.009,18,0.088,19,0.097,20,0.069,22,0.301,24,0.874,32,0.648,56,2.972,90,0.088,91,0.139,92,0.004,93,0.006,94,0.004,95,0.285,96,0.908,104,0.137,106,2.014,108,0.438,110,1.497,111,1.43,112,0.365,113,1.497,143,1.78,166,1.481,172,2.057,173,1.447,176,1.802,252,2.033,255,3.205,272,1.802,292,1.02,298,2.626,303,4.23,304,4.344,332,2.267,350,1.227,352,1.918,407,1.316,452,3.205,457,3.031,460,2.782,466,2.552,476,4.63,484,1.561,553,2.347,577,4.751,579,2.626,583,3.415,584,1.83,601,0.75,608,3.3,638,4.23,697,3.29,1263,3.031,1364,2.634,1527,5.286,2282,4.63,2306,3.415,2322,4.03,2412,6.946,2413,4.03,2414,6.207,2415,5.463,2416,4.564,2417,6.187,2418,5.463,2419,4.564,2420,6.187,2421,4.564,2422,5.463,2423,4.564,2424,4.564,2425,4.564,2426,4.564,2427,4.564,2428,4.564,2429,4.564,2430,4.03,2431,4.564,2432,4.03,2433,4.564,2434,4.564]],["title/injectables/ValidateEmailUtil.html",[95,0.204,2414,3.306]],["body/injectables/ValidateEmailUtil.html",[14,0.009,18,0.118,19,0.131,20,0.092,24,0.645,32,0.869,90,0.118,91,0.186,92,0.006,93,0.007,94,0.006,95,0.344,96,1.218,104,0.184,106,2.627,108,0.436,110,1.305,111,1.246,113,1.305,145,1.276,166,1.789,173,1.431,272,1.465,292,1.367,298,2.597,356,4.579,473,1.943,553,3.147,963,4.931,1177,4.579,1381,3.264,1649,4.064,2414,5.594,2415,6.6,2435,7.127,2436,5.403,2437,6.119,2438,7.475,2439,6.119,2440,6.119,2441,6.119,2442,6.119,2443,6.119]],["title/injectables/ValidateRemoveUnavailabilityPipe.html",[95,0.204,1835,2.934]],["body/injectables/ValidateRemoveUnavailabilityPipe.html",[14,0.009,18,0.088,19,0.098,20,0.069,22,0.464,23,0.735,24,0.654,32,0.652,90,0.088,91,0.139,92,0.004,93,0.006,94,0.004,95,0.286,96,0.914,104,0.138,108,0.362,110,1.325,111,1.265,112,0.222,113,0.979,144,1.273,145,0.957,166,1.487,173,1.074,176,2.073,292,1.388,344,1.75,407,2.396,422,4.648,460,2.603,466,3.111,473,1.973,553,3.195,575,2.799,576,2.983,579,2.637,582,3.085,584,1.841,601,0.753,619,1.841,642,3.585,660,2.361,666,1.976,669,1.925,732,2.914,734,3.313,735,3.699,736,2.562,737,3.435,748,3.508,862,4.334,1085,2.983,1468,4.363,1597,4.363,1608,4.648,1648,3.224,1801,5.234,1835,4.125,1837,5.835,1892,3.699,2350,5.269,2444,6.212,2445,6.96,2446,4.59,2447,4.59,2448,4.59,2449,4.59]],["title/classes/ValidateScheduleUnavailabilityDto.html",[91,0.134,2117,3.103]],["body/classes/ValidateScheduleUnavailabilityDto.html",[14,0.009,18,0.102,19,0.113,20,0.08,22,0.349,23,0.617,24,0.558,29,1.297,90,0.102,91,0.161,92,0.005,93,0.007,94,0.005,104,0.159,108,0.398,112,0.331,176,1.634,314,3.076,572,2.277,601,0.828,608,3.64,653,4.103,655,4.247,660,2.722,666,1.711,667,2.458,732,2.95,748,3.173,984,4.102,994,4.308,1009,4.308,1035,3.389,1147,4.793,1450,5.107,1704,3.939,1705,4.308,1708,4.359,1717,4.359,1743,3.055,1750,3.961,1797,4.113,1887,4.113,2108,5.5,2117,4.793,2119,4.793,2129,5.5,2168,5.5,2170,5.107,2171,5.107,2172,6.026,2173,6.026,2229,4.265,2450,6.669,2451,6.824,2452,6.824,2453,6.824,2454,6.824]],["title/injectables/ValidateUnavailabilityPipe.html",[95,0.204,1887,2.662]],["body/injectables/ValidateUnavailabilityPipe.html",[14,0.009,18,0.029,19,0.032,20,0.022,22,0.332,23,0.649,24,0.569,32,0.212,56,1.241,76,0.899,86,0.899,88,2.556,89,3.318,90,0.029,91,0.045,92,0.001,93,0.003,94,0.001,95,0.119,96,0.297,104,0.138,108,0.333,110,1.153,111,1.101,112,0.072,113,0.318,145,1.297,152,0.763,166,0.975,173,0.349,176,1.369,252,1.501,272,0.618,273,1.557,284,1.126,292,1.668,314,2.074,319,2.81,344,1.811,345,2.905,350,1.728,352,1.928,407,1.795,433,1.814,448,1.545,460,2.847,461,0.566,466,3.229,471,0.598,472,0.598,473,2.276,474,0.615,484,1.168,505,1.814,515,1.557,519,4.132,533,3.928,534,1.317,536,1.933,539,2.281,550,3.595,552,3.708,553,2.78,568,2.082,572,0.862,575,1.164,576,1.241,579,1.953,582,1.283,584,0.598,601,0.313,608,3.881,619,2.167,642,1.491,652,3.586,653,4.407,655,3.399,660,1.328,664,3.258,665,1.202,666,1.434,669,1.856,681,0.942,728,1.814,732,2.99,736,1.408,747,3.318,748,0.694,774,0.717,779,2.792,823,1.814,827,1.241,862,2.454,872,5.015,873,2.453,879,1.117,888,3.3,923,4.063,941,1.933,960,1.202,968,3.539,969,3.281,975,1.202,980,1.933,984,2.285,989,1.78,1066,2.082,1085,2.21,1097,1.557,1098,1.117,1113,1.631,1263,0.991,1322,2.703,1345,3.797,1360,3.346,1381,1.822,1451,1.933,1510,4.449,1527,3.539,1541,1.317,1542,1.715,1648,1.048,1649,1.715,1656,3.046,1659,2.859,1665,2.752,1679,1.317,1689,3.455,1704,2.656,1705,2.905,1706,3.015,1708,4.614,1717,4.2,1724,1.317,1729,1.317,1887,1.557,2032,1.202,2102,2.281,2111,2.281,2117,2.859,2119,1.814,2128,4.063,2130,3.015,2131,1.202,2135,1.317,2146,2.281,2165,1.933,2168,2.082,2171,1.933,2205,1.715,2206,1.117,2350,4.48,2455,4.601,2456,3.415,2457,4.601,2458,4.601,2459,4.601,2460,4.601,2461,4.071,2462,1.492,2463,2.583,2464,1.492,2465,1.492,2466,7.168,2467,5.038,2468,2.583,2469,1.492,2470,2.583,2471,2.583,2472,2.583,2473,4.601,2474,1.492,2475,2.583,2476,4.071,2477,2.583,2478,2.583,2479,2.583,2480,5.406,2481,1.492,2482,5.038,2483,1.492,2484,2.583,2485,2.752,2486,2.583,2487,2.281,2488,2.583,2489,2.583,2490,1.492,2491,1.492,2492,1.492,2493,1.492,2494,1.317,2495,1.492,2496,2.082,2497,1.492,2498,2.583,2499,1.492,2500,1.492,2501,1.492,2502,1.492,2503,1.492,2504,1.492,2505,1.492,2506,1.492,2507,3.415,2508,1.492,2509,1.492,2510,1.492,2511,1.317,2512,2.583,2513,1.492,2514,1.492,2515,1.492,2516,4.071,2517,1.492,2518,1.492,2519,3.415,2520,1.492,2521,1.492,2522,1.492,2523,1.492,2524,3.415,2525,1.492,2526,1.492,2527,1.492,2528,1.492,2529,1.492,2530,1.492,2531,1.492,2532,1.492,2533,1.492,2534,1.492,2535,1.492,2536,1.492,2537,2.583,2538,3.415,2539,3.415,2540,1.492,2541,1.492,2542,1.492,2543,2.583,2544,1.317,2545,2.583,2546,2.583,2547,1.492,2548,1.492,2549,1.492,2550,1.492,2551,2.583,2552,2.583,2553,2.583,2554,1.492,2555,1.492,2556,1.492,2557,1.492,2558,1.492,2559,1.492,2560,2.583,2561,2.583,2562,1.492,2563,1.492,2564,2.583,2565,1.492,2566,1.492,2567,1.492,2568,1.492,2569,1.492,2570,2.583]],["title/classes/ValidateUpdateUnavailabilityDto.html",[91,0.134,722,3.103]],["body/classes/ValidateUpdateUnavailabilityDto.html",[14,0.009,18,0.101,19,0.112,20,0.079,22,0.346,23,0.475,29,1.285,90,0.101,91,0.159,92,0.005,93,0.007,94,0.005,104,0.158,108,0.5,112,0.426,144,1.423,152,2.57,272,1.256,284,1.172,462,2.698,466,2.163,521,3.962,568,4.227,572,2.264,601,0.823,666,1.315,683,3.619,722,4.766,732,1.939,734,4.011,736,3.102,738,6.061,740,6.061,742,6.061,827,2.519,941,3.925,1315,3.484,1622,3.312,1708,4.341,1717,4.341,1743,3.028,1749,4.632,1798,3.925,1805,4.632,2230,4.227,2571,7.682,2572,5.246,2573,5.246,2574,5.246,2575,5.991,2576,5.991]],["title/injectables/ValidateUpdateUnavailabilityMiddleware.html",[95,0.204,1810,3.103]],["body/injectables/ValidateUpdateUnavailabilityMiddleware.html",[14,0.009,18,0.041,19,0.045,20,0.032,22,0.37,23,0.623,24,0.635,32,0.299,46,1.577,56,3.192,78,1.48,88,2.586,89,1.915,90,0.041,91,0.064,92,0.002,93,0.003,94,0.004,95,0.159,96,0.419,104,0.063,106,1.125,108,0.327,110,1.197,111,1.143,112,0.167,113,0.737,143,0.822,144,1.017,145,0.916,152,2.483,166,1.217,172,1.557,173,0.493,176,1.881,252,1.407,255,1.48,276,2.182,284,1.422,292,1.734,303,3.063,304,3.479,314,2.996,319,2.906,332,1.046,344,1.794,350,0.929,352,1.575,407,1.837,408,1.614,443,4.488,448,0.8,460,2.544,466,2.921,473,2.465,505,2.427,521,3.701,533,2.182,552,4.096,572,1.466,579,2.157,584,0.845,601,0.419,608,2.711,619,1.761,638,2.082,642,1.216,652,3.192,653,2.614,660,1.084,666,1.274,669,1.868,697,2.222,722,2.427,731,1.86,732,3.123,734,1.843,735,2.785,736,0.869,737,2.586,739,5.323,741,5.323,743,3.051,747,1.168,748,1.607,774,1.012,888,2.933,968,2.427,989,2.636,1001,2.886,1035,1.046,1085,2.441,1099,2.785,1258,2.427,1263,1.399,1364,1.216,1468,5.097,1482,3.051,1483,3.063,1489,2.785,1527,4.834,1597,2.427,1603,2.295,1608,5.43,1622,4.02,1649,2.917,1689,3.836,1704,1.216,1705,1.33,1708,2.535,1717,2.933,1810,2.427,2010,1.577,2011,1.48,2012,1.86,2014,1.86,2069,1.86,2119,1.48,2165,1.577,2193,4.954,2205,3.375,2208,1.577,2341,2.785,2418,3.051,2422,3.051,2430,3.879,2432,1.86,2445,4.488,2511,3.051,2575,3.051,2576,3.051,2577,5.323,2578,1.86,2579,4.393,2580,6.367,2581,5.611,2582,2.107,2583,2.107,2584,2.107,2585,3.456,2586,3.456,2587,2.107,2588,4.393,2589,8.212,2590,3.456,2591,2.107,2592,2.107,2593,2.107,2594,3.456,2595,3.456,2596,2.107,2597,5.082,2598,5.082,2599,5.082,2600,5.082,2601,3.456,2602,3.456,2603,2.107,2604,3.456,2605,3.456,2606,5.082,2607,3.456,2608,3.456,2609,3.456,2610,3.456,2611,2.107,2612,2.107,2613,2.107,2614,2.107,2615,2.107,2616,2.107]],["title/classes/ValidatedUnavailabilityDto.html",[91,0.134,1659,3.103]],["body/classes/ValidatedUnavailabilityDto.html",[14,0.009,18,0.107,19,0.118,20,0.083,22,0.365,23,0.636,24,0.584,29,1.358,90,0.107,91,0.168,92,0.005,93,0.007,94,0.005,104,0.166,108,0.45,112,0.374,144,1.186,284,1.57,345,5.288,430,4.936,484,2.405,572,2.345,601,0.852,655,4.471,664,4.236,667,2.923,669,2.516,827,3.376,908,5.26,1035,3.491,1085,3.376,1483,4.236,1646,4.437,1659,4.936,1708,4.455,1717,4.455,1743,3.199,1748,7.167,1750,4.147,2131,4.466,2229,4.466,2230,4.466,2494,6.206,2617,7.167]],["title/classes/VerifyNewPasswordDto.html",[91,0.134,2618,3.306]],["body/classes/VerifyNewPasswordDto.html",[14,0.009,18,0.122,19,0.136,20,0.096,22,0.419,23,0.575,29,1.556,90,0.122,91,0.193,92,0.006,93,0.007,94,0.006,104,0.191,108,0.445,112,0.371,144,1.436,284,1.419,292,1.902,408,2.017,469,6.611,509,6.138,565,4.752,598,4.46,599,4.009,601,0.927,602,5.118,603,4.752,1678,5.118,2618,5.721,2619,7.243]],["title/injectables/VerifyNewPasswordUtil.html",[95,0.204,376,2.662]],["body/injectables/VerifyNewPasswordUtil.html",[14,0.009,18,0.079,19,0.088,20,0.062,22,0.272,23,0.745,24,0.759,32,0.585,56,3.462,90,0.079,91,0.125,92,0.004,93,0.006,94,0.004,95,0.266,96,0.821,104,0.124,108,0.388,110,1.42,111,1.356,112,0.323,113,1.42,145,1.387,166,1.381,173,1.557,252,1.971,272,1.726,276,4.963,284,1.84,287,3.781,292,1.946,334,3.323,344,1.875,350,1.789,352,1.788,376,3.477,448,2.985,456,4.318,461,1.565,466,2.38,473,2.114,505,4.674,507,5.877,510,3.641,512,3.641,518,4.65,519,2.738,549,6.699,553,4.043,566,3.086,604,5.394,1001,2.967,1258,4.052,1490,3.641,1498,3.641,2324,5.809,2341,4.65,2618,6.04,2620,3.641,2621,5.77,2622,5.77,2623,5.77,2624,5.77,2625,4.124,2626,5.77,2627,4.124,2628,5.77,2629,4.124,2630,4.124,2631,4.124,2632,4.124,2633,5.77,2634,5.77,2635,5.77,2636,4.124,2637,4.124,2638,4.124]],["title/coverage.html",[2639,5.343]],["body/coverage.html",[6,1.1,12,0.886,14,0.009,16,0.915,20,0.029,91,0.264,92,0.002,93,0.003,94,0.002,95,0.407,97,1.683,112,0.092,161,2.833,162,1.426,164,1.683,178,1.203,181,1.148,197,1.338,200,1.338,201,1.338,202,1.338,203,1.338,218,1.426,221,1.426,223,1.426,261,1.683,267,1.683,272,0.761,285,1.338,287,1.35,292,1.067,294,1.338,299,0.786,324,1.338,338,1.426,341,1.148,345,1.203,374,1.265,375,1.148,376,1.148,377,1.148,378,1.338,379,1.338,387,1.426,393,1.39,407,0.55,410,1.683,414,1.203,450,1.265,453,1.426,457,1.265,462,0.98,484,1.088,498,2.008,521,1.433,573,1.426,574,1.683,577,1.203,597,1.683,598,3.356,604,1.426,605,1.683,606,1.683,611,1.265,612,1.683,613,1.338,614,2.563,615,1.148,617,1.148,624,1.203,625,1.426,628,1.1,638,1.148,647,2.234,648,1.338,649,1.683,650,3.063,655,0.98,661,1.203,662,1.683,663,3.356,666,1.439,713,1.203,714,1.683,715,1.203,716,1.683,717,1.265,722,1.338,724,1.426,732,1.176,751,1.683,752,3.527,762,1.536,764,1.265,765,1.683,766,1.683,789,1.148,810,1.338,811,1.683,812,1.265,813,1.683,814,1.683,815,1.148,821,1.683,844,1.426,846,1.426,854,1.683,877,1.762,902,1.683,903,1.683,915,1.426,924,1.683,925,1.683,928,1.683,929,1.683,938,2.563,939,1.683,945,1.203,946,1.683,947,1.016,948,1.683,953,1.265,971,1.426,984,1.579,998,1.203,999,1.683,1000,1.683,1002,1.338,1005,0.915,1016,1.1,1025,1.338,1026,1.338,1031,1.338,1039,1.579,1053,1.683,1054,1.683,1067,1.536,1076,1.426,1077,1.426,1092,1.1,1093,1.683,1094,1.683,1097,1.148,1114,1.338,1116,1.338,1145,1.683,1146,2.563,1149,1.203,1156,1.683,1157,1.683,1200,1.338,1201,1.683,1205,2.658,1206,1.265,1208,1.683,1213,1.426,1214,1.683,1215,1.683,1219,1.426,1220,1.683,1221,1.683,1224,1.683,1261,1.265,1296,1.265,1297,1.265,1301,1.536,1311,3.173,1313,1.683,1365,1.338,1381,4.618,1406,1.338,1407,1.683,1408,1.683,1419,1.683,1420,2.563,1421,1.265,1428,1.683,1433,1.683,1449,1.683,1453,1.203,1456,1.683,1459,1.683,1471,1.683,1472,1.683,1502,1.683,1503,1.683,1546,1.536,1547,1.683,1550,1.536,1551,1.683,1552,1.683,1553,1.683,1554,1.683,1569,1.683,1576,1.426,1577,1.683,1578,1.683,1582,1.265,1583,1.683,1588,1.265,1589,1.683,1618,1.683,1619,1.683,1627,1.683,1628,1.683,1646,1.203,1647,1.683,1648,3.356,1659,1.338,1680,1.265,1682,1.338,1686,1.338,1739,2.563,1740,2.563,1742,2.563,1743,3.683,1759,1.536,1761,2.563,1762,2.563,1795,1.426,1796,1.683,1797,1.148,1799,1.683,1801,1.265,1802,1.683,1806,1.683,1810,1.338,1827,1.265,1835,1.265,1837,1.338,1846,1.203,1857,1.265,1865,1.536,1873,1.203,1878,1.536,1887,1.148,1918,1.683,1919,1.683,1931,1.338,1932,1.683,1942,1.426,1958,1.536,1960,1.536,1962,1.536,1975,1.683,2010,1.426,2011,1.338,2070,1.683,2074,1.683,2075,1.683,2082,1.683,2088,1.426,2089,1.683,2091,1.683,2101,1.683,2106,1.683,2117,1.338,2133,1.426,2167,1.683,2170,3.575,2174,1.536,2175,1.683,2176,1.683,2185,1.683,2190,1.426,2191,1.683,2192,1.683,2195,1.683,2209,1.683,2216,1.683,2221,2.563,2222,1.683,2231,1.338,2232,1.683,2233,1.683,2257,1.536,2271,1.683,2279,1.536,2282,1.426,2284,1.536,2291,1.683,2292,1.683,2297,1.683,2306,1.426,2324,1.536,2350,3.063,2351,1.683,2412,1.683,2413,1.683,2414,1.426,2435,1.683,2436,1.683,2450,1.683,2485,1.536,2496,1.536,2571,1.683,2577,1.683,2578,1.683,2617,1.683,2618,1.426,2619,1.683,2620,1.683,2639,1.683,2640,1.906,2641,1.906,2642,7.185,2643,7.024,2644,1.683,2645,8.429,2646,8.354,2647,7.327,2648,3.18,2649,7.327,2650,7.327,2651,6.628,2652,6.628,2653,4.778,2654,1.906,2655,1.906,2656,1.906,2657,1.906,2658,5.312,2659,4.092,2660,5.312,2661,5.068,2662,1.683,2663,7.92,2664,3.18,2665,1.683,2666,1.683,2667,1.683,2668,1.683,2669,2.808,2670,1.683,2671,4.092,2672,4.092,2673,5.068,2674,5.739,2675,1.906,2676,6.628,2677,4.092,2678,1.906,2679,2.808,2680,3.18,2681,4.778,2682,1.683,2683,1.906,2684,3.18,2685,1.683,2686,1.906,2687,4.219,2688,4.778,2689,1.906,2690,2.808,2691,3.18,2692,1.906,2693,1.906,2694,1.906,2695,4.092,2696,1.906,2697,1.906,2698,3.614,2699,1.683,2700,2.808,2701,2.808,2702,1.683,2703,3.614,2704,1.683,2705,1.906,2706,1.906,2707,1.683,2708,1.683,2709,2.808,2710,1.683,2711,4.69,2712,1.906,2713,1.906]],["title/dependencies.html",[3,3.07,2714,3.678]],["body/dependencies.html",[3,3.021,14,0.009,32,0.743,34,3.154,59,3.676,64,3.476,68,2.692,92,0.005,93,0.007,94,0.005,209,2.901,211,4.621,212,4.621,217,4.621,228,4.621,229,4.621,322,5.46,332,2.599,351,3.676,384,4.218,386,3.476,456,3.917,480,4.527,613,4.759,615,3.154,825,5.07,842,4.621,843,4.218,873,3.154,1076,3.917,1364,3.021,1416,4.621,1457,4.218,1491,4.218,2096,4.621,2715,5.234,2716,7.513,2717,5.234,2718,6.775,2719,5.234,2720,5.234,2721,5.234,2722,5.234,2723,5.234,2724,5.234,2725,6.775,2726,6.775,2727,5.234,2728,5.234,2729,5.234,2730,5.234,2731,5.234,2732,6.775,2733,5.234,2734,5.234,2735,5.234,2736,5.234,2737,5.234,2738,5.234,2739,5.234,2740,5.234,2741,5.234,2742,5.234,2743,5.234,2744,5.234,2745,5.234,2746,5.234,2747,5.234,2748,5.234,2749,5.234,2750,5.234,2751,5.234,2752,5.234,2753,5.234,2754,5.234,2755,4.621,2756,5.234,2757,5.234,2758,5.234,2759,5.234,2760,4.621,2761,5.234]],["title/miscellaneous/enumerations.html",[2762,2.217,2763,4.697]],["body/miscellaneous/enumerations.html",[14,0.008,23,0.602,92,0.006,93,0.008,94,0.006,104,0.2,319,2.91,666,1.669,888,3.841,947,3.55,959,4.675,966,5.364,967,5.364,968,5.522,970,6.942,987,5.877,989,3.659,992,5.877,994,4.202,995,5.877,1521,5.877,1663,5.877,1939,5.364,2762,4.011,2763,5.877,2764,5.877,2765,6.656]],["title/miscellaneous/functions.html",[2311,4.287,2762,2.217]],["body/miscellaneous/functions.html",[6,4.953,14,0.008,92,0.007,93,0.008,94,0.007,104,0.213,2311,5.703,2682,6.248,2762,4.264,2766,7.076]],["title/index.html",[104,0.11,2767,3.248,2768,3.248]],["body/index.html",[14,0.007,17,2.478,18,0.096,20,0.075,24,0.526,26,4.613,51,3.154,52,3.314,60,4.406,64,3.314,92,0.005,93,0.006,94,0.005,101,4.406,272,1.572,273,3.007,277,4.021,284,1.115,299,2.058,313,3.505,315,2.765,433,5.479,441,3.15,461,2.493,484,1.707,521,2.249,553,2.566,566,3.734,596,4.021,615,3.007,628,2.88,631,3.007,632,5.156,633,5.479,644,2.566,666,2.032,671,4.146,673,2.661,674,2.765,726,3.734,732,1.845,760,3.505,761,3.314,775,2.88,789,3.007,815,3.007,816,3.314,823,3.505,828,4.406,984,2.478,1005,3.154,1009,3.15,1039,2.478,1101,4.406,1119,4.406,1225,4.021,1226,4.021,1227,4.021,1251,3.734,1258,3.505,1322,4.361,1357,4.406,1395,4.021,1603,4.361,1678,4.021,1745,3.734,1851,5.293,1915,4.021,1939,4.021,1942,3.734,2755,4.406,2760,4.406,2769,7.8,2770,4.99,2771,4.99,2772,4.99,2773,4.99,2774,4.99,2775,4.99,2776,4.99,2777,4.99,2778,6.567,2779,6.567,2780,4.99,2781,4.99,2782,4.99,2783,4.99,2784,4.99,2785,4.99,2786,4.99,2787,4.99,2788,4.99,2789,4.99,2790,4.99,2791,4.99,2792,6.567,2793,4.99,2794,4.99,2795,4.99,2796,4.99,2797,4.99,2798,4.99,2799,4.99,2800,4.99,2801,4.99,2802,4.99,2803,4.99,2804,4.99,2805,4.99,2806,4.99,2807,4.99,2808,5.916,2809,4.99,2810,4.99,2811,4.406,2812,6.567,2813,4.99,2814,4.99,2815,4.99,2816,4.99]],["title/license.html",[2767,3.248,2768,3.248,2808,2.964]],["body/license.html",[14,0.007,17,2.799,92,0.005,93,0.007,94,0.005,332,2.799,532,3.123,535,4.976,579,3.015,848,4.541,1097,4.28,1266,4.217,1517,4.217,1763,4.541,1942,4.217,2171,4.217,2808,4.541,2811,4.976,2817,7.778,2818,5.635,2819,5.635,2820,5.635,2821,7.103,2822,5.635,2823,5.635,2824,5.635,2825,5.635,2826,5.635,2827,5.635,2828,7.103,2829,8.907,2830,5.635,2831,7.778,2832,5.635,2833,7.103,2834,5.635,2835,5.635,2836,5.635,2837,5.635,2838,5.635,2839,5.635,2840,5.635,2841,5.635,2842,5.635,2843,7.103,2844,5.635,2845,5.635,2846,5.635,2847,5.635,2848,7.103,2849,5.635,2850,5.635,2851,5.635,2852,5.635,2853,5.635,2854,5.635,2855,5.635,2856,5.635,2857,5.635,2858,5.635,2859,5.635,2860,5.635,2861,5.635,2862,5.635,2863,5.635,2864,5.635,2865,5.635,2866,5.635,2867,5.635,2868,5.635,2869,5.635,2870,5.635,2871,5.635,2872,5.635,2873,4.976,2874,5.635,2875,4.976,2876,5.635]],["title/modules.html",[2,3.354]],["body/modules.html",[1,3.944,2,3.627,14,0.008,92,0.006,93,0.008,94,0.006,189,4.897,193,4.597,194,4.597,195,4.597,196,4.346,756,4.132,1851,5.274,2877,8.909,2878,8.909,2879,8.909,2880,9.002,2881,6.545]],["title/overview.html",[2882,5.343]],["body/overview.html",[0,1.507,1,4.875,2,1.853,3,1.93,4,2.111,5,2.111,6,1.93,7,1.93,8,2.015,9,2.953,10,2.953,11,2.953,12,3.762,13,4.13,14,0.009,15,3.132,16,1.606,17,1.661,29,0.819,92,0.003,93,0.005,94,0.003,96,0.665,163,1.784,181,3.942,189,6.474,190,2.953,191,2.953,192,2.953,193,6.322,194,6.216,195,6.428,196,5.745,197,4.153,341,4.566,370,2.953,371,2.953,373,2.953,374,5.032,375,4.69,376,4.69,377,3.942,378,4.153,379,4.153,414,4.784,611,3.927,617,3.564,647,2.349,713,3.733,756,4.411,764,3.927,945,3.733,989,1.462,994,2.111,998,3.733,1016,3.413,1092,3.413,1149,3.733,1207,1.853,1261,5.032,1292,2.953,1293,2.953,1294,2.953,1295,2.953,1296,3.927,1297,3.927,1421,2.221,1453,3.733,1588,3.927,1646,3.733,1797,3.564,1827,3.927,1835,3.927,1857,5.032,1873,3.733,1887,3.564,1934,2.953,1935,2.953,1937,2.953,2273,2.953,2274,2.953,2276,2.953,2882,2.953,2883,2.953,2884,3.344,2885,3.344]],["title/miscellaneous/typealiases.html",[2762,2.217,2886,5.319]],["body/miscellaneous/typealiases.html",[14,0.009,92,0.006,93,0.007,94,0.006,104,0.184,112,0.297,523,4.074,647,4.309,909,3.873,987,4.309,989,2.682,994,3.873,1381,3.272,1704,3.541,2170,4.591,2205,4.074,2219,5.417,2544,6.611,2673,5.417,2685,5.417,2687,5.417,2690,5.417,2762,3.697,2883,5.417,2887,6.135,2888,6.135,2889,7.487,2890,6.135,2891,6.135,2892,6.135,2893,6.135,2894,6.135,2895,6.135,2896,6.135,2897,6.135,2898,6.135,2899,6.135]],["title/miscellaneous/variables.html",[84,3.981,2762,2.217]],["body/miscellaneous/variables.html",[7,1.154,13,2.674,14,0.009,20,0.03,22,0.218,23,0.589,24,0.211,25,3.903,30,2.667,33,1.328,40,5.961,43,1.765,51,0.96,54,6.765,56,0.96,64,1.328,68,1.702,71,1.611,78,1.404,83,1.611,84,1.496,86,1.205,90,0.038,92,0.002,93,0.003,94,0.002,104,0.148,112,0.413,144,1.483,145,0.69,152,2.292,176,0.479,251,3.739,252,0.501,255,2.974,272,1.306,284,0.447,287,1.405,289,1.611,290,1.404,292,1.39,298,1.405,299,2.424,314,0.901,318,1.496,319,1.852,345,2.674,350,0.537,352,0.62,356,1.496,387,2.477,393,1.852,401,2.922,407,2.458,408,1.345,433,1.404,448,0.759,465,1.702,466,1.747,476,1.496,480,1.205,489,1.404,493,2.967,567,1.834,572,2.556,608,1.765,619,3.442,627,1.262,631,1.205,632,1.404,633,1.404,644,1.028,651,3.108,652,0.96,653,1.702,666,1.474,667,0.72,670,2.034,671,2.089,672,2.444,673,1.765,674,1.834,675,2.325,676,2.477,677,2.325,678,2.089,681,1.262,691,2.325,692,2.325,693,3.458,694,3.458,695,4.572,696,2.974,697,2.152,698,2.325,699,2.089,700,2.325,701,2.325,702,2.477,703,2.477,704,2.477,705,2.477,706,2.477,707,2.477,708,1.909,709,2.089,710,2.089,711,2.089,712,2.178,719,1.765,728,1.404,732,1.224,734,1.066,736,1.365,747,1.108,762,2.667,775,1.154,789,3.287,827,0.96,877,1.108,888,1.154,950,1.262,1001,1.028,1005,2.364,1010,3.169,1011,1.205,1025,2.974,1026,2.974,1067,2.667,1076,2.477,1081,1.765,1085,1.59,1112,1.262,1191,1.496,1209,1.611,1210,1.328,1211,1.611,1212,1.404,1301,2.667,1311,5.015,1315,2.812,1345,1.328,1360,3.269,1381,2.626,1395,1.611,1396,2.922,1423,1.404,1483,1.995,1542,1.328,1597,2.325,1689,1.154,1704,2.841,1778,1.765,1793,4.347,1846,1.262,1865,2.667,1878,2.667,1933,1.765,1958,2.667,1960,3.413,1962,2.667,2007,1.765,2010,3.169,2086,1.496,2165,1.496,2205,3.269,2206,2.477,2207,1.611,2208,1.496,2257,2.667,2272,1.765,2279,3.413,2284,2.667,2306,3.169,2485,2.667,2487,1.765,2496,3.413,2644,1.765,2661,1.765,2662,4.816,2665,1.765,2666,2.922,2667,1.765,2668,1.765,2669,4.347,2670,1.765,2679,1.765,2698,1.765,2699,4.347,2700,1.765,2701,3.739,2702,1.765,2703,5.19,2704,1.765,2707,1.765,2708,2.922,2709,1.765,2710,1.765,2711,5.19,2762,1.205,2764,5.19,2873,1.765,2875,5.495,2900,3.31,2901,1.999,2902,3.31,2903,1.999,2904,4.235,2905,4.235,2906,3.31,2907,1.999,2908,1.999,2909,1.999,2910,1.999,2911,1.999,2912,1.999,2913,1.999,2914,1.999,2915,1.999,2916,1.999,2917,1.999,2918,1.999,2919,1.999,2920,1.999,2921,7.292,2922,5.455,2923,7.136,2924,4.235,2925,4.923,2926,1.999,2927,1.999,2928,1.999,2929,1.999,2930,1.999,2931,1.999,2932,1.999,2933,3.31,2934,3.31,2935,1.999,2936,1.999,2937,4.923,2938,1.999,2939,1.999,2940,1.999,2941,4.235,2942,4.235,2943,1.999,2944,1.999,2945,1.999,2946,1.999,2947,1.999,2948,3.31,2949,3.31,2950,1.999,2951,1.999,2952,1.999,2953,1.999,2954,1.999,2955,1.999,2956,1.999,2957,4.923,2958,1.999,2959,1.999,2960,1.999,2961,1.999,2962,1.999,2963,1.999,2964,1.999,2965,1.999,2966,1.999,2967,1.999,2968,1.999,2969,1.999]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1381,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.1.12",{"_index":2756,"title":{},"body":{"dependencies.html":{}}}],["0.19.2",{"_index":2730,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2717,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2751,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2689,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2678,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":989,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["1.0.0",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2738,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":2748,"title":{},"body":{"dependencies.html":{}}}],["1.22.0",{"_index":2745,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":2726,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2736,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2688,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2691,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2686,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"miscellaneous/typealiases.html":{}}}],["10/10",{"_index":2675,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":2706,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2685,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["11.13.4",{"_index":2728,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2690,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["12875",{"_index":2047,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["13",{"_index":2892,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["14",{"_index":2687,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["15",{"_index":2893,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["16",{"_index":2673,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["17",{"_index":2894,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["17.1.0",{"_index":2715,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2895,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["19",{"_index":2896,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1].doy",{"_index":2550,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["1st",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["2",{"_index":1704,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":2735,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2721,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":2758,"title":{},"body":{"dependencies.html":{}}}],["2.635.0",{"_index":2729,"title":{},"body":{"dependencies.html":{}}}],["2.7.4",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["2.9.0",{"_index":2747,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2170,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["2020",{"_index":2171,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"license.html":{}}}],["2021",{"_index":2173,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["21",{"_index":2897,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["22",{"_index":2898,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["23",{"_index":2899,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["24",{"_index":2205,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":2651,"title":{},"body":{"coverage.html":{}}}],["2dsphere",{"_index":1970,"title":{},"body":{"modules/RentalModule.html":{}}}],["2lwg7lqlny41.magb5z6sww.dcq0vx7b",{"_index":1336,"title":{},"body":{"injectables/ImagesService.html":{}}}],["2nd",{"_index":2553,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["3",{"_index":987,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["3.0.0",{"_index":2723,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2733,"title":{},"body":{"dependencies.html":{}}}],["3.7.2",{"_index":2761,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2695,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2655,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2694,"title":{},"body":{"coverage.html":{}}}],["302",{"_index":2268,"title":{},"body":{"controllers/UserController.html":{}}}],["302)@post('delete",{"_index":2244,"title":{},"body":{"controllers/UserController.html":{}}}],["33",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["3600000",{"_index":1129,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["38",{"_index":2885,"title":{},"body":{"overview.html":{}}}],["4",{"_index":2219,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{},"miscellaneous/typealiases.html":{}}}],["4.0.0",{"_index":2752,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2742,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2660,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":2884,"title":{},"body":{"overview.html":{}}}],["4ol_yacp0lkuu9pn2j2iu_uy5ldrkwodyjlqe2zo6ia",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":994,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["5.0.0",{"_index":2731,"title":{},"body":{"dependencies.html":{}}}],["5.9.1",{"_index":2746,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":2693,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":856,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["6",{"_index":2891,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["6.0.0",{"_index":2716,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":2719,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2759,"title":{},"body":{"dependencies.html":{}}}],["6.4.16",{"_index":2749,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2680,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1399,"title":{},"body":{"injectables/ImagesService.html":{}}}],["66",{"_index":2658,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2883,"title":{},"body":{"overview.html":{},"miscellaneous/typealiases.html":{}}}],["7.0.0",{"_index":2718,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":2657,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2654,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":909,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/GeoUrlApiPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"miscellaneous/typealiases.html":{}}}],["8.2.0",{"_index":2740,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":2744,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2697,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2692,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":647,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["90",{"_index":2705,"title":{},"body":{"coverage.html":{}}}],["9706+forestdale+ct+riverview+33578",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":1202,"title":{},"body":{"classes/ImageDto.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"classes/UserPropertyDto.html":{}}}],["a.doy",{"_index":2154,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["a.map((item",{"_index":2967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":85,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["above",{"_index":2847,"title":{},"body":{"license.html":{}}}],["accepts",{"_index":1409,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["access",{"_index":65,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/TestRentalService.html":{}}}],["access_key_id",{"_index":66,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["accessing",{"_index":1029,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["accesskeyid",{"_index":2097,"title":{},"body":{"injectables/S3Provider.html":{}}}],["accessors",{"_index":105,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["accidentally",{"_index":1653,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["account",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["acl",{"_index":635,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["action",{"_index":2870,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2595,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["actually",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["ad",{"_index":1452,"title":{},"body":{"classes/LocCreateRentalDto.html":{}}}],["add",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpErrorFilter.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["added",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/UserPropertyDto.html":{}}}],["adding",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"guards/LoggedOutGaurd.html":{}}}],["address",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["address.replace(/\\s+/g",{"_index":1083,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["addresses",{"_index":944,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["addunavailabilityid",{"_index":1657,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["advance",{"_index":1774,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{}}}],["again",{"_index":1490,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["against",{"_index":1411,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["age=${this.appconfig.jwt_exp_time",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["aggregator",{"_index":2217,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["ahead",{"_index":1662,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["aliases",{"_index":2887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":80,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GeoUrlApiPipe.html":{}}}],["allowed",{"_index":1100,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["allowing",{"_index":1672,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["allowunkown",{"_index":75,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["already",{"_index":1649,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["alternative",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["amount",{"_index":1997,"title":{},"body":{"injectables/RentalService.html":{}}}],["and/or",{"_index":2841,"title":{},"body":{"license.html":{}}}],["another",{"_index":1121,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["api",{"_index":52,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"index.html":{}}}],["api**](https://developer.here.com/documentation/geocoding",{"_index":1038,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["api.pipe",{"_index":1860,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["api.pipe.ts",{"_index":1000,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"coverage.html":{}}}],["api.pipe.ts:12",{"_index":1017,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:19",{"_index":1019,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:31",{"_index":1027,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:46",{"_index":1030,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.util",{"_index":1037,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["api.util.ts",{"_index":1054,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{}}}],["api.util.ts:25",{"_index":1074,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["api.util.ts:43",{"_index":1068,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["api/dev_guide/index.html",{"_index":1040,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["apikey",{"_index":1026,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apikey):promise",{"_index":1082,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["app",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"index.html":{}}}],["app.controller",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["app_filter",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["appconfigservice",{"_index":12,"title":{"injectables/AppConfigService.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice(new",{"_index":1897,"title":{},"body":{"controllers/RentalController.html":{}}}],["appconfigservice.remote_db",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":162,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"classes/RawCreateRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applied",{"_index":1811,"title":{},"body":{"controllers/RentalController.html":{}}}],["applies",{"_index":1945,"title":{},"body":{"modules/RentalModule.html":{}}}],["apply",{"_index":2430,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["apply(validateemailmiddleware",{"_index":2289,"title":{},"body":{"modules/UserModule.html":{}}}],["apply(validateupdateunavailabilitymiddleware",{"_index":1973,"title":{},"body":{"modules/RentalModule.html":{}}}],["applying",{"_index":1955,"title":{},"body":{"modules/RentalModule.html":{}}}],["appmodule",{"_index":189,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropiate",{"_index":869,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["appropriate",{"_index":1179,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["appservice",{"_index":197,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":2781,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1359,"title":{},"body":{"injectables/ImagesService.html":{}}}],["argumenthost",{"_index":1183,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["arguments",{"_index":1180,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["argumentshost",{"_index":866,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["arising",{"_index":2874,"title":{},"body":{"license.html":{}}}],["array",{"_index":1360,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["array's",{"_index":2110,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["array('upload",{"_index":646,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["arrays",{"_index":1699,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["ascending",{"_index":2112,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["aspect",{"_index":1518,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["assign",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["associate",{"_index":1361,"title":{},"body":{"injectables/ImagesService.html":{}}}],["associated",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["async",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["atlas",{"_index":2787,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1344,"title":{},"body":{"injectables/ImagesService.html":{}}}],["attached",{"_index":1984,"title":{},"body":{"injectables/RentalService.html":{}}}],["auth",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailService.html":{},"interfaces/TransporterInterface.html":{}}}],["auth.guard",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":1420,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":1464,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/controller/auth.controller",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/jwt",{"_index":932,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"injectables/ImagesService.html":{}}}],["auth/gaurds/jwt",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["auth/gaurds/logged",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["auth/util/extract",{"_index":2286,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["auth/util/verify",{"_index":2287,"title":{},"body":{"modules/UserModule.html":{}}}],["authcontroller",{"_index":203,"title":{"controllers/AuthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticated",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserPropertyDto.html":{}}}],["authenticating",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{}}}],["authentication",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication=${token",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":1424,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1427,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1458,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":193,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":69,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AuthController.html":{},"injectables/ExtractKeyValueUtil.html":{}}}],["authorize",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorized",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"guards/LoggedOutGaurd.html":{},"index.html":{}}}],["authorizing",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{}}}],["authors",{"_index":2863,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":341,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1771,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["available",{"_index":1851,"title":{},"body":{"controllers/RentalController.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":64,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/S3Provider.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["aws_s3_bucket_profile",{"_index":73,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["aws_s3_bucket_rentals",{"_index":72,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["axios",{"_index":1076,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["axios.default.get",{"_index":1081,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":2130,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["b).count('hours",{"_index":2505,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["b.doy",{"_index":2155,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["back",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{}}}],["badrequestexception",{"_index":1415,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":1418,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["base",{"_index":975,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.end",{"_index":2542,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.length('days",{"_index":979,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.length('months",{"_index":977,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.length('weeks",{"_index":978,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.rentalid",{"_index":2536,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.start",{"_index":2541,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.title",{"_index":2552,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.year",{"_index":2546,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["basic",{"_index":1513,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{}}}],["bcrypt",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"dependencies.html":{}}}],["bcrypt.compare(data.newpassword",{"_index":2633,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["bcrypt.compare(value.password",{"_index":590,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["bcrypt.hash(data.newpassword",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.resetpass",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(value.password",{"_index":588,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["bcrypthashpipe",{"_index":573,"title":{"injectables/BcryptHashPipe.html":{}},"body":{"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["bcrypthashpipe())@usepipes(new",{"_index":2239,"title":{},"body":{"controllers/UserController.html":{}}}],["before",{"_index":1085,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":1123,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["begins",{"_index":1132,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["behavior",{"_index":1514,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["belong",{"_index":1317,"title":{},"body":{"injectables/ImagesService.html":{}}}],["belongs",{"_index":1354,"title":{},"body":{"injectables/ImagesService.html":{}}}],["below",{"_index":2165,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["bike",{"_index":1767,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["bind",{"_index":1509,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["block",{"_index":1656,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["blocked",{"_index":1484,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["blocks",{"_index":1655,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["body",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":681,"title":{},"body":{"classes/CreateRentalDto.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"interfaces/TransporterInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":1286,"title":{},"body":{"controllers/ImagesController.html":{}}}],["break",{"_index":2208,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":2880,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2877,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":631,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":1223,"title":{},"body":{"interfaces/ImageUploadInterface.html":{}}}],["c",{"_index":2818,"title":{},"body":{"license.html":{}}}],["cachce",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["cache",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"guards/LoggedOutGaurd.html":{},"dependencies.html":{}}}],["cache_ttl",{"_index":63,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["caching",{"_index":906,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["calculate",{"_index":2588,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["calculaterange",{"_index":2580,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["calculating",{"_index":1524,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calendar",{"_index":2790,"title":{},"body":{"index.html":{}}}],["called",{"_index":2475,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["callhandler",{"_index":1528,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calls",{"_index":1422,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{}}}],["canactivate",{"_index":1474,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["canactivate(context",{"_index":1478,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["canales",{"_index":2806,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":1505,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["car",{"_index":633,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["car/wiki",{"_index":2816,"title":{},"body":{"index.html":{}}}],["case",{"_index":895,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["catch(err",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/EmailService.html":{},"injectables/UserService.html":{}}}],["catch(error",{"_index":864,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch(exception",{"_index":1175,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["catch(httpexception",{"_index":1178,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["catches",{"_index":855,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catching",{"_index":1170,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["category",{"_index":627,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"interfaces/ImageInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["cause",{"_index":2471,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["cb",{"_index":639,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["cb(null",{"_index":640,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["change",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["changepassword",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changepassword(@req",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(data",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(req",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":285,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changing",{"_index":600,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["charge",{"_index":2825,"title":{},"body":{"license.html":{}}}],["check",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["check.length",{"_index":2441,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["checkdeadlist",{"_index":1475,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["checkdeadlist(req",{"_index":1486,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["checkforoverlap",{"_index":1978,"title":{},"body":{"injectables/RentalService.html":{}}}],["checkleapyear",{"_index":2455,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["checkout",{"_index":1943,"title":{},"body":{"modules/RentalModule.html":{}}}],["checkpasswordtypodto",{"_index":604,"title":{"classes/CheckPasswordTypoDto.html":{}},"body":{"classes/CheckPasswordTypoDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["checks",{"_index":1668,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["checktypos",{"_index":2621,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["checktypos(data",{"_index":2624,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["christmas",{"_index":2207,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["ciphers",{"_index":2189,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["city",{"_index":1778,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"miscellaneous/variables.html":{}}}],["citympg",{"_index":693,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":2866,"title":{},"body":{"license.html":{}}}],["class",{"_index":91,"title":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/UserPropertyDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["classes",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/UserPropertyDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"overview.html":{}}}],["client",{"_index":862,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["client/build",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster",{"_index":2788,"title":{},"body":{"index.html":{}}}],["cluster_appconfigmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appconfigmodule_exports",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appconfigmodule_providers",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_imagesmodule",{"_index":1292,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_exports",{"_index":1295,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_imports",{"_index":1294,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_providers",{"_index":1293,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_rentalmodule",{"_index":1934,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_rentalmodule_exports",{"_index":1937,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_rentalmodule_imports",{"_index":1936,"title":{},"body":{"modules/RentalModule.html":{}}}],["cluster_rentalmodule_providers",{"_index":1935,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2273,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2274,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2275,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2276,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collection",{"_index":2797,"title":{},"body":{"index.html":{}}}],["color",{"_index":699,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["combine",{"_index":2025,"title":{},"body":{"injectables/RentalService.html":{}}}],["comes",{"_index":1993,"title":{},"body":{"injectables/RentalService.html":{}}}],["common",{"_index":1601,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["common/const",{"_index":1263,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["common/filters/error.filters",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["common/filters/http",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interceptors/logging",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["common/pipes/joi",{"_index":1863,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["common/routes",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["common/util/positive",{"_index":2359,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["common/util/to",{"_index":2495,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["common/util/typeof",{"_index":2360,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["community",{"_index":1783,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["compare",{"_index":2511,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["complete",{"_index":1057,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["completely",{"_index":1515,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["conataining",{"_index":2488,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["conditions",{"_index":1517,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{},"classes/UnavailabilityQueryDto.html":{},"license.html":{}}}],["config/configuration.module",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/UserModule.html":{}}}],["config/configuration.service",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{}}}],["configmodule",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/RentalModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configservice",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["configuration.service",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configure",{"_index":1946,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["configure(consumer",{"_index":1947,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["confirm",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PositiveNumber.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["confirm_password",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmpass",{"_index":2084,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["confirmpassword",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{}}}],["congruence",{"_index":2482,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["connection",{"_index":2875,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["connection.model('unavailability",{"_index":2968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":2969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('change",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('create",{"_index":2328,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('delete",{"_index":778,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/UserService.html":{}}}],["console.log('find",{"_index":2331,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('location",{"_index":1084,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log('redirect",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('update",{"_index":2337,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('verified",{"_index":591,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["console.log('you",{"_index":1499,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(`delete",{"_index":803,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(`deleting",{"_index":795,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(`geocoding",{"_index":1079,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log(`here",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`i",{"_index":585,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["console.log(`logged",{"_index":1495,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(`response",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(await",{"_index":2338,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(check",{"_index":1496,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(data",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["console.log(document",{"_index":2329,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(err",{"_index":806,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["console.log(images[0].location",{"_index":780,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(item.location",{"_index":797,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(json.stringify(request.data",{"_index":2917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].address",{"_index":2920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].position",{"_index":2918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].title",{"_index":2919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(key",{"_index":784,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(location",{"_index":1086,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log(params",{"_index":804,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(rawauth",{"_index":1493,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(res",{"_index":2344,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(update",{"_index":2349,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(user",{"_index":1573,"title":{},"body":{"injectables/MulterUploadUtil.html":{},"injectables/UserService.html":{}}}],["console.log(user._doc",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constants",{"_index":2950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["constructor(appconfig",{"_index":2093,"title":{},"body":{"injectables/S3Provider.html":{}}}],["constructor(authservice",{"_index":1460,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":107,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(generateduration",{"_index":1920,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["constructor(geourlapiutil",{"_index":1015,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["constructor(imagesmodel",{"_index":1328,"title":{},"body":{"injectables/ImagesService.html":{}}}],["constructor(private",{"_index":142,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"controllers/UserController.html":{}}}],["constructor(redisservice",{"_index":1476,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["constructor(rentalmodel",{"_index":1980,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["constructor(s3provider",{"_index":616,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{}}}],["constructor(schema",{"_index":1412,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["constructor(unavailability",{"_index":2582,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["constructor(user",{"_index":2416,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["constructor(usermodel",{"_index":2304,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":1952,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["consumes",{"_index":1940,"title":{},"body":{"modules/RentalModule.html":{}}}],["containing",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["contains",{"_index":1450,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["content",{"_index":1168,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context",{"_index":1182,"title":{},"body":{"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.getclass().name}.${context.gethandler().name",{"_index":1545,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context.getrequest",{"_index":1185,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context.getresponse",{"_index":1186,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context.switchtohttp().getrequest",{"_index":1500,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["continue",{"_index":1482,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["contract",{"_index":2871,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":2802,"title":{},"body":{"index.html":{}}}],["control",{"_index":1162,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["controller",{"_index":161,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('images",{"_index":1265,"title":{},"body":{"controllers/ImagesController.html":{}}}],["controller('rental",{"_index":1893,"title":{},"body":{"controllers/RentalController.html":{}}}],["controller('user",{"_index":2259,"title":{},"body":{"controllers/UserController.html":{}}}],["controller/auth.controller",{"_index":391,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/images.controller",{"_index":1300,"title":{},"body":{"modules/ImagesModule.html":{}}}],["controller/rental.controller",{"_index":1957,"title":{},"body":{"modules/RentalModule.html":{}}}],["controller/user.controller",{"_index":2281,"title":{},"body":{"modules/UserModule.html":{}}}],["controllers",{"_index":163,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers:[authcontroller",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{}}}],["convert",{"_index":1020,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["converttodatetime",{"_index":2456,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["cookie",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["coordinates",{"_index":712,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCoordinatesDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["coordinates.dto",{"_index":1078,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["coordinates.dto.ts",{"_index":1762,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{},"coverage.html":{}}}],["coordinates.dto.ts:10",{"_index":2072,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:6",{"_index":1764,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:7",{"_index":1765,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:8",{"_index":2071,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:9",{"_index":2073,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.pipe",{"_index":1875,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["coordinates.pipe.ts",{"_index":2075,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["coordinates.pipe.ts:10",{"_index":2076,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["coordinates.pipe.ts:17",{"_index":2077,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["coords",{"_index":1047,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/LocCreateRentalDto.html":{}}}],["copies",{"_index":2843,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2828,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2817,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1069,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["count",{"_index":1216,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{}}}],["coupled",{"_index":2773,"title":{},"body":{"index.html":{}}}],["course",{"_index":1120,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["coverage",{"_index":2639,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"index.html":{}}}],["createaddress",{"_index":1013,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["createaddress(value",{"_index":1018,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["created",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{}}}],["creategivennotice",{"_index":1108,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["creategivennotice(starttime",{"_index":1110,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["createmailoptions",{"_index":830,"title":{},"body":{"injectables/EmailService.html":{}}}],["createmailoptions(email",{"_index":833,"title":{},"body":{"injectables/EmailService.html":{}}}],["createmulteruploadutil",{"_index":611,"title":{"injectables/CreateMulterUploadUtil.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["createprofile",{"_index":2234,"title":{},"body":{"controllers/UserController.html":{}}}],["createprofile(@body",{"_index":2262,"title":{},"body":{"controllers/UserController.html":{}}}],["createprofile(user",{"_index":2238,"title":{},"body":{"controllers/UserController.html":{}}}],["createquery",{"_index":1658,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquery1",{"_index":1722,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquery2",{"_index":1728,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquerydto",{"_index":648,"title":{"classes/CreateQueryDto.html":{}},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["createrental",{"_index":1813,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["createrental(@body",{"_index":1898,"title":{},"body":{"controllers/RentalController.html":{}}}],["createrental(rental",{"_index":1819,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["createrentaldto",{"_index":661,"title":{"classes/CreateRentalDto.html":{}},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["createrentalquery",{"_index":1979,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["createrentalquery(rental",{"_index":1987,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["createrentalvalidationschema",{"_index":1865,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":1095,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["createupdatedata",{"_index":720,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["createupdaterdtopipe",{"_index":713,"title":{"injectables/CreateUpdaterDtoPipe.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{},"overview.html":{}}}],["createuser",{"_index":2298,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(user",{"_index":2307,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":577,"title":{"injectables/CreateUserDto.html":{}},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["createuserupdate",{"_index":2299,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserupdate(data",{"_index":2309,"title":{},"body":{"injectables/UserService.html":{}}}],["createuservalidation",{"_index":2257,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":1678,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/VerifyNewPasswordDto.html":{},"index.html":{}}}],["credentials",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cross",{"_index":2124,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["crossover",{"_index":2473,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["crypto",{"_index":2737,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"controllers/RentalController.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["currentdatetime",{"_index":2508,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["currently",{"_index":2007,"title":{},"body":{"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["currenttime",{"_index":1096,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["custom",{"_index":103,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ErrorFilter.html":{}}}],["damages",{"_index":2867,"title":{},"body":{"license.html":{}}}],["data",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.confirmpass",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.confirmpassword",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["data.discounts.monthly",{"_index":1612,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.discounts.weekly",{"_index":1615,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.dto",{"_index":733,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["data.dto.ts",{"_index":2222,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{}}}],["data.dto.ts:10",{"_index":2224,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{}}}],["data.dto.ts:6",{"_index":2223,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{}}}],["data.email",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["data.features",{"_index":2023,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.filter",{"_index":2035,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.interface",{"_index":1367,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["data.interface.ts",{"_index":1740,"title":{},"body":{"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"coverage.html":{}}}],["data.newpassword",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["data.oldpassword",{"_index":2634,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["data.password",{"_index":2342,"title":{},"body":{"injectables/UserService.html":{}}}],["data.price",{"_index":1610,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.rentalid",{"_index":1607,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.resetpass",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.resetpasswordtoken",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.specs",{"_index":2022,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.token",{"_index":2332,"title":{},"body":{"injectables/UserService.html":{}}}],["data.unavailabilityid",{"_index":2038,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.updater",{"_index":2036,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.username",{"_index":2346,"title":{},"body":{"injectables/UserService.html":{}}}],["data.util",{"_index":1309,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["data.util.ts",{"_index":1628,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{}}}],["data.util.ts:18",{"_index":1630,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["database",{"_index":56,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RemoveUnavailabilityDto.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":1299,"title":{},"body":{"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["database/providers/unavailability",{"_index":1963,"title":{},"body":{"modules/RentalModule.html":{}}}],["database/providers/user",{"_index":2285,"title":{},"body":{"modules/UserModule.html":{}}}],["database_connection",{"_index":2947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconnection",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":756,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseprovider",{"_index":762,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":1542,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawSearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/UserInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["date(value.rentalendtime).toisostring",{"_index":1137,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["date(value.rentalstarttime).toisostring",{"_index":1136,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["date.now",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{}}}],["date.now().tostring",{"_index":1703,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dates",{"_index":1106,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["datetime",{"_index":872,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.fromiso",{"_index":1135,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["datetime.fromobject",{"_index":2498,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.isinleapyear",{"_index":2465,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.isinleapyear()*](https://moment.github.io/luxon/docs/class/src/datetime.js~datetime.html#instance",{"_index":2529,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.local",{"_index":879,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetimes",{"_index":1134,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["day",{"_index":888,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["days",{"_index":968,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["db",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["dead",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{}}}],["deal",{"_index":2830,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2876,"title":{},"body":{"license.html":{}}}],["december",{"_index":2169,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{}}}],["decemeber",{"_index":2454,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["decides",{"_index":1481,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decoded",{"_index":1429,"title":{},"body":{"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{}}}],["decorators",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":619,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":47,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["default_price",{"_index":1933,"title":{},"body":{"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":108,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["defining",{"_index":1954,"title":{},"body":{"modules/RentalModule.html":{}}}],["delete",{"_index":776,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteallimages",{"_index":1324,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleteallprofileimages",{"_index":1228,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallprofileimages(@req",{"_index":1291,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallprofileimages(req",{"_index":1237,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages",{"_index":1229,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages(@query",{"_index":1289,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages(params",{"_index":1240,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleted",{"_index":2040,"title":{},"body":{"injectables/RentalService.html":{}}}],["deleteimages",{"_index":1325,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleteprofile",{"_index":2235,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprofile(@body",{"_index":2269,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprofile(data",{"_index":2242,"title":{},"body":{"controllers/UserController.html":{}}}],["deleterentalimages",{"_index":1230,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleterentalimages(@body",{"_index":1287,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleterentalimages(images",{"_index":1242,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deletes3image",{"_index":768,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["deletes3images",{"_index":769,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["deletes3imagesutil",{"_index":764,"title":{"injectables/DeleteS3ImagesUtil.html":{}},"body":{"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["deleteuser",{"_index":2300,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(data",{"_index":2312,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserdto",{"_index":810,"title":{"injectables/DeleteUserDto.html":{}},"body":{"injectables/DeleteUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["delte",{"_index":1803,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{}}}],["demonstration",{"_index":2770,"title":{},"body":{"index.html":{}}}],["demonstrative",{"_index":2778,"title":{},"body":{"index.html":{}}}],["deny",{"_index":1497,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1516,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["depends",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["deployed",{"_index":2800,"title":{},"body":{"index.html":{}}}],["description",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["detail",{"_index":2364,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["detailed",{"_index":2813,"title":{},"body":{"index.html":{}}}],["details",{"_index":816,"title":{},"body":{"classes/EditDetailsDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"index.html":{}}}],["details')@usepipes(new",{"_index":1826,"title":{},"body":{"controllers/RentalController.html":{}}}],["details.dto",{"_index":1884,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["details.dto.ts",{"_index":814,"title":{},"body":{"classes/EditDetailsDto.html":{},"coverage.html":{}}}],["details.dto.ts:23",{"_index":818,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.dto.ts:7",{"_index":819,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.dto.ts:8",{"_index":820,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.pipe",{"_index":1882,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["details.pipe.ts",{"_index":2351,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["details.pipe.ts:12",{"_index":2357,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:13",{"_index":2355,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:23",{"_index":2358,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:99",{"_index":2356,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["developer",{"_index":2782,"title":{},"body":{"index.html":{}}}],["device",{"_index":2785,"title":{},"body":{"index.html":{}}}],["digits",{"_index":910,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"guards/LoggedOutGaurd.html":{}}}],["direct",{"_index":1197,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["discount",{"_index":1776,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["discounts",{"_index":709,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["dispatching",{"_index":1522,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["distilldto",{"_index":721,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["distribute",{"_index":2839,"title":{},"body":{"license.html":{}}}],["diy",{"_index":2516,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["doc",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RentalService.html":{},"injectables/UserService.html":{}}}],["doc.email",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["docs",{"_index":2579,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["document",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["document.password",{"_index":2327,"title":{},"body":{"injectables/UserService.html":{}}}],["document.save",{"_index":2016,"title":{},"body":{"injectables/RentalService.html":{},"injectables/UserService.html":{}}}],["documentation",{"_index":1942,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documents",{"_index":1631,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{}}}],["don't",{"_index":79,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["dotenv",{"_index":2739,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1395,"title":{},"body":{"injectables/ImagesService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["downloading",{"_index":2795,"title":{},"body":{"index.html":{}}}],["doy",{"_index":1689,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["dt",{"_index":2512,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto",{"_index":1035,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["dto.pipe",{"_index":1890,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["dto.pipe.ts",{"_index":716,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"coverage.html":{}}}],["dto.pipe.ts:15",{"_index":727,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.pipe.ts:30",{"_index":725,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.pipe.ts:58",{"_index":723,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.ts",{"_index":1146,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":1154,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:11",{"_index":1153,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:12",{"_index":1151,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:13",{"_index":1152,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:16",{"_index":1792,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:32",{"_index":1790,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:37",{"_index":1785,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:38",{"_index":1791,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:43",{"_index":1789,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:50",{"_index":1787,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:55",{"_index":1788,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:56",{"_index":1786,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:8",{"_index":1150,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:9",{"_index":1155,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto/change",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/check",{"_index":2631,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["dto/create",{"_index":583,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["dto/createrental/create",{"_index":1557,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/createrental/loc",{"_index":1032,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/MapNewRentalPipe.html":{}}}],["dto/createrental/raw",{"_index":1034,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["dto/delete",{"_index":2254,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/details/edit",{"_index":1883,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["dto/extract",{"_index":916,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["dto/find",{"_index":2255,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/forgot",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/image",{"_index":1368,"title":{},"body":{"injectables/ImagesService.html":{}}}],["dto/image.dto",{"_index":1264,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["dto/pricing/pricing.dto",{"_index":1604,"title":{},"body":{"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/reset",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/searchrental/given",{"_index":1124,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{}}}],["dto/searchrental/process",{"_index":972,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["dto/searchrental/raw",{"_index":1125,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["dto/searchrental/request",{"_index":1925,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["dto/searchrental/search",{"_index":1872,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["dto/unavailability/remove/remove",{"_index":1892,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/create",{"_index":1685,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/processed",{"_index":1681,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/unavailability/schedule/raw",{"_index":2132,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/sorted",{"_index":2134,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/unavailability",{"_index":1683,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/validate",{"_index":2135,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto/unavailability/unavailability.dto",{"_index":2131,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["dto/unavailability/update/update",{"_index":730,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/unavailability/update/validate",{"_index":731,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["dto/unavailability/validated",{"_index":1679,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto/update",{"_index":1891,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/user",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/verify",{"_index":2630,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["duration",{"_index":947,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["duration.pipe",{"_index":1869,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["duration.pipe.ts",{"_index":1919,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["duration.pipe.ts:19",{"_index":1923,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["duration.pipe.ts:9",{"_index":1921,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["e.g",{"_index":1011,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":1345,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1663,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["east",{"_index":1064,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["ed",{"_index":2576,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["edit",{"_index":815,"title":{},"body":{"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{},"index.html":{}}}],["editdetails",{"_index":1814,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["editdetails(@body",{"_index":1907,"title":{},"body":{"controllers/RentalController.html":{}}}],["editdetails(data",{"_index":1991,"title":{},"body":{"injectables/RentalService.html":{}}}],["editdetails(editdetailsdto",{"_index":1824,"title":{},"body":{"controllers/RentalController.html":{}}}],["editdetailsdto",{"_index":812,"title":{"classes/EditDetailsDto.html":{}},"body":{"classes/EditDetailsDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["editdetailsdto):promise",{"_index":2410,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["editpricing",{"_index":1815,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["editpricing(@body",{"_index":1905,"title":{},"body":{"controllers/RentalController.html":{}}}],["editpricing(data",{"_index":1994,"title":{},"body":{"injectables/RentalService.html":{}}}],["editpricing(pricingdto",{"_index":1829,"title":{},"body":{"controllers/RentalController.html":{}}}],["efficient",{"_index":1321,"title":{},"body":{"injectables/ImagesService.html":{}}}],["electric",{"_index":2923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":2143,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["email",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"miscellaneous/variables.html":{}}}],["email.middleware",{"_index":2283,"title":{},"body":{"modules/UserModule.html":{}}}],["email.middleware.ts",{"_index":2413,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["email.middleware.ts:14",{"_index":2417,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.middleware.ts:22",{"_index":2421,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.middleware.ts:27",{"_index":2419,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.util",{"_index":2424,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.util.ts",{"_index":2436,"title":{},"body":{"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["email.util.ts:4",{"_index":2437,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["email.util.ts:7",{"_index":2439,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["email/email.service",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["emails",{"_index":826,"title":{},"body":{"injectables/EmailService.html":{}}}],["emailservice",{"_index":374,"title":{"injectables/EmailService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["enclose",{"_index":2218,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["enclosed",{"_index":1694,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["end",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1376,"title":{},"body":{"injectables/ImagesService.html":{}}}],["endtime",{"_index":957,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{}}}],["endtime):promise",{"_index":974,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["endtime.diff(starttime).toobject().milliseconds",{"_index":1133,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["enforce",{"_index":77,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["enter",{"_index":2638,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["entered",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["enters",{"_index":2479,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["entire",{"_index":1673,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["enum",{"_index":959,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"miscellaneous/enumerations.html":{}}}],["enum**](https://www.typescriptlang.org/docs/handbook/enums.html",{"_index":983,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalDurationPipe.html":{}}}],["enum.util",{"_index":1871,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{}}}],["enum.util.ts",{"_index":948,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"coverage.html":{}}}],["enum.util.ts:16",{"_index":962,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["enum.util.ts:36",{"_index":958,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["enumerations",{"_index":2763,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":951,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["env",{"_index":83,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":101,"title":{},"body":{"injectables/AppConfigService.html":{},"index.html":{}}}],["equal",{"_index":2518,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["err",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["err.message",{"_index":1276,"title":{},"body":{"controllers/ImagesController.html":{}}}],["err.stack",{"_index":787,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["error",{"_index":89,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('a",{"_index":2442,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["error('bcrypt",{"_index":593,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["error('cannot",{"_index":922,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["error('citympg",{"_index":2376,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('color",{"_index":2398,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('description",{"_index":2389,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('discounts",{"_index":1613,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["error('error",{"_index":2635,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["error('failed",{"_index":1645,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["error('features",{"_index":2409,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('fuel",{"_index":2383,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('gasgrade",{"_index":2386,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('hwympg",{"_index":2380,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('invalid",{"_index":1468,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('minimum",{"_index":2607,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('model",{"_index":2392,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('no",{"_index":2020,"title":{},"body":{"injectables/RentalService.html":{}}}],["error('numdoors",{"_index":2406,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('numofseats",{"_index":2402,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('odometer",{"_index":2369,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('request",{"_index":2537,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('start",{"_index":2540,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('style",{"_index":2395,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('the",{"_index":2524,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('there",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('this",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RentalService.html":{}}}],["error('transmission",{"_index":2372,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('years",{"_index":2138,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["error('you",{"_index":1498,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["error(err",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["error.filter",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["error.filter.ts",{"_index":1157,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["error.filter.ts:23",{"_index":1176,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["error.getstatus",{"_index":882,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.message",{"_index":884,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.name",{"_index":885,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.stack",{"_index":893,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["errorfilter",{"_index":221,"title":{"classes/ErrorFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorFilter.html":{},"coverage.html":{}}}],["errorresponse",{"_index":1189,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["errors",{"_index":868,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["etag",{"_index":1209,"title":{},"body":{"interfaces/ImageInterface.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["etc",{"_index":1773,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["even",{"_index":2478,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["event",{"_index":2862,"title":{},"body":{"license.html":{}}}],["events",{"_index":1523,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exact",{"_index":1166,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exactly",{"_index":2126,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["example",{"_index":1066,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["examplebucket",{"_index":1333,"title":{},"body":{"injectables/ImagesService.html":{}}}],["exception",{"_index":1158,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.getstatus",{"_index":1187,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.message",{"_index":1193,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.message.error",{"_index":1192,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exceptional",{"_index":1538,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exceptionfilter",{"_index":863,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["exceptions",{"_index":1164,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["execution",{"_index":1181,"title":{},"body":{"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["executioncontext",{"_index":1479,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["exist",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["existing",{"_index":1838,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["exists",{"_index":2443,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["expected",{"_index":2193,"title":{},"body":{"classes/TypeOfValue.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["expiration",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"miscellaneous/variables.html":{}}}],["expired",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires",{"_index":1398,"title":{},"body":{"injectables/ImagesService.html":{}}}],["expiresin",{"_index":404,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":90,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"controllers/ImagesController.html":{},"injectables/JwtStrategy.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"dependencies.html":{},"license.html":{}}}],["extend",{"_index":1512,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["extending",{"_index":2004,"title":{},"body":{"injectables/RentalService.html":{}}}],["extends",{"_index":1426,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extra",{"_index":1510,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["extract",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/UserService.html":{}}}],["extract(req",{"_index":913,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{}}}],["extractjwt",{"_index":1438,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors([(request",{"_index":1442,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractkeyvalueutil",{"_index":375,"title":{"injectables/ExtractKeyValueUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["extractkeyvalueutildto",{"_index":915,"title":{"classes/ExtractKeyValueUtilDto.html":{}},"body":{"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"coverage.html":{}}}],["extractuserutil",{"_index":377,"title":{"injectables/ExtractUserUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ExtractUserUtil.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["failed",{"_index":595,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/JoiValidationPipe.html":{}}}],["false",{"_index":76,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PositiveNumber.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["far",{"_index":1661,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["features",{"_index":670,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1028,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["fieldname",{"_index":1267,"title":{},"body":{"controllers/ImagesController.html":{}}}],["fields",{"_index":2940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file(s",{"_index":1343,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["file.originalname",{"_index":641,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["filename",{"_index":1346,"title":{},"body":{"injectables/ImagesService.html":{}}}],["files",{"_index":1266,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"license.html":{}}}],["files.length",{"_index":1632,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["files.map(item",{"_index":1639,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["files[0",{"_index":1633,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["fileuploadandsave",{"_index":1326,"title":{},"body":{"injectables/ImagesService.html":{}}}],["filter",{"_index":744,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{}}}],["filter(val",{"_index":2158,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["filters",{"_index":1159,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/RentalService.html":{}}}],["finad",{"_index":1254,"title":{},"body":{"controllers/ImagesController.html":{}}}],["final",{"_index":664,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/SearchRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["find",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["findprofileimage",{"_index":1231,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimage(@req",{"_index":1284,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimage(req",{"_index":1244,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimages",{"_index":1232,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["findprofileimages(@req",{"_index":1282,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimages(req",{"_index":1247,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage",{"_index":1233,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage(@query",{"_index":1280,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage(params",{"_index":1249,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimages",{"_index":1234,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["findrentalimages(@query",{"_index":1278,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimages(params",{"_index":1252,"title":{},"body":{"controllers/ImagesController.html":{}}}],["finduser",{"_index":2236,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finduser(@body",{"_index":2266,"title":{},"body":{"controllers/UserController.html":{}}}],["finduser(data",{"_index":2314,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser(user",{"_index":2246,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyresetpasswordtoken",{"_index":2301,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyresetpasswordtoken(data",{"_index":2316,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserdto",{"_index":450,"title":{"injectables/FindUserDto.html":{}},"body":{"injectables/AuthService.html":{},"injectables/FindUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findvehicleimage",{"_index":1375,"title":{},"body":{"injectables/ImagesService.html":{}}}],["fine",{"_index":2799,"title":{},"body":{"index.html":{}}}],["finish",{"_index":2078,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["first",{"_index":88,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["fitness",{"_index":2858,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1372,"title":{},"body":{"injectables/ImagesService.html":{}}}],["flow",{"_index":1167,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["folder",{"_index":1222,"title":{},"body":{"interfaces/ImageUploadInterface.html":{}}}],["following",{"_index":1763,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/UnavailabilityQueryDto.html":{},"license.html":{}}}],["forgot",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["forgotpassword",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(data",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassworddto",{"_index":294,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["forgotten",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/ForgotPasswordDto.html":{}}}],["form",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/SearchRentalDto.html":{}}}],["format",{"_index":665,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["forroutes('v1/rental",{"_index":1974,"title":{},"body":{"modules/RentalModule.html":{}}}],["forroutes('v1/user",{"_index":2290,"title":{},"body":{"modules/UserModule.html":{}}}],["found",{"_index":1353,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{}}}],["framework",{"_index":2777,"title":{},"body":{"index.html":{}}}],["free",{"_index":2824,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1103,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["fromdatetimes",{"_index":965,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["front",{"_index":1652,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["frontend",{"_index":1119,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"index.html":{}}}],["fuel",{"_index":695,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":1161,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["function",{"_index":638,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["function(err",{"_index":1339,"title":{},"body":{"injectables/ImagesService.html":{}}}],["function):promise",{"_index":2611,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["functionality",{"_index":100,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/RentalModule.html":{}}}],["functions",{"_index":2311,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2846,"title":{},"body":{"license.html":{}}}],["future",{"_index":2198,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["gas",{"_index":2937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gasgrade",{"_index":696,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["gaurds/jwt",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["gaurds/local",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["gaurds/logged",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["general",{"_index":41,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["generate",{"_index":949,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{}}}],["generateduration",{"_index":1922,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["generaterentaldurationenum",{"_index":954,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["generaterentaldurationenum(starttime",{"_index":956,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["generaterentaldurationenumutil",{"_index":945,"title":{"injectables/GenerateRentalDurationEnumUtil.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["generaterentaldurationenumutil.processrentaltime",{"_index":1620,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["generator",{"_index":643,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["geo",{"_index":50,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["geo_api_key",{"_index":53,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["geo_url",{"_index":55,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["geocoder",{"_index":2783,"title":{},"body":{"index.html":{}}}],["geocoding",{"_index":1003,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["geocoordinate",{"_index":2784,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":1784,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{}}}],["geolocation",{"_index":1985,"title":{},"body":{"injectables/RentalService.html":{}}}],["geometry",{"_index":2048,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["geospatial",{"_index":1986,"title":{},"body":{"injectables/RentalService.html":{}}}],["geospatially",{"_index":1006,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["geourl",{"_index":1025,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geourlapipipe",{"_index":998,"title":{"injectables/GeoUrlApiPipe.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["geourlapipipe(new",{"_index":1896,"title":{},"body":{"controllers/RentalController.html":{}}}],["geourlapiutil",{"_index":1016,"title":{"injectables/GeoUrlApiUtil.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["geourlapiutil.getcoordinates",{"_index":2080,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["geourl}?q=${address}&apikey=${apikey",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geourl}?q=${location}&apikey=${apikey",{"_index":1080,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["get('find",{"_index":1245,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["get('profile",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@usepipes(new",{"_index":1847,"title":{},"body":{"controllers/RentalController.html":{}}}],["getaccess_key_id",{"_index":136,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getaws_s3_bucket_profile",{"_index":140,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getaws_s3_bucket_rentals",{"_index":138,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getcache_ttl",{"_index":132,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getcoordinates",{"_index":1014,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["getcoordinates(address",{"_index":1024,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["getgeo_api_key",{"_index":114,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getgeo_url",{"_index":116,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["gethello",{"_index":263,"title":{},"body":{"injectables/AppService.html":{}}}],["getjwt_exp_time",{"_index":124,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getlocal_db",{"_index":120,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getport",{"_index":126,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getprofile",{"_index":167,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":187,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":168,"title":{},"body":{"controllers/AppController.html":{}}}],["getredis_host",{"_index":128,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getredis_port",{"_index":130,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getremote_db",{"_index":118,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["gets3",{"_index":2092,"title":{},"body":{"injectables/S3Provider.html":{}}}],["getsecret_access_key",{"_index":134,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getsecret_key",{"_index":122,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getsingedurl",{"_index":1397,"title":{},"body":{"injectables/ImagesService.html":{}}}],["getter",{"_index":99,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/MapNewRentalPipe.html":{}}}],["getting",{"_index":2767,"title":{"index.html":{},"license.html":{}},"body":{}}],["give",{"_index":1160,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["given",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["givennotice",{"_index":1112,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["givennoticepipe",{"_index":1092,"title":{"injectables/GivenNoticePipe.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/RequestCoordinatesDto.html":{},"coverage.html":{},"overview.html":{}}}],["givennoticesearchrentaldto",{"_index":1116,"title":{"classes/GivenNoticeSearchRentalDto.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["gmail",{"_index":824,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/TransporterInterface.html":{}}}],["grab",{"_index":904,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiUtil.html":{},"guards/LoggedOutGaurd.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["graceful",{"_index":1537,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["grade",{"_index":2944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":2823,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1172,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["graph",{"_index":2881,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":1614,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["grocery",{"_index":1559,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["groupings",{"_index":2108,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["gte",{"_index":1692,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["guard",{"_index":1421,"title":{"guards/LoggedOutGaurd.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/LoggedOutGaurd.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1470,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["handle",{"_index":1807,"title":{},"body":{"controllers/RentalController.html":{}}}],["handler",{"_index":1483,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["handling",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["hapi/joi",{"_index":1416,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"dependencies.html":{}}}],["happyface.jpg",{"_index":1334,"title":{},"body":{"injectables/ImagesService.html":{}}}],["hash",{"_index":580,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["hashing",{"_index":594,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["header",{"_index":905,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/JwtStrategy.html":{}}}],["heated",{"_index":1769,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["hello",{"_index":265,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":2741,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":760,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"index.html":{}}}],["hereby",{"_index":2822,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1781,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["highway",{"_index":2943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":2864,"title":{},"body":{"license.html":{}}}],["holds",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":865,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"interfaces/TransporterInterface.html":{}}}],["host.switchtohttp",{"_index":1184,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["host.switchtohttp().getrequest",{"_index":875,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["host.switchtohttp().getresponse",{"_index":874,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["hour",{"_index":1098,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["html",{"_index":851,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["http",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{}}}],["http_code",{"_index":1190,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["httpcode",{"_index":177,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["httpcode(200",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200)@useguards(localauthguard)@post('login",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["httperrorfilter",{"_index":218,"title":{"classes/HttpErrorFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["httpexception",{"_index":870,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["httponly",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://geocode.search.hereapi.com/v1/geocode",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/pioneer18/rent",{"_index":2815,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":871,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["httpstatus.bad_request",{"_index":896,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":883,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["hwympg",{"_index":694,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["hybrid",{"_index":2938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hybrid','electric').required",{"_index":2927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":1623,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["id",{"_index":642,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["identical",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["identified",{"_index":1674,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["identifier",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1670,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ids",{"_index":793,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["ids.push(item._id",{"_index":800,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["if(check.length",{"_index":2440,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["ignoreexpiration",{"_index":1444,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":644,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["image(s",{"_index":1390,"title":{},"body":{"injectables/ImagesService.html":{},"controllers/UserController.html":{}}}],["image._id",{"_index":1285,"title":{},"body":{"controllers/ImagesController.html":{}}}],["image.interface",{"_index":1741,"title":{},"body":{"interfaces/ProcessedSaveDataInterface.html":{}}}],["imagedto",{"_index":1200,"title":{"classes/ImageDto.html":{}},"body":{"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["imageinterface",{"_index":1206,"title":{"interfaces/ImageInterface.html":{}},"body":{"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"coverage.html":{}}}],["imagequeryresultsdto",{"_index":1213,"title":{"classes/ImageQueryResultsDto.html":{}},"body":{"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["images",{"_index":775,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"controllers/UserController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["images.length",{"_index":1378,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images.map(item",{"_index":796,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.service.saveimages",{"_index":1348,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images.util",{"_index":1306,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["images.util.ts",{"_index":766,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"coverage.html":{}}}],["images.util.ts:10",{"_index":773,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:12",{"_index":771,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:40",{"_index":772,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:8",{"_index":770,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images/controller",{"_index":1916,"title":{},"body":{"controllers/RentalController.html":{}}}],["images/controller/images.controller",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["images/images.module",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["images[0]._id",{"_index":1384,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images[0].location.match(/\\/rentals",{"_index":777,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images[0].location.split(/\\/profile",{"_index":790,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images[0].location.split(/\\/rentals",{"_index":782,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["imageschema",{"_index":1301,"title":{},"body":{"modules/ImagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imageschema.index",{"_index":1312,"title":{},"body":{"modules/ImagesModule.html":{}}}],["imagescontroller",{"_index":202,"title":{"controllers/ImagesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"coverage.html":{}}}],["imagesmodel",{"_index":1330,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagesmodule",{"_index":194,"title":{"modules/ImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagesservice",{"_index":1261,"title":{"injectables/ImagesService.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["imageuploadinterface",{"_index":1219,"title":{"interfaces/ImageUploadInterface.html":{}},"body":{"interfaces/ImageUploadInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"coverage.html":{}}}],["img_id",{"_index":1352,"title":{},"body":{"injectables/ImagesService.html":{}}}],["implements",{"_index":584,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["implied",{"_index":2854,"title":{},"body":{"license.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":36,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":2563,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["included",{"_index":2849,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2102,"title":{},"body":{"classes/SearchRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["including",{"_index":2833,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1001,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":2637,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["index",{"_index":104,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":2497,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["indexes.ts",{"_index":2666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":1758,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{},"modules/RentalModule.html":{}}}],["individual",{"_index":2489,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["information",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocCreateRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{}}}],["inisde",{"_index":2484,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["initial",{"_index":1451,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["inject",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["inject(unavailabilitymodel",{"_index":2014,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["inject(usermodel",{"_index":2425,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["injectables",{"_index":96,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"overview.html":{}}}],["injectmodel",{"_index":1362,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{}}}],["injectmodel('images",{"_index":1370,"title":{},"body":{"injectables/ImagesService.html":{}}}],["injectmodel('rental",{"_index":2013,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["injectmodel('user",{"_index":2325,"title":{},"body":{"injectables/UserService.html":{}}}],["inputed",{"_index":1022,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["insert",{"_index":2026,"title":{},"body":{"injectables/RentalService.html":{}}}],["inside",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["installation",{"_index":2791,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1171,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["instanceof",{"_index":881,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["instantiated",{"_index":1410,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["instead",{"_index":1466,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["interacted",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["interaction",{"_index":1520,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept",{"_index":1525,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":1526,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interception",{"_index":1519,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptor",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.ts",{"_index":1503,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:22",{"_index":1529,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptors",{"_index":1504,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":1205,"title":{"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interface/image.interface",{"_index":1363,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["interface/mailoptions.interface",{"_index":845,"title":{},"body":{"injectables/EmailService.html":{}}}],["interface/processed",{"_index":1366,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["interface/schemainterface/rental/rental.interface",{"_index":2009,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["interface/schemainterface/unavailability/unavailability.interface",{"_index":2012,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["interface/transporter.interface",{"_index":847,"title":{},"body":{"injectables/EmailService.html":{}}}],["interface/user.interface",{"_index":2322,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["interfaces",{"_index":1207,"title":{},"body":{"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfacing",{"_index":1953,"title":{},"body":{"modules/RentalModule.html":{}}}],["internal_server_errors",{"_index":857,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["interval",{"_index":969,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["interval**](https://moment.github.io/luxon/docs/manual/tour.html#intervals",{"_index":1127,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["interval.fromdatetimes(a",{"_index":2504,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["interval.fromdatetimes(https://moment.github.io/luxon/docs/class/src/interval.js~interval.html#static",{"_index":964,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["interval.fromdatetimes(starttime",{"_index":976,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["invalid",{"_index":2547,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["isinleapyear",{"_index":2530,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["isnan(notice",{"_index":2506,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["it's",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["item",{"_index":2496,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.bucket",{"_index":1640,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.end",{"_index":2539,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.etag",{"_index":1642,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.key",{"_index":1641,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.location",{"_index":1644,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.location.split(/\\/profile",{"_index":809,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["item.location.split(/\\/rentals",{"_index":798,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["item.rentalid",{"_index":2535,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.size",{"_index":1643,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.start",{"_index":2538,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.title",{"_index":2551,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.year",{"_index":2545,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["items(joi.number",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iyear",{"_index":2144,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["j",{"_index":2820,"title":{},"body":{"license.html":{}}}],["january",{"_index":2172,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["javacript",{"_index":1105,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["javascript",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["jean",{"_index":2805,"title":{},"body":{"index.html":{}}}],["joi",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/JoiValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["joi.array().items(joi.string",{"_index":2933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.array().items(joi.string()).allow(null",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.boolean().required",{"_index":2936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number",{"_index":2925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().allow(null",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":49,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.number().required",{"_index":2921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":40,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":43,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":2946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":54,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().valid('gas",{"_index":2926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('regular",{"_index":2928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.valid('n/a",{"_index":2932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.valid(null",{"_index":2924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["joivalidationpipe",{"_index":1406,"title":{"injectables/JoiValidationPipe.html":{}},"body":{"injectables/JoiValidationPipe.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["joivalidationpipe())@post('create",{"_index":2240,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe())@usepipes(new",{"_index":1821,"title":{},"body":{"controllers/RentalController.html":{}}}],["joivalidationpipe(createrentalvalidationschema",{"_index":1895,"title":{},"body":{"controllers/RentalController.html":{}}}],["joivalidationpipe(createuservalidation",{"_index":2260,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe(searchrentalvalidationschema",{"_index":1900,"title":{},"body":{"controllers/RentalController.html":{}}}],["jonathan",{"_index":1226,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"index.html":{}}}],["json",{"_index":1198,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["json(`failed",{"_index":1275,"title":{},"body":{"controllers/ImagesController.html":{}}}],["json.stringify(errorresponse",{"_index":1195,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["jsonwebtoken",{"_index":2743,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":68,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_exp_time",{"_index":71,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":178,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":387,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwt_exp_time}s",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants.secret",{"_index":402,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1441,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":383,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":400,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayloaddto",{"_index":624,"title":{"classes/JwtPayloadDto.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["jwtservice",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":378,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":393,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/ProcessSaveDataUtil.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["key/value",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["keys",{"_index":82,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["kind",{"_index":2853,"title":{},"body":{"license.html":{}}}],["know",{"_index":2507,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["larger",{"_index":2608,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["last",{"_index":908,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"guards/LoggedOutGaurd.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["lat",{"_index":1059,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["latitude",{"_index":2051,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["launches",{"_index":2794,"title":{},"body":{"index.html":{}}}],["layer",{"_index":1165,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["leap",{"_index":2466,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["leapyear",{"_index":2477,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length(2",{"_index":2935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["less",{"_index":1131,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{}}}],["level",{"_index":1122,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["liability",{"_index":2868,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2865,"title":{},"body":{"license.html":{}}}],["license",{"_index":2808,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":2809,"title":{},"body":{"index.html":{}}}],["licenseplate",{"_index":703,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":2834,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2855,"title":{},"body":{"license.html":{}}}],["link",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["links",{"_index":2786,"title":{},"body":{"index.html":{}}}],["list",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{}}}],["listed",{"_index":671,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["listing",{"_index":1023,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["literal",{"_index":683,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"classes/SearchRentalDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["lng",{"_index":1060,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["load",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["loc",{"_index":672,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["locaion",{"_index":1924,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["local",{"_index":1457,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local_db",{"_index":58,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["localauthguard",{"_index":338,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":379,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["locate",{"_index":1387,"title":{},"body":{"injectables/ImagesService.html":{}}}],["location",{"_index":51,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loccreaterentaldto",{"_index":1031,"title":{"classes/LocCreateRentalDto.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["log",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["logged",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"guards/LoggedOutGaurd.html":{},"miscellaneous/variables.html":{}}}],["loggedoutgaurd",{"_index":181,"title":{"guards/LoggedOutGaurd.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["loggedoutguard",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger",{"_index":774,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["logger.error",{"_index":1194,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["logger.error(err",{"_index":900,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["logger.error(error",{"_index":898,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/JoiValidationPipe.html":{}}}],["logger.log",{"_index":1541,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log('the",{"_index":2525,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(`geourl",{"_index":1045,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["logger.log(`months",{"_index":982,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["logger.log(`test1",{"_index":2063,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(`test2",{"_index":2065,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(`the",{"_index":980,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(`this",{"_index":2528,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(base",{"_index":981,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["logger.log(currentdatetime",{"_index":2509,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(data",{"_index":788,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["logger.log(err",{"_index":786,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["logger.log(log",{"_index":901,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["logger.log(merged",{"_index":2030,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(ordered",{"_index":2166,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["logger.log(start",{"_index":2503,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(test1",{"_index":2064,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(test2",{"_index":2066,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(url",{"_index":1405,"title":{},"body":{"injectables/ImagesService.html":{}}}],["logger.log(y1final",{"_index":2526,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logging",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"classes/LoginUserDto.html":{}}}],["logginginterceptor",{"_index":223,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["logic",{"_index":1511,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logically",{"_index":2470,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["login",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["login(@request",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":1546,"title":{"injectables/LoginDto.html":{}},"body":{"injectables/LoginDto.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":1550,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["logout",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["logout(@request",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logoutuser",{"_index":2302,"title":{},"body":{"injectables/UserService.html":{}}}],["logoutuser(req",{"_index":2318,"title":{},"body":{"injectables/UserService.html":{}}}],["logs",{"_index":858,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["longer",{"_index":1488,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["longitude",{"_index":2053,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["look",{"_index":2814,"title":{},"body":{"index.html":{}}}],["loosely",{"_index":2772,"title":{},"body":{"index.html":{}}}],["love",{"_index":586,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["lte",{"_index":1690,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["luxon",{"_index":873,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"dependencies.html":{}}}],["luxon**](https://moment.github.io/luxon",{"_index":1126,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["ly",{"_index":2480,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["mail",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["mailoptions",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["mailoptionsinterface",{"_index":844,"title":{"interfaces/MailOptionsInterface.html":{}},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"coverage.html":{}}}],["make",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["makerequest",{"_index":1067,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["makerequest(location",{"_index":1073,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["makes",{"_index":1318,"title":{},"body":{"injectables/ImagesService.html":{}}}],["manager",{"_index":2732,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":1808,"title":{},"body":{"controllers/RentalController.html":{}}}],["map",{"_index":728,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["mapnewrentalpipe",{"_index":1453,"title":{"injectables/MapNewRentalPipe.html":{}},"body":{"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["mapnewrentalpipe())@usepipes(new",{"_index":1822,"title":{},"body":{"controllers/RentalController.html":{}}}],["mapped",{"_index":2225,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["mappricingdto",{"_index":1591,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["mapview",{"_index":1061,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["match",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["matches",{"_index":2341,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["matching",{"_index":93,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.sign(data",{"_index":1581,"title":{},"body":{"injectables/PositiveNumber.html":{}}}],["math.sign(data.discounts.monthly",{"_index":1611,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["math.sign(data.price",{"_index":1609,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["mathch",{"_index":2636,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["max",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["maxcount",{"_index":1268,"title":{},"body":{"controllers/ImagesController.html":{}}}],["maxdistance",{"_index":2046,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["maximum",{"_index":2606,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["maxium",{"_index":1990,"title":{},"body":{"injectables/RentalService.html":{}}}],["merchantability",{"_index":2857,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2837,"title":{},"body":{"license.html":{}}}],["merged",{"_index":2028,"title":{},"body":{"injectables/RentalService.html":{}}}],["message",{"_index":861,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["metadata",{"_index":2755,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["method",{"_index":669,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["methods",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["metric",{"_index":2941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mid",{"_index":2929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middleware",{"_index":1809,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["middleware/validate",{"_index":1965,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["middlewareconsumer",{"_index":1948,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mile",{"_index":1012,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["mileage",{"_index":2942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miles",{"_index":1977,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["military",{"_index":2206,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":651,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":1099,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["minprice",{"_index":1605,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["miscellaneous",{"_index":2762,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":923,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["mit",{"_index":2811,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":697,"title":{},"body":{"classes/CreateRentalDto.html":{},"modules/DatabaseModule.html":{},"classes/EditDetailsDto.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["model.insertmany(packet",{"_index":1373,"title":{},"body":{"injectables/ImagesService.html":{}}}],["model.provider",{"_index":1964,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["model.provider.ts",{"_index":2669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["model.save(image",{"_index":1374,"title":{},"body":{"injectables/ImagesService.html":{}}}],["modern",{"_index":1102,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["modified",{"_index":1752,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["modify",{"_index":2836,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":1999,"title":{},"body":{"injectables/RentalService.html":{}}}],["mongodb",{"_index":726,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"index.html":{}}}],["mongoose",{"_index":1364,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"dependencies.html":{}}}],["mongoose.connect(configservice.get('remote_db",{"_index":2953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.objectid",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":2957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1310,"title":{},"body":{"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":1968,"title":{},"body":{"modules/RentalModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":992,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["monthly",{"_index":711,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["months",{"_index":966,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"miscellaneous/enumerations.html":{}}}],["more",{"_index":1322,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"modules/RentalModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["mostly",{"_index":2951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mpge",{"_index":1793,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"miscellaneous/variables.html":{}}}],["mtime",{"_index":2544,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/typealiases.html":{}}}],["multer",{"_index":613,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"dependencies.html":{}}}],["multers3",{"_index":623,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["multerupload",{"_index":1388,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["multerupload(req",{"_index":1571,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["multeruploadutil",{"_index":1296,"title":{"injectables/MulterUploadUtil.html":{}},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"coverage.html":{},"overview.html":{}}}],["multiple",{"_index":792,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["n/a",{"_index":2945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n/a').required",{"_index":2931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":111,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["names",{"_index":2952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["near",{"_index":1009,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"index.html":{}}}],["necessary",{"_index":1556,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"classes/RemoveUnavailabilityDto.html":{}}}],["need",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["needs",{"_index":719,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"miscellaneous/variables.html":{}}}],["negative",{"_index":1599,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["nest",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestinterceptor",{"_index":1530,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs",{"_index":2776,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":384,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":386,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2720,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":2422,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["nestmodule",{"_index":1956,"title":{},"body":{"modules/RentalModule.html":{}}}],["never",{"_index":2793,"title":{},"body":{"index.html":{}}}],["new",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateRentalDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_password",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["newend",{"_index":740,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["newpassword",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["newstart",{"_index":738,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["newtitle",{"_index":742,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["next",{"_index":1527,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["next.handle().pipe",{"_index":1535,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nice",{"_index":887,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["node_env",{"_index":42,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["nodemailer",{"_index":825,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/TransporterInterface.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":837,"title":{},"body":{"injectables/EmailService.html":{}}}],["noninfringement",{"_index":2861,"title":{},"body":{"license.html":{}}}],["north",{"_index":1065,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["note",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["notice",{"_index":1097,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"license.html":{}}}],["notice.pipe",{"_index":1877,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["notice.pipe.ts",{"_index":1094,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"coverage.html":{}}}],["notice.pipe.ts:20",{"_index":1111,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["notice.pipe.ts:36",{"_index":1118,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["notice.pipe.ts:51",{"_index":1115,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["now",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["now.hour",{"_index":1543,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now.hour}:${now.minute",{"_index":890,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["now.minute",{"_index":1544,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now.month}/${now.day",{"_index":889,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["now.second",{"_index":891,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["null",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"injectables/UserService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":152,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["number.ts",{"_index":1578,"title":{},"body":{"injectables/PositiveNumber.html":{},"coverage.html":{}}}],["number.ts:8",{"_index":1580,"title":{},"body":{"injectables/PositiveNumber.html":{}}}],["numdoors",{"_index":701,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["numofseats",{"_index":700,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"classes/LoginUserDto.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/VerifyNewPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":2699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":794,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{}}}],["objects.push",{"_index":799,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["observable",{"_index":1485,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["obtaining",{"_index":2827,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2452,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["occurred",{"_index":807,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["odometer",{"_index":691,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["offset",{"_index":1697,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["oldpassword",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["once",{"_index":2789,"title":{},"body":{"index.html":{}}}],["one",{"_index":1113,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["onto",{"_index":2586,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["option",{"_index":1269,"title":{},"body":{"controllers/ImagesController.html":{}}}],["optional",{"_index":113,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["options",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/ImagesController.html":{},"interfaces/MailOptionsInterface.html":{}}}],["order",{"_index":2120,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["ordered",{"_index":2032,"title":{},"body":{"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["orderyears",{"_index":2113,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["ordinal",{"_index":2500,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["original",{"_index":596,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"index.html":{}}}],["originalname",{"_index":1396,"title":{},"body":{"injectables/ImagesService.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":2873,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"modules/ImagesModule.html":{},"guards/LoggedOutGaurd.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["out.guard",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{}}}],["out.guard.ts",{"_index":1472,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"coverage.html":{}}}],["out.guard.ts:17",{"_index":1487,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["out.guard.ts:38",{"_index":1480,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["out.guard.ts:9",{"_index":1477,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["outside",{"_index":1698,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["over",{"_index":1163,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["overlap",{"_index":1650,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["overlapping",{"_index":1654,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["overlaps",{"_index":2008,"title":{},"body":{"injectables/RentalService.html":{}}}],["override",{"_index":1473,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["overview",{"_index":2882,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2714,"title":{"dependencies.html":{}},"body":{}}],["packet",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{}}}],["packet._id",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["packet.email",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["packet.username",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["page",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["pairs",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["parameter",{"_index":2056,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["params",{"_index":801,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"interfaces/ProcessedUploadDataInterface.html":{}}}],["params.rental_id",{"_index":1272,"title":{},"body":{"controllers/ImagesController.html":{}}}],["parseint(process.env.min_price",{"_index":1606,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["parser",{"_index":2725,"title":{},"body":{"dependencies.html":{}}}],["parses",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["particular",{"_index":2859,"title":{},"body":{"license.html":{}}}],["pass",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/LoginUserDto.html":{},"interfaces/TransporterInterface.html":{}}}],["passed",{"_index":667,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"classes/SearchRentalDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["passing",{"_index":1597,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["passoword",{"_index":942,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["passowrd",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/ForgotPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["passport",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UserPropertyDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["passportmodule",{"_index":385,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1437,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1439,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["password.dto.ts",{"_index":598,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:5",{"_index":603,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["password.dto.ts:6",{"_index":602,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":2087,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.util",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["password.util.ts",{"_index":2620,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["password.util.ts:15",{"_index":2629,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["password.util.ts:25",{"_index":2627,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["password.util.ts:35",{"_index":2625,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["past",{"_index":2492,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["path",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/HttpErrorFilter.html":{}}}],["payload",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["payload.email",{"_index":1448,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":1446,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":1428,"title":{},"body":{"classes/JwtPayloadDto.html":{},"coverage.html":{}}}],["payload.ts:5",{"_index":1432,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.ts:6",{"_index":1430,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.ts:7",{"_index":1431,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.username",{"_index":1447,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pc",{"_index":2796,"title":{},"body":{"index.html":{}}}],["period",{"_index":1844,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["permission",{"_index":2821,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2844,"title":{},"body":{"license.html":{}}}],["person",{"_index":2826,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2845,"title":{},"body":{"license.html":{}}}],["photo",{"_index":1350,"title":{},"body":{"injectables/ImagesService.html":{}}}],["photos",{"_index":673,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["photos/${user.email}/${category",{"_index":634,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["photos/{user_email}/{category",{"_index":2956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pilot",{"_index":1772,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["pipe",{"_index":2494,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["pipes/bcrypt.pipe",{"_index":2256,"title":{},"body":{"controllers/UserController.html":{}}}],["pipes/create",{"_index":1889,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/geo",{"_index":1859,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/given",{"_index":1876,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/map",{"_index":1861,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/pricing.pipe",{"_index":1880,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/process",{"_index":1888,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/rental",{"_index":1868,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/request",{"_index":1874,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/sort",{"_index":1885,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/validate",{"_index":1881,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipetransform",{"_index":582,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["place",{"_index":2141,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["platform",{"_index":1174,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["please",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["point",{"_index":1565,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{}}}],["port",{"_index":48,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"interfaces/TransporterInterface.html":{}}}],["portions",{"_index":2851,"title":{},"body":{"license.html":{}}}],["position",{"_index":1058,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["positive",{"_index":1579,"title":{},"body":{"injectables/PositiveNumber.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["positivenumber",{"_index":1576,"title":{"injectables/PositiveNumber.html":{}},"body":{"injectables/PositiveNumber.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["post",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["post('change",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create",{"_index":2261,"title":{},"body":{"controllers/UserController.html":{}}}],["post('delete",{"_index":1238,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["post('edit",{"_index":1825,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('forgot",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('remove",{"_index":1833,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('reset",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('schedule",{"_index":1840,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('update",{"_index":1854,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["post('upload",{"_index":1256,"title":{},"body":{"controllers/ImagesController.html":{}}}],["post()@usepipes(new",{"_index":1820,"title":{},"body":{"controllers/RentalController.html":{}}}],["postman",{"_index":2792,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":1101,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"index.html":{}}}],["prefix",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":2930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepare",{"_index":1594,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["present",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["presigned",{"_index":1394,"title":{},"body":{"injectables/ImagesService.html":{}}}],["prevent",{"_index":1651,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["previous",{"_index":2493,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["price",{"_index":708,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["price')@usepipes(new",{"_index":1830,"title":{},"body":{"controllers/RentalController.html":{}}}],["pricing",{"_index":674,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pricingdto",{"_index":1582,"title":{"classes/PricingDto.html":{}},"body":{"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["pricingpipe",{"_index":1588,"title":{"injectables/PricingPipe.html":{}},"body":{"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["prior",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["procesed",{"_index":1744,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["process",{"_index":1629,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["process.env",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.geo_api_key",{"_index":1050,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["process.env.geo_url",{"_index":1046,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["process.env.jwt_exp_time",{"_index":2959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":897,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["process.env.private_key",{"_index":2965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.secret_key",{"_index":2958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":1676,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["processed.data",{"_index":2027,"title":{},"body":{"injectables/RentalService.html":{}}}],["processedsavedatainterface",{"_index":1365,"title":{"interfaces/ProcessedSaveDataInterface.html":{}},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"coverage.html":{}}}],["processedunavailabilitydto",{"_index":1680,"title":{"classes/ProcessedUnavailabilityDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["processedunavailabilityquerydto",{"_index":1686,"title":{"classes/ProcessedUnavailabilityQueryDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["processedunavailabilityquerydto[]s",{"_index":1747,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["processedunavailabilityquerydtos",{"_index":1746,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["processeduploaddatainterface",{"_index":1759,"title":{"interfaces/ProcessedUploadDataInterface.html":{}},"body":{"interfaces/ProcessedUploadDataInterface.html":{},"coverage.html":{}}}],["processing",{"_index":1148,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["processrentaltime",{"_index":955,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["processrentaltime(starttime",{"_index":961,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["processrentaltimedto",{"_index":971,"title":{"classes/ProcessRentalTimeDto.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["processsavedatautil",{"_index":1297,"title":{"injectables/ProcessSaveDataUtil.html":{}},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{},"overview.html":{}}}],["processunavailabilitypipe",{"_index":1646,"title":{"injectables/ProcessUnavailabilityPipe.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"overview.html":{}}}],["processunavailabilitypipe())@usepipes(new",{"_index":1841,"title":{},"body":{"controllers/RentalController.html":{}}}],["production",{"_index":45,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ErrorFilter.html":{}}}],["profile",{"_index":789,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":2769,"title":{},"body":{"index.html":{}}}],["promise",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1400,"title":{},"body":{"injectables/ImagesService.html":{}}}],["properties",{"_index":601,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["property",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["property.dto",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["property.dto.ts",{"_index":2292,"title":{},"body":{"classes/UserPropertyDto.html":{},"coverage.html":{}}}],["property.dto.ts:5",{"_index":2293,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["property.dto.ts:6",{"_index":2296,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["property.dto.ts:7",{"_index":2294,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["property.dto.ts:8",{"_index":2295,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["propery",{"_index":952,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["protected",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["provide",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/PositiveNumber.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/TypeOfValue.html":{},"license.html":{}}}],["provider",{"_index":758,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers/database.provider",{"_index":763,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["providers/s3.provider",{"_index":626,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["provides",{"_index":98,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AuthModule.html":{},"modules/RentalModule.html":{},"injectables/TestRentalService.html":{}}}],["public",{"_index":636,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractKeyValueUtil.html":{}}}],["publish",{"_index":2838,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2860,"title":{},"body":{"license.html":{}}}],["pw",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["py1",{"_index":1719,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["py2",{"_index":1720,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["queried",{"_index":1007,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/ImagesService.html":{}}}],["queries",{"_index":1316,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["query",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["query.dto",{"_index":1684,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{}}}],["query.dto.ts",{"_index":650,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:10",{"_index":659,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:11",{"_index":658,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:12",{"_index":654,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:13",{"_index":2220,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:6",{"_index":1755,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:7",{"_index":1754,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:8",{"_index":657,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:9",{"_index":656,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.features",{"_index":2058,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["query.pricing",{"_index":2055,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["quick",{"_index":1757,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["quiet",{"_index":802,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["rack",{"_index":1768,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["radius",{"_index":1008,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["range",{"_index":2589,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["range**](https://www.mathsisfun.com/data/range.html",{"_index":2596,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rate",{"_index":1775,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["raw",{"_index":748,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rawauth",{"_index":918,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["rawauth.slice",{"_index":921,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["rawauth.slice(15",{"_index":920,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["rawcoordinates",{"_index":1088,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinates.lat",{"_index":1090,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinates.lng",{"_index":1091,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinatesdto",{"_index":1077,"title":{"classes/RawCoordinatesDto.html":{}},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"coverage.html":{}}}],["rawcreaterentaldto",{"_index":1002,"title":{"classes/RawCreateRentalDto.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["rawcreaterentaldto):promise",{"_index":1049,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["rawscheduleunavailabilitydto",{"_index":1795,"title":{"classes/RawScheduleUnavailabilityDto.html":{}},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{}}}],["rawsearchrentaldto",{"_index":1114,"title":{"classes/RawSearchRentalDto.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"coverage.html":{}}}],["react",{"_index":2807,"title":{},"body":{"index.html":{}}}],["read",{"_index":637,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/JwtStrategy.html":{}}}],["readonly",{"_index":143,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["ready",{"_index":1753,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["real",{"_index":262,"title":{},"body":{"injectables/AppService.html":{}}}],["realy",{"_index":165,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{}}}],["redirect('http://localhost:3000/auth/login",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["redirecting",{"_index":2335,"title":{},"body":{"injectables/UserService.html":{}}}],["redis",{"_index":59,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"dependencies.html":{}}}],["redis/redis.module",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["redis/service/redis.service",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["redis_host",{"_index":61,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["redis_port",{"_index":62,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["redismodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["redisservice",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["reducing",{"_index":2005,"title":{},"body":{"injectables/RentalService.html":{}}}],["reference",{"_index":2228,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["references",{"_index":1780,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["reflect",{"_index":2754,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["registered",{"_index":102,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/EmailService.html":{}}}],["registration",{"_index":675,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["reject",{"_index":1401,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reject(err",{"_index":1403,"title":{},"body":{"injectables/ImagesService.html":{}}}],["related",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["remote",{"_index":2955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remote_db",{"_index":57,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["remove",{"_index":1837,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{}}}],["remove.deletedcount",{"_index":2039,"title":{},"body":{"injectables/RentalService.html":{}}}],["removeunavailability",{"_index":1816,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["removeunavailability(@body",{"_index":1913,"title":{},"body":{"controllers/RentalController.html":{}}}],["removeunavailability(data",{"_index":1832,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["removeunavailabilitydto",{"_index":1801,"title":{"classes/RemoveUnavailabilityDto.html":{}},"body":{"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{}}}],["removeunavailabilitydto):removeunavailabilitydto",{"_index":2448,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["rent",{"_index":632,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rentacar",{"_index":2819,"title":{},"body":{"license.html":{}}}],["rentacar.team2020@gmail.com",{"_index":838,"title":{},"body":{"injectables/EmailService.html":{}}}],["rental",{"_index":666,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/EditDetailsDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rental's",{"_index":1603,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"index.html":{}}}],["rental.controller.updateunavaialability",{"_index":1951,"title":{},"body":{"modules/RentalModule.html":{}}}],["rental.controller.updateunavailability",{"_index":2585,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rental.dto",{"_index":1033,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["rental.dto.ts",{"_index":663,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{}}}],["rental.dto.ts:10",{"_index":1454,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:11",{"_index":2105,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:15",{"_index":2104,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:23",{"_index":687,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:28",{"_index":680,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:29",{"_index":689,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:34",{"_index":686,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:41",{"_index":684,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:45",{"_index":685,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:46",{"_index":682,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:6",{"_index":688,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rental.dto.ts:7",{"_index":679,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:8",{"_index":690,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:9",{"_index":1455,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.features",{"_index":2057,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.givennotice",{"_index":2045,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.coordinates[0",{"_index":2050,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.coordinates[1",{"_index":2052,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.type",{"_index":2049,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.pipe",{"_index":1862,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["rental.pipe.ts",{"_index":1554,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["rental.pipe.ts:13",{"_index":1555,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["rental.price",{"_index":2054,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.pricerange",{"_index":2184,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.rentalduration",{"_index":2042,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.service.createrental",{"_index":668,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{}}}],["rental.service.editdetails",{"_index":817,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["rental.service.editpricing",{"_index":1584,"title":{},"body":{"classes/PricingDto.html":{}}}],["rental.service.removeunavailability",{"_index":1804,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{}}}],["rental.service.scheduleunavailability",{"_index":1748,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["rental.service.searchrentals",{"_index":2103,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.service.ts",{"_index":2176,"title":{},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["rental.service.ts:10",{"_index":2180,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.ts:15",{"_index":2182,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.ts:19",{"_index":2181,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.updateunavailability",{"_index":718,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{}}}],["rental/controller/rental.controller",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["rental/rental.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["rental_id",{"_index":1210,"title":{},"body":{"interfaces/ImageInterface.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["rentalcontroller",{"_index":201,"title":{"controllers/RentalController.html":{}},"body":{"modules/AppModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{}}}],["rentaldescription",{"_index":676,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["rentalduration",{"_index":950,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["rentaldurationpipe",{"_index":1149,"title":{"injectables/RentalDurationPipe.html":{}},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["rentaldurationpipe())@usepipes(new",{"_index":1849,"title":{},"body":{"controllers/RentalController.html":{}}}],["rentaldurationpipe(new",{"_index":1902,"title":{},"body":{"controllers/RentalController.html":{}}}],["rentaldurations",{"_index":970,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["rentaldurations.any",{"_index":988,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['1",{"_index":991,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['3",{"_index":990,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['5",{"_index":997,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentalendtime",{"_index":1142,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rentalid",{"_index":736,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["rentalinterface",{"_index":1931,"title":{"interfaces/RentalInterface.html":{}},"body":{"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"coverage.html":{}}}],["rentalmodel",{"_index":1982,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rentalmodule",{"_index":195,"title":{"modules/RentalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RentalModule.html":{},"modules.html":{},"overview.html":{}}}],["rentals",{"_index":1005,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rentals.length",{"_index":2019,"title":{},"body":{"injectables/RentalService.html":{}}}],["rentalschema",{"_index":1958,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rentalschema.index",{"_index":1969,"title":{},"body":{"modules/RentalModule.html":{}}}],["rentalschemavalidation",{"_index":2353,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["rentalservice",{"_index":1857,"title":{"injectables/RentalService.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"coverage.html":{},"overview.html":{}}}],["rentalstarttime",{"_index":1141,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rentaltitle",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rentmaxduration",{"_index":707,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["rentminduration",{"_index":706,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":1070,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["report",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["represent",{"_index":1621,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["req",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req,@body",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.body.y2",{"_index":2615,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.headers.cookie",{"_index":919,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["req.method",{"_index":1533,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.originalurl",{"_index":2432,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.url",{"_index":1534,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.user",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractUserUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/UserPropertyDto.html":{}}}],["req.user._doc.password",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":876,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["request.url",{"_index":878,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["request/response",{"_index":1507,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request?.cookies?.authentication",{"_index":1443,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestcoordinatesdto",{"_index":953,"title":{"classes/RequestCoordinatesDto.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["requestcoordinatespipe",{"_index":1873,"title":{"injectables/RequestCoordinatesPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["requestcoordinatespipe())@usepipes(new",{"_index":1848,"title":{},"body":{"controllers/RentalController.html":{}}}],["requestcoordinatespipe(new",{"_index":1901,"title":{},"body":{"controllers/RentalController.html":{}}}],["requested",{"_index":608,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"injectables/GivenNoticePipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["requesting",{"_index":941,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"injectables/ImagesService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["requests",{"_index":1489,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["require(\"@hapi/joi",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["require('axios",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1315,"title":{},"body":{"injectables/ImagesService.html":{},"classes/RawCreateRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["requirednotice",{"_index":705,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["requires",{"_index":2188,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["res",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["res.deletedcount",{"_index":2345,"title":{},"body":{"injectables/UserService.html":{}}}],["res.send(req.user._doc",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.setheader('set",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(201).json(req.files[0].location",{"_index":1575,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["res.status(404).json(`failed",{"_index":1572,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["res.status(500).json(`failed",{"_index":1393,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/ForgotPasswordDto.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"injectables/ResetPasswordTokenDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["resetpass",{"_index":2085,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["resetpassword",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(data",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassworddto",{"_index":324,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resetpasswordexpires",{"_index":2272,"title":{},"body":{"interfaces/UserInterface.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordtoken",{"_index":2086,"title":{},"body":{"classes/ResetPasswordDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordtokendto",{"_index":2088,"title":{"injectables/ResetPasswordTokenDto.html":{}},"body":{"injectables/ResetPasswordTokenDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["resetplease",{"_index":852,"title":{},"body":{"injectables/EmailService.html":{}}}],["resets",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetting",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{}}}],["resettoken",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(url",{"_index":1404,"title":{},"body":{"injectables/ImagesService.html":{}}}],["response",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["response.data.items[0",{"_index":1056,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["response.data.items[0].position",{"_index":1089,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["response.status(status).json(err",{"_index":899,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["response.status(status).json(errorresponse",{"_index":1199,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["responses",{"_index":1188,"title":{},"body":{"classes/HttpErrorFilter.html":{},"controllers/RentalController.html":{}}}],["responsible",{"_index":1169,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["respose",{"_index":1055,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["restriction",{"_index":2832,"title":{},"body":{"license.html":{}}}],["result",{"_index":92,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":94,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.dto",{"_index":1369,"title":{},"body":{"injectables/ImagesService.html":{}}}],["results.dto.ts",{"_index":1215,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"coverage.html":{}}}],["results.dto.ts:2",{"_index":1217,"title":{},"body":{"classes/ImageQueryResultsDto.html":{}}}],["results.dto.ts:3",{"_index":1218,"title":{},"body":{"classes/ImageQueryResultsDto.html":{}}}],["retnals",{"_index":1800,"title":{},"body":{"classes/RawSearchRentalDto.html":{}}}],["return",{"_index":145,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1147,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"injectables/LoggingInterceptor.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["returning",{"_index":2954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returnrentalmodel",{"_index":2179,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["returns",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCoordinatesDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["reutrns",{"_index":860,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["reveals",{"_index":859,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["rights",{"_index":2835,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2757,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":2431,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["router",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routermodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroutes(routes",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/RentalModule.html":{}}}],["run",{"_index":2798,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1491,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1532,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["s3",{"_index":615,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["s3.deleteobjects(params",{"_index":1338,"title":{},"body":{"injectables/ImagesService.html":{}}}],["s3.getsignedurl('getobject",{"_index":1402,"title":{},"body":{"injectables/ImagesService.html":{}}}],["s3provider",{"_index":617,"title":{"injectables/S3Provider.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"overview.html":{}}}],["salt",{"_index":581,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["same",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["save",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"coverage.html":{}}}],["saved",{"_index":1258,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["saveimages",{"_index":1327,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["saveimages(req.files",{"_index":1574,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["saves",{"_index":1358,"title":{},"body":{"injectables/ImagesService.html":{}}}],["scalable",{"_index":2771,"title":{},"body":{"index.html":{}}}],["schedling",{"_index":1669,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["schedule",{"_index":984,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"index.html":{}}}],["schedule.days",{"_index":996,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["schedule.months",{"_index":986,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["schedule.weeks",{"_index":993,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["scheduled",{"_index":1622,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["scheduleunavailability",{"_index":1817,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["scheduleunavailability(@body",{"_index":1909,"title":{},"body":{"controllers/RentalController.html":{}}}],["scheduleunavailability(processed",{"_index":1839,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["scheduling",{"_index":677,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["scheduling.rentmaxduration",{"_index":2043,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["scheduling.rentminduration",{"_index":2041,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["scheduling.requirednotice",{"_index":2044,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["schema",{"_index":1311,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/JoiValidationPipe.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":2701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema/images.schema",{"_index":1302,"title":{},"body":{"modules/ImagesModule.html":{}}}],["schema/rental.schema",{"_index":1959,"title":{},"body":{"modules/RentalModule.html":{}}}],["schema/unavailability",{"_index":1961,"title":{},"body":{"modules/RentalModule.html":{}}}],["schema/validation/create",{"_index":1866,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["schema/validation/search",{"_index":1879,"title":{},"body":{"controllers/RentalController.html":{}}}],["sd",{"_index":2575,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["sdk",{"_index":2096,"title":{},"body":{"injectables/S3Provider.html":{},"dependencies.html":{}}}],["search",{"_index":1039,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"coverage.html":{},"index.html":{}}}],["searching",{"_index":1004,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["searchrental",{"_index":1818,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["searchrental(@query",{"_index":1903,"title":{},"body":{"controllers/RentalController.html":{}}}],["searchrental(rental",{"_index":2001,"title":{},"body":{"injectables/RentalService.html":{}}}],["searchrental(searchrentaldto",{"_index":1845,"title":{},"body":{"controllers/RentalController.html":{}}}],["searchrentaldto",{"_index":1846,"title":{"classes/SearchRentalDto.html":{}},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchrentalvalidationschema",{"_index":1878,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchs",{"_index":1989,"title":{},"body":{"injectables/RentalService.html":{}}}],["seats",{"_index":1770,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["second",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["secret",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secret_access_key",{"_index":67,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["secret_key",{"_index":70,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["secretaccesskey",{"_index":2099,"title":{},"body":{"injectables/S3Provider.html":{}}}],["secretorkey",{"_index":1445,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrets",{"_index":2708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secure",{"_index":1323,"title":{},"body":{"injectables/ImagesService.html":{}}}],["secureconnection",{"_index":2186,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["security",{"_index":1314,"title":{},"body":{"injectables/ImagesService.html":{}}}],["see",{"_index":1915,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["select",{"_index":850,"title":{},"body":{"injectables/EmailService.html":{}}}],["selected",{"_index":1010,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"miscellaneous/variables.html":{}}}],["selective",{"_index":1320,"title":{},"body":{"injectables/ImagesService.html":{}}}],["sell",{"_index":2842,"title":{},"body":{"license.html":{}}}],["sells",{"_index":1227,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"index.html":{}}}],["semi",{"_index":1675,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["send",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{}}}],["sending",{"_index":1590,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["sendmail",{"_index":831,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendmail(mailoptions",{"_index":835,"title":{},"body":{"injectables/EmailService.html":{}}}],["sends",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["sense",{"_index":1602,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["sent",{"_index":943,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/HttpErrorFilter.html":{}}}],["separate",{"_index":2122,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sequential",{"_index":2128,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["series",{"_index":1671,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["server",{"_index":60,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["serves",{"_index":2226,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["servestaticmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":822,"title":{},"body":{"injectables/EmailService.html":{},"injectables/ImagesService.html":{},"injectables/TestRentalService.html":{}}}],["service/auth.service",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["service/images.service",{"_index":1262,"title":{},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{}}}],["service/rental.service",{"_index":1858,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["service/user.service",{"_index":2258,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["session",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions",{"_index":911,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["set",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{}}}],["several",{"_index":2939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":2848,"title":{},"body":{"license.html":{}}}],["share",{"_index":2543,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["show",{"_index":1782,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["side",{"_index":2775,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{}}}],["simpler",{"_index":729,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["simplified",{"_index":2227,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["simply",{"_index":907,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["single",{"_index":779,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["size",{"_index":1211,"title":{},"body":{"interfaces/ImageInterface.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["slightly",{"_index":1319,"title":{},"body":{"injectables/ImagesService.html":{}}}],["smaller",{"_index":2803,"title":{},"body":{"index.html":{}}}],["smtp",{"_index":842,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["smtptransport",{"_index":841,"title":{},"body":{"injectables/EmailService.html":{}}}],["software",{"_index":2829,"title":{},"body":{"license.html":{}}}],["soon",{"_index":2801,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":1130,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["sort",{"_index":2107,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sort((a",{"_index":2159,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted",{"_index":2119,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["sorted.ya",{"_index":2140,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted.ya[0].year",{"_index":2142,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted.yb",{"_index":2139,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sortedunavailabilitydto",{"_index":2133,"title":{"interfaces/SortedUnavailabilityDto.html":{}},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"coverage.html":{}}}],["sortunavailabilitypipe",{"_index":1797,"title":{"injectables/SortUnavailabilityPipe.html":{}},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{},"overview.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["south",{"_index":1063,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["spaces",{"_index":1071,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["spans",{"_index":2168,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["spec",{"_index":2352,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["specific",{"_index":759,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"classes/UnavailabilityDto.html":{}}}],["specifications",{"_index":1766,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["specified",{"_index":1852,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{}}}],["specs",{"_index":678,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":781,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["src/.../const.ts",{"_index":2764,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../constant.ts",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.provider.ts",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.schema.ts",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../military",{"_index":2888,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../rental.schema.ts",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../search",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../secrets.ts",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../to",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unavailability",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":261,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:7",{"_index":264,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/constant.ts",{"_index":2644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controller/auth.controller.ts",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controller/auth.controller.ts:26",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:40",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:52",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:61",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:70",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/dto/change",{"_index":597,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/check",{"_index":605,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"coverage.html":{}}}],["src/auth/dto/extract",{"_index":924,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{},"coverage.html":{}}}],["src/auth/dto/forgot",{"_index":939,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/jwt",{"_index":625,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"classes/JwtPayloadDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/auth/dto/login",{"_index":1551,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/reset",{"_index":2082,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/user",{"_index":2291,"title":{},"body":{"classes/UserPropertyDto.html":{},"coverage.html":{}}}],["src/auth/dto/verify",{"_index":2619,"title":{},"body":{"classes/VerifyNewPasswordDto.html":{},"coverage.html":{}}}],["src/auth/gaurds/jwt",{"_index":1419,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/gaurds/local",{"_index":1456,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/gaurds/logged",{"_index":1471,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts:130",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:154",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:23",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:41",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:59",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:78",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:97",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":1433,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:11",{"_index":1434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:27",{"_index":1436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":1459,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:10",{"_index":1461,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:21",{"_index":1463,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/util/extract",{"_index":902,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"coverage.html":{}}}],["src/auth/util/verify",{"_index":2324,"title":{},"body":{"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["src/common/const.ts",{"_index":2661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/error.filters.ts",{"_index":854,"title":{},"body":{"classes/ErrorFilter.html":{},"coverage.html":{}}}],["src/common/filters/error.filters.ts:20",{"_index":867,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["src/common/filters/http",{"_index":1156,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["src/common/interceptors/logging",{"_index":1502,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/pipes/joi",{"_index":1407,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/common/util/positive",{"_index":1577,"title":{},"body":{"injectables/PositiveNumber.html":{},"coverage.html":{}}}],["src/common/util/to",{"_index":2665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/util/typeof",{"_index":2191,"title":{},"body":{"classes/TypeOfValue.html":{},"coverage.html":{}}}],["src/config/configuration.module.ts",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["src/config/configuration.service",{"_index":1967,"title":{},"body":{"modules/RentalModule.html":{},"injectables/S3Provider.html":{}}}],["src/config/configuration.service.ts",{"_index":97,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/config/configuration.service.ts:12",{"_index":115,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:15",{"_index":117,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:18",{"_index":119,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:21",{"_index":121,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:24",{"_index":123,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:27",{"_index":125,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:30",{"_index":127,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:33",{"_index":129,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:36",{"_index":131,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:39",{"_index":133,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:42",{"_index":135,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:45",{"_index":137,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:48",{"_index":139,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:51",{"_index":141,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:9",{"_index":109,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/database/database.module.ts",{"_index":757,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/providers/database.provider.ts",{"_index":2667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/unavailability",{"_index":2668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/user",{"_index":2670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/email/email.service.ts",{"_index":821,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/email/email.service.ts:10",{"_index":832,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:17",{"_index":840,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:29",{"_index":834,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:44",{"_index":836,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/interface/mailoptions.interface.ts",{"_index":1552,"title":{},"body":{"interfaces/MailOptionsInterface.html":{},"coverage.html":{}}}],["src/email/interface/transporter.interface.ts",{"_index":2185,"title":{},"body":{"interfaces/TransporterInterface.html":{},"coverage.html":{}}}],["src/images/controller/images.controller.ts",{"_index":1224,"title":{},"body":{"controllers/ImagesController.html":{},"coverage.html":{}}}],["src/images/controller/images.controller.ts:108",{"_index":1241,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:117",{"_index":1239,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:27",{"_index":1260,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:43",{"_index":1257,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:59",{"_index":1253,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:69",{"_index":1250,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:79",{"_index":1248,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:89",{"_index":1246,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:99",{"_index":1243,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/dto/image",{"_index":1214,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts",{"_index":1201,"title":{},"body":{"classes/ImageDto.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts:2",{"_index":1203,"title":{},"body":{"classes/ImageDto.html":{}}}],["src/images/dto/image.dto.ts:3",{"_index":1204,"title":{},"body":{"classes/ImageDto.html":{}}}],["src/images/images.module.ts",{"_index":1298,"title":{},"body":{"modules/ImagesModule.html":{}}}],["src/images/interface/image",{"_index":1220,"title":{},"body":{"interfaces/ImageUploadInterface.html":{},"coverage.html":{}}}],["src/images/interface/image.interface.ts",{"_index":1208,"title":{},"body":{"interfaces/ImageInterface.html":{},"coverage.html":{}}}],["src/images/interface/processed",{"_index":1739,"title":{},"body":{"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"coverage.html":{}}}],["src/images/providers/s3.provider.ts",{"_index":2091,"title":{},"body":{"injectables/S3Provider.html":{},"coverage.html":{}}}],["src/images/providers/s3.provider.ts:10",{"_index":2095,"title":{},"body":{"injectables/S3Provider.html":{}}}],["src/images/providers/s3.provider.ts:6",{"_index":2094,"title":{},"body":{"injectables/S3Provider.html":{}}}],["src/images/schema/images.schema.ts",{"_index":2679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/images/service/images.service.ts",{"_index":1313,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/images/service/images.service.ts:110",{"_index":1340,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:155",{"_index":1331,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:175",{"_index":1342,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:23",{"_index":1329,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:34",{"_index":1355,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:44",{"_index":1356,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:66",{"_index":1351,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:89",{"_index":1349,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/util/create",{"_index":612,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"coverage.html":{}}}],["src/images/util/delete",{"_index":765,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"coverage.html":{}}}],["src/images/util/multer",{"_index":1569,"title":{},"body":{"injectables/MulterUploadUtil.html":{},"coverage.html":{}}}],["src/images/util/process",{"_index":1627,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2682,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/redis/service/redis.service",{"_index":1492,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["src/rental/alias/military",{"_index":2890,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/rental/const.ts",{"_index":2765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/rental/controller/rental.controller.ts",{"_index":1806,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{}}}],["src/rental/controller/rental.controller.ts:107",{"_index":1855,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:117",{"_index":1836,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:48",{"_index":1823,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:65",{"_index":1850,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:75",{"_index":1831,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:85",{"_index":1828,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:97",{"_index":1843,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/dto/createrental/create",{"_index":662,"title":{},"body":{"classes/CreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/createrental/loc",{"_index":1449,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/createrental/raw",{"_index":1761,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/details/edit",{"_index":813,"title":{},"body":{"classes/EditDetailsDto.html":{},"coverage.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts",{"_index":1583,"title":{},"body":{"classes/PricingDto.html":{},"coverage.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:6",{"_index":1587,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:7",{"_index":1586,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:8",{"_index":1585,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/searchrental/given",{"_index":1145,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/process",{"_index":1618,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/raw",{"_index":1799,"title":{},"body":{"classes/RawSearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/request",{"_index":2070,"title":{},"body":{"classes/RequestCoordinatesDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/search",{"_index":2101,"title":{},"body":{"classes/SearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/remove/remove",{"_index":1802,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/create",{"_index":649,"title":{},"body":{"classes/CreateQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/processed",{"_index":1742,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/raw",{"_index":1796,"title":{},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/sorted",{"_index":2167,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/unavailability",{"_index":2216,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/validate",{"_index":2450,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts",{"_index":2195,"title":{},"body":{"classes/UnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:10",{"_index":2200,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:11",{"_index":2203,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:6",{"_index":2201,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:7",{"_index":2204,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:8",{"_index":2199,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:9",{"_index":2202,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/update/update",{"_index":2221,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/update/validate",{"_index":2571,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/validated",{"_index":2617,"title":{},"body":{"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/interface/schemainterface/rental/rental.interface.ts",{"_index":1932,"title":{},"body":{"interfaces/RentalInterface.html":{},"coverage.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts",{"_index":2209,"title":{},"body":{"classes/UnavailabilityInterface.html":{},"coverage.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:10",{"_index":2214,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:5",{"_index":2212,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:6",{"_index":2215,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:7",{"_index":2210,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:8",{"_index":2213,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:9",{"_index":2211,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/middleware/validate",{"_index":2577,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["src/rental/pipes/create",{"_index":714,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/geo",{"_index":999,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/given",{"_index":1093,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"coverage.html":{}}}],["src/rental/pipes/map",{"_index":1553,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/pricing.pipe.ts",{"_index":1589,"title":{},"body":{"injectables/PricingPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/pricing.pipe.ts:14",{"_index":1598,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/pricing.pipe.ts:35",{"_index":1595,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/pricing.pipe.ts:51",{"_index":1593,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/process",{"_index":1647,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/rental",{"_index":1918,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/request",{"_index":2074,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/sort",{"_index":2106,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/validate",{"_index":2350,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/rental.module.ts",{"_index":1938,"title":{},"body":{"modules/RentalModule.html":{}}}],["src/rental/rental.module.ts:71",{"_index":1949,"title":{},"body":{"modules/RentalModule.html":{}}}],["src/rental/schema/rental.schema.ts",{"_index":2698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/unavailability",{"_index":2700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/validation/create",{"_index":2702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/validation/search",{"_index":2704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/service/rental.service.ts",{"_index":1975,"title":{},"body":{"injectables/RentalService.html":{},"coverage.html":{}}}],["src/rental/service/rental.service.ts:113",{"_index":1998,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:134",{"_index":2003,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:151",{"_index":1996,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:178",{"_index":1988,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:19",{"_index":1981,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:216",{"_index":2006,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:31",{"_index":1983,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:44",{"_index":2002,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:65",{"_index":1995,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:92",{"_index":1992,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/test",{"_index":2175,"title":{},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["src/rental/utils/generate",{"_index":946,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"coverage.html":{}}}],["src/rental/utils/geo",{"_index":1053,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{}}}],["src/secrets/secrets.ts",{"_index":2707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/controller/user.controller.ts",{"_index":2233,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/controller/user.controller.ts:25",{"_index":2241,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:38",{"_index":2252,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:53",{"_index":2248,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:66",{"_index":2245,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/dto/create",{"_index":751,"title":{},"body":{"injectables/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/delete",{"_index":811,"title":{},"body":{"injectables/DeleteUserDto.html":{},"coverage.html":{}}}],["src/user/dto/find",{"_index":938,"title":{},"body":{"injectables/FindUserDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts",{"_index":1547,"title":{},"body":{"injectables/LoginDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts:5",{"_index":1549,"title":{},"body":{"injectables/LoginDto.html":{}}}],["src/user/dto/login.dto.ts:6",{"_index":1548,"title":{},"body":{"injectables/LoginDto.html":{}}}],["src/user/dto/update",{"_index":2232,"title":{},"body":{"injectables/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/interface/user.interface.ts",{"_index":2271,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/middleware/validate",{"_index":2412,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["src/user/pipes/bcrypt.pipe.ts",{"_index":574,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"coverage.html":{}}}],["src/user/pipes/bcrypt.pipe.ts:12",{"_index":578,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["src/user/schema/user.schema.ts",{"_index":2709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/schema/validation/create",{"_index":2710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/service/user.service.ts",{"_index":2297,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/service/user.service.ts:102",{"_index":2313,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:126",{"_index":2310,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:135",{"_index":2319,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:18",{"_index":2305,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:31",{"_index":2308,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:48",{"_index":2315,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:63",{"_index":2317,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:77",{"_index":2321,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.module.ts",{"_index":2277,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.module.ts:33",{"_index":2278,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/util/extract",{"_index":928,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"coverage.html":{}}}],["src/user/util/validate",{"_index":2435,"title":{},"body":{"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["stack",{"_index":892,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["start",{"_index":652,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2768,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2522,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["starttime",{"_index":960,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["starttime.diffnow().toobject().milliseconds",{"_index":1128,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["state",{"_index":704,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":880,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"controllers/RentalController.html":{}}}],["status(500",{"_index":1274,"title":{},"body":{"controllers/ImagesController.html":{}}}],["steet",{"_index":1777,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["stop",{"_index":87,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["storage",{"_index":629,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["store",{"_index":2734,"title":{},"body":{"dependencies.html":{}}}],["stores",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["storing",{"_index":1521,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["strategies/jwt.strategy",{"_index":389,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":390,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1423,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["strategy**](http://www.passportjs.org/packages/passport",{"_index":1425,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{}}}],["stream",{"_index":1508,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["street",{"_index":1794,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["string",{"_index":144,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"classes/SearchRentalDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":698,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":848,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"license.html":{}}}],["sublicense",{"_index":2840,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{}}}],["substantial",{"_index":2850,"title":{},"body":{"license.html":{}}}],["success",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["successful",{"_index":808,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["such",{"_index":2453,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["sumamry",{"_index":1341,"title":{},"body":{"injectables/ImagesService.html":{}}}],["summary",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":1440,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super({usernamefield",{"_index":1465,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["support",{"_index":2878,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2879,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":894,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["symbols",{"_index":1072,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["t",{"_index":2966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":1944,"title":{},"body":{"modules/RentalModule.html":{}}}],["table",{"_index":2713,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":645,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["take",{"_index":1196,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["tap",{"_index":1531,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tap(err",{"_index":1540,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["teehee",{"_index":886,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["temp",{"_index":933,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["temp.bucket",{"_index":1634,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.email",{"_index":935,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["temp.etag",{"_index":1636,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.key",{"_index":1635,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.location",{"_index":1638,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.size",{"_index":1637,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.userid",{"_index":937,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["temp.username",{"_index":934,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["temp1",{"_index":2597,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["temp2",{"_index":2598,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["termination",{"_index":1539,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":46,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["test.length",{"_index":2069,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["test1",{"_index":2059,"title":{},"body":{"injectables/RentalService.html":{}}}],["test1.length",{"_index":2067,"title":{},"body":{"injectables/RentalService.html":{}}}],["test2",{"_index":2061,"title":{},"body":{"injectables/RentalService.html":{}}}],["test2.length",{"_index":2068,"title":{},"body":{"injectables/RentalService.html":{}}}],["testable",{"_index":2774,"title":{},"body":{"index.html":{}}}],["testfile.ts",{"_index":2711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["testing",{"_index":2178,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["testrentalservice",{"_index":2174,"title":{"injectables/TestRentalService.html":{}},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["text",{"_index":849,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["they'll",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.addunavailabilityid(value",{"_index":1721,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.appconfig.access_key_id",{"_index":2098,"title":{},"body":{"injectables/S3Provider.html":{}}}],["this.appconfig.secret_access_key",{"_index":2100,"title":{},"body":{"injectables/S3Provider.html":{}}}],["this.authservice.changepassword(data",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.forgotpassword(data",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.user",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(req",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.resetpassword(data",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":1467,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.calculaterange(req.body.y1",{"_index":2614,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.checkdeadlist(request",{"_index":1501,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["this.checkforoverlap(processed",{"_index":2024,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.checkleapyear(start",{"_index":2566,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.configservice.get('app.access_key_id",{"_index":158,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.aws_s3_bucket_profile",{"_index":160,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.aws_s3_bucket_rentals",{"_index":159,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.cache_ttl",{"_index":156,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.geo_api_key",{"_index":146,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.geo_url",{"_index":147,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.jwt_exp_time",{"_index":151,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.local_db",{"_index":149,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.port",{"_index":153,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.redis_host",{"_index":154,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.redis_port",{"_index":155,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.remote_db",{"_index":148,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.secret_access_key",{"_index":157,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.secret_key",{"_index":150,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.converttodatetime(value.y1[0",{"_index":2510,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.converttodatetime(y1final)).daysinyear",{"_index":2517,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.createaddress(value",{"_index":1051,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.creategivennotice(starttime",{"_index":1139,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["this.createmulteruploadutil.create(req",{"_index":1389,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.createquery(createquery",{"_index":1738,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createquery(createquery1",{"_index":1735,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createquery(createquery2",{"_index":1737,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createrentalquery(rental",{"_index":2017,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.createupdatedata(raw",{"_index":750,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["this.createuserupdate(data",{"_index":2334,"title":{},"body":{"injectables/UserService.html":{}}}],["this.deletes3imagesutil.deletes3image(images",{"_index":1382,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.deletes3imagesutil.deletes3images(images",{"_index":1385,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.distilldto(value",{"_index":749,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["this.emailservice.createmailoptions(user.email",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.emailservice.sendmail(mailoptions",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.extractkeyvalueutil.extract(req",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.extractuserutil.extract(req",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.finduser({email",{"_index":2340,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateduration",{"_index":1926,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["this.generateduration.generaterentaldurationenum",{"_index":1927,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["this.geourlapiutil.getcoordinates",{"_index":1048,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["this.getcoordinates",{"_index":1021,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.getcoordinates(address",{"_index":1052,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.imagesmodel",{"_index":1391,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.deletemany",{"_index":1386,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.deleteone",{"_index":1383,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.find",{"_index":1377,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.findbyid(img_id",{"_index":1379,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesservice.deleteallimages(req.user",{"_index":1290,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.deleteimages(images",{"_index":1288,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.fileuploadandsave(req",{"_index":1271,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findprofileimages(req.user",{"_index":1283,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findrentalimages(null",{"_index":1279,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findrentalimages(params._id",{"_index":1281,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.saveimages",{"_index":1273,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.jwtservice.sign(payload",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logoutuser(req",{"_index":2336,"title":{},"body":{"injectables/UserService.html":{}}}],["this.makerequest",{"_index":1087,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["this.mappricingdto(value",{"_index":1617,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["this.multeruploadutil.upload(req",{"_index":1392,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.orderyears(sorted",{"_index":2164,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.positivenumber",{"_index":2361,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.citympg",{"_index":2375,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.hwympg",{"_index":2379,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.numdoors",{"_index":2405,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.numofseats",{"_index":2401,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.odometer",{"_index":2368,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.processrentaltime(starttime",{"_index":985,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["this.processsavedatautil.process(files",{"_index":1371,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.redisservice.get(key",{"_index":1494,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["this.redisservice.set(key",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.rentalmodel",{"_index":2183,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["this.rentalmodel(rental",{"_index":2015,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalmodel.find(query",{"_index":2018,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalmodel.findoneandupdate(filter",{"_index":2021,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalservice.createrental(rental",{"_index":1899,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.editdetails(editdetailsdto",{"_index":1908,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.editpricing(pricingdto",{"_index":1906,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.removeunavailability(data",{"_index":1914,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.scheduleunavailability(processed",{"_index":1910,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.searchrental(searchrentaldto",{"_index":1904,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.updateunavailability(data",{"_index":1912,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.s3",{"_index":630,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{}}}],["this.s3.deleteobject",{"_index":785,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["this.s3.deleteobjects(params",{"_index":805,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["this.s3provider.gets3",{"_index":621,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["this.schema.validate(value",{"_index":1417,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["this.sort(value",{"_index":2163,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":853,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.typeofvalue",{"_index":2362,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.rentalid",{"_index":2363,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.citympg",{"_index":2374,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.color",{"_index":2397,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.description",{"_index":2388,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.fuel",{"_index":2382,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.gasgrade",{"_index":2385,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.hwympg",{"_index":2378,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.model",{"_index":2391,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.numdoors",{"_index":2404,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.numofseats",{"_index":2400,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.odometer",{"_index":2367,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.style",{"_index":2394,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.transmission",{"_index":2371,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(x",{"_index":2408,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.unavailability.deletemany",{"_index":2037,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.find",{"_index":2603,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.unavailability.find(y1query",{"_index":2060,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.find(y2query",{"_index":2062,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.insertmany(merged",{"_index":2031,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.insertmany(y1",{"_index":2033,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.updatemany",{"_index":2034,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.user.find({email",{"_index":2427,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.usermodel(user",{"_index":2326,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":2330,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findoneandupdate(filter",{"_index":2339,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(user",{"_index":2263,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(data",{"_index":2270,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduser(query",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduser(user",{"_index":2267,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduser({email",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduserbyresetpasswordtoken({token",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(update",{"_index":2265,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validate2years(tyearb",{"_index":2152,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.validatecrossover(value.y1",{"_index":2567,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatecrossyearcongruence(value.y1[0",{"_index":2568,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatedetails(value",{"_index":2411,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.validatedto(req.body",{"_index":2613,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.validatedto(value",{"_index":2449,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["this.validateeachunavailability(value.y1",{"_index":2564,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validateeachunavailability(value.y2",{"_index":2565,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validateemail(req.body",{"_index":2434,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateemailutil",{"_index":2426,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateemailutil.validateemail(check",{"_index":2429,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateexpectedunavailability(req.body",{"_index":2616,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.validateminnotice(currentdatetime",{"_index":2513,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatepricingdto(value",{"_index":1616,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["this.validaterelevance(value",{"_index":2562,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validaterequestedtime(starttime",{"_index":1138,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["this.verifynewpasswordutil.checktypos",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.checktypos({newpassword",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.verifymatch({newpassword",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.verifynewpasswordutil.verifynew",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.verifynew({newpassword",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["time",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["time.alias.ts",{"_index":2889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["time.dto",{"_index":973,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["time.dto.ts",{"_index":1619,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["time.dto.ts:6",{"_index":1625,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["time.dto.ts:7",{"_index":1626,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["time.dto.ts:8",{"_index":1624,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["times",{"_index":1107,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["timestamp",{"_index":1191,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":747,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["tls",{"_index":2187,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["toggle",{"_index":1917,"title":{},"body":{"controllers/RentalController.html":{}}}],["toitemindexes",{"_index":2485,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toitemindexes(unavailability",{"_index":2534,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["token",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["token.dto",{"_index":2323,"title":{},"body":{"injectables/UserService.html":{}}}],["token.dto.ts",{"_index":2089,"title":{},"body":{"injectables/ResetPasswordTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:5",{"_index":2090,"title":{},"body":{"injectables/ResetPasswordTokenDto.html":{}}}],["tokens",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokyo",{"_index":1558,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["tort",{"_index":2872,"title":{},"body":{"license.html":{}}}],["total",{"_index":2527,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["track",{"_index":1664,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["tranfer",{"_index":940,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["transer",{"_index":2083,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["transfer",{"_index":599,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LoginUserDto.html":{},"classes/UserPropertyDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["transform",{"_index":575,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["transform(value",{"_index":576,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["transformation",{"_index":1700,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["transforming",{"_index":2079,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["transmission",{"_index":692,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["transport",{"_index":843,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/TransporterInterface.html":{},"dependencies.html":{}}}],["transporter",{"_index":829,"title":{},"body":{"injectables/EmailService.html":{}}}],["transporterinterface",{"_index":846,"title":{"interfaces/TransporterInterface.html":{}},"body":{"injectables/EmailService.html":{},"interfaces/TransporterInterface.html":{},"coverage.html":{}}}],["tree",{"_index":2592,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["true",{"_index":86,"title":{},"body":{"modules/AppConfigModule.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PositiveNumber.html":{},"injectables/RentalService.html":{},"classes/TypeOfValue.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["tuples",{"_index":2487,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["turrendas",{"_index":2804,"title":{},"body":{"index.html":{}}}],["twice",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["two",{"_index":2129,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["ty1",{"_index":1701,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty1.push",{"_index":1709,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty2",{"_index":1702,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty2.push",{"_index":1718,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["tyearb",{"_index":2147,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["tyearb.length",{"_index":2151,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["tyearb.sort((a",{"_index":2153,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["type",{"_index":112,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2886,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1608,"title":{},"body":{"injectables/PricingPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["typeofvalue",{"_index":2190,"title":{"classes/TypeOfValue.html":{}},"body":{"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["types/bcrypt",{"_index":2722,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":2724,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":2727,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2760,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typo",{"_index":607,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typo.dto",{"_index":2632,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["typo.dto.ts",{"_index":606,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"coverage.html":{}}}],["typo.dto.ts:5",{"_index":610,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typo.dto.ts:6",{"_index":609,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typos",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["u1",{"_index":2467,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.doy",{"_index":2501,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.isinleapyear",{"_index":2532,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.start",{"_index":2502,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.year",{"_index":2499,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unathi",{"_index":587,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["unathi2020",{"_index":839,"title":{},"body":{"injectables/EmailService.html":{}}}],["unauthorizedexception('invalid",{"_index":1469,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unavailability",{"_index":732,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unavailability')@usepipes(new",{"_index":1834,"title":{},"body":{"controllers/RentalController.html":{}}}],["unavailability's",{"_index":2468,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.dto",{"_index":660,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.dto.ts",{"_index":1743,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["unavailability.dto.ts:10",{"_index":1750,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.dto.ts:11",{"_index":1751,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:12",{"_index":1749,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:16",{"_index":2573,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:17",{"_index":2572,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:18",{"_index":2574,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:6",{"_index":1805,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:7",{"_index":1798,"title":{},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:8",{"_index":2230,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.dto.ts:9",{"_index":2229,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.middleware",{"_index":1966,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailability.middleware.ts",{"_index":2578,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["unavailability.middleware.ts:11",{"_index":2583,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:144",{"_index":2584,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:22",{"_index":2587,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:47",{"_index":2593,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:69",{"_index":2591,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.pipe",{"_index":1886,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["unavailability.pipe.ts",{"_index":1648,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["unavailability.pipe.ts:12",{"_index":2447,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:121",{"_index":1660,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:122",{"_index":2464,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:133",{"_index":2483,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:16",{"_index":2123,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:184",{"_index":2481,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:19",{"_index":1677,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:210",{"_index":2462,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:24",{"_index":2446,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:28",{"_index":2469,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:30",{"_index":2127,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:40",{"_index":2118,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:47",{"_index":2490,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:57",{"_index":1667,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:58",{"_index":2121,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:60",{"_index":2491,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:79",{"_index":2474,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:85",{"_index":2116,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability[0",{"_index":2533,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability[index",{"_index":2549,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability[index].doy",{"_index":2548,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability_model",{"_index":2948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unavailabilitydto",{"_index":655,"title":{"classes/UnavailabilityDto.html":{}},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["unavailabilitydtos",{"_index":2111,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailabilityid",{"_index":734,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityinterface",{"_index":2011,"title":{"classes/UnavailabilityInterface.html":{}},"body":{"injectables/RentalService.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["unavailabilitymodel",{"_index":2010,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityprovider",{"_index":1962,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityquerydto",{"_index":1682,"title":{"classes/UnavailabilityQueryDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["unavailabilityschema",{"_index":1960,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityschema.index({rentalid",{"_index":1971,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailabilityschema.index({unavailabilityid",{"_index":1972,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailable",{"_index":1665,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavilable",{"_index":2196,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["undefined",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailUtil.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2810,"title":{},"body":{"index.html":{}}}],["underlying",{"_index":1173,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["unique",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":2177,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["unknown",{"_index":81,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["unschedule",{"_index":2444,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unvalidated",{"_index":2463,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["up",{"_index":2197,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["update",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"index.html":{}}}],["update.email",{"_index":2348,"title":{},"body":{"injectables/UserService.html":{}}}],["update.username",{"_index":2347,"title":{},"body":{"injectables/UserService.html":{}}}],["updated",{"_index":2594,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["updateprofile",{"_index":2237,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile(@body",{"_index":2264,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile(update",{"_index":2249,"title":{},"body":{"controllers/UserController.html":{}}}],["updater",{"_index":715,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updater1",{"_index":745,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["updater2",{"_index":746,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["updates",{"_index":2253,"title":{},"body":{"controllers/UserController.html":{}}}],["updateunavailability",{"_index":1812,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["updateunavailability(@body",{"_index":1911,"title":{},"body":{"controllers/RentalController.html":{}}}],["updateunavailability(data",{"_index":1853,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["updateunavailabilitydatadto",{"_index":717,"title":{"classes/UpdateUnavailabilityDataDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{}}}],["updateunavailabilitydto",{"_index":724,"title":{"classes/UpdateUnavailabilityDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":2303,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(data",{"_index":2320,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto",{"_index":2231,"title":{"injectables/UpdateUserDto.html":{}},"body":{"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":1756,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["upload",{"_index":628,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{},"index.html":{}}}],["upload.interface",{"_index":1760,"title":{},"body":{"interfaces/ProcessedUploadDataInterface.html":{}}}],["upload.interface.ts",{"_index":1221,"title":{},"body":{"interfaces/ImageUploadInterface.html":{},"coverage.html":{}}}],["upload.util",{"_index":1304,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["upload.util.ts",{"_index":614,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/MulterUploadUtil.html":{},"coverage.html":{}}}],["upload.util.ts:10",{"_index":622,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["upload.util.ts:12",{"_index":620,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["upload.util.ts:6",{"_index":1570,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["upload.util.ts:8",{"_index":618,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["uploaded",{"_index":1357,"title":{},"body":{"injectables/ImagesService.html":{},"index.html":{}}}],["uploadprofileimage",{"_index":1235,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadprofileimage(@req",{"_index":1277,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadprofileimage(req",{"_index":1255,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages",{"_index":1236,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages(@req",{"_index":1270,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages(req",{"_index":1259,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploads",{"_index":1347,"title":{},"body":{"injectables/ImagesService.html":{}}}],["upon",{"_index":1536,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["uri",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":877,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":579,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"license.html":{}}}],["use(req",{"_index":2418,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["useclass",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":827,"title":{},"body":{"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ImagesService.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"modules/UserModule.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":184,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@redirect('http://localhost:3000/auth/login')@post('logout",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@get('find",{"_index":2247,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@get('profile",{"_index":170,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@post('change",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@post('update",{"_index":2250,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@redirect('http://localhost:3000/auth/login",{"_index":2243,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(loggedoutgaurd",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":1856,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":1894,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"modules/RentalModule.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user')@redirect('http://localhost:3000/auth/login",{"_index":2251,"title":{},"body":{"controllers/UserController.html":{}}}],["user's",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/EmailService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"index.html":{}}}],["user._doc",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["user.dto.ts",{"_index":752,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":755,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":753,"title":{},"body":{"injectables/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{}}}],["user.dto.ts:7",{"_index":754,"title":{},"body":{"injectables/CreateUserDto.html":{}}}],["user.email",{"_index":2333,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email}/profile/${split[1",{"_index":791,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user.email}/rentals/${split[1",{"_index":783,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user.password",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.remove",{"_index":2343,"title":{},"body":{"injectables/UserService.html":{}}}],["user.resetpasswordexpires",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.resetpasswordtoken",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.save",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.setexpirationdate",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.setresettoken",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":1380,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["user.util",{"_index":399,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.util.ts",{"_index":929,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"coverage.html":{}}}],["user.util.ts:6",{"_index":930,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["user.util.ts:9",{"_index":931,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["user/controller/user.controller",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["user/dto/find",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/interface/user.interface",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/schema/user.schema",{"_index":2280,"title":{},"body":{"modules/UserModule.html":{}}}],["user/service/user.service",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.module",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/util/extract",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user_email/category",{"_index":767,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user_id",{"_index":1212,"title":{},"body":{"interfaces/ImageInterface.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["user_model",{"_index":2949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":200,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":936,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{}}}],["userinterface",{"_index":457,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["usermodel",{"_index":2306,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodule",{"_index":196,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUserDto.html":{},"injectables/ExtractUserUtil.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"miscellaneous/variables.html":{}}}],["userpropertydto",{"_index":453,"title":{"classes/UserPropertyDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/UserPropertyDto.html":{},"coverage.html":{}}}],["userprovider",{"_index":2284,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":828,"title":{},"body":{"injectables/EmailService.html":{},"index.html":{}}}],["userschema",{"_index":2279,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":414,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,...userprovider",{"_index":2288,"title":{},"body":{"modules/UserModule.html":{}}}],["userservice.finduser",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["uses",{"_index":823,"title":{},"body":{"injectables/EmailService.html":{},"injectables/GivenNoticePipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["using",{"_index":963,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ValidateEmailUtil.html":{}}}],["usually",{"_index":2451,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["util",{"_index":2486,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["util.dto",{"_index":917,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["util.dto.ts",{"_index":925,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{},"coverage.html":{}}}],["util.dto.ts:5",{"_index":926,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{}}}],["util.dto.ts:6",{"_index":927,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{}}}],["util/create",{"_index":1303,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/delete",{"_index":1305,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/extract",{"_index":392,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["util/multer",{"_index":1307,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/process",{"_index":1308,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/validate",{"_index":2423,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["util/verify",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["utils/generate",{"_index":1870,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{}}}],["utils/geo",{"_index":1036,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["uuid",{"_index":1666,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["v1/rental/update",{"_index":2612,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["v1/user/create",{"_index":2433,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["v7",{"_index":1075,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["val",{"_index":2149,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["val.year",{"_index":2150,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["valid",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["valid('development",{"_index":44,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validate",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["validate(email",{"_index":1462,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate2years",{"_index":2114,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["validatecrossover",{"_index":2457,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validatecrossyearcongruence",{"_index":2458,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validated",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatedetails",{"_index":2354,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["validatedto",{"_index":2445,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["validatedunavailabilitydto",{"_index":1659,"title":{"classes/ValidatedUnavailabilityDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["validateeachunavailability",{"_index":2459,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateeditdetailspipe",{"_index":1827,"title":{"injectables/ValidateEditDetailsPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validateemail",{"_index":2415,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{}}}],["validateemail(check",{"_index":2438,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["validateemail(value",{"_index":2420,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["validateemailmiddleware",{"_index":2282,"title":{"injectables/ValidateEmailMiddleware.html":{}},"body":{"modules/UserModule.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["validateemailutil",{"_index":2414,"title":{"injectables/ValidateEmailUtil.html":{}},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["validateexpectedunavailability",{"_index":2581,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["validateminnotice",{"_index":2460,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validatepricingdto",{"_index":1592,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["validaterelevance",{"_index":2461,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateremoveunavailabilitypipe",{"_index":1835,"title":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validaterequestedtime",{"_index":1109,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["validaterequestedtime(starttime",{"_index":1117,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["validates",{"_index":1950,"title":{},"body":{"modules/RentalModule.html":{}}}],["validatescheduleunavailabilitydto",{"_index":2117,"title":{"classes/ValidateScheduleUnavailabilityDto.html":{}},"body":{"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["validatesequential",{"_index":2115,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["validateunavailability",{"_index":2472,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateunavailabilitypipe",{"_index":1887,"title":{"injectables/ValidateUnavailabilityPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validateunavailabilitypipe())@usepipes(new",{"_index":1842,"title":{},"body":{"controllers/RentalController.html":{}}}],["validateupdateunavailability",{"_index":1941,"title":{},"body":{"modules/RentalModule.html":{}}}],["validateupdateunavailabilitydto",{"_index":722,"title":{"classes/ValidateUpdateUnavailabilityDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["validateupdateunavailabilitymiddleware",{"_index":1810,"title":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["validateuser",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validateuser(email",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":78,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["validation.pipe",{"_index":1864,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["validation.pipe.ts",{"_index":1408,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:13",{"_index":1413,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation.pipe.ts:16",{"_index":1414,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation.schema",{"_index":1867,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["validation.schema.ts",{"_index":2703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":74,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validationschema",{"_index":39,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/JoiValidationPipe.html":{}}}],["value",{"_index":407,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value.address",{"_index":1140,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.coords",{"_index":1566,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.email",{"_index":2428,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["value.features",{"_index":1144,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["value.features.length",{"_index":2407,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.givennotice",{"_index":1930,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.location.city",{"_index":1043,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.location.street",{"_index":1042,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.location.zip",{"_index":1044,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.newend",{"_index":741,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.newstart",{"_index":739,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.newtitle",{"_index":743,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.password",{"_index":592,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["value.price",{"_index":1143,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.rentalduration",{"_index":2081,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["value.rentalendtime",{"_index":1929,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["value.rentalid",{"_index":737,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.rentalstarttime",{"_index":1928,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["value.specs",{"_index":2365,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.citympg",{"_index":2373,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.color",{"_index":2396,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.description",{"_index":2387,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.fuel",{"_index":2381,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.gasgrade",{"_index":2384,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.hwympg",{"_index":2377,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.model",{"_index":2390,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.numdoors",{"_index":2403,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.numofseats",{"_index":2399,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.odometer",{"_index":2366,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.style",{"_index":2393,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.transmission",{"_index":2370,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.ts",{"_index":2192,"title":{},"body":{"classes/TypeOfValue.html":{},"coverage.html":{}}}],["value.ts:5",{"_index":2194,"title":{},"body":{"classes/TypeOfValue.html":{}}}],["value.unavailability",{"_index":2157,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability.filter",{"_index":2148,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability.sort((a",{"_index":2162,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability[0].year",{"_index":2145,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailabilityid",{"_index":735,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.util",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["value.util.ts",{"_index":903,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"coverage.html":{}}}],["value.util.ts:12",{"_index":914,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["value.util.ts:9",{"_index":912,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["value.value.features",{"_index":1562,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.listed",{"_index":1568,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.photos",{"_index":1567,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.pricing",{"_index":1564,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.registration",{"_index":1561,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.scheduling",{"_index":1563,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.specs",{"_index":1560,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.y1",{"_index":2570,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["value.y1.ed",{"_index":2605,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y1.map(x",{"_index":1707,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["value.y1.sd",{"_index":2604,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2",{"_index":1706,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["value.y2.ed",{"_index":2610,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2.map(x",{"_index":1716,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["value.y2.sd",{"_index":2609,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2[0",{"_index":2569,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["values",{"_index":1596,"title":{},"body":{"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["var",{"_index":1332,"title":{},"body":{"injectables/ImagesService.html":{}}}],["variable",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":84,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"miscellaneous/variables.html":{}}}],["vehicle",{"_index":1251,"title":{},"body":{"controllers/ImagesController.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"index.html":{}}}],["vehicle.address",{"_index":1041,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["vehicles",{"_index":2780,"title":{},"body":{"index.html":{}}}],["verified",{"_index":589,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["verifies",{"_index":2476,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["verify",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["verifying",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"classes/CheckPasswordTypoDto.html":{}}}],["verifymatch",{"_index":2622,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifymatch(data",{"_index":2626,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynew",{"_index":2623,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynew(data",{"_index":2628,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynewpassworddto",{"_index":2618,"title":{"classes/VerifyNewPasswordDto.html":{}},"body":{"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["verifynewpasswordutil",{"_index":376,"title":{"injectables/VerifyNewPasswordUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"overview.html":{}}}],["verifynewpasswordutil.verifymatch",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1745,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"index.html":{}}}],["versionid",{"_index":1335,"title":{},"body":{"injectables/ImagesService.html":{}}}],["vin",{"_index":702,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["violate",{"_index":1600,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["void",{"_index":1177,"title":{},"body":{"classes/HttpErrorFilter.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/ValidateEmailUtil.html":{}}}],["warranties",{"_index":2856,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2852,"title":{},"body":{"license.html":{}}}],["web",{"_index":2779,"title":{},"body":{"index.html":{}}}],["wed",{"_index":2000,"title":{},"body":{"injectables/RentalService.html":{}}}],["week",{"_index":995,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["weekly",{"_index":710,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["weeks",{"_index":967,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"miscellaneous/enumerations.html":{}}}],["well",{"_index":761,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{}}}],["west",{"_index":1062,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["when('fuel",{"_index":2922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":2869,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":2812,"title":{},"body":{"index.html":{}}}],["within",{"_index":1976,"title":{},"body":{"injectables/RentalService.html":{}}}],["without",{"_index":2831,"title":{},"body":{"license.html":{}}}],["working",{"_index":1939,"title":{},"body":{"modules/RentalModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["world",{"_index":266,"title":{},"body":{"injectables/AppService.html":{}}}],["wrapper",{"_index":1104,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["wraps",{"_index":1506,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["written",{"_index":1225,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"index.html":{}}}],["x",{"_index":2136,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["x.doy",{"_index":1712,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.end",{"_index":1714,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.rentalid",{"_index":1710,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.start",{"_index":1713,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.title",{"_index":1715,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.year",{"_index":1711,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["y1",{"_index":1708,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["y1's",{"_index":2514,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.concat(y2",{"_index":2029,"title":{},"body":{"injectables/RentalService.html":{}}}],["y1.ed",{"_index":2600,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y1.end",{"_index":2558,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.rentalid",{"_index":2554,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.sd",{"_index":2599,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y1.start",{"_index":2556,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.title",{"_index":2560,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1[0",{"_index":1723,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].end",{"_index":1727,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].start",{"_index":1726,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].year",{"_index":1725,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[y1.length",{"_index":1724,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final",{"_index":2515,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.doy",{"_index":2519,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.doy}/${y1final.year",{"_index":2521,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.year",{"_index":2520,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1query",{"_index":1734,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{}}}],["y2",{"_index":1717,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["y2.ed",{"_index":2602,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y2.end",{"_index":2559,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.rentalid",{"_index":2555,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.sd",{"_index":2601,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y2.start",{"_index":2557,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.title",{"_index":2561,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0",{"_index":1729,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0].doy",{"_index":2523,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0].end",{"_index":1733,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[0].start",{"_index":1732,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[0].year",{"_index":1731,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[y2.length",{"_index":1730,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2query",{"_index":1736,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{}}}],["ya",{"_index":2160,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{}}}],["yaer",{"_index":2590,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["yb",{"_index":2161,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{}}}],["year",{"_index":653,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["year's",{"_index":2109,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["year(s",{"_index":2146,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["year**](https://www.timeanddate.com/date/leapyear.html",{"_index":2531,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["year.end",{"_index":1696,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.max.doy",{"_index":1691,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.min.doy",{"_index":1693,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.min.rentalid",{"_index":1687,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.start",{"_index":1695,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.year",{"_index":1688,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["yeara",{"_index":2156,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["yearb",{"_index":2125,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["yearb[0].year",{"_index":2137,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["years",{"_index":1705,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["yoz3hb.zhcs_tkvemior7qyyyaazskvd",{"_index":1337,"title":{},"body":{"injectables/ImagesService.html":{}}}],["zip",{"_index":1779,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_providers\n\n\n\ncluster_AppConfigModule_exports\n\n\n\n\nAppConfigService \n\nAppConfigService \n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nAppConfigService  -->\n\nAppConfigModule->AppConfigService \n\n\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAppConfigModule -->\n\nAppConfigService->AppConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/configuration.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: import and provide app configuration related classes\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi = require(\"@hapi/joi\");\nimport { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport configuration from \"./configuration\";\nimport { AppConfigService } from \"./configuration.service\";\n/**\n * **summary**: import and provide app configuration related classes\n */\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            load: [configuration],\n            validationSchema: Joi.object({\n                // GENERAL\n                NODE_ENV: Joi.string()\n                  .valid('development', 'production', 'test')\n                  .default('development'),\n                PORT: Joi.number().default(3000),\n                // GEO LOCATION API\n                GEO_API_KEY: Joi.string().required(),\n                GEO_URL: Joi.string().required(),\n                // DATABASE\n                REMOTE_DB: Joi.string(),\n                LOCAL_DB: Joi.string(),\n                // REDIS SERVER\n                REDIS_HOST: Joi.string().required(),\n                REDIS_PORT: Joi.string().required(),\n                CACHE_TTL: Joi.string().required(),\n                // AWS API ACCESS\n                ACCESS_KEY_ID: Joi.string().required(),\n                SECRET_ACCESS_KEY: Joi.string().required(),\n                // JWT AUTHORIZATION\n                SECRET_KEY: Joi.string().required(),\n                JWT_EXP_TIME: Joi.string().required(),\n                AWS_S3_BUCKET_RENTALS: Joi.string().required(),\n                AWS_S3_BUCKET_PROFILE: Joi.string().required(),\n            }),\n            validationOptions: {\n                allowUnkown: false, // enforce validation, don't allow unknown keys in the env variables\n                abortEarly: true, // stop validation on first error\n            }\n        })\n    ],\n    providers: [ConfigService, AppConfigService],\n    exports: [ConfigService, AppConfigService]\n})\nexport class AppConfigModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: this class provides the configservice 'getter' functionality to get variables from the environment\nthat are registered to this custom configuration module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    geo_api_key\n                                \n                                \n                                    geo_url\n                                \n                                \n                                    remote_db\n                                \n                                \n                                    local_db\n                                \n                                \n                                    secret_key\n                                \n                                \n                                    jwt_exp_time\n                                \n                                \n                                    port\n                                \n                                \n                                    redis_host\n                                \n                                \n                                    redis_port\n                                \n                                \n                                    cache_ttl\n                                \n                                \n                                    secret_access_key\n                                \n                                \n                                    access_key_id\n                                \n                                \n                                    aws_s3_bucket_rentals\n                                \n                                \n                                    aws_s3_bucket_profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        geo_api_key\n                    \n                \n\n                \n                    \n                        getgeo_api_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        geo_url\n                    \n                \n\n                \n                    \n                        getgeo_url()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:15\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        remote_db\n                    \n                \n\n                \n                    \n                        getremote_db()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        local_db\n                    \n                \n\n                \n                    \n                        getlocal_db()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secret_key\n                    \n                \n\n                \n                    \n                        getsecret_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jwt_exp_time\n                    \n                \n\n                \n                    \n                        getjwt_exp_time()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        port\n                    \n                \n\n                \n                    \n                        getport()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        redis_host\n                    \n                \n\n                \n                    \n                        getredis_host()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        redis_port\n                    \n                \n\n                \n                    \n                        getredis_port()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        cache_ttl\n                    \n                \n\n                \n                    \n                        getcache_ttl()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secret_access_key\n                    \n                \n\n                \n                    \n                        getsecret_access_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        access_key_id\n                    \n                \n\n                \n                    \n                        getaccess_key_id()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        aws_s3_bucket_rentals\n                    \n                \n\n                \n                    \n                        getaws_s3_bucket_rentals()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        aws_s3_bucket_profile\n                    \n                \n\n                \n                    \n                        getaws_s3_bucket_profile()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\n/**\n * **summary**: this class provides the configservice 'getter' functionality to get variables from the environment\n * that are registered to this custom configuration module\n */\n@Injectable()\nexport class AppConfigService {\n    constructor(private readonly configService: ConfigService) {}\n\n    get geo_api_key(): string {\n        return this.configService.get('app.geo_api_key');\n    }\n    get geo_url(): string {\n        return this.configService.get('app.geo_url');\n    }\n    get remote_db(): string {\n        return this.configService.get('app.remote_db');\n    }\n    get local_db(): string {\n        return this.configService.get('app.local_db');\n    }\n    get secret_key(): string {\n        return this.configService.get('app.secret_key');\n    }\n    get jwt_exp_time(): string {\n        return this.configService.get('app.jwt_exp_time');\n    }\n    get port(): number { \n        return this.configService.get('app.port');\n    }\n    get redis_host(): string { \n        return this.configService.get('app.redis_host');\n    }\n    get redis_port(): string { \n        return this.configService.get('app.redis_port');\n    }\n    get cache_ttl(): string { \n        return this.configService.get('app.cache_ttl');\n    }\n   get secret_access_key(): string {\n       return this.configService.get('app.secret_access_key');\n   }\n   get access_key_id(): string {\n       return this.configService.get('app.access_key_id');\n   }\n   get aws_s3_bucket_rentals(): string {\n       return this.configService.get('app.aws_s3_bucket_rentals');\n   }\n   get aws_s3_bucket_profile(): string {\n       return this.configService.get('app.aws_s3_bucket_profile');\n   }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                summary: does not provide any realy functionality for the app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Post, Request, Req, HttpCode } from '@nestjs/common';\nimport { JwtAuthGuard } from './auth/gaurds/jwt-auth.guard';\nimport { LoggedOutGaurd } from './auth/gaurds/logged-out.guard';\n/**\n * **summary**: does not provide any realy functionality for the app\n */\n@Controller()\nexport class AppController {\n\n  @UseGuards(JwtAuthGuard)\n  @UseGuards(LoggedOutGaurd)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\nAppModule -->\n\nAppModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nRentalModule\n\nRentalModule\n\nAppModule -->\n\nRentalModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: register every module in the app and their dependencies \n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UserController\n                        \n                        \n                            RentalController\n                        \n                        \n                            ImagesController\n                        \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            AppModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ImagesModule\n                        \n                        \n                            RentalModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RentalModule } from './rental/rental.module';\nimport { UserModule } from './user/user.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RouterModule } from 'nest-router';\nimport { routes } from './common/routes';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { HttpErrorFilter } from './common/filters/http-error.filter';\nimport { ErrorFilter } from './common/filters/error.filters';\nimport { LoggingInterceptor } from './common/interceptors/logging-interceptor';\nimport { ImagesModule } from './images/images.module';\n// import { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { AuthModule } from './auth/auth.module';\nimport { UserController } from './user/controller/user.controller';\nimport { RentalController } from './rental/controller/rental.controller';\nimport { ImagesController } from './images/controller/images.controller';\nimport { AppConfigModule } from './config/configuration.module';\nimport { AppConfigService } from './config/configuration.service';\nimport { AuthController } from './auth/controller/auth.controller';\nimport { RedisModule } from './redis/redis.module';\n\n/**\n * **summary**: register every module in the app and their dependencies \n */\n@Module({\n  imports: [\n    AppModule,\n    RentalModule,\n    AuthModule,\n    UserModule,\n    ImagesModule,\n    RouterModule.forRoutes(routes),\n    // parses the .env file, assign key/value pairs to process.env, stores results in configService\n    // can set alternative .env file path\n    AppConfigModule,\n    RedisModule,\n    MongooseModule.forRootAsync({\n      imports: [AppConfigModule],\n      useFactory: async (appConfigService: AppConfigService) => ({\n        uri: appConfigService.remote_db,\n      }),\n      inject: [AppConfigService],\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '../client/build'),\n    }),\n  ],\n  controllers: [AppController, UserController, RentalController, ImagesController, AuthController],\n  providers: [\n    AppService,\n    { provide: APP_FILTER, useClass: HttpErrorFilter },\n    { provide: APP_INTERCEPTOR, useClass: LoggingInterceptor },\n    { provide: APP_FILTER, useClass: ErrorFilter },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: does not provide any real functionality for the app\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n/**\n * **summary**: does not provide any real functionality for the app\n */\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n            \n                Description\n            \n            \n                summary: controller for handling the authentication and authorization of a registered user\n\nnote: some methods in this controller are protected by JwtAuthGuard and LoggedOutGuard, which verify a user is Authorized\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(req, data: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Post('change-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:52\n                \n            \n\n\n            \n                \n                    summary: change the password of a logged in and authorized user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request with the user JWT payload\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new password data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(data: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:61\n                \n            \n\n\n            \n                \n                    summary: request to reset a forgotten password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the email address to send the forgot-password email to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:26\n                \n            \n\n\n            \n                \n                    summary: authenticate and login a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Redirect('http://localhost:3000/auth/login')@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:40\n                \n            \n\n\n            \n                \n                    summary: logout a user by adding their JWT to a Redis 'dead-list' that will end the user's authorized session prior to the JWT expiration time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request containing the user's JWT payload to be added to the logged-out 'dead-list' in the Redis cache\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(data: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:70\n                \n            \n\n\n            \n                \n                    summary: resets the user's password with the data submitted from the email redirect\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data submitted by the user to the reset-password email form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, HttpCode, Post, UseGuards, Request, Body, Req, Redirect, Res } from \"@nestjs/common\";\nimport { Response } from \"express\";\nimport { ChangePasswordDto } from \"../dto/change-password.dto\";\nimport { ForgotPasswordDto } from \"../dto/forgot-password.dto\";\nimport { ResetPasswordDto } from \"../dto/reset-password.dto\";\nimport { JwtAuthGuard } from \"../gaurds/jwt-auth.guard\";\nimport { LocalAuthGuard } from \"../gaurds/local-auth.guard\";\nimport { LoggedOutGaurd } from \"../gaurds/logged-out.guard\";\nimport { AuthService } from \"../service/auth.service\";\n/**\n * **summary**: controller for handling the authentication and authorization of a registered user\n * - note: some methods in this controller are protected by JwtAuthGuard and LoggedOutGuard, which verify a user is Authorized\n */\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) { }\n\n    /**\n     * **summary**: authenticate and login a user\n     * @param email the user's email\n     * @param password the user's submitted password to be validated\n     */\n    @HttpCode(200)\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Request() req, @Res() res: Response) {\n        const cookie = await this.authService.login(req.user);\n        res.setHeader('Set-Cookie', cookie);\n        req.user._doc.password = undefined;\n        return res.send(req.user._doc);\n    }\n\n    /**\n     * **summary**: logout a user by adding their JWT to a Redis 'dead-list' that will end the user's authorized session prior to the JWT expiration time\n     * @param req the request containing the user's JWT payload to be added to the logged-out 'dead-list' in the Redis cache\n     */\n    @UseGuards(JwtAuthGuard)\n    @Redirect('http://localhost:3000/auth/login')\n    @Post('logout')\n    async logout(@Request() req) {\n        return await this.authService.logout(req);\n    }\n\n    /**\n     * **summary**: change the password of a logged in and authorized user\n     * @param req the request with the user JWT payload\n     * @param data the new password data\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Post('change-password')\n    async changePassword(@Req() req,@Body() data: ChangePasswordDto) {\n        return this.authService.changePassword(data, req)\n    }\n\n    /**\n     * **summary**: request to reset a forgotten password\n     * @param data the email address to send the forgot-password email to\n     */\n    @Post('forgot-password')\n    async forgotPassword(@Body() data: ForgotPasswordDto) {\n        return this.authService.forgotPassword(data)\n    }\n\n    /**\n     * **summary**: resets the user's password with the data submitted from the email redirect\n     * @param data the data submitted by the user to the reset-password email form\n     */\n    @Post('reset-password')\n    async resetPassword(@Body() data: ResetPasswordDto) {\n        return await this.authService.resetPassword(data)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAppConfigModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nAuthModule->EmailService \n\n\n\n\n\nExtractKeyValueUtil \n\nExtractKeyValueUtil \n\nExtractKeyValueUtil  -->\n\nAuthModule->ExtractKeyValueUtil \n\n\n\n\n\nLoggedOutGaurd \n\nLoggedOutGaurd \n\nLoggedOutGaurd  -->\n\nAuthModule->LoggedOutGaurd \n\n\n\n\n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil  -->\n\nAuthModule->VerifyNewPasswordUtil \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAuthModule -->\n\nAppConfigService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nAuthModule -->\n\nExtractKeyValueUtil->AuthModule\n\n\n\n\n\nExtractUserUtil\n\nExtractUserUtil\n\nAuthModule -->\n\nExtractUserUtil->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nAuthModule -->\n\nVerifyNewPasswordUtil->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: This module provides all of the functionality for authenticating and authorizing a user\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            ExtractUserUtil\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            LoggedOutGaurd\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserModule } from '../user/user.module';\nimport { AuthService } from './service/auth.service';\nimport { jwtConstants } from './constant';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { AuthController } from './controller/auth.controller';\nimport { RedisModule } from '../redis/redis.module';\nimport { LoggedOutGaurd } from './gaurds/logged-out.guard';\nimport { ExtractKeyValueUtil } from './util/extract-key-value.util';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { VerifyNewPasswordUtil } from './util/verify-new-password.util';\nimport { EmailService } from '../email/email.service';\nimport { AppConfigService } from '../config/configuration.service';\nimport { ExtractUserUtil } from '../user/util/extract-user.util';\n/**\n * **summary**: This module provides all of the functionality for authenticating and authorizing a user\n */\n@Module({\n  imports: [\n    AppConfigModule,\n    ConfigModule,\n    UserModule,\n    PassportModule,\n    RedisModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: {expiresIn: `${jwtConstants.jwt_exp_time}s`}, // add this expiresIn value to the `jwtConstants` object\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy, LoggedOutGaurd, ExtractKeyValueUtil, VerifyNewPasswordUtil, EmailService, AppConfigService, ExtractUserUtil],\n  exports: [AuthService, LoggedOutGaurd, ExtractKeyValueUtil, VerifyNewPasswordUtil, EmailService],\n  controllers:[AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/service/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: provide the functionality to authenticate and authorize a user\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, redisService: RedisService, extractKeyValueUtil: ExtractKeyValueUtil, verifyNewPasswordUtil: VerifyNewPasswordUtil, emailService: EmailService, appConfig: AppConfigService, extractUserUtil: ExtractUserUtil)\n                    \n                \n                        \n                            \n                                Defined in src/auth/service/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractKeyValueUtil\n                                                  \n                                                        \n                                                                        ExtractKeyValueUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyNewPasswordUtil\n                                                  \n                                                        \n                                                                        VerifyNewPasswordUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractUserUtil\n                                                  \n                                                        \n                                                                        ExtractUserUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(data: ChangePasswordDto, req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:97\n                \n            \n\n\n            \n                \n                    summary: change the logged in user's password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(data: ForgotPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:130\n                \n            \n\n\n            \n                \n                    summary: send an email to a valid user email address to request resetting their forgotten password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:59\n                \n            \n\n\n            \n                \n                    summary: return a JWT inside of a Cookie, which may only be interacted with by Http and not Javascript, to the now authenticated user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user logging into the application\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:78\n                \n            \n\n\n            \n                \n                    summary: set the user's JWT in the redis 'dead-list' to log the user out prior to the JWT expiration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(data: ResetPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:154\n                \n            \n\n\n            \n                \n                    summary: reset a user's password with the information submitted by a forgot-and-reset email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    summary:  find the user in the database and authenticate their access to the application by verifying the present user credentials in the database\n\nnote: depends on the userService.findUser() and verifyNewPasswordUtil.verifyMatch() methods\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user email\n\n                                    \n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../../user/service/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { FindUserDto } from '../../user/dto/find-user.dto';\nimport { UserPropertyDto } from '../dto/user-property.dto';\nimport * as bcrypt from 'bcrypt';\nimport { UserInterface } from '../../user/interface/user.interface';\nimport { Request } from 'express';\nimport { RedisService } from '../../redis/service/redis.service';\nimport { ExtractKeyValueUtil } from '../util/extract-key-value.util';\nimport { ChangePasswordDto } from '../dto/change-password.dto';\nimport { VerifyNewPasswordUtil } from '../util/verify-new-password.util';\nimport { ForgotPasswordDto } from '../dto/forgot-password.dto';\nimport { EmailService } from '../../email/email.service';\nimport { ResetPasswordDto } from '../dto/reset-password.dto';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { ExtractUserUtil } from '../../user/util/extract-user.util';\n\n/**\n * **summary**: provide the functionality to authenticate and authorize a user\n */\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly userService: UserService,\n        private readonly jwtService: JwtService,\n        private readonly redisService: RedisService,\n        private readonly extractKeyValueUtil: ExtractKeyValueUtil,\n        private readonly verifyNewPasswordUtil: VerifyNewPasswordUtil,\n        private readonly emailService: EmailService,\n        private readonly appConfig: AppConfigService,\n        private readonly extractUserUtil: ExtractUserUtil\n    ) { }\n\n    /**\n     * **summary**:  find the user in the database and authenticate their access to the application by verifying the present user credentials in the database\n     * - note: depends on the userService.findUser() and verifyNewPasswordUtil.verifyMatch() methods\n     * @param email the user email\n     * @param pass the user password\n     */\n    async validateUser(email: string, pass: string): Promise {\n        try {\n            const query: FindUserDto = { email: email };\n            const user: UserInterface = await this.userService.findUser(query); // find user in db by username\n            // validate the given password\n            await this.verifyNewPasswordUtil.verifyMatch({newPassword: pass, oldPassword: user.password});\n            const { password, ...result } = user;\n            return result;\n        } catch (err) {\n            throw new Error(err);\n            // catch and report the unique email error\n        }\n    }\n\n    /**\n     * summary: return a JWT inside of a Cookie, which may only be interacted with by Http and not Javascript, to the now authenticated user\n     * @param user the user logging into the application\n     */\n    async login(user: any) {\n        console.log(`here is the user property created by Passport`)\n        console.log(user._doc)\n        const packet: UserPropertyDto = user._doc;\n        // create the JWT payload\n        const payload = {\n            username: packet.username,\n            email: packet.email,\n            sub: packet._id,\n        };\n        // create JWT and return as a Cookie string\n        const token = await this.jwtService.sign(payload);\n        return `Authentication=${token}; HttpOnly; Path=/; Max-Age=${this.appConfig.jwt_exp_time}`;\n    }\n\n    /**\n     * **summary**: set the user's JWT in the redis 'dead-list' to log the user out prior to the JWT expiration\n     * @param user user property from the request object\n     */\n    async logout(req: Request) {\n        try {\n            // extract the jwt and the cachce key\n            const { key, jwt } = await this.extractKeyValueUtil.extract(req);\n            // save jwt to redis dead-list with key\n            await this.redisService.set(key, jwt);\n            // return success or error\n            return { key: key, value: jwt };\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: change the logged in user's password\n     * @param new_password\n     * @param confirm_password\n     * @param req\n     */\n    async changePassword(data: ChangePasswordDto, req: Request) {\n        try {\n            console.log('Change Password Data:')\n            console.log(data);\n            // verify user submitted same pw twice\n            await this.verifyNewPasswordUtil.checkTypos({ newPassword: data.newPassword, confirmPassword: data.confirmPassword });\n            // extract the user\n            const doc = await this.extractUserUtil.extract(req)\n            // extract the jwt and key\n            const { jwt, key } = await this.extractKeyValueUtil.extract(req);\n            // find user document\n            const user = await this.userService.findUser({email: doc.email});\n            // verify new password does not match current password\n            await this.verifyNewPasswordUtil.verifyNew({ newPassword: data.newPassword, oldPassword: user.password });\n            // update the user's password\n            user.password = await bcrypt.hash(data.newPassword, 10);\n            user.save();\n            // logout the user, they'll need to log back in\n            await this.redisService.set(key, jwt);\n            // redirect to login page \n            console.log('redirect to login page...');\n            return;\n        } catch (err) {\n            throw new Error(err);\n        };\n    }\n\n\n    /**\n     * summary: send an email to a valid user email address to request resetting their forgotten password\n     * @param email the email for resetting the password\n     * **summary**: sends user a reset password link to the provided email, if it's an account associated email\n     */\n    async forgotPassword(data: ForgotPasswordDto) {\n        try {\n            // query user and confirm they exist\n            const user = await this.userService.findUser({email: data.email});\n            if (!user) { throw new Error('There is no User registered with the provided email')}\n            // set the reset-token and it's expiration on the user document\n            user.setResetToken();\n            user.setExpirationDate();\n            user.save();\n            // create mail options\n            const mailOptions = await this.emailService.createMailOptions(user.email);\n            const result = await this.emailService.sendMail(mailOptions);\n            return user.resetPasswordToken;\n        } catch(err) { \n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: reset a user's password with the information submitted by a forgot-and-reset email\n     * @param email the valid user email\n     * @param newPassword the new password entered the 1st time\n     * @param confirmPassword the identical new password entered a second time\n     */\n    async resetPassword(data: ResetPasswordDto) {\n        // check new password for typos\n        await this.verifyNewPasswordUtil.checkTypos({newPassword: data.confirmPass, confirmPassword: data.resetPass});\n        // query user by resetToken\n        const user = await this.userService.findUserByResetPasswordToken({token: data.resetPasswordToken});\n        // check reset token has not expired\n        if (Date.now() >= user.resetPasswordExpires) { throw new Error('This passowrd reset request has expired, please make a new request.')}\n        // verify new password is actually new\n        await this.verifyNewPasswordUtil.verifyNew({newPassword: data.resetPass, oldPassword: user.password})\n        // update user password\n        user.password = await bcrypt.hash(data.resetPass, 10);\n        // reset the 'reset tokens' to null\n        user.resetPasswordToken = null;\n        user.resetPasswordExpires = null;\n        // save the user\n        await user.save();\n        // redirect to login\n        return;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptHashPipe.html":{"url":"injectables/BcryptHashPipe.html","title":"injectable - BcryptHashPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BcryptHashPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/pipes/bcrypt.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/pipes/bcrypt.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Use bcrypt to hash and salt the user's password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from \"@nestjs/common\";\nimport { CreateUserDto } from \"../dto/create-user.dto\";\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class BcryptHashPipe implements PipeTransform {\n\n    /**\n     * Use bcrypt to hash and salt the user's password\n     * @param value new user info\n     */\n    async transform(value: CreateUserDto) {\n        try {\n            console.log(`I Love Unathi!`);\n            const hash = await bcrypt.hash(value.password, 10);\n            const verified = await bcrypt.compare(value.password, hash);\n            if (verified) {\n                console.log('verified :)')\n                value.password = hash;\n                return value;\n            }\n            throw new Error('Bcrypt hashing failed, hash did not match the original')\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data transfer object for changing the password of a logged in user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/change-password.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/change-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ChangePasswordDto {\n\treadonly newPassword: string;\n\treadonly confirmPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckPasswordTypoDto.html":{"url":"classes/CheckPasswordTypoDto.html","title":"class - CheckPasswordTypoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckPasswordTypoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/check-password-typo.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data transfer object for verifying their is no typo in the requested new password data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/check-password-typo.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/check-password-typo.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CheckPasswordTypoDto {\n    newPassword: string;\n    confirmPassword: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMulterUploadUtil.html":{"url":"injectables/CreateMulterUploadUtil.html","title":"injectable - CreateMulterUploadUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMulterUploadUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/create-multer-upload.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3Provider: S3Provider)\n                    \n                \n                        \n                            \n                                Defined in src/images/util/create-multer-upload.util.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/create-multer-upload.util.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/create-multer-upload.util.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport * as multer from 'multer';\nimport * as multerS3 from 'multer-s3';\nimport { JwtPayloadDto } from \"src/auth/dto/jwt-payload\";\nimport { S3Provider } from \"../providers/s3.provider\";\n\n@Injectable()\nexport class CreateMulterUploadUtil {\n    constructor(private readonly s3Provider: S3Provider) { }\n    private s3 = this.s3Provider.getS3();\n\n    create = async (req, category) => {\n        try {\n            // create a multer upload\n            const user: JwtPayloadDto = req.user;\n            return multer({\n                storage: multerS3({\n                    s3: this.s3,\n                    bucket: `rent-a-car-photos/${user.email}/${category}`,\n                    acl: 'public-read',\n                    key: function (request, file, cb) {\n                        cb(null, `${Date.now()}-${file.originalname}`); // unique id generator for file (image tag)\n                    },\n                }),\n            }).array('upload', 9);\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQueryDto.html":{"url":"classes/CreateQueryDto.html","title":"class - CreateQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/create-query.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                start\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n\nexport class CreateQueryDto {\n    min: UnavailabilityDto;\n    max: UnavailabilityDto;\n    year: number;\n    start: number;\n    end: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRentalDto.html":{"url":"classes/CreateRentalDto.html","title":"class - CreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/create-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the final format for a new rental to be created\n\npassed to the rental.service.createRental method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                listed\n                            \n                            \n                                loc\n                            \n                            \n                                photos\n                            \n                            \n                                pricing\n                            \n                            \n                                registration\n                            \n                            \n                                rentalDescription\n                            \n                            \n                                scheduling\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pricing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRentalDto {\n  rentalDescription: string;\n  address: string;\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: string[];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: number;\n    discounts: {\n      weekly: number;\n      monthly: number;\n    };\n  };\n  loc: {\n    type: string;\n    coordinates: [number, number];\n  };\n  photos: string[];\n  listed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUpdaterDtoPipe.html":{"url":"injectables/CreateUpdaterDtoPipe.html","title":"injectable - CreateUpdaterDtoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUpdaterDtoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/create-updater-dto.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create the data the request UpdateUnavailabilityDataDto the rental.service.updateUnavailability() method needs\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUpdateData\n                            \n                            \n                                    Private\n                                distillDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidateUpdateUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:58\n                \n            \n\n\n            \n                \n                    summary: use the private methods to return a UpdateUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidateUpdateUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a validated UpdateUnavailabilityDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUpdateData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:30\n                            \n                        \n\n                \n                    \n                        summary: create a MongoDB update object from the UpdateUnavailabilityDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                UpdateUnavailabilityDto\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            distillDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:15\n                            \n                        \n\n                \n                    \n                        summary: map the ValidateUpdateUnavailabilityDto to a simpler UpdateUnavailabilityDto format\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                ValidateUpdateUnavailabilityDto\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { UpdateUnavailabilityDto } from '../dto/unavailability/update/update-unavailability.dto';\nimport { ValidateUpdateUnavailabilityDto } from '../dto/unavailability/update/validate-update-unavailability.dto';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto';\n/**\n * **summary**: create the data the request UpdateUnavailabilityDataDto the rental.service.updateUnavailability() method needs\n */\n@Injectable()\nexport class CreateUpdaterDtoPipe implements PipeTransform> {\n\n    /**\n     * **summary**: map the ValidateUpdateUnavailabilityDto to a simpler UpdateUnavailabilityDto format\n     * @param value ValidateUpdateUnavailabilityDto\n     */\n    private distillDto = async (value: ValidateUpdateUnavailabilityDto) => {\n        const data: UpdateUnavailabilityDto = {\n            unavailabilityId: value.unavailabilityId,\n            rentalId: value.rentalId,\n            newStart: value.newStart,\n            newEnd: value.newEnd,\n            newTitle: value.newTitle,\n        };\n        return data;\n    }\n\n    /**\n     * **summary**: create a MongoDB update object from the UpdateUnavailabilityDto\n     * @param value UpdateUnavailabilityDto\n     */\n    private createUpdateData = async (value: UpdateUnavailabilityDto) => {\n        const filter = {\n            rentalId: value.rentalId,\n            unavailabilityId: value.unavailabilityId,\n        };\n        if (value.newTitle === null) {\n          const updater1 = {\n              $set: {\n                start: value.newStart,\n                end: value.newEnd,\n              },\n          };\n          return {filter, updater: updater1};\n        }\n        const updater2 = {\n            $set: {\n                start: value.newStart,\n                end: value.newEnd,\n                title: value.newTitle,\n            },\n        };\n        return { filter, updater: updater2};\n    }\n\n    /**\n     * **summary**: use the private methods to return a UpdateUnavailabilityDto\n     * @param value a validated UpdateUnavailabilityDto\n     */\n    async transform(value: ValidateUpdateUnavailabilityDto): Promise {\n        // return an UpdateUnavailabilityDto\n        const raw =  await this.distillDto(value);\n        const data = await this.createUpdateData(raw);\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserDto.html":{"url":"injectables/CreateUserDto.html","title":"injectable - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class CreateUserDto {\n    username: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n        \n            Description\n        \n        \n            import and export the database provider\n\nnote: other specific model providers may be registered here as well as exports of the database module\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProvider } from './providers/database.provider';\nimport { ConfigModule } from '@nestjs/config';\n/**\n * import and export the database provider\n * - note: other specific model providers may be registered here as well as exports of the database module\n */\n@Module({\n  imports: [ConfigModule],\n  providers: [...databaseProvider],\n  exports: [...databaseProvider],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteS3ImagesUtil.html":{"url":"injectables/DeleteS3ImagesUtil.html","title":"injectable - DeleteS3ImagesUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteS3ImagesUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/delete-s3-images.util.ts\n        \n\n            \n                Description\n            \n            \n                Bucket Name: 'rent-a-car-photos`\n\nKey: user_email/category\n\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteS3Image\n                            \n                            \n                                deleteS3Images\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3Provider: S3Provider)\n                    \n                \n                        \n                            \n                                Defined in src/images/util/delete-s3-images.util.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteS3Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteS3Images\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from \"@nestjs/common\";\nimport { S3Provider } from \"../providers/s3.provider\";\n/**\n * Bucket Name: 'rent-a-car-photos`\n * Key: user_email/category\n */\n@Injectable()\nexport class DeleteS3ImagesUtil {\n    constructor(private readonly s3Provider: S3Provider) { }\n    private s3 = this.s3Provider.getS3();\n\n    deleteS3Image = async (images, user): Promise => {\n        // delete rental image from s3 bucket\n        const bucket = `rent-a-car-photos`;\n        if (images[0].location.match(/\\/rentals\\//)) {\n            console.log('Delete Single Image Location')\n            console.log(images[0].location);\n            const split = images[0].location.split(/\\/rentals\\//);\n            const key = `${user.email}/rentals/${split[1]}`;\n            console.log('Delete single Image Key')\n            console.log(key)\n            await this.s3.deleteObject({ Bucket: bucket, Key: key }, function (err, data) {\n                if (err) { Logger.log(err, err.stack) }\n                Logger.log(data);\n            });\n        }\n        // delete profile image from s3 bucket\n        console.log('Delete a single Profile Image Location')\n        console.log(images[0].location);\n        const split = images[0].location.split(/\\/profile\\//);\n        console.log('Delete Single Bucket Image Key');\n        const key = `${user.email}/profile/${split[1]}`;\n        await this.s3.deleteObject({ Bucket: bucket, Key: key }, function (err, data) {\n            if (err) { Logger.log(err, err.stack) }\n            Logger.log(data);\n        });\n        return;\n    }\n\n    deleteS3Images = async (images, user): Promise => {\n        // multiple images\n        const ids: string[] = [];\n        const objects = [];\n        const bucket = `rent-a-car-photos`;\n        // delete multiple aws rental images\n        if (images[0].location.match(/\\/rentals\\//)) {\n            console.log(`Deleting multiple Rental Images`)\n            images.map(item => {\n                console.log(item.location);\n                const split = item.location.split(/\\/rentals\\//);\n                const key = `${user.email}/rentals/${split[1]}`;\n                objects.push({ Key: key })\n                ids.push(item._id);\n            });\n            const params = {\n                Bucket: bucket,\n                Delete: {\n                    Objects: objects,\n                    Quiet: false\n                }\n            }\n            console.log(`Delete Multiple Rental Images params`);\n            console.log(params);\n            await this.s3.deleteObjects(params, function (err, data) {\n                if (err) console.log(err, err.stack); // an error occurred\n                console.log(data);           // successful response\n            })\n            return ids;\n        }\n        // delete multiple aws profile images\n        console.log('Delete Multiple AWS Profile Images')\n        images.map(item => {\n            console.log(item.location);\n            const split = item.location.split(/\\/profile\\//);\n            const key = `${user.email}/profile/${split[1]}`;\n            objects.push({ Key: key })\n            ids.push(item._id);\n        });\n        const params = {\n            Bucket: bucket,\n            Delete: {\n                Objects: objects,\n                Quiet: false\n            }\n        }\n        console.log(`Delete Multiple Profile Images params`);\n        console.log(params);\n        await this.s3.deleteObjects(params, function (err, data) {\n            if (err) console.log(err, err.stack); // an error occurred\n            console.log(data);           // successful response\n        })\n\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserDto.html":{"url":"injectables/DeleteUserDto.html","title":"injectable - DeleteUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/delete-user.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/delete-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class DeleteUserDto {\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditDetailsDto.html":{"url":"classes/EditDetailsDto.html","title":"class - EditDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/details/edit-details.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: edit the details of a rental\n\npassed to the rental.service.editDetails method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                features\n                            \n                            \n                                rentalId\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EditDetailsDto {\n  rentalId: string;\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  features: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: this email service uses the gmail nodemailer to send emails to the provided email; used to send the forgot password email to registered users\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMailOptions\n                            \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createMailOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMailOptions(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:29\n                \n            \n\n\n            \n                \n                    summary: create the mail options to be used to send the email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user's email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:44\n                \n            \n\n\n            \n                \n                    summary: use the nodemailer transporter to send the email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport( {\n        service: 'gmail', \n        auth: {\n            user: 'rentacar.team2020@gmail.com',\n            pass: 'Unathi2020!'\n        }\n    })\n                        \n                    \n                        \n                            \n                                    Defined in src/email/email.service.ts:17\n                            \n                        \n\n                \n                    \n                        summary: the gmail nodemailer transporter used to send emails\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as smtpTransport from 'nodemailer-smtp-transport';\nimport { MailOptionsInterface } from './interface/mailoptions.interface';\nimport { TransporterInterface } from './interface/transporter.interface';\n/**\n * **summary**: this email service uses the gmail nodemailer to send emails to the provided email; used to send the forgot password email to registered users\n */\n@Injectable()\nexport class EmailService {\n    constructor() {}\n\n\n    /**\n     * **summary**: the gmail nodemailer transporter used to send emails\n     */\n    private transporter = nodemailer.createTransport( {\n        service: 'gmail', \n        auth: {\n            user: 'rentacar.team2020@gmail.com',\n            pass: 'Unathi2020!'\n        }\n    })\n\n    /**\n     * **summary**: create the mail options to be used to send the email\n     * @param email user's email\n     */\n    async createMailOptions (email: string): Promise {\n        const mailOptions: MailOptionsInterface = {\n            from: 'rentacar.team2020@gmail.com',\n            to: email,\n            subject: 'Reset Forgotten Email Password for Rent-A-Car',\n            text: 'Please select the reset email link to reset your password',\n            html: 'Rent-A-Car Password Resetplease select the reset email link to reset your passowrd'\n        }\n        return mailOptions;\n    }\n\n    /**\n     * **summary**: use the nodemailer transporter to send the email\n     * @param mailOptions \n     */\n    async sendMail(mailOptions): Promise {\n        try{\n            this.transporter.sendMail(mailOptions);\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorFilter.html":{"url":"classes/ErrorFilter.html","title":"class - ErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/error.filters.ts\n        \n\n            \n                Description\n            \n            \n                summary: this Error Filter catches all 500 INTERNAL_SERVER_ERRORs. It logs the Error, reveals the Error object, and reutrns a custom err message to the client\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: Error, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/error.filters.ts:20\n                \n            \n\n\n            \n                \n                    summary: catch http errors and use the Logger to log the appropiate error and data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  HttpException,\n  ArgumentsHost,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { DateTime } from 'luxon';\n/**\n * **summary**: this Error Filter catches all 500 INTERNAL_SERVER_ERRORs. It logs the Error, reveals the Error object, and reutrns a custom err message to the client\n */\n@Catch()\nexport class ErrorFilter implements ExceptionFilter {\n  /**\n   * **summary**: catch http errors and use the Logger to log the appropiate error and data\n   * @param error \n   * @param host \n   */\n  catch(error: Error, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    const request = host.switchToHttp().getRequest();\n    const method = request.method;\n    const url = request.url;\n    const now = DateTime.local();\n\n    const status =\n      error instanceof HttpException\n        ? error.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const err = {\n      message: error.message,\n      name: error.name,\n      teehee: `have a nice day :)`,\n    };\n    const log = {\n      method: `${method}`,\n      url: `${url}`,\n      DateTime: `${now.month}/${now.day} Time: ${now.hour}:${now.minute}:${\n        now.second\n      }`,\n      stack: `${error.stack}`,\n    };\n\n    switch (status) {\n      case HttpStatus.INTERNAL_SERVER_ERROR:\n      case HttpStatus.BAD_REQUEST:\n        if (process.env.NODE_ENV === 'production') {\n          Logger.error(error);\n          return response.status(status).json(err);\n        } else {\n          Logger.error(err);\n          Logger.log(log);\n          return response.status(status).json(err);\n        }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExtractKeyValueUtil.html":{"url":"injectables/ExtractKeyValueUtil.html","title":"injectable - ExtractKeyValueUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExtractKeyValueUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/util/extract-key-value.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: grab the Authorization header Cookie and the extract JWT and the key used for caching the token\n\nnote: the key is simply the last 8 digits of the this sessions JWT\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                extract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/util/extract-key-value.util.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            extract\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extract(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/extract-key-value.util.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { ExtractKeyValueUtilDto } from \"../dto/extract-key-value-util.dto\";\n/**\n * summary: grab the Authorization header Cookie and the extract JWT and the **key** used for caching the token\n * - note: the key is simply the last 8 digits of the this sessions JWT\n */\n@Injectable()\nexport class ExtractKeyValueUtil {\n    constructor() {}\n    \n    public async extract(req: Request): Promise {\n        if (req){\n            const rawAuth: string = req.headers.cookie\n            return {\n                jwt: await rawAuth.slice(15), // JWT\n                key: await rawAuth.slice(-8), // KEY\n            }\n        }\n        throw new Error('Cannot extract JWT and KEY from missing Request Object');\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExtractKeyValueUtilDto.html":{"url":"classes/ExtractKeyValueUtilDto.html","title":"class - ExtractKeyValueUtilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExtractKeyValueUtilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/extract-key-value-util.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for the JWT and it's key (last 8 digits of the JWT used for logging out) \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwt\n                            \n                            \n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/extract-key-value-util.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/extract-key-value-util.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExtractKeyValueUtilDto {\n    jwt: string;\n    key: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExtractUserUtil.html":{"url":"injectables/ExtractUserUtil.html","title":"injectable - ExtractUserUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExtractUserUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/util/extract-user.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                extract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/user/util/extract-user.util.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            extract\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extract(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/util/extract-user.util.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { JwtPayloadDto } from \"../../auth/dto/jwt-payload\";\n\n@Injectable()\nexport class ExtractUserUtil {\n    constructor() {}\n\n    async extract(req: Request): Promise {\n        const temp: any = req.user;\n        const user: JwtPayloadDto = {\n            username: temp.username,\n            email: temp.email,\n            userId: temp.userId\n        }\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserDto.html":{"url":"injectables/FindUserDto.html","title":"injectable - FindUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FindUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/find-user.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/find-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class FindUserDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/forgot-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data tranfer object for requesting to reset a forgotten passowrd. A reset passoword email is sent to only valid email addresses\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/forgot-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ForgotPasswordDto {\n\temail: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateRentalDurationEnumUtil.html":{"url":"injectables/GenerateRentalDurationEnumUtil.html","title":"injectable - GenerateRentalDurationEnumUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GenerateRentalDurationEnumUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/utils/generate-rental-duration-enum.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: generate RentalDuration Enums for the rentalDuration propery of the RequestCoordinatesDto\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateRentalDurationEnum\n                            \n                            \n                                    Private\n                                    Async\n                                processRentalTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateRentalDurationEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRentalDurationEnum(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/generate-rental-duration-enum.util.ts:36\n                \n            \n\n\n            \n                \n                    summary: create a RentalDuration Enum from the given start and end time \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            processRentalTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processRentalTime(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/generate-rental-duration-enum.util.ts:16\n                \n            \n\n\n            \n                \n                    summary: using the [Luxon Interval.fromDateTimes(https://moment.github.io/luxon/docs/class/src/interval.js~Interval.html#static-method-fromDateTimes)] method return the \nduration of the rental in months, weeks, and days\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Interval } from 'luxon';\nimport { RentalDurations } from '../const';\nimport { ProcessRentalTimeDto } from '../dto/searchRental/process-rental-time.dto';\n/**\n * summary: generate RentalDuration Enums for the rentalDuration propery of the RequestCoordinatesDto\n */\n@Injectable()\nexport class GenerateRentalDurationEnumUtil {\n  /**\n   * **summary**: using the [**Luxon Interval.fromDateTimes(https://moment.github.io/luxon/docs/class/src/interval.js~Interval.html#static-method-fromDateTimes)**] method return the \n   * duration of the rental in months, weeks, and days\n   * @param startTime \n   * @param endTime \n   */\n  private async processRentalTime(startTime, endTime):Promise {\n    try {\n      const base = Interval.fromDateTimes(startTime, endTime);\n      const months = base.length('months');\n      const weeks = base.length('weeks');\n      const days = base.length('days');\n      Logger.log(`The Base`);\n      Logger.log(base);\n      Logger.log(`months: ${months}, weeks: ${weeks}, days: ${days}`);\n      return { months, weeks, days };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: create a RentalDuration [**Enum**](https://www.typescriptlang.org/docs/handbook/enums.html) from the given start and end time \n   * @param startTime \n   * @param endTime \n   */\n  async generateRentalDurationEnum(startTime, endTime) {\n    try {\n      const schedule: ProcessRentalTimeDto = await this.processRentalTime(startTime, endTime);\n      if (schedule.months > 3) {\n        return RentalDurations.Any;\n      }\n      if (schedule.months  1) {\n        return RentalDurations['3 Months'];\n      }\n      if (schedule.months  3) {\n        return RentalDurations['1 Month'];\n      }\n      if (schedule.weeks  1) {\n        return RentalDurations['3 Weeks'];\n      }\n      if (schedule.weeks  5) {\n        return RentalDurations['1 Week'];\n      }\n      if (schedule.days  3) {\n        return RentalDurations['5 Days'];\n      }\n      if (schedule.days  1) {\n        return RentalDurations['3 Days'];\n      }\n      if (schedule.days === 1) {\n        return RentalDurations['1 Day'];\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoUrlApiPipe.html":{"url":"injectables/GeoUrlApiPipe.html","title":"injectable - GeoUrlApiPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoUrlApiPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/geo-url-api.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create an address from the incoming RawCreateRentalDto and then use the HERE Geocoding & Searching API\nto get the coordinates of the address. The coordinates allow Rentals to be geospatially queried in a radius near a user or selected location; e.g. 8 mile radius\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createAddress\n                            \n                            \n                                    Async\n                                getCoordinates\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geoUrlApiUtil: GeoUrlApiUtil, appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/geo-url-api.pipe.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geoUrlApiUtil\n                                                  \n                                                        \n                                                                        GeoUrlApiUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(value)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:19\n                \n            \n\n\n            \n                \n                    summary: convert the location property object into a single address property string; will be passed to this.getCoordinates method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw form data inputed by user to create a new Rental listing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoordinates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoordinates(address: string, geoUrl: string, apiKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:31\n                \n            \n\n\n            \n                \n                    summary: request coordinates for the provided address\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the address to fetch coordinates for from the API\n\n                                    \n                                \n                                \n                                    geoUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url for accessing the API\n\n                                    \n                                \n                                \n                                    apiKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key for accessing the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawCreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:46\n                \n            \n\n\n            \n                \n                    summary: use the createAddress() and getCoordinates() methods to return the request data with coordinates and an address string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawCreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw request from a client to create a new Rental listing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { LocCreateRentalDto } from '../dto/createRental/loc-create-rental.dto';\nimport { RawCreateRentalDto } from '../dto/createRental/raw-create-rental-dto';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\n\n/**\n * **summary**: create an address from the incoming RawCreateRentalDto and then use the [**HERE Geocoding & Searching API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html)\n * to get the coordinates of the address. The coordinates allow Rentals to be geospatially queried in a radius near a user or selected location; e.g. 8 mile radius\n */\n@Injectable()\nexport class GeoUrlApiPipe {\n  constructor(private readonly geoUrlApiUtil: GeoUrlApiUtil, private readonly appConfig: AppConfigService) {}\n\n  /**\n   * **summary**: convert the location property object into a single address property string; will be passed to this.getCoordinates method\n   * @param value the raw form data inputed by user to create a new Rental listing\n   */\n  private async createAddress(value) {\n    // create address string from incoming vehicle.address document\n    const address: string = `${value.location.street} ${value.location.city} ${value.location.zip}`;\n    return address;\n  }\n\n  /**\n   * **summary**: request coordinates for the provided address\n   * @param address the address to fetch coordinates for from the API\n   * @param geoUrl the url for accessing the API\n   * @param apiKey the key for accessing the API\n   */\n  async getCoordinates(address: string, geoUrl: string, apiKey: string,\n  ) {\n    Logger.log(`geoUrl: ${process.env.GEO_URL}`);\n    const coords = await this.geoUrlApiUtil.getCoordinates(\n      address,\n      geoUrl,\n     apiKey\n    );\n    return coords;\n  }\n\n  /**\n   * **summary**: use the createAddress() and getCoordinates() methods to return the request data with coordinates and an address string\n   * @param value the raw request from a client to create a new Rental listing\n   */\n  async transform(value: RawCreateRentalDto):Promise {\n    const apiKey = process.env.GEO_API_KEY;\n    const geoUrl = process.env.GEO_URL;\n    try {\n      // create the address\n      const address = await this.createAddress(value);\n      // request the coordinates from the API\n      const coords = await this.getCoordinates(address, geoUrl, apiKey);\n      return { value, coords, address };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoUrlApiUtil.html":{"url":"injectables/GeoUrlApiUtil.html","title":"injectable - GeoUrlApiUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoUrlApiUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/utils/geo-url-api.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: use Geocoding & Search API to get coordinates for an address\n\n[Respose Object] = response.data.items[0]\n.title: the complete address as a string\n.address the complete address as an object\n.position: {lat: number, lng: number}\n.mapView: {west: -number, south: number, east: -number, north: number}\n\n\n\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoordinates\n                            \n                            \n                                    Private\n                                    Async\n                                makeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoordinates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoordinates(address, geoUrl, apiKey)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/geo-url-api.util.ts:43\n                \n            \n\n\n            \n                \n                    summary: returns an address as a single string, and the corresponding coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        replace the spaces in the address with + symbols for the api request\n\n                                    \n                                \n                                \n                                    geoUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url for the api\n\n                                    \n                                \n                                \n                                    apiKey\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key for the api\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            makeRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRequest(location, geoUrl, apiKey)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/geo-url-api.util.ts:25\n                \n            \n\n\n            \n                \n                    Send Geocoding & Search API request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    location\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the address string\n\n                                    \n                                \n                                \n                                    geoUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the base HERE geocoding and search v7 api url\n\n                                    \n                                \n                                \n                                    apiKey\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the api key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as axios from 'axios';\nimport { RawCoordinatesDto } from '../dto/createRental/raw-coordinates.dto';\n\n/**\n * **summary**: use [**Geocoding & Search API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html) to get coordinates for an address\n * - [Respose Object] = response.data.items[0]\n *  - .title: the complete address as a string\n *  - .address the complete address as an object\n *  - .position: {lat: number, lng: number}\n *  - .mapView: {west: -number, south: number, east: -number, north: number}\n * @param {string} address the address to request coordinates for\n * @param {string} geoUrl base url of the Geocoding and Search geocoding request\n * @param {string} apiKey Geocoding and Search v7 API Key\n * \n */\n@Injectable()\nexport class GeoUrlApiUtil {\n  /**\n   * Send Geocoding & Search API request\n   * @param location the address string\n   * @param geoUrl the base HERE geocoding and search v7 api url\n   * @param apiKey the api key\n   */\n  private async makeRequest(location, geoUrl, apiKey) {\n    try {\n      console.log(`Geocoding & Search API Request: ${geoUrl}?q=${location}&apiKey=${apiKey}`)\n      const request: any = await axios.default.get(\n        `${geoUrl}?q=${location}&apiKey=${apiKey}`,\n      );\n      return request;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: returns an address as a single string, and the corresponding coordinates\n   * @param address replace the spaces in the address with + symbols for the api request\n   * @param geoUrl the url for the api\n   * @param apiKey the key for the api\n   */\n  async getCoordinates(address, geoUrl, apiKey):Promise {\n    try {\n      const location: string = address.replace(/\\s+/g, '+');\n      // make the API request\n      console.log('location before the request')\n      console.log(location);\n      const response: any = await this.makeRequest(\n        location,\n        geoUrl,\n        apiKey\n      );\n      // grab the coordinates\n      const rawCoordinates: RawCoordinatesDto =\n        response.data.items[0].position;\n      // map the coords object to return\n      const coords: [number, number] = [\n        rawCoordinates.lat,\n        rawCoordinates.lng,\n      ];\n      return coords;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GivenNoticePipe.html":{"url":"injectables/GivenNoticePipe.html","title":"injectable - GivenNoticePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GivenNoticePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/given-notice.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: creates a Luxon Interval from the startTime and currentTime\nand then uses Luxon methods to validate the Given Notice is at least 1 hour in duration; this is the minimum allowed for any user\n\nLuxon is \"a powerful, modern, and friendly wrapper for Javacript dates and times\"\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createGivenNotice\n                            \n                            \n                                    Async\n                                transform\n                            \n                            \n                                    Private\n                                    Async\n                                validateRequestedTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createGivenNotice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGivenNotice(startTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:20\n                \n            \n\n\n            \n                \n                    summary: create the givenNotice property value, it must be at least one hour\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request start time of the rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawSearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:51\n                \n            \n\n\n            \n                \n                    summary: use the validateRequestedTime and createGivenNotice methods to return a GivenNoticeSearchRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawSearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request data to search for rentals\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateRequestedTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequestedTime(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:36\n                \n            \n\n\n            \n                \n                    summary: validate that the rental start time is not before the requested rental end time. The frontend of course has validation for this on the form,\nthis is just another level of validation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested time for the Rental to begin\n\n                                    \n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested time for the Rental to end\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { GivenNoticeSearchRentalDto } from '../dto/searchRental/given-notice-search-rental-dto';\nimport { RawSearchRentalDto } from '../dto/searchRental/raw-search-rental.dto';\nimport { DateTime } from 'luxon';\n/**\n * **summary**: creates a [**Luxon**](https://moment.github.io/luxon/) [**Interval**](https://moment.github.io/luxon/docs/manual/tour.html#intervals) from the startTime and currentTime\n * and then uses Luxon methods to validate the Given Notice is at least 1 hour in duration; this is the minimum allowed for any user\n * - Luxon is \"a powerful, modern, and friendly wrapper for Javacript dates and times\"\n */\n@Injectable()\nexport class GivenNoticePipe implements PipeTransform {\n\n  /**\n   * **summary**: create the **givenNotice** property value, it must be at least one hour\n   * @param startTime the request start time of the rental\n   */\n  private async createGivenNotice(startTime) {\n    const givenNotice: number = startTime.diffNow().toObject().milliseconds;\n    if (givenNotice >= 3600000) {\n      return givenNotice;\n    }\n    throw new Error(\n      'Sorry, you cannot request a rental less than an hour before it begins',\n    );\n  }\n\n  /**\n   * **summary**: validate that the rental start time is not before the requested rental end time. The frontend of course has validation for this on the form,\n   * this is just another level of validation.\n   * @param startTime the requested time for the Rental to begin\n   * @param endTime the requested time for the Rental to end\n   */\n  private async validateRequestedTime(startTime, endTime) {\n    if (startTime > endTime) {\n      throw new Error(\n        'The rental start time cannot be after the rental end time',\n      );\n    }\n    if (endTime.diff(startTime).toObject().milliseconds  {\n    try {\n      // make start and end time into DateTimes\n      const startTime: DateTime = DateTime.fromISO(\n        new Date(value.rentalStartTime).toISOString(),\n      );\n      const endTime: DateTime = DateTime.fromISO(\n        new Date(value.rentalEndTime).toISOString(),\n      );\n      await this.validateRequestedTime(startTime, endTime);\n      const givenNotice = await this.createGivenNotice(startTime);\n      const dto: GivenNoticeSearchRentalDto = {\n        address: value.address,\n        rentalStartTime: startTime,\n        rentalEndTime: endTime,\n        price: value.price ? value.price : null,\n        features: value.features ? value.features : null,\n        givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GivenNoticeSearchRentalDto.html":{"url":"classes/GivenNoticeSearchRentalDto.html","title":"class - GivenNoticeSearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GivenNoticeSearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/given-notice-search-rental-dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the GivenNoticePipe after processing a RawSearchRentalDto\n\nThe GivenNoticePipe added the 'givenNotice' property\npassed to the RentalDurationPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                price\n                            \n                            \n                                rentalEndTime\n                            \n                            \n                                rentalStartTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalEndTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalStartTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DateTime } from 'luxon';\n/**\n * **summary**: returned by the GivenNoticePipe after processing a RawSearchRentalDto\n * - The GivenNoticePipe added the 'givenNotice' property\n * - passed to the RentalDurationPipe\n */\nexport class GivenNoticeSearchRentalDto {\n  address: string;\n  rentalStartTime: DateTime;\n  rentalEndTime: DateTime;\n  price: number;\n  features: string[];\n  givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorFilter.html":{"url":"classes/HttpErrorFilter.html","title":"class - HttpErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-error.filter.ts\n        \n\n            \n                Description\n            \n            \n                Exception filters give full control over the exceptions layer\nAdd Logging\nControl exact flow of control and the content of the response sent\nThis filter is responsible for catching exceptions which are an instance of the HttpException\nGrants us access to the underlying platform 'Request' & 'Response' objects\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/http-error.filter.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  ArgumentsHost,\n  Logger,\n} from '@nestjs/common';\nimport { DateTime } from 'luxon';\n\n/**\n * Exception filters give full control over the exceptions layer\n * Add Logging\n * Control exact flow of control and the content of the response sent\n * This filter is responsible for catching exceptions which are an instance of the HttpException\n * Grants us access to the underlying platform 'Request' & 'Response' objects\n */\n@Catch(HttpException)\nexport class HttpErrorFilter implements ExceptionFilter {\n  /**\n   * @param {} exception\n   * @param {ArgumentsHost} host\n   */\n  catch(exception: HttpException, host: ArgumentsHost) {\n    // note: access the appropriate underlying arguments for any execution context with ArgumentHost\n    const context = host.switchToHttp();\n    const request = context.getRequest();\n    const response = context.getResponse();\n    const status = exception.getStatus();\n\n    /**\n     * error responses\n     */\n    const errorResponse = {\n      http_code: status,\n      timestamp: DateTime.local(),\n      path: request.url,\n      method: request.method,\n      message: exception.message.error || exception.message || null,\n    };\n\n    /**\n     * error logging\n     */\n    Logger.error(\n      `${request.method} ${request.url}`,\n      JSON.stringify(errorResponse),\n      'ExceptionFilter',\n    );\n\n    /**\n     * take direct control of the response with the json method\n     */\n    response.status(status).json(errorResponse);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageDto.html":{"url":"classes/ImageDto.html","title":"class - ImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageDto {\n    _id: string; // id of an Image\n    location: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageInterface.html":{"url":"interfaces/ImageInterface.html","title":"interface - ImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/image.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucket\n                                \n                                \n                                        category\n                                \n                                \n                                        etag\n                                \n                                \n                                        key\n                                \n                                \n                                        location\n                                \n                                \n                                        rental_id\n                                \n                                \n                                        size\n                                \n                                \n                                        user_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rental_id\n                                    \n                                \n                                \n                                    \n                                        rental_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageInterface{\n    user_id: string;\n    rental_id: string;\n    bucket: string;\n    key: string;\n    etag: string;\n    category: string;\n    size: string;\n    location: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageQueryResultsDto.html":{"url":"classes/ImageQueryResultsDto.html","title":"class - ImageQueryResultsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageQueryResultsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image-query-results.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                images\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-query-results.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-query-results.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageQueryResultsDto {\n    count: number;\n    images: any;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageUploadInterface.html":{"url":"interfaces/ImageUploadInterface.html","title":"interface - ImageUploadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageUploadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/image-upload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Body\n                                \n                                \n                                        Bucket\n                                \n                                \n                                        Key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Body\n                                    \n                                \n                                \n                                    \n                                        Body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Bucket\n                                    \n                                \n                                \n                                    \n                                        Bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageUploadInterface {\n    Bucket: string; // bucket name and folder\n    Key: string; // file name\n    Body: string; // buffer\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagesController.html":{"url":"controllers/ImagesController.html","title":"controller - ImagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/controller/images.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                images\n            \n\n            \n                Description\n            \n            \n                Image Controller\nwritten by: Jonathan Sells\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllProfileImages\n                            \n                            \n                                    Async\n                                deleteAllRentalImages\n                            \n                            \n                                    Async\n                                deleteRentalImages\n                            \n                            \n                                    Async\n                                findProfileImage\n                            \n                            \n                                    Async\n                                findProfileImages\n                            \n                            \n                                    Async\n                                findRentalImage\n                            \n                            \n                                    Async\n                                findRentalImages\n                            \n                            \n                                    Async\n                                uploadProfileImage\n                            \n                            \n                                    Async\n                                uploadRentalImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllProfileImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllProfileImages(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-all-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:117\n                \n            \n\n\n            \n                \n                    Delete All Profile Images\nSummary: Delete all of the user's profile images\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllRentalImages(params, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-all-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:108\n                \n            \n\n\n            \n                \n                    Delete all Rental Images\nSummary: delete all images for a selected rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRentalImages(images: ImageDto[], req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:99\n                \n            \n\n\n            \n                \n                    Delete Rental Images\nSummary: Delete a single or multiple images of a rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    images\n                                    \n                                                ImageDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfileImage(req, image: ImageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-profile-image')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:89\n                \n            \n\n\n            \n                \n                    Find Profile Image\nSummary: Find a user profile image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request object\n\n                                    \n                                \n                                \n                                    image\n                                    \n                                                ImageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfileImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfileImages(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:79\n                \n            \n\n\n            \n                \n                    Find Profile Images\nSummary: Find a user profile image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRentalImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRentalImage(params: ImageDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-rental-image')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:69\n                \n            \n\n\n            \n                \n                    Find Rental Image\nSummary: Find a vehicle image by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ImageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRentalImages(params, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:59\n                \n            \n\n\n            \n                \n                    Finad Rental Images\nSummary: Find all of a rentals images\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object, which has a user property\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadProfileImage(req, res, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:43\n                \n            \n\n\n            \n                \n                    Upload Profile Images\nSummary: Upload a single or multiple profile photos to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadRentalImages(req, res, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:27\n                \n            \n\n\n            \n                \n                    Upload a single or multiple rental photos to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards, Body, Get, Query, Res } from '@nestjs/common';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { JwtAuthGuard } from '../../auth/gaurds/jwt-auth.guard';\nimport { ImagesService } from '../service/images.service';\nimport { response } from 'express';\nimport { profile, rentals } from '../../common/Const';\nimport { ImageDto } from '../dto/image.dto';\n/**\n * Image Controller\n * written by: Jonathan Sells\n */\n@UseGuards(JwtAuthGuard)\n@Controller('images')\nexport class ImagesController {\n    constructor(\n        private readonly imagesService: ImagesService,\n        private readonly appConfig: AppConfigService,\n    ) { }\n\n    /**\n     * Upload a single or multiple rental photos to be saved\n     * @param files fieldName\n     * @param maxCount maxCount\n     * @param options option\n     */\n    @Post('upload-rental-images')\n    async uploadRentalImages(@Req() req, @Res() res, @Query() params) {\n        try {\n            await this.imagesService.fileuploadAndSave(req, res, rentals, params.rental_id, this.imagesService.saveImages)\n        } catch (err) {\n            return response\n                .status(500)\n                .json(`Failed to upload image file: ${err.message}`);\n        }\n    }\n\n    /**\n     * Upload Profile Images\n     * Summary: Upload a single or multiple profile photos to be saved\n     * @param files fieldName\n     */\n    @Post('upload-profile-images')\n    async uploadProfileImage(@Req() req, @Res() res, @Query() params) {\n        try {\n            await this.imagesService.fileuploadAndSave(req, res, profile, params.rental_id, this.imagesService.saveImages)\n        } catch (err) {\n            return response\n                .status(500)\n                .json(`Failed to upload image file: ${err.message}`);\n        }\n    }\n\n    /**\n     * Finad Rental Images\n     * Summary: Find all of a rentals images\n     * @param req the request object, which has a user property\n     */\n    @Get('find-rental-images')\n    async findRentalImages(@Query() params, @Req() req) {\n        return await this.imagesService.findRentalImages(null, params.rental_id, req.user);\n    }\n\n    /**\n     * Find Rental Image\n     * Summary: Find a vehicle image by id\n     * @param image the id of the image to find\n     */\n    @Get('find-rental-image')\n    async findRentalImage(@Query() params: ImageDto, @Req() req) {\n        return await this.imagesService.findRentalImages(params._id, null, req.user);\n    }\n\n    /**\n     * Find Profile Images\n     * Summary: Find a user profile image\n     * @param req request object\n     */\n    @Get('find-profile-images')\n    async findProfileImages(@Req() req) {\n        return await this.imagesService.findProfileImages(req.user);\n    }\n\n    /**\n     * Find Profile Image\n     * Summary: Find a user profile image\n     * @param req request object\n     */\n    @Get('find-profile-image')\n    async findProfileImage(@Req() req, @Body() image: ImageDto) {\n        return await this.imagesService.findProfileImages(req.user, image._id);\n    }\n\n    /**\n     * Delete Rental Images\n     * Summary: Delete a single or multiple images of a rental\n     * @param category both or a single one\n     */\n    @Post('delete-images')\n    async deleteRentalImages(@Body() images: ImageDto[], @Req() req) {\n        return await this.imagesService.deleteImages(images, req.user);\n    }\n\n    /**\n     * Delete all Rental Images\n     * Summary: delete all images for a selected rental\n     */\n    @Post('delete-all-rental-images')\n    async deleteAllRentalImages(@Query() params, @Req() req) {\n        return await this.imagesService.deleteAllImages(req.user, params.rental_id);\n    }\n\n   /**\n    * Delete All Profile Images\n    * Summary: Delete all of the user's profile images\n    */\n   @Post('delete-all-profile-images')\n   async deleteAllProfileImages(@Req() req) {\n        return await this.imagesService.deleteAllImages(req.user, null);\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagesModule.html":{"url":"modules/ImagesModule.html","title":"module - ImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_ImagesModule_imports\n\n\n\ncluster_ImagesModule_exports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nAppConfigModule->ImagesModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nImagesModule -->\n\nDatabaseModule->ImagesModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nImagesModule -->\n\nAppConfigService->ImagesModule\n\n\n\n\n\nCreateMulterUploadUtil\n\nCreateMulterUploadUtil\n\nImagesModule -->\n\nCreateMulterUploadUtil->ImagesModule\n\n\n\n\n\nDeleteS3ImagesUtil\n\nDeleteS3ImagesUtil\n\nImagesModule -->\n\nDeleteS3ImagesUtil->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nMulterUploadUtil\n\nMulterUploadUtil\n\nImagesModule -->\n\nMulterUploadUtil->ImagesModule\n\n\n\n\n\nProcessSaveDataUtil\n\nProcessSaveDataUtil\n\nImagesModule -->\n\nProcessSaveDataUtil->ImagesModule\n\n\n\n\n\nS3Provider\n\nS3Provider\n\nImagesModule -->\n\nS3Provider->ImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/images/images.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            CreateMulterUploadUtil\n                        \n                        \n                            DeleteS3ImagesUtil\n                        \n                        \n                            ImagesService\n                        \n                        \n                            MulterUploadUtil\n                        \n                        \n                            ProcessSaveDataUtil\n                        \n                        \n                            S3Provider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { AppConfigService } from '../config/configuration.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { ImagesController } from './controller/images.controller';\nimport { S3Provider } from './providers/s3.provider';\nimport { ImageSchema } from './schema/images.schema';\nimport { ImagesService } from './service/images.service';\nimport { CreateMulterUploadUtil } from './util/create-multer-upload.util';\nimport { DeleteS3ImagesUtil } from './util/delete-s3-images.util';\nimport { MulterUploadUtil } from './util/multer-upload.util';\nimport { ProcessSaveDataUtil } from './util/process-save-data.util';\n\n\n@Module({\n    imports: [\n        DatabaseModule,\n        MongooseModule.forFeature([{ name: 'Images', schema: ImageSchema }]),\n        AppConfigModule,\n    ],\n    controllers: [ImagesController],\n    providers: [\n        ImagesService,\n        AppConfigService,\n        ProcessSaveDataUtil,\n        S3Provider,\n        CreateMulterUploadUtil,\n        MulterUploadUtil,\n        DeleteS3ImagesUtil,\n    ],\n    exports: [ImagesService]\n\n})\nexport class ImagesModule {\n    constructor() {\n        ImageSchema.index({ rental_id: 1 });\n        ImageSchema.index({ user_id: 1 });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/service/images.service.ts\n        \n\n            \n                Description\n            \n            \n                Images Service\nwritten by: Jonathan Sells\nnote: for security, user_id is required for all queries to verify the queried images belong to the requesting user.\nthis makes queries slightly less selective and less efficient, but more secure.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAllImages\n                            \n                            \n                                deleteImages\n                            \n                            \n                                fileuploadAndSave\n                            \n                            \n                                findProfileImages\n                            \n                            \n                                findRentalImages\n                            \n                            \n                                s3\n                            \n                            \n                                saveImages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imagesModel: Model, appConfig: AppConfigService, processSaveDataUtil: ProcessSaveDataUtil, s3Provider: S3Provider, createMulterUploadUtil: CreateMulterUploadUtil, multerUploadUtil: MulterUploadUtil, deleteS3ImagesUtil: DeleteS3ImagesUtil)\n                    \n                \n                        \n                            \n                                Defined in src/images/service/images.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imagesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processSaveDataUtil\n                                                  \n                                                        \n                                                                        ProcessSaveDataUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createMulterUploadUtil\n                                                  \n                                                        \n                                                                        CreateMulterUploadUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        multerUploadUtil\n                                                  \n                                                        \n                                                                        MulterUploadUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteS3ImagesUtil\n                                                  \n                                                        \n                                                                        DeleteS3ImagesUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAllImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:155\n                            \n                        \n\n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                var params = {\nBucket: \"examplebucket\",\nDelete: {\nObjects: [\n{\nKey: \"HappyFace.jpg\",\nVersionId: \"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"\n},\n{\nKey: \"HappyFace.jpg\",\nVersionId: \"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"\n}\n],\nQuiet: false\n}\n};\ns3.deleteObjects(params, function(err, data) {\nif (err) console.log(err, err.stack); // an error occurred\nelse     console.log(data);           // successful response\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:110\n                            \n                        \n\n                \n                    \n                        Delete Images\nSumamry: Delete a single or multiple of user's selected images\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        category\n                                                        \n                                                                the images category; rentals or profile\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                used to verify the photos belong to the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileuploadAndSave\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:175\n                            \n                        \n\n                \n                    \n                        Upload Images to S3 Bucket\nsummary: send the file(s) to the bucket and attach a timestamp to each filename\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        req\n                                                        \n                                                                the request\n\n                                                        \n                                                \n                                                \n                                                        res\n                                                        \n                                                                the response\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                rentals or profile\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the rental_id for rental image uploads\n\n                                                        \n                                                \n                                                \n                                                        saveImages\n                                                        \n                                                                the images.service.saveImages method\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findProfileImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:89\n                            \n                        \n\n                \n                    \n                        Find Profile Images\nSummary: query multiple profile images by user_id and profile category, or find a specific profile photo by id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                the user property of the request object\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findRentalImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:66\n                            \n                        \n\n                \n                    \n                        Find Rental Images\nSummary: query multiple rental images by userId and rental_id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                the user property of the request object\n\n                                                        \n                                                \n                                                \n                                                        img_id\n                                                        \n                                                                id of an image; if provided only this image will be found\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the id of the rental\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                used to verify the image belongs to the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:44\n                            \n                        \n\n                \n                    \n                        Save uploaded images\nSummary: Saves uploaded images to the database. This method is passed as an argument to the fileUploadAndSave method \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        files\n                                                        \n                                                                array of files\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                rentals / profile\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                user id to associate with the image\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                id of the rental (if it's a rental image): Check for null\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger, Req, Res } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ImageInterface } from '../interface/image.interface';\nimport { Model } from 'mongoose';\nimport { JwtPayloadDto } from '../../auth/dto/jwt-payload';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { profile } from '../../common/Const';\nimport { ImageDto } from '../dto/image.dto';\nimport { ProcessSaveDataUtil } from '../util/process-save-data.util';\nimport { ProcessedSaveDataInterface } from '../interface/processed-save-data.interface';\nimport { S3Provider } from '../providers/s3.provider';\nimport { CreateMulterUploadUtil } from '../util/create-multer-upload.util';\nimport { MulterUploadUtil } from '../util/multer-upload.util';\nimport { ImageQueryResultsDto } from '../dto/image-query-results.dto';\nimport { DeleteS3ImagesUtil } from '../util/delete-s3-images.util';\n/**\n * Images Service\n * written by: Jonathan Sells\n * note: for security, user_id is required for all queries to verify the queried images belong to the requesting user.\n * this makes queries slightly less selective and less efficient, but more secure.\n */\n@Injectable()\nexport class ImagesService {\n\n  constructor(\n    @InjectModel('Images') private readonly imagesModel: Model,\n    private readonly appConfig: AppConfigService,\n    private readonly processSaveDataUtil: ProcessSaveDataUtil,\n    private readonly s3Provider: S3Provider,\n    private readonly createMulterUploadUtil: CreateMulterUploadUtil,\n    private readonly multerUploadUtil: MulterUploadUtil,\n    private readonly deleteS3ImagesUtil: DeleteS3ImagesUtil,\n  ) { }\n  s3 = this.s3Provider.getS3();\n\n  /**\n   * Save uploaded images\n   * Summary: Saves uploaded images to the database. This method is passed as an argument to the fileUploadAndSave method \n   * @param files array of files\n   * @param category rentals / profile\n   * @param {string} user_id user id to associate with the image\n   * @param {string | null} rental_id id of the rental (if it's a rental image): Check for null\n   */\n  saveImages = async (files, category, user_id, rental_id, model) => {\n    try {\n      const { packet, image }: ProcessedSaveDataInterface = await this.processSaveDataUtil.process(files, user_id, rental_id, category);\n      let flag;\n      packet === null ? flag = 'single' : flag = 'multiple';\n      if (flag === 'multiple') {\n        return await model.insertMany(packet);\n      }\n      return await model.save(image)\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * Find Rental Images\n   * Summary: query multiple rental images by userId and rental_id\n   * @param user the user property of the request object\n   * @param img_id id of an image; if provided only this image will be found\n   * @param rental_id the id of the rental\n   * @param user_id used to verify the image belongs to the requesting user\n   */\n  findRentalImages = async (img_id: string | null, rental_id: string | null, user_id: string): Promise => {\n    // img_id given from findVehicleImage endpoint\n    try {\n      let flag;\n      img_id !== null ? flag = 'single' : flag = 'multiple';\n      // find multiple images\n      if (flag === 'multiple') {\n        const images = await this.imagesModel.find({ rental_id: rental_id, user_id: user_id });\n        return { count: images.length, images: images }\n      }\n      // find a specific image\n      const image = await this.imagesModel.findById(img_id);\n      return { count: 1, images: image }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * Find Profile Images\n   * Summary: query multiple profile images by user_id and profile category, or find a specific profile photo by id\n   * @param user the user property of the request object\n   */\n  findProfileImages = async (user: JwtPayloadDto, img_id?: string) => {\n    try {\n      let flag;\n      img_id ? flag = 'single' : flag = 'multiple';\n      if (flag === 'multiple') {\n        const images = await this.imagesModel.find({ user_id: user.userId })\n        return { count: images.length, images: images };\n      };\n      const image = await this.imagesModel.findById(img_id);\n      return { count: 1, images: image }\n    } catch (err) {\n      throw new Error(err)\n    }\n  }\n\n  /**\n   * Delete Images\n   * Sumamry: Delete a single or multiple of user's selected images\n   * @param category the images category; rentals or profile\n   * @param user_id used to verify the photos belong to the requesting user\n   */\n  deleteImages = async (images: ImageDto[], user: JwtPayloadDto) => {\n    try {\n      if (images && images.length > 0) {\n        if (images.length === 1) {\n          await this.deleteS3ImagesUtil.deleteS3Image(images, user);\n          return await this.imagesModel.deleteOne({ _id: images[0]._id, user_id: user.userId });\n        }\n        const ids = await this.deleteS3ImagesUtil.deleteS3Images(images, user);\n        return await this.imagesModel.deleteMany({ _id: { $in: ids }, user_id: user.userId })\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   *\n   * @param user var params = {\n  Bucket: \"examplebucket\",\n  Delete: {\n   Objects: [\n      {\n     Key: \"HappyFace.jpg\",\n     VersionId: \"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"\n    },\n      {\n     Key: \"HappyFace.jpg\",\n     VersionId: \"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"\n    }\n   ],\n   Quiet: false\n  }\n  };\n  s3.deleteObjects(params, function(err, data) {\n   if (err) console.log(err, err.stack); // an error occurred\n   else     console.log(data);           // successful response\n   * @param rental_id\n   */\n\n  /**\n   * Delete All Images\n   * Summary: Delete all images of the selected rental or profile\n   * @param user_id used to locate the user's photos as well as verify they belong to them\n   * @param rental_id the id of the rental\n   */\n  deleteAllImages = async (user: JwtPayloadDto, rental_id: string) => {\n    // delete all images of the selected rental\n    if (user && rental_id !== null) {\n      return await this.imagesModel.deleteMany({ rental_id: rental_id, user_id: user.userId });\n    }\n    // delete all of the user's profile images\n    if (user && rental_id === null) {\n      return await this.imagesModel.deleteMany({ user_id: user.userId, category: profile });\n    }\n  }\n\n  /**\n   * Upload Images to S3 Bucket\n   * **summary**: send the file(s) to the bucket and attach a timestamp to each filename\n   * @param req the request\n   * @param res the response\n   * @param category rentals or profile\n   * @param rental_id the rental_id for rental image uploads\n   * @param saveImages the images.service.saveImages method\n   */\n  fileuploadAndSave = async (req, res, category, rental_id, saveimages) => {\n    try {\n      // create a multer upload\n      const user: JwtPayloadDto = req.user;\n      const multerUpload = await this.createMulterUploadUtil.create(req, category)\n      // Upload the image(s)\n      const model = this.imagesModel;\n      await this.multerUploadUtil.upload(req, res, multerUpload, saveimages, category, user, rental_id, model);\n    } catch (err) {\n      return res.status(500).json(`Failed to upload image file: ${err}`)\n    }\n  }\n\n  // Get Presigned Url to download file\n  /**\n   * @param originalname file name\n   * @param bucket location of the photo\n  private getSingedUrl = async (bucket, originalname) => {\n    const s3 = this.s3;\n    const params = {\n      Bucket: bucket,\n      Key: originalname,\n      Expires: 60 * 60, //1 hour\n    };\n    try {\n      const url = await new Promise((resolve, reject) => {\n        s3.getSignedUrl('getObject', params, (err, url) => {\n          err ? reject(err) : resolve(url);\n        });\n      });\n      Logger.log(url)\n      return url;\n    } catch (err) {\n      if (err) {\n        throw new Error(err);\n      }\n    }\n  }\n  */\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/joi-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: this class accepts a joi validationSchema when instantiated. It will validate an incoming value against the provided validation schema\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: Schema)\n                    \n                \n                        \n                            \n                                Defined in src/common/pipes/joi-validation.pipe.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        Schema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/joi-validation.pipe.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport { Schema } from '@hapi/joi';\n\n/**\n * **summary**: this class accepts a joi validationSchema when instantiated. It will validate an incoming value against the provided validation schema\n */\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private readonly schema: Schema) {}\n\n  transform(value: any) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      Logger.error(error);\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/gaurds/jwt-auth.guard.ts\n        \n\n            \n                Description\n            \n            \n                summary: the guard that calls the Passport jwt-strategy\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n/**\n * **summary**: the guard that calls the [**Passport jwt-strategy**](http://www.passportjs.org/packages/passport-jwt/)\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtPayloadDto.html":{"url":"classes/JwtPayloadDto.html","title":"class - JwtPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/jwt-payload.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for a decoded JWT\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/jwt-payload.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/jwt-payload.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/jwt-payload.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class JwtPayloadDto { \n    username: string;\n    email: string; \n    userId: string;\n    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                summary: Passport Jwt-Strategy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n                    summary: return the decoded payload of the JWT\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwtConstants } from '../constant';\nimport { Request } from 'express'\n/**\n * **summary**: [**Passport Jwt-Strategy**](http://www.passportjs.org/packages/passport-jwt/)\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      // read JWT from the Cookie Header\n      jwtFromRequest: ExtractJwt.fromExtractors([(request: Request) => {\n        return request?.cookies?.Authentication;\n      }]),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  /**\n   * **summary**: return the decoded payload of the JWT\n   * @param payload \n   */\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username, email: payload.email };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocCreateRentalDto.html":{"url":"classes/LocCreateRentalDto.html","title":"class - LocCreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocCreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/loc-create-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: contains the initial data submitted by a user to create a new rental listing. It also\ncontains the raw location information as a single \"address\" string ad the coordinates for the address\n\npassed to the MapNewRentalPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                coords\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RawCreateRentalDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RawCreateRentalDto } from './raw-create-rental-dto';\n/**\n * **summary**: contains the initial data submitted by a user to create a new rental listing. It also\n * contains the raw location information as a single \"address\" string ad the coordinates for the address\n * - passed to the MapNewRentalPipe\n */\nexport class LocCreateRentalDto {\n  value: RawCreateRentalDto;\n  coords: [number, number];\n  address: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/gaurds/local-auth.guard.ts\n        \n\n            \n                Description\n            \n            \n                summary: the guard the calls the Passport local-strategy\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n/**\n * **summary**: the guard the calls the [**Passport local-strategy**](http://www.passportjs.org/packages/passport-local/)\n */\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:21\n                \n            \n\n\n            \n                \n                    summary: every passport strategy calls the validate method (which calls the validateUser function in the auth.service) for any strategy. \nif the user is found, Passport will create a user property on the request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user email\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super({usernameField: 'email' }); // use email instead of username\n    }\n\n    /**\n     * **summary**: every passport strategy calls the validate method (which calls the validateUser function in the auth.service) for any strategy. \n     * if the user is found, Passport will create a user property on the request object\n     * @param email the user email\n     * @param password the user password\n     */\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validateUser(email, password);\n        if (!user) {\n            throw new Error('invalid credentials');\n            // throw new UnauthorizedException('invalid credentials');\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoggedOutGaurd.html":{"url":"guards/LoggedOutGaurd.html","title":"guard - LoggedOutGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoggedOutGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/gaurds/logged-out.guard.ts\n            \n\n                \n                Description\n                \n                \n                    summary: override the JWT expiration time and 'logout' a user by adding their JWT to a Redis cache 'dead-list'\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkDeadList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(redisService: RedisService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/gaurds/logged-out.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/gaurds/logged-out.guard.ts:38\n                \n            \n\n\n            \n                \n                    summary: method that decides if the request will continue to the handler or be blocked \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the execution context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            checkDeadList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDeadList(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/gaurds/logged-out.guard.ts:17\n                \n            \n\n\n            \n                \n                    summary: this is where we use redis to check the incoming jwt by it's last 8 digits. If the user's JWT is on the 'dead-list'\nthey are no longer authorized to make requests before logging in again\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { Observable } from \"rxjs\";\nimport { RedisService } from \"src/redis/service/redis.service\";\n/**\n * **summary**: override the JWT expiration time and 'logout' a user by adding their JWT to a Redis cache 'dead-list'\n */\n@Injectable()\nexport class LoggedOutGaurd implements CanActivate {\n    constructor(private readonly redisService: RedisService) {}\n\n    /**\n     * **summary**: this is where we use redis to check the incoming jwt by it's last 8 digits. If the user's JWT is on the 'dead-list'\n     * they are no longer authorized to make requests before logging in again\n     * @param req the request object\n     */\n    private async checkDeadList(req: Request): Promise {\n        // grab the key from the incoming jwt\n        const rawAuth = req.headers.cookie;\n        console.log(rawAuth);\n        const key = rawAuth.slice(-8);\n        const check = await this.redisService.get(key);\n        console.log(`LOGGED-OUT Guard Check Results: `);\n        console.log(check)\n        // if the key is found, deny access; User is Logged Out\n        if (check && check !== null) {\n            throw new Error('You are logged out, log back in to continue');\n            // REDIRECT to login\n        }\n        console.log('You are logged in :)')\n        return true;\n    }\n\n    /**\n     * **summary**: method that decides if the request will continue to the handler or be blocked \n     * @param context the execution context\n     */\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        const request = context.switchToHttp().getRequest();\n        return this.checkDeadList(request);\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logging-interceptor.ts\n        \n\n            \n                Description\n            \n            \n                summary: Interceptors capabilities:\n\nwraps the request/response stream so we can bind extra logic before / after method execution\ntransform the result returned from a function\nextend the basic function behavior\ncompletely override a function depending on specific conditions\nAspect Interception: log user interaction (e.g. storing user calls, async dispatching events, calculating a timestamp)\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logging-interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DateTime } from 'luxon';\n\n/**\n * **summary**: Interceptors capabilities:\n * - wraps the request/response stream so we can bind extra logic before / after method execution\n * - transform the result returned from a function\n * - extend the basic function behavior\n * - completely override a function depending on specific conditions\n * - Aspect Interception: log user interaction (e.g. storing user calls, async dispatching events, calculating a timestamp)\n */\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n\n    const req = context.switchToHttp().getRequest();\n    const method = req.method;\n    const url = req.url;\n    const now = DateTime.local();\n\n    return next.handle().pipe(\n      // calls Logger method upon graceful or exceptional termination of the observable stream\n      tap(err => {\n        Logger.log(\n          `${method} ${url} Date: ${now.month}/${now.day} Time: ${now.hour}:${\n            now.minute\n          }:${now.second}`,\n          `${context.getClass().name}.${context.getHandler().name}`,\n        );\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginDto.html":{"url":"injectables/LoginDto.html","title":"injectable - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class LoginDto {\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for logging in a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pass\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    username: string;\n    pass: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailOptionsInterface.html":{"url":"interfaces/MailOptionsInterface.html","title":"interface - MailOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/interface/mailoptions.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: the mail options for the gmail NodeMailer\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        html\n                                \n                                \n                                        subject\n                                \n                                \n                                        text\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MailOptionsInterface {\n    from: string;\n    to: string;\n    subject: string;\n    text: string;\n    html: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapNewRentalPipe.html":{"url":"injectables/MapNewRentalPipe.html","title":"injectable - MapNewRentalPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapNewRentalPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/map-new-rental.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create the final CreateRentalDto that will be passed to the rental.service.createRental() method\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: LocCreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/map-new-rental.pipe.ts:13\n                \n            \n\n\n            \n                \n                    summary: transform the raw data into a CreateRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LocCreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request to create a rental with all of the necessary raw data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { LocCreateRentalDto } from '../dto/createRental/loc-create-rental.dto';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\n/**\n * **summary**: create the final CreateRentalDto that will be passed to the rental.service.createRental() method\n */\n@Injectable()\nexport class MapNewRentalPipe implements PipeTransform {\n  /**\n   * **summary**: transform the raw data into a CreateRentalDto\n   * @param value the request to create a rental with all of the necessary raw data\n   */\n  async transform(value: LocCreateRentalDto) {\n    try {\n      const data: CreateRentalDto = {\n        rentalDescription: 'this is a tokyo grocery getter',\n        address: value.address,\n        specs: value.value.specs,\n        registration: value.value.registration,\n        features: value.value.features,\n        scheduling: value.value.scheduling,\n        pricing: value.value.pricing,\n        loc: {\n          type: 'Point',\n          coordinates: value.coords,\n        },\n        photos: value.value.photos,\n        listed: value.value.listed,\n      };\n      return data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterUploadUtil.html":{"url":"injectables/MulterUploadUtil.html","title":"injectable - MulterUploadUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MulterUploadUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/multer-upload.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/multer-upload.util.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class MulterUploadUtil {\n\n    upload = async (req, res, multerUpload, saveImages, category, user, rental_id, model): Promise => {\n        try {\n            await multerUpload(req, res, function (err) {\n                if (err) {\n                    console.log(err);\n                    return res.status(404).json(`Failed to upload image file: ${err}`);\n                }\n                // Save the Images\n                console.log(user)\n                saveImages(req.files, category, user.userId, rental_id, model);\n                return res.status(201).json(req.files[0].location);\n            });\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PositiveNumber.html":{"url":"injectables/PositiveNumber.html","title":"injectable - PositiveNumber","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PositiveNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/util/positive-number.ts\n        \n\n            \n                Description\n            \n            \n                summary: confirm the provided number is positive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/util/positive-number.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * **summary**: confirm the provided number is positive\n */\n@Injectable()\nexport class PositiveNumber {\n    validate = (data: number) => {\n        if (Math.sign(data) === -1) {\n            return false;\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PricingDto.html":{"url":"classes/PricingDto.html","title":"class - PricingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PricingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/pricing/pricing.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: edit the pricing of a rental\n\npassed to the rental.service.editPricing method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                discounts\n                            \n                            \n                                price\n                            \n                            \n                                rentalId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PricingDto {\n    rentalId: string;\n    price: number | null;\n    discounts: {\n        weekly: number | null;\n        monthly: number | null;\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PricingPipe.html":{"url":"injectables/PricingPipe.html","title":"injectable - PricingPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PricingPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/pricing.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate incoming price and discounts and map data into a PricingDto before sending to handler\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mapPricingDto\n                            \n                            \n                                    Private\n                                validatePricingDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: PricingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/pricing.pipe.ts:51\n                \n            \n\n\n            \n                \n                    summary: use the validatePricingDto() and mapPricingDto() methods to prepare the data for the request handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw request from a user to update the pricing of a Rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapPricingDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/pricing.pipe.ts:35\n                            \n                        \n\n                \n                    \n                        summary: map the final values of the PricingDto before passing to the handler\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        [object Object]\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validatePricingDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/pricing.pipe.ts:14\n                            \n                        \n\n                \n                    \n                        summary: validate the price and discounts do not have negative values nor violate common sense\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                the raw user request to update the Rental's pricing\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform} from '@nestjs/common';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\n\n/**\n * **summary**: validate incoming price and discounts and map data into a PricingDto before sending to handler\n */\n@Injectable()\nexport class PricingPipe implements PipeTransform {\n\n    /**\n     * **summary**: validate the price and discounts do not have negative values nor violate common sense\n     * @param data the raw user request to update the Rental's pricing\n     */\n    private validatePricingDto = async (data: PricingDto) => {\n        const minPrice: number = parseInt(process.env.MIN_PRICE, 10);\n        // check rentalId\n        if (!data.rentalId || (typeof data.rentalId !== 'string')) {\n            throw new Error('Invalid rentalID');\n        }\n        // check price is not negative && >= 9\n        if (Math.sign(data.price) === -1 || data.price  data.price) ||\n            (Math.sign(data.discounts.monthly) === -1 || data.discounts.monthly > data.price)) {\n            throw new Error('Discounts cannot be negative or greater than the price');\n        }\n    }\n\n    /**\n     * **summary**: map the final values of the PricingDto before passing to the handler\n     * @param \n     */\n    private mapPricingDto = async (data: PricingDto) => {\n        const value: PricingDto = {\n            rentalId: data.rentalId,\n            price: data.price ? data.price : null,\n            discounts: {\n                weekly: data.discounts.weekly ? data.discounts.weekly : null,\n                monthly: data.discounts.monthly ? data.discounts.monthly : null,\n            },\n        };\n        return value;\n    }\n\n    /**\n     * **summary**: use the validatePricingDto() and mapPricingDto() methods to prepare the data for the request handler\n     * @param value the raw request from a user to update the pricing of a Rental\n     */\n    async transform(value: PricingDto) {\n        try {\n            await this.validatePricingDto(value);\n            const data: PricingDto = await this.mapPricingDto(value);\n            return data;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessRentalTimeDto.html":{"url":"classes/ProcessRentalTimeDto.html","title":"class - ProcessRentalTimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessRentalTimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/process-rental-time.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the GenerateRentalDurationEnumUtil.processRentalTime() method\n\nthis dto is used to generate a RentalDuration Enum to represent this rentals scheduled duration; i.e. days, weeks, months\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                days\n                            \n                            \n                                months\n                            \n                            \n                                weeks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            days\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            months\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weeks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessRentalTimeDto {\n    months: number;\n    weeks: number;\n    days: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessSaveDataUtil.html":{"url":"injectables/ProcessSaveDataUtil.html","title":"injectable - ProcessSaveDataUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessSaveDataUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/process-save-data.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            process\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/process-save-data.util.ts:18\n                            \n                        \n\n                \n                    \n                        Process\nSummary: create a new Image Document or an array of Image Documents to be saved\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        files\n                                                        \n                                                                the incoming file(s) to be saved\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                the user id\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the rental id\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                the category of the image: rentals or photos\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { ImageInterface } from \"../interface/image.interface\";\nimport { Model } from 'mongoose';\nimport { ProcessedSaveDataInterface } from \"../interface/processed-save-data.interface\";\n\n@Injectable()\nexport class ProcessSaveDataUtil {\n\n  /**\n   * Process\n   * Summary: create a new Image Document or an array of Image Documents to be saved\n   * @param files the incoming file(s) to be saved\n   * @param user_id the user id\n   * @param rental_id the rental id\n   * @param category the category of the image: rentals or photos\n   */\n  process = async (files, user_id, rental_id, category): Promise => {\n    if (files && files.length > 0) {\n      // single file\n      if (files.length === 1) {\n        const temp = files[0];\n        const image: ImageInterface = {\n          user_id: user_id,\n          rental_id: rental_id,\n          bucket: temp.bucket,\n          key: temp.key,\n          etag: temp.etag,\n          category: category,\n          size: temp.size,\n          location: temp.location\n        }\n       return {packet: null, image: image}\n\n      }\n      // multiple files\n      const packet = files.map(item => {\n        const image: ImageInterface = {\n          user_id: user_id,\n          rental_id: rental_id,\n          bucket: item.bucket,\n          key: item.key,\n          etag: item.etag,\n          category: category,\n          size: item.size,\n          location: item.location\n        }\n        return image\n      });\n      return {packet: packet, image: null}\n    }\n    throw new Error('Failed to save: files were not found')\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessUnavailabilityPipe.html":{"url":"injectables/ProcessUnavailabilityPipe.html","title":"injectable - ProcessUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/process-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: query for any scheduled unavailability already in the database that would overlap with this request to add more unavailability to the Rental\nThis is to prevent the user on the front-end from accidentally overlapping 'blocks' of scheduled unavailability. The front-end of course should also block this\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addUnavailabilityId\n                            \n                            \n                                    Protected\n                                createQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidatedUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/process-unavailability.pipe.ts:121\n                \n            \n\n\n            \n                \n                    summary: process the request to update a rental's 'scheduled unavailability'\n\nthe user may schedule as far as a year ahead. To easily track the data as a single 'block' of unavailable time for the rental, each Unavailability document related to this query is given the same 'uuid'\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidatedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the validated unavailability request dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            addUnavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/process-unavailability.pipe.ts:57\n                            \n                        \n\n                \n                    \n                        summary: add unavailabilityId (uuid) to each UnavailabilityDto in the incoming ValidatedUnavailabilityDto\n\nthis method checks if the user is schedling time only for this year or into the next year as well\nthe uuid identifies a series of unavailability, allowing the entire block of time to be identified in the database\n\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the semi processed and validate client request data\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/process-unavailability.pipe.ts:19\n                            \n                        \n\n                \n                    \n                        summary: create a MongoDB query object from the provided CreateQueryDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        year\n                                                        \n                                                                data for creating a MongoDB update object\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { ValidatedUnavailabilityDto } from '../dto/unavailability/validated-unavailability.dto';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { UnavailabilityQueryDto } from '../dto/unavailability/schedule/unavailability-query.dto';\nimport { CreateQueryDto } from '../dto/unavailability/schedule/create-query.dto';\nimport { ProcessedUnavailabilityQueryDto } from '../dto/unavailability/schedule/processed-unavailability-query.dto';\n/**\n * **summary**: query for any scheduled unavailability already in the database that would overlap with this request to add more unavailability to the Rental\n * This is to prevent the user on the front-end from accidentally overlapping 'blocks' of scheduled unavailability. The front-end of course should also block this\n * @param year \n */\n@Injectable()\nexport class ProcessUnavailabilityPipe implements PipeTransform {\n\n  /**\n   * **summary**: create a MongoDB query object from the provided CreateQueryDto\n   * @param year data for creating a MongoDB update object\n   */\n  protected createQuery = async (\n    year: CreateQueryDto,\n  ): Promise => {\n    return {\n      rentalId: year.min.rentalId,\n      year: year.year,\n      doy: { $lte: year.max.doy, $gte: year.min.doy },\n      $or: [\n        {\n          // enclosed\n          start: { $gte: year.start },\n          end: { $lte: year.end },\n        },\n        {\n          // offset before start\n          start: { $lte: year.start },\n          end: { $gte: year.start },\n        },\n        {\n          // offset after end\n          start: { $lte: year.end },\n          end: { $gte: year.end },\n        },\n        {\n          // outside\n          start: { $lte: year.start },\n          end: { $gte: year.end },\n        },\n      ],\n    };\n  }\n\n  /**\n   * **summary**: add unavailabilityId (uuid) to each UnavailabilityDto in the incoming ValidatedUnavailabilityDto\n   * - this method checks if the user is schedling time only for this year or into the next year as well\n   * - the uuid identifies a series of unavailability, allowing the entire block of time to be identified in the database\n   * @param value the semi processed and validate client request data\n   */\n  protected addUnavailabilityId = async (\n    value: ValidatedUnavailabilityDto,\n  ): Promise => {\n    // temp arrays for transformation\n    const tY1 = [];\n    const tY2 = [];\n    const uuid = Date.now().toString();\n    // process 2 years\n    if (value.y2) {\n      value.y1.map(x => {\n        // y1\n        tY1.push({\n          unavailabilityId: uuid,\n          rentalId: x.rentalId,\n          year: x.year,\n          doy: x.doy,\n          start: x.start,\n          end: x.end,\n          title: x.title,\n        });\n      });\n      value.y2.map(x => {\n        // y2\n        tY2.push({\n          unavailabilityId: uuid,\n          rentalId: x.rentalId,\n          year: x.year,\n          doy: x.doy,\n          start: x.start,\n          end: x.end,\n          title: x.title,\n        });\n      });\n      // return processedUnavailabilityDto\n      const pY1: ProcessedUnavailabilityQueryDto[] = tY1;\n      const pY2: ProcessedUnavailabilityQueryDto[] = tY2;\n      return { pY1, pY2 };\n    }\n    // process 1 year\n    const ty1 = [];\n    value.y1.map(x => {\n      // y1\n      ty1.push({\n        unavailabilityId: uuid,\n        rentalId: x.rentalId,\n        year: x.year,\n        doy: x.doy,\n        start: x.start,\n        end: x.end,\n        title: x.title,\n      });\n    });\n    const py1: ProcessedUnavailabilityQueryDto[] = ty1;\n    return { pY1: py1, pY2: null };\n  }\n\n  /**\n   * **summary**: process the request to update a rental's 'scheduled unavailability'\n   * - the user may schedule as far as a year ahead. To easily track the data as a single 'block' of unavailable time for the rental, each Unavailability document related to this query is given the same 'uuid'\n   * @param value the validated unavailability request dto\n   */\n  async transform(\n    value: ValidatedUnavailabilityDto,\n  ): Promise {\n    // add uuid\n    const {pY1, pY2} = await this.addUnavailabilityId(value);\n    const { y1, y2 } = value;\n    // create Unavailability model queries for each year\n    if (y2 !== null) {\n      const createQuery1: CreateQueryDto = {\n        min: y1[0],\n        max: y1[y1.length - 1],\n        year: y1[0].year,\n        start: y1[0].start,\n        end: y1[0].end,\n      };\n      const createQuery2: CreateQueryDto = {\n        min: y2[0],\n        max: y2[y2.length - 1],\n        year: y2[0].year,\n        start: y2[0].start,\n        end: y2[0].end,\n      };\n      return {\n        y1Query: await this.createQuery(createQuery1),\n        y2Query: await this.createQuery(createQuery2),\n        data: {\n          y1: pY1,\n          y2: pY2,\n        },\n      };\n    }\n    // create an Unavailability model query for just one year\n    const createQuery = {\n      min: y1[0],\n      max: y1[y1.length - 1],\n      year: y1[0].year,\n      start: y1[0].start,\n      end: y1[0].end,\n    };\n    return {\n      y1Query: await this.createQuery(createQuery),\n      y2Query: null,\n      data: {\n        y1: pY1,\n        y2: null,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedSaveDataInterface.html":{"url":"interfaces/ProcessedSaveDataInterface.html","title":"interface - ProcessedSaveDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProcessedSaveDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/processed-save-data.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        image\n                                \n                                \n                                        packet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         ImageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        packet\n                                    \n                                \n                                \n                                    \n                                        packet:         ImageInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ImageInterface } from \"./image.interface\";\n\nexport interface ProcessedSaveDataInterface {\n    packet: ImageInterface[];\n    image: ImageInterface;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedUnavailabilityDto.html":{"url":"classes/ProcessedUnavailabilityDto.html","title":"class - ProcessedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the final procesed version of the request to schedule unavailability. It contains the UnavailabilityQueryDto data that was used\nto create the ProcessedUnavailabilityQueryDtos as well as the returned ProcessedUnavailabilityQueryDto[]s that will be used by the handler\nto schedule the new unavailability.\n\npassed to the rental.service.scheduleUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                y1Query\n                            \n                            \n                                y2Query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1Query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityQueryDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2Query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityQueryDto | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityQueryDto } from './unavailability-query.dto';\nimport { ProcessedUnavailabilityQueryDto } from './processed-unavailability-query.dto';\n/**\n * **summary**: the final procesed version of the request to schedule unavailability. It contains the UnavailabilityQueryDto data that was used\n * to create the ProcessedUnavailabilityQueryDtos as well as the returned ProcessedUnavailabilityQueryDto[]s that will be used by the handler\n * to schedule the new unavailability.\n * - passed to the rental.service.scheduleUnavailability() method\n */\nexport class ProcessedUnavailabilityDto {\n    y1Query: UnavailabilityQueryDto;\n    y2Query: UnavailabilityQueryDto | null;\n    data: {\n        y1: ProcessedUnavailabilityQueryDto[];\n        y2: ProcessedUnavailabilityQueryDto[] | null;\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedUnavailabilityQueryDto.html":{"url":"classes/ProcessedUnavailabilityQueryDto.html","title":"class - ProcessedUnavailabilityQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedUnavailabilityQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this is a modified version of the UnavailabilityDto that is ready to be used in the CreateQueryDto\n\npassed as a property of the CreateQueryDto\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                unavailabilityId\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessedUnavailabilityQueryDto {\n    unavailabilityId: string; // for updating and quick indexing\n    rentalId: string;\n    year: number;\n    doy: number;\n    start: number;\n    end: number;\n    title: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedUploadDataInterface.html":{"url":"interfaces/ProcessedUploadDataInterface.html","title":"interface - ProcessedUploadDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProcessedUploadDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/processed-upload-data.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        param\n                                \n                                \n                                        params\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        param\n                                    \n                                \n                                \n                                    \n                                        param:         ImageUploadInterface | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageUploadInterface | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:         ImageUploadInterface[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageUploadInterface[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ImageUploadInterface } from \"./image-upload.interface\";\n\nexport interface ProcessedUploadDataInterface {\n    param: ImageUploadInterface | null;\n    params: ImageUploadInterface[] | null;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawCoordinatesDto.html":{"url":"classes/RawCoordinatesDto.html","title":"class - RawCoordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawCoordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/raw-coordinates.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the Geocoding & Searching v7 API returns the following coordinates object when passed an address\n\npassed to GeoUrlApiUtil\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lat\n                            \n                            \n                                lng\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-coordinates.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lng\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-coordinates.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawCoordinatesDto {\n    lat: number;\n    lng: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawCreateRentalDto.html":{"url":"classes/RawCreateRentalDto.html","title":"class - RawCreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawCreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/raw-create-rental-dto.ts\n        \n\n            \n                Description\n            \n            \n                summary:\n\nThe initial values submitted by a user to create a new rental listing\nspecs: specifications about the vehicle\nregistration: basic vehicle registration data\nfeatures: e.g. 'bike rack', 'heated seats', 'auto-pilot', etc.\nscheduling: list the required advance notice, as well as min & max rental duration\npricing: the rental rate as well as discount conditions; e.g. weekly rentals get $5 off\nlocation: the steet, city, and zip of the user\nphotos: a max of 10 image references\nlisted: hide or show the rental to the application community\npassed to the GeoUrlApiPipe transform method. This is the raw data before the GeoJSON object is added and the final\nCreateRentalDto has not been created\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                features\n                            \n                            \n                                listed\n                            \n                            \n                                location\n                            \n                            \n                                photos\n                            \n                            \n                                pricing\n                            \n                            \n                                registration\n                            \n                            \n                                scheduling\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pricing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawCreateRentalDto {\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number | null;\n    hwyMpg: number | null;\n    mpgE: number | null;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: string[];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: number;\n    discounts: {\n      weekly: number;\n      monthly: number;\n    };\n  };\n  location: {\n    street: string;\n    city: string;\n    zip: number;\n  };\n  photos: string[];\n  listed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawScheduleUnavailabilityDto.html":{"url":"classes/RawScheduleUnavailabilityDto.html","title":"class - RawScheduleUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawScheduleUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the initial form data submitted from the client to request to schedule Unavailability for a rental\n\npassed to the SortUnavailabilityPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                unavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: the initial form data submitted from the client to request to schedule Unavailability for a rental\n * - passed to the SortUnavailabilityPipe\n */\nexport class RawScheduleUnavailabilityDto {\n  unavailability: UnavailabilityDto[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawSearchRentalDto.html":{"url":"classes/RawSearchRentalDto.html","title":"class - RawSearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawSearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/raw-search-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: search for retnals by address, a start and end time, price, and features\n\npassed to the GivenNoticePipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                price\n                            \n                            \n                                rentalEndTime\n                            \n                            \n                                rentalStartTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalEndTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalStartTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawSearchRentalDto {\n    address: string;\n    rentalStartTime: Date;\n    rentalEndTime: Date;\n    price: number;\n    features: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveUnavailabilityDto.html":{"url":"classes/RemoveUnavailabilityDto.html","title":"class - RemoveUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/remove/remove-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the information necessary to delte an Unavailability document from the database\n\npassed to the rental.service.removeUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/remove/remove-unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/remove/remove-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveUnavailabilityDto {\n  rentalId: string;\n  unavailabilityId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RentalController.html":{"url":"controllers/RentalController.html","title":"controller - RentalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RentalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/controller/rental.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rental\n            \n\n            \n                Description\n            \n            \n                \nRental Controller: Handle incoming requests and return responses for managing Rentals\nMiddleware: The ValidateUpdateUnavailabilityMiddleware class is applied to the updateUnavailability method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRental\n                            \n                            \n                                    Async\n                                editDetails\n                            \n                            \n                                    Async\n                                editPricing\n                            \n                            \n                                    Async\n                                removeUnavailability\n                            \n                            \n                                    Async\n                                scheduleUnavailability\n                            \n                            \n                                    Async\n                                searchRental\n                            \n                            \n                                    Async\n                                updateUnavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRental(rental: CreateRentalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new JoiValidationPipe())@UsePipes(new MapNewRentalPipe())@UsePipes(new GeoUrlApiPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:48\n                \n            \n\n\n            \n                \n                    Create Rental:\ncreate a new vehicle rental listing\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                CreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editDetails(editDetailsDto: EditDetailsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit-details')@UsePipes(new ValidateEditDetailsPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:85\n                \n            \n\n\n            \n                \n                    Edit Rental Details:\nedit the details of the Rental (# of seats, color, etc.)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editDetailsDto\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editPricing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editPricing(pricingDto: PricingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit-price')@UsePipes(new PricingPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:75\n                \n            \n\n\n            \n                \n                    Edit Pricing:\nedit the rental price\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pricingDto\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUnavailability(data: RemoveUnavailabilityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('remove-unavailability')@UsePipes(new ValidateRemoveUnavailabilityPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:117\n                \n            \n\n\n            \n                \n                    Remove Unavailability\nremove existing unavailability\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleUnavailability(processed: ProcessedUnavailabilityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('schedule-unavailability')@UsePipes(new ProcessUnavailabilityPipe())@UsePipes(new ValidateUnavailabilityPipe())@UsePipes(new SortUnavailabilityPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:97\n                \n            \n\n\n            \n                \n                    Schedule Unavailability\nset a period of unavailability for the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    processed\n                                    \n                                                ProcessedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRental(searchRentalDto: SearchRentalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UsePipes(new JoiValidationPipe())@UsePipes(new RequestCoordinatesPipe())@UsePipes(new RentalDurationPipe())@UsePipes(new GivenNoticePipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:65\n                \n            \n\n\n            \n                \n                    Search Rental:\nfind rentals available near a specified location (user's location)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchRentalDto\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUnavailability(data: UpdateUnavailabilityDataDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update-unavailability')@UsePipes(new CreateUpdaterDtoPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:107\n                \n            \n\n\n            \n                \n                    Update Unavailability\nedit current unavailability\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUnavailabilityDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, Param, UsePipes, Query, Res, Req } from '@nestjs/common';\nimport { RentalService } from '../service/rental.service';\nimport { GeoUrlApiPipe } from '../pipes/geo-url-api.pipe';\nimport { MapNewRentalPipe } from '../pipes/map-new-rental.pipe';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\nimport { JoiValidationPipe } from '../../common/pipes/joi-validation.pipe';\nimport { CreateRentalValidationSchema } from '../schema/validation/create-rental-validation.schema';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\nimport { RentalDurationPipe } from '../pipes/rental-duration.pipe';\nimport { GenerateRentalDurationEnumUtil } from '../utils/generate-rental-duration-enum.util';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\nimport { RequestCoordinatesPipe } from '../pipes/request-coordinates.pipe';\nimport { GivenNoticePipe } from '../pipes/given-notice.pipe';\nimport { SearchRentalValidationSchema } from '../schema/validation/search-rental-validation.schema';\nimport { PricingPipe } from '../pipes/pricing.pipe';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\nimport { ValidateEditDetailsPipe } from '../pipes/validate-edit-details.pipe';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { SortUnavailabilityPipe } from '../pipes/sort-unavailability.pipe';\nimport { ValidateUnavailabilityPipe } from '../pipes/validate-unavailability.pipe';\nimport { ProcessUnavailabilityPipe } from '../pipes/process-unavailability.pipe';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { CreateUpdaterDtoPipe } from '../pipes/create-updater-dto.pipe';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto' // '../dto/update-unavailability-data.dto';\nimport { ValidateRemoveUnavailabilityPipe } from '../pipes/validate-remove-unavailability.pipe';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * - **Rental Controller**: Handle incoming requests and return responses for managing Rentals\n * - **Middleware**: The ValidateUpdateUnavailabilityMiddleware class is applied to the updateUnavailability method\n */\n@Controller('rental')\nexport class RentalController {\n  constructor(\n    private readonly rentalService: RentalService,\n    ) {}\n\n  /**\n   * Create Rental:\n   * create a new vehicle rental listing\n   */\n  @Post()\n  @UsePipes(new JoiValidationPipe(CreateRentalValidationSchema))\n  @UsePipes(new MapNewRentalPipe())\n  @UsePipes(new GeoUrlApiPipe(new GeoUrlApiUtil(), new AppConfigService(new ConfigService)))\n  async createRental(@Body() rental: CreateRentalDto) {\n    try {\n      return await this.rentalService.createRental(rental);\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * Search Rental:\n   * find rentals available near a specified location (user's location)\n   */\n  @Get()\n  @UsePipes(new JoiValidationPipe(SearchRentalValidationSchema))\n  @UsePipes(new RequestCoordinatesPipe(new GeoUrlApiUtil()))\n  @UsePipes(new RentalDurationPipe(new GenerateRentalDurationEnumUtil()))\n  @UsePipes(new GivenNoticePipe())\n  async searchRental(@Query() searchRentalDto: SearchRentalDto) {\n      return await this.rentalService.searchRental(searchRentalDto);\n  }\n\n  /**\n   * Edit Pricing:\n   * edit the rental price\n   */\n  @Post('edit-price')\n  @UsePipes(new PricingPipe())\n  async editPricing(@Body() pricingDto: PricingDto) {\n      return await this.rentalService.editPricing(pricingDto);\n  }\n\n  /**\n   * Edit Rental Details:\n   * edit the details of the Rental (# of seats, color, etc.)\n   */\n  @Post('edit-details')\n  @UsePipes(new ValidateEditDetailsPipe())\n  async editDetails(@Body() editDetailsDto: EditDetailsDto) {\n      return await this.rentalService.editDetails(editDetailsDto);\n  }\n\n  /**\n   * Schedule Unavailability\n   * set a period of unavailability for the rental\n   */\n  @Post('schedule-unavailability')\n  @UsePipes(new ProcessUnavailabilityPipe())\n  @UsePipes(new ValidateUnavailabilityPipe())\n  @UsePipes(new SortUnavailabilityPipe())\n  async scheduleUnavailability(@Body() processed: ProcessedUnavailabilityDto ) {\n    return await this.rentalService.scheduleUnavailability(processed);\n  }\n\n  /**\n   * Update Unavailability\n   * edit current unavailability\n   */\n  @Post('update-unavailability')\n  @UsePipes(new CreateUpdaterDtoPipe())\n  async updateUnavailability(@Body() data: UpdateUnavailabilityDataDto) {\n    return await this.rentalService.updateUnavailability(data);\n  }\n\n   /**\n    * Remove Unavailability\n    * remove existing unavailability\n    */\n   @Post('remove-unavailability')\n   @UsePipes(new ValidateRemoveUnavailabilityPipe())\n   async removeUnavailability(@Body() data: RemoveUnavailabilityDto) {\n     return await this.rentalService.removeUnavailability(data);\n   }\n\n   /**\n    * Upload Rental Photos\n    * upload photos of your rental listing\n    * ! see the images/controller\n    */\n\n    /**\n     * Toggle Rental listed status\n     */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalDurationPipe.html":{"url":"injectables/RentalDurationPipe.html","title":"injectable - RentalDurationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RentalDurationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/rental-duration.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a rental Duration from the incoming GivenNoticeSearchRentalDto\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(generateDuration: GenerateRentalDurationEnumUtil)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/rental-duration.pipe.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        generateDuration\n                                                  \n                                                        \n                                                                        GenerateRentalDurationEnumUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: GivenNoticeSearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/rental-duration.pipe.ts:19\n                \n            \n\n\n            \n                \n                    summary: use the generateRentalDurationEnumUtil() to create a RentalDuration Enum for the\nRental query\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                GivenNoticeSearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the semi processed client request data to query a rental near their, or a specified, locaion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { GivenNoticeSearchRentalDto } from '../dto/searchRental/given-notice-search-rental-dto';\nimport { GenerateRentalDurationEnumUtil } from '../utils/generate-rental-duration-enum.util';\nimport { RequestCoordinatesDto } from '../dto/searchRental/request-coordinates.dto';\n/**\n * **summary**: create a rental Duration from the incoming GivenNoticeSearchRentalDto\n */\n@Injectable()\nexport class RentalDurationPipe implements PipeTransform {\n  constructor(private generateDuration: GenerateRentalDurationEnumUtil) {\n    this.generateDuration = generateDuration;\n  }\n\n  /**\n   * **summary**: use the generateRentalDurationEnumUtil() to create a RentalDuration [**Enum**](https://www.typescriptlang.org/docs/handbook/enums.html) for the\n   * Rental query\n   * @param value the semi processed client request data to query a rental near their, or a specified, locaion\n   */\n  async transform(value: GivenNoticeSearchRentalDto) {\n    try {\n      const dto: RequestCoordinatesDto = {\n        address: value.address,\n        price: value.price,\n        features: value.features,\n        rentalDuration: await this.generateDuration.generateRentalDurationEnum(\n          value.rentalStartTime,\n          value.rentalEndTime,\n        ),\n        givenNotice: value.givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RentalInterface.html":{"url":"interfaces/RentalInterface.html","title":"interface - RentalInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RentalInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/interface/schemaInterface/Rental/rental.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the 'Rental' Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        features\n                                \n                                \n                                        listed\n                                \n                                \n                                        loc\n                                \n                                \n                                        photos\n                                \n                                \n                                        pricing\n                                \n                                \n                                        registration\n                                \n                                \n                                        rentalDescription\n                                \n                                \n                                        scheduling\n                                \n                                \n                                        specs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     [string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listed\n                                    \n                                \n                                \n                                    \n                                        listed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loc\n                                    \n                                \n                                \n                                    \n                                        loc:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:     [string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pricing\n                                    \n                                \n                                \n                                    \n                                        pricing:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration\n                                    \n                                \n                                \n                                    \n                                        registration:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rentalDescription\n                                    \n                                \n                                \n                                    \n                                        rentalDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduling\n                                    \n                                \n                                \n                                    \n                                        scheduling:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        specs\n                                    \n                                \n                                \n                                    \n                                        specs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RentalInterface {\n  rentalDescription: string;\n  address: string;\n  loc: {\n    type: string;\n    coordinates: string;\n  };\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: [string];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: { type: number /*; default: DEFAULT_PRICE*/ };\n    discounts: {\n      weekly: { type: number; default: null };\n      monthly: { type: number; default: null };\n    };\n  };\n  photos: [string];\n  listed: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RentalModule.html":{"url":"modules/RentalModule.html","title":"module - RentalModule","body":"\n                   \n\n\n\n\n    Modules\n    RentalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RentalModule\n\n\n\ncluster_RentalModule_providers\n\n\n\ncluster_RentalModule_imports\n\n\n\ncluster_RentalModule_exports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nRentalModule\n\nRentalModule\n\nRentalModule -->\n\nDatabaseModule->RentalModule\n\n\n\n\n\nRentalService \n\nRentalService \n\nRentalService  -->\n\nRentalModule->RentalService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nRentalModule -->\n\nAppConfigService->RentalModule\n\n\n\n\n\nCreateUpdaterDtoPipe\n\nCreateUpdaterDtoPipe\n\nRentalModule -->\n\nCreateUpdaterDtoPipe->RentalModule\n\n\n\n\n\nGenerateRentalDurationEnumUtil\n\nGenerateRentalDurationEnumUtil\n\nRentalModule -->\n\nGenerateRentalDurationEnumUtil->RentalModule\n\n\n\n\n\nGeoUrlApiPipe\n\nGeoUrlApiPipe\n\nRentalModule -->\n\nGeoUrlApiPipe->RentalModule\n\n\n\n\n\nGeoUrlApiUtil\n\nGeoUrlApiUtil\n\nRentalModule -->\n\nGeoUrlApiUtil->RentalModule\n\n\n\n\n\nGivenNoticePipe\n\nGivenNoticePipe\n\nRentalModule -->\n\nGivenNoticePipe->RentalModule\n\n\n\n\n\nMapNewRentalPipe\n\nMapNewRentalPipe\n\nRentalModule -->\n\nMapNewRentalPipe->RentalModule\n\n\n\n\n\nPricingPipe\n\nPricingPipe\n\nRentalModule -->\n\nPricingPipe->RentalModule\n\n\n\n\n\nProcessUnavailabilityPipe\n\nProcessUnavailabilityPipe\n\nRentalModule -->\n\nProcessUnavailabilityPipe->RentalModule\n\n\n\n\n\nRentalDurationPipe\n\nRentalDurationPipe\n\nRentalModule -->\n\nRentalDurationPipe->RentalModule\n\n\n\n\n\nRentalService\n\nRentalService\n\nRentalModule -->\n\nRentalService->RentalModule\n\n\n\n\n\nRequestCoordinatesPipe\n\nRequestCoordinatesPipe\n\nRentalModule -->\n\nRequestCoordinatesPipe->RentalModule\n\n\n\n\n\nSortUnavailabilityPipe\n\nSortUnavailabilityPipe\n\nRentalModule -->\n\nSortUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateEditDetailsPipe\n\nValidateEditDetailsPipe\n\nRentalModule -->\n\nValidateEditDetailsPipe->RentalModule\n\n\n\n\n\nValidateRemoveUnavailabilityPipe\n\nValidateRemoveUnavailabilityPipe\n\nRentalModule -->\n\nValidateRemoveUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateUnavailabilityPipe\n\nValidateUnavailabilityPipe\n\nRentalModule -->\n\nValidateUnavailabilityPipe->RentalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rental/rental.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nsummary: This module provides all of the functionality for working with Rentals\nMiddleware: This module consumes the ValidateUpdateUnavailability middleware; for more details, in the documentation checkout the Injectables ValidateUpdateUnavailability tab\nDatabase: This module applies indexing to the Unavailability model of the database\n\n\n\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            CreateUpdaterDtoPipe\n                        \n                        \n                            GenerateRentalDurationEnumUtil\n                        \n                        \n                            GeoUrlApiPipe\n                        \n                        \n                            GeoUrlApiUtil\n                        \n                        \n                            GivenNoticePipe\n                        \n                        \n                            MapNewRentalPipe\n                        \n                        \n                            PricingPipe\n                        \n                        \n                            ProcessUnavailabilityPipe\n                        \n                        \n                            RentalDurationPipe\n                        \n                        \n                            RentalService\n                        \n                        \n                            RequestCoordinatesPipe\n                        \n                        \n                            SortUnavailabilityPipe\n                        \n                        \n                            ValidateEditDetailsPipe\n                        \n                        \n                            ValidateRemoveUnavailabilityPipe\n                        \n                        \n                            ValidateUnavailabilityPipe\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RentalController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RentalService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/rental.module.ts:71\n                \n            \n\n\n            \n                \n                    summary: applies the ValidateUpdateUnavailability which validates a user's request to the rental.controller.updateUnavaialability method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        interfacing defining method for applying user defined middleware to routes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { RentalController } from './controller/rental.controller';\nimport { RentalService } from './service/rental.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RentalSchema } from './schema/rental.schema';\nimport { GeoUrlApiUtil } from './utils/geo-url-api.util';\nimport { UnavailabilitySchema } from './schema/unavailability-schema';\nimport { DatabaseModule } from '../database/database.module';\nimport { unavailabilityProvider } from '../database/providers/unavailability-model.provider';\nimport { ValidateUpdateUnavailabilityMiddleware } from './middleware/validate-update-unavailability.middleware';\nimport { MapNewRentalPipe } from './pipes/map-new-rental.pipe';\nimport { GeoUrlApiPipe } from './pipes/geo-url-api.pipe';\nimport { RequestCoordinatesPipe } from './pipes/request-coordinates.pipe';\nimport { RentalDurationPipe } from './pipes/rental-duration.pipe';\nimport { GivenNoticePipe } from './pipes/given-notice.pipe';\nimport { PricingPipe } from './pipes/pricing.pipe';\nimport { ValidateEditDetailsPipe } from './pipes/validate-edit-details.pipe';\nimport { ProcessUnavailabilityPipe } from './pipes/process-unavailability.pipe';\nimport { ValidateUnavailabilityPipe } from './pipes/validate-unavailability.pipe';\nimport { SortUnavailabilityPipe } from './pipes/sort-unavailability.pipe';\nimport { CreateUpdaterDtoPipe } from './pipes/create-updater-dto.pipe';\nimport { ValidateRemoveUnavailabilityPipe } from './pipes/validate-remove-unavailability.pipe';\nimport { AppConfigService } from 'src/config/configuration.service';\nimport { GenerateRentalDurationEnumUtil } from './utils/generate-rental-duration-enum.util';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n/**\n * - **summary**: This module provides all of the functionality for working with Rentals\n *   - **Middleware**: This module consumes the **ValidateUpdateUnavailability** middleware; for more details, in the documentation checkout the **Injectables** ValidateUpdateUnavailability tab\n *   - **Database**: This module applies indexing to the **Unavailability** model of the database\n */\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Rental', schema: RentalSchema }]),\n    MongooseModule.forFeature([{name: 'Unavailability', schema: UnavailabilitySchema}]),\n    DatabaseModule,\n    ConfigModule,\n  ],\n  controllers: [RentalController],\n  providers: [\n    RentalService,\n    GeoUrlApiUtil,\n    ...unavailabilityProvider,\n    MapNewRentalPipe,\n    GeoUrlApiPipe,\n    RequestCoordinatesPipe,\n    RentalDurationPipe,\n    GenerateRentalDurationEnumUtil,\n    GivenNoticePipe,\n    PricingPipe,\n    ValidateEditDetailsPipe,\n    ProcessUnavailabilityPipe,\n    ValidateUnavailabilityPipe,\n    SortUnavailabilityPipe,\n    CreateUpdaterDtoPipe,\n    ValidateRemoveUnavailabilityPipe,\n    AppConfigService,\n    ConfigService\n  ],\n  exports: [RentalService],\n})\nexport class RentalModule implements NestModule {\n  constructor() {\n    RentalSchema.index({ loc: '2dsphere' });\n    UnavailabilitySchema.index({rentalId: 1});\n    UnavailabilitySchema.index({UnavailabilityId: 1});\n  }\n  /**\n   * **summary**: applies the ValidateUpdateUnavailability which validates a user's request to the rental.controller.updateUnavaialability method\n   * @param consumer interfacing defining method for applying user defined middleware to routes\n   */\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ValidateUpdateUnavailabilityMiddleware)\n      .forRoutes('v1/rental');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalService.html":{"url":"injectables/RentalService.html","title":"injectable - RentalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RentalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/service/rental.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: create, search for near (within a radius: e.g. 10 miles of) a location, update details, and schedule blocks of unavailable time for Rentals\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkForOverlap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRental\n                            \n                            \n                                    Private\n                                    Async\n                                createRentalQuery\n                            \n                            \n                                    Async\n                                editDetails\n                            \n                            \n                                    Async\n                                editPricing\n                            \n                            \n                                    Async\n                                removeUnavailability\n                            \n                            \n                                    Async\n                                scheduleUnavailability\n                            \n                            \n                                    Async\n                                searchRental\n                            \n                            \n                                    Async\n                                updateUnavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rentalModel: Model, unavailability: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/service/rental.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rentalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unavailability\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRental(rental: CreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:31\n                \n            \n\n\n            \n                \n                    summary: create a new rental listing with attached geolocation coordinates\nso the rental may be found by a geospatial query\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                CreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new rental to be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createRentalQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRentalQuery(rental: SearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:178\n                \n            \n\n\n            \n                \n                    summary: convert a searchRentalDto into a mongoose query for the searchRental method\n\nThe query searchs a maxium 8 mile radius for rentals\nFilters: \nrental min duration\nrental max duration\nadvance notice minimum; e.g. 1 hour\nloc: GeoJSON object\nrental price: optional\nrental features: optional\n\n\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        searchRentalDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editDetails(data: EditDetailsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:92\n                \n            \n\n\n            \n                \n                    summary: edit the details of the Rental (# of seats, color, etc.)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data comes as an EditDetailsDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editPricing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editPricing(data: PricingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:65\n                \n            \n\n\n            \n                \n                    summary: edit the rental pricing\n\nprice\ndiscounts:\nweekly\nmonthly\n\n\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUnavailability(data: RemoveUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:151\n                \n            \n\n\n            \n                \n                    summary: remove an amount of time from a scheduled duration of unavailability on the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleUnavailability(processed: ProcessedUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:113\n                \n            \n\n\n            \n                \n                    summary: set a period of unavailability for the rental (e.g. mon - wed)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    processed\n                                    \n                                                ProcessedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRental(rental: SearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:44\n                \n            \n\n\n            \n                \n                    summary: query rentals in the database with the data provided in the SearchRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SearchRentalDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUnavailability(data: UpdateUnavailabilityDataDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:134\n                \n            \n\n\n            \n                \n                    summary: edit a block of scheduled unavailability by either extending or reducing the scheduled duration of time on the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUnavailabilityDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkForOverlap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/service/rental.service.ts:216\n                            \n                        \n\n                \n                    \n                        summary: validate there currently is no scheduled unavailability for the rental in the database that overlaps \nwith the requested unavailability \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                query for 1 or 2 years\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger } from '@nestjs/common';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RentalInterface } from '../interface/schemaInterface/Rental/rental.interface';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { unavailabilityModel } from '../../common/Const';\nimport { UnavailabilityInterface } from '../interface/schemaInterface/Unavailability/unavailability.interface';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\n\n/**\n * **summary**: create, search for near (within a radius: e.g. 10 miles of) a location, update details, and schedule blocks of unavailable time for Rentals\n */\n@Injectable()\nexport class RentalService {\n  constructor(\n    @InjectModel('Rental') private readonly rentalModel: Model,\n    @Inject(unavailabilityModel)\n    private readonly unavailability: Model,\n  ) { }\n\n  /**\n   * **summary**: create a new rental listing with attached geolocation coordinates\n   * so the rental may be found by a geospatial query\n   * @param rental the new rental to be created\n   */\n  async createRental(rental: CreateRentalDto) {\n    try {\n      const document = await new this.rentalModel(rental);\n      return await document.save();\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: query rentals in the database with the data provided in the SearchRentalDto\n   * @param rental SearchRentalDto\n   */\n  async searchRental(rental: SearchRentalDto) {\n    try {\n      const query = await this.createRentalQuery(rental);\n      const rentals = await this.rentalModel.find(query);\n      if (rentals.length > 0) {\n        return rentals;\n      } else {\n        throw new Error('No rentals were found');\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit the rental pricing\n   * - price\n   * - discounts:\n   *   - weekly\n   *   - monthly\n   */\n  async editPricing(data: PricingDto) {\n    // make an update document\n    try {\n      const filter = { _id: data.rentalId };\n      const update = {\n        pricing: {\n          price: data.price,\n          discounts: {\n            weekly: data.discounts.weekly,\n            monthly: data.discounts.monthly,\n          },\n        },\n      };\n      const updater = {\n        $set: update,\n      };\n      const doc = await this.rentalModel.findOneAndUpdate(filter, updater, { new: true });\n      return doc;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit the details of the Rental (# of seats, color, etc.)\n   * @param data the data comes as an EditDetailsDto\n   */\n  async editDetails(data: EditDetailsDto) {\n    // make an update document\n    try {\n      const filter = { _id: data.rentalId };\n      const update = {\n        specs: data.specs,\n        features: data.features,\n      };\n      const updater = {\n        $set: update,\n      };\n      const doc = await this.rentalModel.findOneAndUpdate(filter, updater, { new: true });\n      return doc;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: set a period of unavailability for the rental (e.g. mon - wed)\n   */\n  async scheduleUnavailability(processed: ProcessedUnavailabilityDto) {\n    try {\n      await this.checkForOverlap(processed);\n      // if it passed, combine data into one array and insert\n      const { y1, y2 } = processed.data;\n      if (y2 !== null) {\n        const merged = y1.concat(y2);\n        Logger.log(`the merged years`);\n        Logger.log(merged);\n        return await this.unavailability.insertMany(merged, { ordered: true });\n      }\n      return await this.unavailability.insertMany(y1, { ordered: true });\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit a block of scheduled unavailability by either extending or reducing the scheduled duration of time on the rental\n   * @param data \n   */\n  async updateUnavailability(data: UpdateUnavailabilityDataDto) {\n    // send the update\n    try {\n      const update = await this.unavailability.updateMany(\n        data.filter,\n        data.updater,\n      );\n      return update;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: remove an amount of time from a scheduled duration of unavailability on the rental\n   * @param data \n   */\n  async removeUnavailability(data: RemoveUnavailabilityDto) {\n    try {\n      const remove = await this.unavailability.deleteMany({\n        rentalId: data.rentalId,\n        unavailabilityId: data.unavailabilityId,\n      });\n      if (remove.deletedCount === 0) {\n        throw new Error('No Unavailability documents were found, no documents were deleted');\n      }\n      return remove;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: convert a searchRentalDto into a mongoose query for the searchRental method\n   * - The query searchs a maxium 8 mile radius for rentals\n   * - Filters: \n   *   - rental min duration\n   *   - rental max duration\n   *   - advance notice minimum; e.g. 1 hour\n   *   - loc: GeoJSON object\n   *   - rental price: optional\n   *   - rental features: optional\n   * @param rental searchRentalDto\n   */\n  private async createRentalQuery(rental: SearchRentalDto) {\n    try {\n      const query: any = {\n        'scheduling.rentMinDuration': { $lte: rental.rentalDuration },\n        'scheduling.rentMaxDuration': { $gte: rental.rentalDuration },\n        'scheduling.requiredNotice': { $lte: rental.givenNotice },\n        'loc': {\n          $near: {\n            $maxDistance: 12875, // 8 miles\n            $geometry: {\n              type: rental.loc.type,\n              coordinates: [\n                rental.loc.coordinates[0], // latitude\n                rental.loc.coordinates[1], // longitude\n              ],\n            },\n          },\n        },\n      };\n      rental.price\n        ? (query.pricing = {\n          price: rental.price, // add price as optional search parameter\n        })\n        : (rental.price = null);\n      rental.features\n        ? (query.features = { $in: rental.features })\n        : (rental.features = null);\n      return query;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: validate there currently is no scheduled unavailability for the rental in the database that overlaps \n   * with the requested unavailability \n   * @param data query for 1 or 2 years\n   */\n  private checkForOverlap = async (data: ProcessedUnavailabilityDto) => {\n    const { y1Query, y2Query } = data;\n    // if there are 2 years\n    if (y2Query !== null) {\n      const test1 = await this.unavailability.find(y1Query);\n      const test2 = await this.unavailability.find(y2Query);\n      Logger.log(`test1`);\n      Logger.log(test1);\n      Logger.log(`test2`);\n      Logger.log(test2);\n      if (test1.length || test2.length) {\n        throw new Error('this request overlaps with existing unavailability');\n      }\n    }\n    // else\n    const test = await this.unavailability.find(y1Query);\n    if (test.length) {\n      throw new Error('this request overlaps with existing unavailability');\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCoordinatesDto.html":{"url":"classes/RequestCoordinatesDto.html","title":"class - RequestCoordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCoordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/request-coordinates.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto contains the results of the GivenNoticePipe; which added the givenNotice property to this data\n\npassed to the RequestCoordinatesPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                price\n                            \n                            \n                                rentalDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RequestCoordinatesDto {\n  address: string;\n  price: number;\n  features: string[];\n  rentalDuration: number; // enum\n  givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestCoordinatesPipe.html":{"url":"injectables/RequestCoordinatesPipe.html","title":"injectable - RequestCoordinatesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestCoordinatesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/request-coordinates.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a SearchRentalDto with the GeoJSON loc property with the HERE Geocoding & Searching API\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geoUrlApiUtil: GeoUrlApiUtil)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/request-coordinates.pipe.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geoUrlApiUtil\n                                                  \n                                                        \n                                                                        GeoUrlApiUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RequestCoordinatesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/request-coordinates.pipe.ts:17\n                \n            \n\n\n            \n                \n                    summary: finish transforming the client request into a SearchRentalDto using the geoUrlApiUtil.getCoordinates() method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RequestCoordinatesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the semi-processed client request data to search for Rentals\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { RequestCoordinatesDto } from '../dto/searchRental/request-coordinates.dto';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\n\n/**\n * **summary**: create a SearchRentalDto with the GeoJSON loc property with the [**HERE Geocoding & Searching API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html)\n */\n@Injectable()\nexport class RequestCoordinatesPipe implements PipeTransform {\n  constructor(private readonly geoUrlApiUtil: GeoUrlApiUtil) {}\n\n  /**\n   * **summary**: finish transforming the client request into a SearchRentalDto using the geoUrlApiUtil.getCoordinates() method\n   * @param value the semi-processed client request data to search for Rentals\n   */\n  async transform(value: RequestCoordinatesDto) {\n    const geoUrl = process.env.GEO_URL;\n    const apiKey = process.env.GEO_API_KEY; \n    try {\n      const dto: SearchRentalDto = {\n        address: value.address,\n        price: value.price,\n        features: value.features,\n        rentalDuration: value.rentalDuration,\n        loc: {\n          type: 'Point',\n          coordinates: await this.geoUrlApiUtil.getCoordinates(\n            value.address,\n            geoUrl,\n            apiKey\n          ),\n        },\n        givenNotice: value.givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/reset-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transer object for resetting a user password\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPass\n                            \n                            \n                                    Readonly\n                                resetPass\n                            \n                            \n                                    Readonly\n                                resetPasswordToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            confirmPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resetPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resetPasswordToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ResetPasswordDto {\n\treadonly resetPass: string;\n\treadonly confirmPass: string;\n\treadonly resetPasswordToken: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordTokenDto.html":{"url":"injectables/ResetPasswordTokenDto.html","title":"injectable - ResetPasswordTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/find-user-by-reset-password-token.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/find-user-by-reset-password-token.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class ResetPasswordTokenDto {\n    token: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Provider.html":{"url":"injectables/S3Provider.html","title":"injectable - S3Provider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Provider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/providers/s3.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getS3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/images/providers/s3.provider.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/providers/s3.provider.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AppConfigService } from \"src/config/configuration.service\";\nimport { S3 } from 'aws-sdk'\n\n@Injectable()\nexport class S3Provider {\n    constructor(private readonly appConfig: AppConfigService) {\n    }\n\n    getS3 = () => {\n        return new S3({\n            accessKeyId: this.appConfig.access_key_id,\n            secretAccessKey: this.appConfig.secret_access_key\n        })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchRentalDto.html":{"url":"classes/SearchRentalDto.html","title":"class - SearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/search-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto is the final form of the request to search for a rental. It includes the givenNotice,\nthe rentalDuration, and the GeoJSON loc property\n\npassed to the rental.service.searchRentals method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                loc\n                            \n                            \n                                price\n                            \n                            \n                                rentalDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SearchRentalDto {\n    address: string;\n    price: number;\n    features: string[];\n    rentalDuration: number;\n    loc: {\n        type: 'Point'\n        coordinates: [number, number];\n    };\n    givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SortUnavailabilityPipe.html":{"url":"injectables/SortUnavailabilityPipe.html","title":"injectable - SortUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SortUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/sort-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: sort the requested Rental Unavailability into a single or 2 year groupings (arrays). Sort each year's (array's) UnavailabilityDtos by ascending DOY (Day of the Year)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderYears\n                            \n                            \n                                    Private\n                                sort\n                            \n                            \n                                    Private\n                                validate2Years\n                            \n                            \n                                    Private\n                                validateSequential\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawScheduleUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:85\n                \n            \n\n\n            \n                \n                    summary: use the sort(), orderYears(), validateSequential(), and validate2Years() methods to sort and return the data as a ValidateScheduleUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawScheduleUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            orderYears\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:40\n                            \n                        \n\n                \n                    \n                        summary: return the sorted (by DOY) years in order, or return a single year\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        sorted\n                                                        \n                                                                the incoming data to be sorted\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:58\n                            \n                        \n\n                \n                    \n                        summary: separate years into y1 and y2 array and sort each by DOY\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw client request to schedule Unavailability on a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validate2Years\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:16\n                            \n                        \n\n                \n                    \n                        summary: validate that the requested Unavailability does not cross more than a one year duration\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        yearB\n                                                        \n                                                                this value is exactly 1 year from the current date\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateSequential\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:30\n                            \n                        \n\n                \n                    \n                        summary: validate that the request to schedule unavailability is sequential and not two separate blocks of time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        a\n                                                        \n                                                                year 1\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                year 2\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { UnavailabilityDto } from '../dto/unavailability/unavailability.dto';\nimport { RawScheduleUnavailabilityDto } from '../dto/unavailability/schedule/raw-schedule-unavailability.dto';\nimport { SortedUnavailabilityDto } from '../dto/unavailability/schedule/sorted-unavailability.dto';\nimport { ValidateScheduleUnavailabilityDto } from '../dto/unavailability/schedule/validate-schedule-unavailability.dto';\n/**\n * **summary**: sort the requested Rental Unavailability into a single or 2 year groupings (arrays). Sort each year's (array's) UnavailabilityDtos by ascending DOY (Day of the Year)\n */\n@Injectable()\nexport class SortUnavailabilityPipe implements PipeTransform {\n  \n  /**\n   * **summary**: validate that the requested Unavailability does not cross more than a one year duration\n   * @param yearB this value is exactly 1 year from the current date\n   */\n  private validate2Years = async (yearB: UnavailabilityDto[]): Promise => {\n    for (const x of yearB) {\n      if (x.year !== yearB[0].year) {\n        throw new Error('Cannot request 3 years of unavailability');\n      }\n    }\n    return;\n  }\n\n  /**\n   * **summary**: validate that the request to schedule unavailability is sequential and not two separate blocks of time\n   * @param a year 1\n   * @param b year 2\n   */\n  private validateSequential = async (a, b): Promise => {\n    if (a + 1 !== b) {\n      throw new Error('years must be sequential');\n    }\n  }\n\n  /**\n   * **summary**: return the sorted (by DOY) years in order, or return a single year\n   * @param sorted the incoming data to be sorted\n   */\n  private orderYears = async (sorted: SortedUnavailabilityDto): Promise => {\n    // return a single year\n    if (sorted.yB === null) {\n      return { y1: sorted.yA, y2: null };\n    }\n    // place 2 years in order & validate they are sequential\n    if (sorted.yA[0].year  => {\n    // grab the year property from the first element\n    const iYear: number = value.unavailability[0].year;\n    // filter for other year(s)\n    const tYearB: UnavailabilityDto[] = value.unavailability.filter(\n      val => val.year !== iYear,\n    );\n    // return 2 sorted years\n    if (tYearB && tYearB.length) {\n      await this.validate2Years(tYearB);\n      const yearB = tYearB.sort((a, b) => a.doy - b.doy);\n      const yearA: UnavailabilityDto[] = value.unavailability\n        .filter(val => val.year === iYear)\n        .sort((a, b) => a.doy - b.doy);\n      return { yA: yearA, yB: yearB };\n    }\n    // return a single sorted year\n    return {\n      yA: value.unavailability.sort((a, b) => a.doy - b.doy),\n      yB: null,\n    };\n  }\n\n  /**\n   * **summary**: use the sort(), orderYears(), validateSequential(), and validate2Years() methods to sort and return the data as a ValidateScheduleUnavailabilityDto\n   * @param value the raw client request data\n   */\n  async transform(value: RawScheduleUnavailabilityDto): Promise {\n    try {\n      const sorted: SortedUnavailabilityDto = await this.sort(value);\n      const ordered = await this.orderYears(sorted);\n      Logger.log(`the ordered data below:`);\n      Logger.log(ordered);\n      return ordered;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SortedUnavailabilityDto.html":{"url":"interfaces/SortedUnavailabilityDto.html","title":"interface - SortedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SortedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/sorted-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the raw unavailability request has now been sorted into two year groupings, if the requested unavailability\nspans across two years; e.g. December 20 2020 - January 5 2021\n\npassed to the ValidateUnavailabilityPipe\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        yA\n                                \n                                \n                                        yB\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        yA\n                                    \n                                \n                                \n                                    \n                                        yA:         UnavailabilityDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnavailabilityDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yB\n                                    \n                                \n                                \n                                    \n                                        yB:         UnavailabilityDto[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnavailabilityDto[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: the raw unavailability request has now been sorted into two year groupings, if the requested unavailability\n * spans across two years; e.g. December 20 2020 - January 5 2021\n * - passed to the ValidateUnavailabilityPipe\n */\nexport interface SortedUnavailabilityDto {\n    yA: UnavailabilityDto[];\n    yB: UnavailabilityDto[] | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestRentalService.html":{"url":"injectables/TestRentalService.html","title":"injectable - TestRentalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestRentalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/service/test-rental.service.ts\n        \n\n            \n                Description\n            \n            \n                Test Rental Service provides access to private rentalModel for Unit Testing\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRentalQuery\n                            \n                            \n                                    Async\n                                returnRentalModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rentalModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/service/test-rental.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rentalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRentalQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRentalQuery(rental)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/test-rental.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rental\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            returnRentalModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    returnRentalModel()\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/test-rental.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RentalInterface } from '../interface/schemaInterface/Rental/rental.interface';\nimport { Injectable } from '@nestjs/common';\n\n/**\n * Test Rental Service provides access to private rentalModel for Unit Testing\n */\n@Injectable()\nexport class TestRentalService {\n  constructor(\n    @InjectModel('Rental') private readonly rentalModel: Model,\n  ) {}\n\n  async returnRentalModel() {\n    return this.rentalModel;\n  }\n\n  async createRentalQuery(rental) {\n    const query: any = {\n      'scheduling.rentMinDuration': { $lte: rental.rentalDuration },\n      'scheduling.rentMaxDuration': { $gte: rental.rentalDuration },\n      'scheduling.requiredNotice': { $lte: rental.givenNotice },\n      'loc': {\n        $near: {\n          $maxDistance: 12875, // 8 miles\n          $geometry: {\n            type: rental.loc.type,\n            coordinates: [\n              rental.loc.coordinates[0], // latitude\n              rental.loc.coordinates[1], // longitude\n            ],\n          },\n        },\n      },\n    };\n    rental.price\n      ? (query.pricing = {\n          price: rental.price, // add price as optional search parameter\n        })\n      : (rental.priceRange = null);\n    rental.features\n      ? (query.features = { $in: rental.features })\n      : (rental.features = null);\n    return query;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransporterInterface.html":{"url":"interfaces/TransporterInterface.html","title":"interface - TransporterInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransporterInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/interface/transporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: transport interface for the gmail NodeMailer\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                                \n                                        host\n                                \n                                \n                                        port\n                                \n                                \n                                        secureConnection\n                                \n                                \n                                        tls\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secureConnection\n                                    \n                                \n                                \n                                    \n                                        secureConnection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tls\n                                    \n                                \n                                \n                                    \n                                        tls:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransporterInterface {\n    host: string;\n    secureConnection: boolean // TLS requires secureConnection to be false\n    port: number;\n    tls: {\n        ciphers: string;\n    }\n    auth: {\n        user: string;\n        pass: string;\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeOfValue.html":{"url":"classes/TypeOfValue.html","title":"class - TypeOfValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeOfValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/util/typeof-value.ts\n        \n\n            \n                Description\n            \n            \n                summary: confirm the provided value is the expected type or null\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/util/typeof-value.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TypeOfValue {\n    validate = (value: any, expected: string) => {\n        if ((typeof value) !== expected && value !== null) {\n            return false;\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityDto.html":{"url":"classes/UnavailabilityDto.html","title":"class - UnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: schedule a block of unavilable time for the rental on a given day and year\n\na user may schedule up to a year in the future so the specific \"year\" and \"day of the year\" is required\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityDto {\n    rentalId: string;\n    year: number;\n    doy: number; // day of the year\n    start: number; // min: 0; max: 24 military time\n    end: number; // min: 0; max: 24 military time\n    title: string; // e.g. Christmas Break\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityInterface.html":{"url":"classes/UnavailabilityInterface.html","title":"class - UnavailabilityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the 'Unavailability' Model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityInterface {\n    rentalId: string;\n    year: number;\n    doy: number; // day of the year\n    start: number; // min: 0; max: 24 military time\n    end: number; // min: 0; max: 24 military time\n    title: string; // e.g. Christmas Break\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityQueryDto.html":{"url":"classes/UnavailabilityQueryDto.html","title":"class - UnavailabilityQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/unavailability-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is used to check if the request to schedule Unavailability will overlap with Unavailability already scheduled for the rental in the database.\nThis dto uses a MongoDB $or aggregator to check the following Unavailability overlap conditions:\n\n1: verify the requested Unavailability does not 'enclose' an already scheduled Unavailability for this rental\n2: verify the requested Unavailability does not 'overlap' the end of an already scheduled Unavailability for this rental\n3: verify the requested Unavailability does not 'overlap' the start of an already scheduled Unavailability for this rental\n4: verify the requested Unavailability is not 'enclosed by' an already scheduled Unavailability for this rental\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $or\n                            \n                            \n                                doy\n                            \n                            \n                                rentalId\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $or\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type, literal type, literal type, literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityQueryDto {\n  rentalId: string;\n  year: number;\n  doy: { $lte: number; $gte: number };\n  $or: [\n    {\n      start: { $gte: number};\n      end: { $lte: number };\n    },\n    {\n      start: {$lte: number};\n      end: { $gte: number };\n    },\n    {\n        start: {$lte: number},\n        end: {$gte: number},\n    },\n    {\n        start: {$lte: number},\n        end: {$gte: number},\n    }\n  ];\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUnavailabilityDataDto.html":{"url":"classes/UpdateUnavailabilityDataDto.html","title":"class - UpdateUnavailabilityDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUnavailabilityDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/update-unavailability-data.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the mongoose update object created by the CreateUpdaterDtoPipe, it's the data to update an Unavailability for a rental\n\npassed to the rental.service.updateUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability-data.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability-data.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUnavailabilityDataDto {\n    filter: {\n        rentalId: string,\n        unavailabilityId: string,\n    };\n    updater: {\n        $set: {\n            start: number,\n            end: number,\n        },\n    } | {\n        $set: {\n            start: number,\n            end: number,\n            title: string,\n        },\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUnavailabilityDto.html":{"url":"classes/UpdateUnavailabilityDto.html","title":"class - UpdateUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/update-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this is a mapped version of the raw request to update a Rental's already scheduled Unavailability.\nIt serves a simplified reference to the original data that will be used by the handler\n\npassed to rental.service.updateUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEnd\n                            \n                            \n                                newStart\n                            \n                            \n                                newTitle\n                            \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEnd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUnavailabilityDto {\n  unavailabilityId: string;\n  rentalId: string;\n  newStart: number;\n  newEnd: number;\n  newTitle: string; // not required\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserDto.html":{"url":"injectables/UpdateUserDto.html","title":"injectable - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class UpdateUserDto {\n    username?: string;\n    email?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(user: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new BcryptHashPipe())@UsePipes(new JoiValidationPipe())@Post('create-user')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:25\n                \n            \n\n\n            \n                \n                    Create User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(data: DeleteUserDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Redirect('http://localhost:3000/auth/login', 302)@Post('delete-profile')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:66\n                \n            \n\n\n            \n                \n                    Delete User Profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user credentials\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(user: FindUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Get('find-user')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:53\n                \n            \n\n\n            \n                \n                    Find User by Email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                FindUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(update: UpdateUserDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Post('update-user')@Redirect('http://localhost:3000/auth/login')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:38\n                \n            \n\n\n            \n                \n                    Update User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        updates\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, UsePipes, UseGuards, Req, Redirect } from '@nestjs/common';\nimport { Request } from 'express';\nimport { JwtAuthGuard } from '../../auth/gaurds/jwt-auth.guard';\nimport { LoggedOutGaurd } from '../../auth/gaurds/logged-out.guard';\nimport { JoiValidationPipe } from '../../common/pipes/joi-validation.pipe';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { DeleteUserDto } from '../dto/delete-user.dto';\nimport { FindUserDto } from '../dto/find-user.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { BcryptHashPipe } from '../pipes/bcrypt.pipe';\nimport { CreateUserValidation } from '../schema/validation/create-user-validation.schema';\nimport { UserService } from '../service/user.service';\n\n@Controller('user')\nexport class UserController {\n    constructor(private readonly userService: UserService) {}\n    \n    /**\n     * Create User\n     * @param user new user\n     */\n    @UsePipes(new BcryptHashPipe())\n    @UsePipes(new JoiValidationPipe(CreateUserValidation))\n    @Post('create-user')\n    async createProfile(@Body() user: CreateUserDto) {\n        return await this.userService.createUser(user);\n    }\n\n    /**\n     * Update User\n     * @param update updates\n     * @param req \n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Post('update-user')\n    @Redirect('http://localhost:3000/auth/login')\n    async updateProfile(@Body() update: UpdateUserDto, @Req() req: Request) {\n        return await this.userService.updateUser(update, req);\n    }\n\n    /*\n     * See Images Controller for Upload User Image(s)\n    */\n\n    /**\n     * Find User by Email\n     * @param user \n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Get('find-user')\n    async findUser(@Body() user: FindUserDto) {\n        return await this.userService.findUser(user)\n    }\n\n\n    /**\n     * Delete User Profile\n     * @param data user credentials\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Redirect('http://localhost:3000/auth/login', 302)\n    @Post('delete-profile')\n    async deleteProfile(@Body() data: DeleteUserDto, @Req() req: Request) {\n        return this.userService.deleteUser(data, req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                User Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        resetPasswordExpires\n                                \n                                \n                                        resetPasswordToken\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordExpires\n                                    \n                                \n                                \n                                    \n                                        resetPasswordExpires:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordToken\n                                    \n                                \n                                \n                                    \n                                        resetPasswordToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n    username: string;\n    email: string;\n    password: string;\n    resetPasswordToken: string;\n    resetPasswordExpires: Date;\n  }\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppConfigModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nUserModule -->\n\nExtractKeyValueUtil->UserModule\n\n\n\n\n\nExtractUserUtil\n\nExtractUserUtil\n\nUserModule -->\n\nExtractUserUtil->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nUserModule -->\n\nVerifyNewPasswordUtil->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            ExtractUserUtil\n                        \n                        \n                            UserService\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from '../user/schema/user.schema'\nimport { UserController } from './controller/user.controller';\nimport { UserService } from './service/user.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { ValidateEmailMiddleware } from './middleware/validate-email.middleware';\nimport { userProvider} from '../database/providers/user-model.provider';\nimport { RedisModule } from '../redis/redis.module';\nimport { ExtractKeyValueUtil } from '../auth/util/extract-key-value.util';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { VerifyNewPasswordUtil } from '../auth/util/verify-new-password.util';\nimport { RedisService } from '../redis/service/redis.service';\nimport { ExtractUserUtil } from './util/extract-user.util';\n\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema}]),\n    DatabaseModule,\n    RedisModule,\n    AppConfigModule,\n    RedisModule\n  ],\n  providers: [UserService,...userProvider, ExtractKeyValueUtil, VerifyNewPasswordUtil, RedisService, ExtractUserUtil],\n  controllers: [UserController],\n  exports: [UserService], // used in the AuthService\n})\nexport class UserModule  {\n  constructor() {\n  }\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ValidateEmailMiddleware)\n      .forRoutes('v1/user')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPropertyDto.html":{"url":"classes/UserPropertyDto.html","title":"class - UserPropertyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPropertyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user-property.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for the req.user property added to the request by passport when a user is authenticated\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserPropertyDto {\n    _id: string;\n    username: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Private\n                                createUserUpdate\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                findUserByResetPasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                logoutUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, extractKeyValueUtil: ExtractKeyValueUtil, verifyNewPasswordUtil: VerifyNewPasswordUtil, redisService: RedisService, extractUserUtil: ExtractUserUtil)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractKeyValueUtil\n                                                  \n                                                        \n                                                                        ExtractKeyValueUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyNewPasswordUtil\n                                                  \n                                                        \n                                                                        VerifyNewPasswordUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractUserUtil\n                                                  \n                                                        \n                                                                        ExtractUserUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:31\n                \n            \n\n\n            \n                \n                    Create User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createUserUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserUpdate(data: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:126\n                \n            \n\n\n            \n                \n                    *** Private Functions ****\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(data: DeleteUserDto, req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:102\n                \n            \n\n\n            \n                \n                    Delete User Profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user credentials\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(data: FindUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:48\n                \n            \n\n\n            \n                \n                    Find User by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FindUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserByResetPasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByResetPasswordToken(data: ResetPasswordTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:63\n                \n            \n\n\n            \n                \n                    Find User by resetPasswordToken\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutUser(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(data: UpdateUserDto, req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:77\n                \n            \n\n\n            \n                \n                    Update User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { UserInterface } from '../interface/user.interface';\nimport { FindUserDto } from '../dto/find-user.dto';\nimport { ResetPasswordTokenDto } from '../dto/find-user-by-reset-password-token.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { Request } from 'express';\nimport { ExtractKeyValueUtil } from '../../auth/util/extract-key-value.util';\nimport { DeleteUserDto } from '../dto/delete-user.dto';\nimport { VerifyNewPasswordUtil } from 'src/auth/util/verify-new-password.util';\nimport { RedisService } from '../../redis/service/redis.service';\nimport { JwtPayloadDto } from 'src/auth/dto/jwt-payload';\nimport { ExtractUserUtil } from '../util/extract-user.util';\n\n@Injectable()\nexport class UserService {\n    constructor(\n        @InjectModel('User') private readonly userModel: Model,\n        private readonly extractKeyValueUtil: ExtractKeyValueUtil,\n        private readonly verifyNewPasswordUtil: VerifyNewPasswordUtil,\n        private readonly redisService: RedisService,\n        private readonly extractUserUtil: ExtractUserUtil,\n    ) { }\n\n    /**\n     * Create User\n     * @param user \n     */\n    async createUser(user: CreateUserDto) {\n        try {\n            const document = await new this.userModel(user);\n            await document.save();\n            document.password = undefined;\n            console.log('CREATE USER: RETURN');\n            console.log(document);\n            return document;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * Find User by email\n     * @param data email\n     */\n    async findUser(data: FindUserDto) {\n        try {\n            const user = await this.userModel.findOne({ email: data.email });\n            console.log('FIND USER: RETURN')\n            console.log(user);\n            return user;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * Find User by resetPasswordToken\n     * @param data the token\n     */\n    async findUserByResetPasswordToken(data: ResetPasswordTokenDto) {\n        try {\n            const user = await this.userModel.findOne({ resetPasswordToken: data.token });\n            console.log('FIND USER BY RESET PASSWORD TOKEN: RETURN')\n            console.log(user);\n            return user;\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n\n    /**\n     * Update User\n     */\n    async updateUser(data: UpdateUserDto, req: Request ) {\n        try {\n            // extract user email\n            const user: JwtPayloadDto = await this.extractUserUtil.extract(req);\n            const filter = {email: user.email };\n            // create an update object\n            let update = this.createUserUpdate(data);\n            const updater = {\n                $set: update,\n            }\n            // logout the user and return the data before redirecting to login\n            await this.logoutUser(req);\n            console.log('UPDATE USER: RETURN')\n            console.log(await this.userModel.findOneAndUpdate(filter, updater, {new: true}));\n            return await this.userModel.findOneAndUpdate(filter, updater, {new: true});\n       } catch(err) {\n           throw new Error(err)\n       }\n    }\n\n    /**\n     * Delete User Profile\n     * @param data user credentials\n     * @param req\n     */\n    async deleteUser(data: DeleteUserDto, req: Request) {\n        try {\n            // extract user email\n            const doc = await this.extractUserUtil.extract(req);\n            // query the user\n            const user = await this.findUser({email: doc.email});\n            // verify their password matches the current\n            await this.verifyNewPasswordUtil.verifyMatch({newPassword: data.password, oldPassword: user.password})\n            // logout\n            await this.logoutUser(req);\n            // delete\n            const res = await user.remove();\n            console.log('DELETE USER: RETURN')\n            console.log(res);\n            return res.deletedCount;\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     ************************ Private Functions ************************\n    */\n\n    private createUserUpdate(data: UpdateUserDto) {\n        let update: UpdateUserDto = {}\n        data.username ? update.username = data.username : data.username = null;\n        data.email ? update.email = data.email : data.email = null;\n        console.log('CREATE USER UPDATE: RETURN')\n        console.log(update);\n        return update;\n    }\n\n    private async logoutUser(req: Request){\n        const {jwt, key} = await this.extractKeyValueUtil.extract(req);\n        await this.redisService.set(key, jwt);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEditDetailsPipe.html":{"url":"injectables/ValidateEditDetailsPipe.html","title":"injectable - ValidateEditDetailsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEditDetailsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-edit-details.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate that the request to update the Rental's details (the spec property) will not violate the\nRentalSchemaValidation\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                positiveNumber\n                            \n                            \n                                typeOfValue\n                            \n                            \n                                    Private\n                                validateDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/validate-edit-details.pipe.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: EditDetailsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:99\n                \n            \n\n\n            \n                \n                    summary: use the validateDetails() method to validate the request before passing to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request to edit the details (spec property) of a Rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positiveNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PositiveNumber\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeOfValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TypeOfValue\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:23\n                            \n                        \n\n                \n                    \n                        summary: validate EditDetailsDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the request data to edit the rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { PositiveNumber } from '../../common/util/positive-number';\nimport { TypeOfValue } from '../../common/util/typeof-value';\n/**\n * **summary**: validate that the request to update the Rental's details (the spec property) will not violate the\n * RentalSchemaValidation\n */\n@Injectable()\nexport class ValidateEditDetailsPipe implements PipeTransform {\n\n    positiveNumber: PositiveNumber;\n    typeOfValue: TypeOfValue;\n    constructor() {\n        this.positiveNumber = new PositiveNumber();\n        this.typeOfValue = new TypeOfValue();\n    }\n\n    /**\n     * **summary**: validate EditDetailsDto\n     * @param value the request data to edit the rental\n     */\n    private validateDetails = async (value: EditDetailsDto) => {\n        // check rentalId\n        if (!value.rentalId || !this.typeOfValue.validate(value.rentalId, 'string')) {\n            throw new Error('Invalid rental id');\n        }\n        // must have at least one detail to update\n        if (!value.specs && !value.features) {\n            throw new Error('Invalid request, no details given');\n        }\n        // validate each spec value\n        if (value.specs) {\n            if (value.specs.odometer &&\n                !this.typeOfValue.validate(value.specs.odometer, 'number') || !this.positiveNumber.validate(value.specs.odometer)\n                ) {\n                    throw new Error('Odometer must be a positive number');\n                }\n            if (value.specs.transmission &&\n                !this.typeOfValue.validate(value.specs.transmission, 'string')) {\n                    throw new Error('transmission must be a valid value (string)');\n                }\n            if (value.specs.cityMpg &&\n                !this.typeOfValue.validate(value.specs.cityMpg, 'number') || !this.positiveNumber.validate(value.specs.cityMpg)) {\n                    throw new Error('cityMpg must be a positive number');\n                }\n            if (value.specs.hwyMpg &&\n                !this.typeOfValue.validate(value.specs.hwyMpg, 'number') || !this.positiveNumber.validate(value.specs.hwyMpg)) {\n                    throw new Error('hwyMpg must be a positive number');\n                }\n            if (value.specs.fuel &&\n                !this.typeOfValue.validate(value.specs.fuel, 'string')) {\n                    throw new Error('fuel must be a valid value (string)');\n                }\n            if (value.specs.gasGrade &&\n                !this.typeOfValue.validate(value.specs.gasGrade, 'string')) {\n                    throw new Error('gasGrade must be a valid value (string)');\n                }\n            if (value.specs.description &&\n                !this.typeOfValue.validate(value.specs.description, 'string')) {\n                    throw new Error('description must be a valid value (string)');\n                }\n            if (value.specs.model &&\n                !this.typeOfValue.validate(value.specs.model, 'string')) {\n                    throw new Error('model must be a valid value (string)');\n                }\n            if (value.specs.style &&\n                !this.typeOfValue.validate(value.specs.style, 'string')) {\n                    throw new Error('style must be a valid value (string)');\n                }\n            if (value.specs.color &&\n                !this.typeOfValue.validate(value.specs.color, 'string')) {\n                    throw new Error('color must be a valid value (string)');\n                }\n            if (value.specs.numOfSeats &&\n                !this.typeOfValue.validate(value.specs.numOfSeats, 'number') || !this.positiveNumber.validate(value.specs.numOfSeats)) {\n                    throw new Error('numOfSeats must be a positive number');\n                }\n            if (value.specs.numDoors &&\n                !this.typeOfValue.validate(value.specs.numDoors, 'number') || !this.positiveNumber.validate(value.specs.numDoors)) {\n                    throw new Error('numDoors must be a positive number');\n                }\n        }\n        if (value.features) {\n            if (value.features.length > 0) {\n                for (const x of value.features) {\n                    if (!this.typeOfValue.validate(x, 'string')) {\n                        throw new Error('features must be valid values (string)');\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * **summary**: use the validateDetails() method to validate the request before passing to the handler\n     * @param value the raw client request to edit the details (spec property) of a Rental\n     */\n    async transform(value: EditDetailsDto):Promise {\n        await this.validateDetails(value);\n        return value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEmailMiddleware.html":{"url":"injectables/ValidateEmailMiddleware.html","title":"injectable - ValidateEmailMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEmailMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/middleware/validate-email.middleware.ts\n        \n\n            \n                Description\n            \n            \n                Validate the requested email is unique to the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validateEmailUtil\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Private\n                                    Async\n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/middleware/validate-email.middleware.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/user/middleware/validate-email.middleware.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmail(value: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/middleware/validate-email.middleware.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateEmailUtil\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateEmailUtil\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/middleware/validate-email.middleware.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, NestMiddleware } from '@nestjs/common'\nimport { Request, Response } from 'express';\nimport { userModel } from '../../common/Const';\nimport { UserInterface } from '../interface/user.interface';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { ValidateEmailUtil } from '../util/validate-email.util';\n/**\n * Validate the requested email is unique to the database\n */\n@Injectable()\nexport class ValidateEmailMiddleware implements NestMiddleware {\n\n    validateEmailUtil: ValidateEmailUtil;\n    constructor(\n        @Inject(userModel)\n        private readonly user: Model,\n    ) {\n        this.validateEmailUtil = new ValidateEmailUtil()\n    }\n\n    private async validateEmail(value: CreateUserDto){\n        const check = await this.user.find({email: value.email});\n        this.validateEmailUtil.validateEmail(check)\n    }\n\n    async use(req: Request, res: Response, next: Function) {\n        // apply to create-user route\n        if (req.originalUrl === '/v1/user/create-user') {\n            await this.validateEmail(req.body);\n        }\n        next();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEmailUtil.html":{"url":"injectables/ValidateEmailUtil.html","title":"injectable - ValidateEmailUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEmailUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/util/validate-email.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/user/util/validate-email.util.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateEmail(check)\n                \n            \n\n\n            \n                \n                    Defined in src/user/util/validate-email.util.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    check\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class ValidateEmailUtil {\n    constructor() {}\n\n    validateEmail(check){\n        if(check.length === 0 || check.length === undefined) return\n        throw new Error('A User exists that is already using this email');\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateRemoveUnavailabilityPipe.html":{"url":"injectables/ValidateRemoveUnavailabilityPipe.html","title":"injectable - ValidateRemoveUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateRemoveUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-remove-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate a client request to remove (unschedule) Unavailability from a Rental\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                validateDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: RemoveUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-remove-unavailability.pipe.ts:24\n                \n            \n\n\n            \n                \n                    summary: use the validateDto method to validate the request before passing it on\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RemoveUnavailabilityDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-remove-unavailability.pipe.ts:12\n                            \n                        \n\n                \n                    \n                        summary: check the request has a valid rentalId and unavailabilityId\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw client request to remove Unavailability from a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\n/**\n * **summary**: validate a client request to remove (unschedule) Unavailability from a Rental\n */\n@Injectable()\nexport class ValidateRemoveUnavailabilityPipe implements PipeTransform {\n    /**\n     * **summary**: check the request has a valid rentalId and unavailabilityId\n     * @param value the raw client request to remove Unavailability from a Rental\n     */\n    private validateDto = (value: RemoveUnavailabilityDto) => {\n        if (typeof value.rentalId !== 'string') {\n            throw new Error('invalid rental ID; must be a string');\n        }\n        if (typeof value.unavailabilityId !== 'string') {\n            throw new Error('invalid unavailability ID; must be a string');\n        }\n    }\n    /**\n     * **summary**: use the validateDto method to validate the request before passing it on\n     * @param value the raw client request\n     */\n    transform(value: RemoveUnavailabilityDto):RemoveUnavailabilityDto {\n        this.validateDto(value);\n        return value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateScheduleUnavailabilityDto.html":{"url":"classes/ValidateScheduleUnavailabilityDto.html","title":"class - ValidateScheduleUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateScheduleUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the SortUnavailabilityPipe, this dto contains the raw request to schedule Unavailability\nfor a rental sorted into two year groupings; if the requested Unavailability spans across 2 years. This would usually occur\nnear the end of a year, such as from Decemeber 20, 2020 - January 5, 2021\n\npassed to the ValidateUnavailabilityPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[] | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: returned by the SortUnavailabilityPipe, this dto contains the raw request to schedule Unavailability\n * for a rental sorted into two year groupings; if the requested Unavailability spans across 2 years. This would usually occur\n * near the end of a year, such as from Decemeber 20, 2020 - January 5, 2021\n * - passed to the ValidateUnavailabilityPipe\n */\nexport class ValidateScheduleUnavailabilityDto {\n    y1: UnavailabilityDto[];\n    y2: UnavailabilityDto[] | null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateUnavailabilityPipe.html":{"url":"injectables/ValidateUnavailabilityPipe.html","title":"injectable - ValidateUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-unavailability.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLeapYear\n                            \n                            \n                                    Private\n                                convertToDateTime\n                            \n                            \n                                    Private\n                                validateCrossover\n                            \n                            \n                                    Private\n                                validateCrossYearCongruence\n                            \n                            \n                                    Private\n                                validateEachUnavailability\n                            \n                            \n                                    Private\n                                validateMinNotice\n                            \n                            \n                                    Private\n                                validateRelevance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidateScheduleUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:210\n                \n            \n\n\n            \n                \n                    summary: use the validateRelevance(), validateEachUnavailability(), validateCrossover(), validateCrossYearCongruence(),\nvalidateMinNotice(), and checkLeapYear() methods to validate the client request and return a ValidatedUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidateScheduleUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sorted but unvalidated client request data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkLeapYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:122\n                            \n                        \n\n                \n                    \n                        summary: use the Luxon DateTime.isInLeapYear() method\nto check if the this current year is a leap year. For example, this year 2020 is actually a leap year!\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        u1\n                                                        \n                                                                the initial unavailability's DateTime\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            convertToDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:28\n                            \n                        \n\n                \n                    \n                        summary: confirm that the user is requesting to schedule a single block of Unavailable time for their Rental that is logically and will\nnot cause an error in the application\n-validate requested rental start DateTime is not before the current DateTime\n\nif 2 years\nvalidate each unavailability for y1 and y2 (private validateUnavailability)\ncheck if y1 is a leap year, validate the number of days in the year (DOY) if it is a leap year\nvalidate DOY crossover from y1 to y2; validate the extra DOY if it's a leap year\n\n\nelse: \nvalidate each unavailability in the single year\n\n\nreturn the validated year(s)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateCrossover\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:79\n                            \n                        \n\n                \n                    \n                        summary: this method is called when the requested Unavailability spans into the next year. this method verifies that the crossover into the next year\nincludes the extra day if it's a leapYear. Even if it's not a leap year, this method verifies there are no missing or extra days as the Unavailability enters the\nstart of the next year\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                \n                                                \n                                                        y2\n                                                \n                                                \n                                                        ly\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateCrossYearCongruence\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:184\n                            \n                        \n\n                \n                    \n                        summary: validate congruence in rentalId, start, end, and title across y1 and y2\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                        \n                                                                the first year of the requested Unavailability\n\n                                                        \n                                                \n                                                \n                                                        y2\n                                                        \n                                                                the second year of the requested Unavailability\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateEachUnavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:133\n                            \n                        \n\n                \n                    \n                        summary: validate the data inisde of each UnavailabilityDto that will be used to schedule a sequential single 'block of Unavailability' for the Rental\n\nnote: uses the toItemIndexes() util to map a new array of tuples conataining an UnavailabilityDto and it's index in the array\n\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        unavailability\n                                                        \n                                                                an array of UnavailabilityDtos, which is the data to create an individual Unavailability Document in the database\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateMinNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:47\n                            \n                        \n\n                \n                    \n                        summary: validate that the requested unavailability is not before the current date & time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        a\n                                                        \n                                                                = request start DateTime\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                = current DateTime\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateRelevance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:60\n                            \n                        \n\n                \n                    \n                        summary: validate the requested unavailability start time is not in the past\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the ordered unavailability from previous pipe\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { DateTime, Interval } from 'luxon';\nimport { ValidateScheduleUnavailabilityDto } from '../dto/unavailability/schedule/validate-schedule-unavailability.dto';\nimport { UnavailabilityDto } from '../dto/unavailability/unavailability.dto';\nimport { toItemIndexes } from '../../common/util/to-item-indexes';\nimport { validated } from '../../common/Const';\nimport { ValidatedUnavailabilityDto } from '../dto/unavailability/validated-unavailability.dto';\n\n@Injectable()\nexport class ValidateUnavailabilityPipe implements PipeTransform {\n  /**\n   * **summary**: confirm that the user is requesting to schedule a single block of Unavailable time for their Rental that is logically and will\n   * not cause an error in the application\n   * -validate requested rental start DateTime is not before the current DateTime\n   * - if 2 years\n   *   - validate each unavailability for y1 and y2 (private validateUnavailability)\n   *   - check if y1 is a leap year, validate the number of days in the year (DOY) if it is a leap year\n   *   - validate DOY crossover from y1 to y2; validate the extra DOY if it's a leap year\n   * - else: \n   *   - validate each unavailability in the single year\n   * - return the validated year(s)\n   */\n\n  /**\n   * **summary**: use the [**Luxon DateTime.fromObject()**]() method to create a new DateTime from the raw client requested startTime\n   * @param u1 the 1st unavailabilityDto\n   */\n  private convertToDateTime = async (u1: UnavailabilityDto): Promise => {\n    if (!u1) {\n      throw new Error('There is no requested unavailability');\n    }\n    const start: DateTime = DateTime.fromObject({\n      year: u1.year,\n      ordinal: u1.doy,\n      hour: u1.start,\n    });\n    Logger.log(`the requested start DateTime below:`);\n    Logger.log(start);\n    return start;\n  }\n\n  /**\n   * **summary**: validate that the requested unavailability is not before the current date & time\n   * @param a = request start DateTime\n   * @param b = current DateTime\n   */\n  private validateMinNotice = async (a: DateTime, b: DateTime) => {\n    const notice: Interval = Interval.fromDateTimes(a, b).count('hours');\n    if (isNaN(notice) || notice  => {\n    // should already know y1 and y2\n    const currentDateTime = DateTime.local();\n    Logger.log(`the current DateTime below:`);\n    Logger.log(currentDateTime);\n    const start: DateTime = await this.convertToDateTime(value.y1[0]);\n    // compare current DT and start DT\n    await this.validateMinNotice(currentDateTime, start);\n    return start;\n  }\n\n  /**\n   * **summary**: this method is called when the requested Unavailability spans into the next year. this method verifies that the crossover into the next year\n   * includes the extra day if it's a leapYear. Even if it's not a leap year, this method verifies there are no missing or extra days as the Unavailability enters the\n   * start of the next year\n   * @param y1 \n   * @param y2 \n   * @param ly \n   */\n  private validateCrossover = async (\n    y1: UnavailabilityDto[],\n    y2: UnavailabilityDto[],\n    ly: boolean,\n  ): Promise => {\n    // y1's final Unavailability\n    const y1Final = y1[y1.length - 1];\n    // # of days in y1\n    const diy = (await this.convertToDateTime(y1Final)).daysInYear;\n    // final DOY of y1 must equal diy of y1\n    if (diy !== y1Final.doy) {\n      if (ly) {\n        throw new Error(\n          `the final day of this leap year, ${y1Final.doy}/${\n            y1Final.year\n          }, is missing`,\n        );\n      }\n      throw new Error(\n        `the final day of this year, ${y1Final.doy}/${y1Final.year}, is missing`,\n      );\n    }\n    // validate y2 starts at 0, we already know it's sequential\n    if (y2[0]) {\n      if (y2[0].doy !== 0) {\n        throw new Error('the 1st day of the second year is missing');\n      }\n    } else {\n      throw new Error('there is not a second year');\n    }\n    Logger.log('the final unavailability of y1');\n    Logger.log(y1Final);\n    Logger.log(\n      `the total days in y1: ${diy} & the final day of y1: ${y1Final.doy}`,\n    );\n    Logger.log(`this is a leap year: ${ly}`);\n  }\n\n  /**\n   * **summary**: use the [*Luxon DateTime.isInLeapYear()*](https://moment.github.io/luxon/docs/class/src/datetime.js~DateTime.html#instance-get-isInLeapYear) method\n   * to check if the this current year is a [**leap year**](https://www.timeanddate.com/date/leapyear.html). For example, this year 2020 is actually a leap year!\n   * @param u1 the initial unavailability's DateTime\n   */\n  private checkLeapYear = async (u1: DateTime) => {\n    const check = u1.isInLeapYear;\n\n    return check; // true or false\n  }\n\n  /**\n   * **summary**: validate the data inisde of each UnavailabilityDto that will be used to schedule a sequential single 'block of Unavailability' for the Rental\n   * - note: uses the toItemIndexes() util to map a new array of **tuples** conataining an UnavailabilityDto and it's index in the array\n   * @param unavailability an array of UnavailabilityDtos, which is the data to create an individual Unavailability Document in the database\n   */\n  private validateEachUnavailability = async (\n    unavailability: UnavailabilityDto[],\n  ) => {\n    const base = unavailability[0];\n    for (const { item, index } of toItemIndexes(unavailability)) {\n      // rentalId congruence\n      if (item.rentalId !== base.rentalId) {\n        throw new Error('request cannot have more than 1 Rental ID');\n      }\n      // interval\n      if (item.start >= item.end) {\n        throw new Error('start time cannot be before end time');\n      }\n      // interval congruence\n      if (item.start !== base.start || item.end !== base.end) {\n        throw new Error(\n          'each requested day of unavailability must share the same start end time',\n        );\n      }\n      // MTime\n      if (item.start  24 || item.end  24) {\n        throw new Error('the unavailable time must be in military time format');\n      }\n      // year congruence\n      if (item.year !== base.year) {\n        throw new Error(\n          `invalid year: first year ${item.year} second year ${base.year}`,\n        );\n      }\n      // sequential DOY\n      if (index > 0) {\n        if (unavailability[index].doy - 1 !== unavailability[index - 1].doy) {\n          throw new Error('The requested unavailability is not sequential');\n        }\n      }\n      // title congruence\n      if (item.title !== base.title) {\n        throw new Error(\n          `request cannot have more than one title: 1st year title \"${\n            item.title\n          }\" 2nd year title \"${base.title}\"`,\n        );\n      }\n    }\n  }\n\n  /**\n   * **summary**: validate congruence in rentalId, start, end, and title across y1 and y2\n   * @param y1 the first year of the requested Unavailability\n   * @param y2 the second year of the requested Unavailability\n   */\n  private validateCrossYearCongruence = async (\n    y1: UnavailabilityDto,\n    y2: UnavailabilityDto,\n  ) => {\n    if (y1.rentalId !== y2.rentalId) {\n      throw new Error('request cannot have more than 1 Rental ID');\n    }\n    if (y1.start !== y2.start || y1.end !== y2.end) {\n      throw new Error(\n        'each requested day of unavailability must share the same start end time',\n      );\n    }\n    if (y1.title !== y2.title) {\n      throw new Error(\n        `request cannot have more than one title: 1st year title \"${\n          y1.title\n        }\" 2nd year title \"${y2.title}\"`,\n      );\n    }\n  }\n\n  /**\n   * **summary**: use the validateRelevance(), validateEachUnavailability(), validateCrossover(), validateCrossYearCongruence(),\n   * validateMinNotice(), and checkLeapYear() methods to validate the client request and return a ValidatedUnavailabilityDto\n   * @param value the sorted but unvalidated client request data\n   */\n  async transform(value: ValidateScheduleUnavailabilityDto): Promise {\n    try {\n      const start: DateTime = await this.validateRelevance(value);\n      // if 2 years; if there are 2 years we know y1 must include the final doy of y1\n      if (value.y2 !== null) {\n        // validate 2 years\n        await this.validateEachUnavailability(value.y1);\n        await this.validateEachUnavailability(value.y2);\n        // check if y1 is a leap year\n        const ly = await this.checkLeapYear(start);\n        // validate crossover from y1 to y2; account for if it's a leap year\n        await this.validateCrossover(value.y1, value.y2, ly);\n        await this.validateCrossYearCongruence(value.y1[0], value.y2[0]);\n        // return a ValidatedUnavailabilityDto\n        return { y1: value.y1, y2: value.y2, validated };\n      }\n      await this.validateEachUnavailability(value.y1);\n      return { y1: value.y1, y2: null, validated };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateUpdateUnavailabilityDto.html":{"url":"classes/ValidateUpdateUnavailabilityDto.html","title":"class - ValidateUpdateUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateUpdateUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is used to query and validate that the Rental actually has the scheduled Unavailability\nthat the user is requesting to update\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEnd\n                            \n                            \n                                newStart\n                            \n                            \n                                newTitle\n                            \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEnd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidateUpdateUnavailabilityDto {\n  unavailabilityId: string;\n  rentalId: string;\n  y1: {\n    sD: number;\n    eD: number;\n  };\n  y2: {\n    sD: number;\n    eD: number;\n  };\n  newStart: number;\n  newEnd: number;\n  newTitle: string | null; // not required\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{"url":"injectables/ValidateUpdateUnavailabilityMiddleware.html","title":"injectable - ValidateUpdateUnavailabilityMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateUpdateUnavailabilityMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/middleware/validate-update-unavailability.middleware.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate that incoming request to update a rental's already scheduled Unavailability. Validate that the expected # of unavailability docs are present in the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateRange\n                            \n                            \n                                    Private\n                                validateDto\n                            \n                            \n                                    Private\n                                validateExpectedUnavailability\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(unavailability: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        unavailability\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:144\n                \n            \n\n\n            \n                \n                    summary: apply the validatedto(), calculateRange(), and validateExpectedUnavailability() methods to incoming requests to the\nrental.controller.updateUnavailability() method. Validate the request before passing the data to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the response object\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the next method to continue onto the next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:22\n                            \n                        \n\n                \n                    \n                        summary: calculate the range of the requested Unavailability to update for the Rental\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                        \n                                                                the start and end day of the first year that the Unavailability is scheduled across\n\n                                                        \n                                                \n                                                \n                                                        y2\n                                                        \n                                                                the start and end day of the second yaer that the Unavailability is scheduled across; if there is a second year\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:69\n                            \n                        \n\n                \n                    \n                        summary: validate the incoming dto data does not break the below validation tree\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the sorted request to update already scheduled Unavailability on a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateExpectedUnavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:47\n                            \n                        \n\n                \n                    \n                        summary: validate that the unavailability to be updated is present in the database, and verify that the expected range (number of days) of the Unavailability to update\nmatches the actual range of the Unavailability as it's saved in the database. Use the results of the calculateRange() method, to compare the range of the Unavailability in\nthe database to the range of the request\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw request data\n\n                                                        \n                                                \n                                                \n                                                        range\n                                                        \n                                                                the range of the requested update Unavailability data\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { unavailabilityModel } from '../../common/Const';\nimport { Model } from 'mongoose';\nimport { UnavailabilityInterface } from '../interface/schemaInterface/Unavailability/unavailability.interface';\nimport { ValidateUpdateUnavailabilityDto } from '../dto/unavailability/update/validate-update-unavailability.dto';\n/**\n * **summary**: validate that incoming request to update a rental's already scheduled Unavailability. Validate that the expected # of unavailability docs are present in the database\n */\n@Injectable()\nexport class ValidateUpdateUnavailabilityMiddleware implements NestMiddleware {\n  constructor(\n    @Inject(unavailabilityModel)\n    private readonly unavailability: Model,\n  ) {}\n\n  /**\n   * **summary**: calculate the [**range**](https://www.mathsisfun.com/data/range.html) of the requested Unavailability to update for the Rental\n   * @param y1 the start and end day of the first year that the Unavailability is scheduled across\n   * @param y2 the start and end day of the second yaer that the Unavailability is scheduled across; if there is a second year\n   */\n  private calculateRange = async (\n    y1: { sD: number; eD: number },\n    y2: { sD: number; eD: number } | null,\n  ) => {\n    if (y2 !== null) {\n      // calculate range for 2 years\n      let temp1: number;\n      let temp2: number;\n      y1.sD === y1.eD ? temp1 = 1 : temp1 = y1.eD - y1.sD + 1;\n      y2.sD === y2.eD ? temp2 = 1 : temp2 = y2.eD - y2.sD + 1;\n      return {range: temp1 + temp2};\n    }\n    if (y1.sD !== y1.eD) {\n      return { range: y1.eD - y1.sD + 1 };\n    }\n    return { range: 1 };\n  }\n\n  /**\n   * **summary**: validate that the unavailability to be updated is present in the database, and verify that the expected **range** (number of days) of the Unavailability to update\n   * matches the actual range of the Unavailability as it's saved in the database. Use the results of the calculateRange() method, to compare the range of the Unavailability in\n   * the database to the range of the request\n   * @param value the raw request data\n   * @param range the range of the requested update Unavailability data\n   */\n  private validateExpectedUnavailability = async (\n    value: ValidateUpdateUnavailabilityDto, range: {range: number},\n  ) => {\n    const test = await this.unavailability.find({\n      rentalId: value.rentalId,\n      unavailabilityId: value.unavailabilityId,\n    });\n\n    if (test.length  {\n    if (typeof value.unavailabilityId !== 'string') {\n      throw new Error('invalid unavailabilityId; must be a string');\n    }\n    if (typeof value.rentalId !== 'string') {\n      throw new Error('invalid rental ID; must be a string');\n    }\n    if (\n      typeof value.newStart !== 'number' ||\n      value.newStart  24\n    ) {\n      throw new Error('invalid start time; must be a number');\n    }\n    if (\n      typeof value.newEnd !== 'number' ||\n      value.newEnd  24\n    ) {\n      throw new Error('invalid end time; must be a number');\n    }\n    if (value.newStart >= value.newEnd) {\n      throw new Error(\n        'start time cannot be the same as, or before, the end time',\n      );\n    }\n    if (typeof value.y1.sD !== 'number') {\n      throw new Error('invalid minimum DOY; must be a number');\n    }\n    if (typeof value.y1.eD !== 'number') {\n      throw new Error('invalid maximum DOY; must be a number');\n    }\n    if (value.y1.sD > value.y1.eD) {\n      throw new Error('minimum DOY cannot be larger than maximum DOY');\n    }\n    if (typeof value.y2.sD !== 'number') {\n      throw new Error('invalid minimum DOY; must be a number');\n    }\n    if (typeof value.y2.eD !== 'number') {\n      throw new Error('invalid maximum DOY; must be a number');\n    }\n    if (value.y2.sD > value.y2.eD) {\n      throw new Error('minimum DOY cannot be larger than maximum DOY');\n    }\n    if (typeof value.newTitle !== 'string' && value.newTitle !== null) {\n      throw new Error('invalid title; must be a string');\n    }\n    if (\n      typeof value.newStart !== 'number' ||\n      value.newStart  24\n    ) {\n      throw new Error('invalid update start time; must be a number');\n    }\n    if (\n      typeof value.newEnd !== 'number' ||\n      value.newEnd  24\n    ) {\n      throw new Error('invalid update end time; must be a number');\n    }\n    if (value.newStart >= value.newEnd) {\n      throw new Error(\n        'update start time cannot be the same as, or before, the update end time',\n      );\n    }\n  }\n\n  /**\n   * **summary**: apply the validatedto(), calculateRange(), and validateExpectedUnavailability() methods to incoming requests to the\n   * rental.controller.updateUnavailability() method. Validate the request before passing the data to the handler\n   * @param req the request object\n   * @param res the response object\n   * @param next the next method to continue onto the next handler\n   */\n  async use(req: Request, res: Response, next: Function):Promise {\n    // apply only to update-unavailability request\n    if (req.originalUrl === '/v1/rental/update-unavailability') {\n      await this.validateDto(req.body);\n      const range = await this.calculateRange(req.body.y1, req.body.y2); // to validate expected # of Unavailability docs\n      await this.validateExpectedUnavailability(req.body, range);\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidatedUnavailabilityDto.html":{"url":"classes/ValidatedUnavailabilityDto.html","title":"class - ValidatedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidatedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/validated-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is the now validated UnavailabilityDto that will be used to create the final dto to be passed to\nthe rental.service.scheduleUnavailability() method\n\npassed to the ProcessUnavailabilityPipe, the last pipe before the rental.service.scheduleUnavailability() handler method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validated\n                            \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[] | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../../dto/unavailability/unavailability.dto';\n/**\n * **summary**: this data is the now validated UnavailabilityDto that will be used to create the final dto to be passed to\n * the rental.service.scheduleUnavailability() method\n * - passed to the ProcessUnavailabilityPipe, the last pipe before the rental.service.scheduleUnavailability() handler method\n */\nexport class ValidatedUnavailabilityDto {\n    y1: UnavailabilityDto[];\n    y2: UnavailabilityDto[] | null;\n    validated: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyNewPasswordDto.html":{"url":"classes/VerifyNewPasswordDto.html","title":"class - VerifyNewPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyNewPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/verify-new-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data transfer object for creating a new passowrd\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/verify-new-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/verify-new-password.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class VerifyNewPasswordDto {\n    newPassword: string;\n    oldPassword: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyNewPasswordUtil.html":{"url":"injectables/VerifyNewPasswordUtil.html","title":"injectable - VerifyNewPasswordUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VerifyNewPasswordUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/util/verify-new-password.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate incoming new password data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkTypos\n                            \n                            \n                                    Async\n                                verifyMatch\n                            \n                            \n                                    Async\n                                verifyNew\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkTypos\n                        \n                        \n                    \n                \n            \n            \n                \ncheckTypos(data: CheckPasswordTypoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:35\n                \n            \n\n\n            \n                \n                    summary: verify the user entered the same password twice\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CheckPasswordTypoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyMatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyMatch(data: VerifyNewPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:25\n                \n            \n\n\n            \n                \n                    summary: verify the entered password matches the password saved in the database for this user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VerifyNewPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyNew\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyNew(data: VerifyNewPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:15\n                \n            \n\n\n            \n                \n                    summary: verify the new password does not match the database password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VerifyNewPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { VerifyNewPasswordDto } from \"../dto/verify-new-password.dto\";\nimport * as bcrypt from 'bcrypt';\nimport { CheckPasswordTypoDto } from \"../dto/check-password-typo.dto\";\n/**\n * **summary**: validate incoming new password data\n */\n@Injectable()\nexport class VerifyNewPasswordUtil {\n\n    /**\n     * **summary**: verify the new password does not match the database password\n     * @param data \n     */\n    async verifyNew(data: VerifyNewPasswordDto): Promise{\n        const check = await bcrypt.compare(data.newPassword, data.oldPassword);\n        if (check) { throw new Error('Error: The new password cannot mathch the current password.') };\n        return;\n    }\n\n    /**\n     * **summary**: verify the entered password matches the password saved in the database for this user\n     * @param data \n     */\n    async verifyMatch(data: VerifyNewPasswordDto): Promise{\n        const check = await bcrypt.compare(data.newPassword, data.oldPassword);\n        if (!check) { throw new Error('Error: incorrect password entered')};\n        return;\n    }\n\n    /**\n     * **summary**: verify the user entered the same password twice\n     * @param data \n     */\n    checkTypos(data: CheckPasswordTypoDto): Promise {\n        const check = data.newPassword === data.confirmPassword;\n        if (check) { return };\n        throw new Error('You did not enter the same password twice, please try again')\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/constant.ts\n            \n            variable\n            jwtConstants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/check-password-typo.dto.ts\n            \n            class\n            CheckPasswordTypoDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/extract-key-value-util.dto.ts\n            \n            class\n            ExtractKeyValueUtilDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/dto/jwt-payload.ts\n            \n            class\n            JwtPayloadDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/dto/user-property.dto.ts\n            \n            class\n            UserPropertyDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/auth/dto/verify-new-password.dto.ts\n            \n            class\n            VerifyNewPasswordDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/gaurds/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/gaurds/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/gaurds/logged-out.guard.ts\n            \n            guard\n            LoggedOutGaurd\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/auth/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/util/extract-key-value.util.ts\n            \n            injectable\n            ExtractKeyValueUtil\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/util/verify-new-password.util.ts\n            \n            injectable\n            VerifyNewPasswordUtil\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            databaseConnection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            rentals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            unavailabilityModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            userModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            validated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/error.filters.ts\n            \n            class\n            ErrorFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/common/filters/http-error.filter.ts\n            \n            class\n            HttpErrorFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/logging-interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/pipes/joi-validation.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/util/positive-number.ts\n            \n            injectable\n            PositiveNumber\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/util/to-item-indexes.ts\n            \n            variable\n            toItemIndexes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/util/typeof-value.ts\n            \n            class\n            TypeOfValue\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/config/configuration.service.ts\n            \n            injectable\n            AppConfigService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/database/providers/database.provider.ts\n            \n            variable\n            databaseProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/providers/unavailability-model.provider.ts\n            \n            variable\n            unavailabilityProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/providers/user-model.provider.ts\n            \n            variable\n            userProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/email/interface/mailoptions.interface.ts\n            \n            interface\n            MailOptionsInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/email/interface/transporter.interface.ts\n            \n            interface\n            TransporterInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/images/controller/images.controller.ts\n            \n            controller\n            ImagesController\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/images/dto/image-query-results.dto.ts\n            \n            class\n            ImageQueryResultsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/dto/image.dto.ts\n            \n            class\n            ImageDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/interface/image-upload.interface.ts\n            \n            interface\n            ImageUploadInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/images/interface/image.interface.ts\n            \n            interface\n            ImageInterface\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/images/interface/processed-save-data.interface.ts\n            \n            interface\n            ProcessedSaveDataInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/interface/processed-upload-data.interface.ts\n            \n            interface\n            ProcessedUploadDataInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/providers/s3.provider.ts\n            \n            injectable\n            S3Provider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/schema/images.schema.ts\n            \n            variable\n            ImageSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/schema/images.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/service/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/images/util/create-multer-upload.util.ts\n            \n            injectable\n            CreateMulterUploadUtil\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/images/util/delete-s3-images.util.ts\n            \n            injectable\n            DeleteS3ImagesUtil\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/images/util/multer-upload.util.ts\n            \n            injectable\n            MulterUploadUtil\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/images/util/process-save-data.util.ts\n            \n            injectable\n            ProcessSaveDataUtil\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/controller/rental.controller.ts\n            \n            controller\n            RentalController\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/create-rental.dto.ts\n            \n            class\n            CreateRentalDto\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/loc-create-rental.dto.ts\n            \n            class\n            LocCreateRentalDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/raw-coordinates.dto.ts\n            \n            class\n            RawCoordinatesDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/raw-create-rental-dto.ts\n            \n            class\n            RawCreateRentalDto\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/rental/dto/details/edit-details.dto.ts\n            \n            class\n            EditDetailsDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/pricing/pricing.dto.ts\n            \n            class\n            PricingDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/given-notice-search-rental-dto.ts\n            \n            class\n            GivenNoticeSearchRentalDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/process-rental-time.dto.ts\n            \n            class\n            ProcessRentalTimeDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/raw-search-rental.dto.ts\n            \n            class\n            RawSearchRentalDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/request-coordinates.dto.ts\n            \n            class\n            RequestCoordinatesDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/search-rental.dto.ts\n            \n            class\n            SearchRentalDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/remove/remove-unavailability.dto.ts\n            \n            class\n            RemoveUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/create-query.dto.ts\n            \n            class\n            CreateQueryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts\n            \n            class\n            ProcessedUnavailabilityQueryDto\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts\n            \n            class\n            ProcessedUnavailabilityDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts\n            \n            class\n            RawScheduleUnavailabilityDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/sorted-unavailability.dto.ts\n            \n            interface\n            SortedUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/unavailability-query.dto.ts\n            \n            class\n            UnavailabilityQueryDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts\n            \n            class\n            ValidateScheduleUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/unavailability.dto.ts\n            \n            class\n            UnavailabilityDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/update-unavailability-data.dto.ts\n            \n            class\n            UpdateUnavailabilityDataDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/update-unavailability.dto.ts\n            \n            class\n            UpdateUnavailabilityDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts\n            \n            class\n            ValidateUpdateUnavailabilityDto\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/validated-unavailability.dto.ts\n            \n            class\n            ValidatedUnavailabilityDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/interface/schemaInterface/Rental/rental.interface.ts\n            \n            interface\n            RentalInterface\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts\n            \n            class\n            UnavailabilityInterface\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/middleware/validate-update-unavailability.middleware.ts\n            \n            injectable\n            ValidateUpdateUnavailabilityMiddleware\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/create-updater-dto.pipe.ts\n            \n            injectable\n            CreateUpdaterDtoPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/geo-url-api.pipe.ts\n            \n            injectable\n            GeoUrlApiPipe\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/rental/pipes/given-notice.pipe.ts\n            \n            injectable\n            GivenNoticePipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/map-new-rental.pipe.ts\n            \n            injectable\n            MapNewRentalPipe\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/rental/pipes/pricing.pipe.ts\n            \n            injectable\n            PricingPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/process-unavailability.pipe.ts\n            \n            injectable\n            ProcessUnavailabilityPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/rental-duration.pipe.ts\n            \n            injectable\n            RentalDurationPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/request-coordinates.pipe.ts\n            \n            injectable\n            RequestCoordinatesPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/sort-unavailability.pipe.ts\n            \n            injectable\n            SortUnavailabilityPipe\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-edit-details.pipe.ts\n            \n            injectable\n            ValidateEditDetailsPipe\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-remove-unavailability.pipe.ts\n            \n            injectable\n            ValidateRemoveUnavailabilityPipe\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-unavailability.pipe.ts\n            \n            injectable\n            ValidateUnavailabilityPipe\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            ObjectID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            RentalSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/unavailability-schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/unavailability-schema.ts\n            \n            variable\n            UnavailabilitySchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/validation/create-rental-validation.schema.ts\n            \n            variable\n            CreateRentalValidationSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/validation/search-rental-validation.schema.ts\n            \n            variable\n            SearchRentalValidationSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/service/rental.service.ts\n            \n            injectable\n            RentalService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/rental/service/test-rental.service.ts\n            \n            injectable\n            TestRentalService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/utils/generate-rental-duration-enum.util.ts\n            \n            injectable\n            GenerateRentalDurationEnumUtil\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/rental/utils/geo-url-api.util.ts\n            \n            injectable\n            GeoUrlApiUtil\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/secrets/secrets.ts\n            \n            variable\n            Secrets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            injectable\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/delete-user.dto.ts\n            \n            injectable\n            DeleteUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/find-user-by-reset-password-token.dto.ts\n            \n            injectable\n            ResetPasswordTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/find-user.dto.ts\n            \n            injectable\n            FindUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/login.dto.ts\n            \n            injectable\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            injectable\n            UpdateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interface/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/user/middleware/validate-email.middleware.ts\n            \n            injectable\n            ValidateEmailMiddleware\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/user/pipes/bcrypt.pipe.ts\n            \n            injectable\n            BcryptHashPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schema/validation/create-user-validation.schema.ts\n            \n            variable\n            CreateUserValidation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/user/util/extract-user.util.ts\n            \n            injectable\n            ExtractUserUtil\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/util/validate-email.util.ts\n            \n            injectable\n            ValidateEmailUtil\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            apiKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            axios\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            geoUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            makeRequest\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.0\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/mongoose : ^6.3.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/serve-static : ^2.1.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/cookie-parser : ^1.4.2\n        \n            @types/node : 11.13.4\n        \n            aws-sdk : ^2.635.0\n        \n            axios : ^0.19.2\n        \n            bcrypt : ^5.0.0\n        \n            cache-manager : ^3.4.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            cookie-parser : ^1.4.5\n        \n            crypto : ^1.0.1\n        \n            dotenv : ^8.2.0\n        \n            helmet : ^4.2.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            luxon : ^1.22.0\n        \n            mongoose : ^5.9.1\n        \n            multer : ^1.4.2\n        \n            multer-s3 : ^2.9.0\n        \n            nest-router : ^1.0.9\n        \n            nodemailer : ^6.4.16\n        \n            nodemailer-smtp-transport : ^2.7.4\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            typescript : 3.7.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RentalDurations   (src/.../const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rental/const.ts\n    \n        \n            \n                \n                    \n                        \n                        RentalDurations\n                    \n                \n                    \n                        \n                            summary: an enum for easily storing and working with the time duration of a rental\n\n                        \n                    \n                        \n                            \n                                 Any\n                            \n                        \n                        \n                            \n                                 1 Day\n                            \n                        \n                        \n                            \n                                 3 Days\n                            \n                        \n                        \n                            \n                                 5 Days\n                            \n                        \n                        \n                            \n                                 1 Week\n                            \n                        \n                        \n                            \n                                 3 Weeks\n                            \n                        \n                        \n                            \n                                 1 Month\n                            \n                        \n                        \n                            \n                                 3 Months\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRent-A-Car\nThis project is a demonstration of a scalable, loosely-coupled, testable, server-side application written with TypeScript and the NestJS framework. Rent-A-Car is a demonstrative car rental web application for authorized users to list their vehicle as available for rental, and to find rental vehicles available in their area. The application uses the powerful HERE Developer Geocoder API to create rentals with geocoordinate location data as well as to search for listed rentals near a user's address or device location. User profile and rental images are uploaded to an AWS S3 bucket, and the image download links and metadata are saved to a MongoDB Atlas cluster. Once a user has listed a rental, they may upload photos, edit the rental's pricing, schedule unavailability on the calendar, and update the rental's details.\nInstallation\nTry the App with Postman:\n\n\nNote: If Postman Web never launches try downloading the app to your pc, it will import the collection and environment and run fine. \nwill be deployed soon :)\n\nContributing\n\nJonathan Sells\nThis project is a smaller demonstrative version of the original project Turrendas that I was working on with Jean Canales, who was creating the React frontend.\n\nLicense\nThis project is licensed under the MIT license. See the LICENSE file for more info.\nDocumentation\nRent-A-Car Wiki\nplease check out the wiki for a more detailed look at the application.\nhttps://github.com/Pioneer18/Rent-A-Car/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 RentACar J\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RentalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_exports\n\n\n\ncluster_AppConfigModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_imports\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_RentalModule\n\n\n\ncluster_RentalModule_exports\n\n\n\ncluster_RentalModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppConfigService \n\nAppConfigService \n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nAppConfigService  -->\n\nAppConfigModule->AppConfigService \n\n\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAppConfigModule->AuthModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nAppConfigModule->ImagesModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppConfigModule->UserModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAppConfigModule -->\n\nAppConfigService->AppConfigModule\n\n\n\nAuthModule -->\n\nAppConfigService->AuthModule\n\n\n\nImagesModule -->\n\nAppConfigService->ImagesModule\n\n\n\n\n\nRentalModule\n\nRentalModule\n\nRentalModule -->\n\nAppConfigService->RentalModule\n\n\n\nAppModule -->\n\nAppModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nAuthModule->EmailService \n\n\n\n\n\nExtractKeyValueUtil \n\nExtractKeyValueUtil \n\nExtractKeyValueUtil  -->\n\nAuthModule->ExtractKeyValueUtil \n\n\n\n\n\nLoggedOutGaurd \n\nLoggedOutGaurd \n\nLoggedOutGaurd  -->\n\nAuthModule->LoggedOutGaurd \n\n\n\n\n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil  -->\n\nAuthModule->VerifyNewPasswordUtil \n\n\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\nAppModule -->\n\nRentalModule->AppModule\n\n\n\n\n\nRentalService \n\nRentalService \n\nRentalService  -->\n\nRentalModule->RentalService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nAuthModule -->\n\nExtractKeyValueUtil->AuthModule\n\n\n\nUserModule -->\n\nExtractKeyValueUtil->UserModule\n\n\n\n\n\nExtractUserUtil\n\nExtractUserUtil\n\nAuthModule -->\n\nExtractUserUtil->AuthModule\n\n\n\nUserModule -->\n\nExtractUserUtil->UserModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nAuthModule -->\n\nVerifyNewPasswordUtil->AuthModule\n\n\n\nUserModule -->\n\nVerifyNewPasswordUtil->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nImagesModule -->\n\nDatabaseModule->ImagesModule\n\n\n\nRentalModule -->\n\nDatabaseModule->RentalModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nCreateMulterUploadUtil\n\nCreateMulterUploadUtil\n\nImagesModule -->\n\nCreateMulterUploadUtil->ImagesModule\n\n\n\n\n\nDeleteS3ImagesUtil\n\nDeleteS3ImagesUtil\n\nImagesModule -->\n\nDeleteS3ImagesUtil->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nMulterUploadUtil\n\nMulterUploadUtil\n\nImagesModule -->\n\nMulterUploadUtil->ImagesModule\n\n\n\n\n\nProcessSaveDataUtil\n\nProcessSaveDataUtil\n\nImagesModule -->\n\nProcessSaveDataUtil->ImagesModule\n\n\n\n\n\nS3Provider\n\nS3Provider\n\nImagesModule -->\n\nS3Provider->ImagesModule\n\n\n\n\n\nCreateUpdaterDtoPipe\n\nCreateUpdaterDtoPipe\n\nRentalModule -->\n\nCreateUpdaterDtoPipe->RentalModule\n\n\n\n\n\nGenerateRentalDurationEnumUtil\n\nGenerateRentalDurationEnumUtil\n\nRentalModule -->\n\nGenerateRentalDurationEnumUtil->RentalModule\n\n\n\n\n\nGeoUrlApiPipe\n\nGeoUrlApiPipe\n\nRentalModule -->\n\nGeoUrlApiPipe->RentalModule\n\n\n\n\n\nGeoUrlApiUtil\n\nGeoUrlApiUtil\n\nRentalModule -->\n\nGeoUrlApiUtil->RentalModule\n\n\n\n\n\nGivenNoticePipe\n\nGivenNoticePipe\n\nRentalModule -->\n\nGivenNoticePipe->RentalModule\n\n\n\n\n\nMapNewRentalPipe\n\nMapNewRentalPipe\n\nRentalModule -->\n\nMapNewRentalPipe->RentalModule\n\n\n\n\n\nPricingPipe\n\nPricingPipe\n\nRentalModule -->\n\nPricingPipe->RentalModule\n\n\n\n\n\nProcessUnavailabilityPipe\n\nProcessUnavailabilityPipe\n\nRentalModule -->\n\nProcessUnavailabilityPipe->RentalModule\n\n\n\n\n\nRentalDurationPipe\n\nRentalDurationPipe\n\nRentalModule -->\n\nRentalDurationPipe->RentalModule\n\n\n\n\n\nRentalService\n\nRentalService\n\nRentalModule -->\n\nRentalService->RentalModule\n\n\n\n\n\nRequestCoordinatesPipe\n\nRequestCoordinatesPipe\n\nRentalModule -->\n\nRequestCoordinatesPipe->RentalModule\n\n\n\n\n\nSortUnavailabilityPipe\n\nSortUnavailabilityPipe\n\nRentalModule -->\n\nSortUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateEditDetailsPipe\n\nValidateEditDetailsPipe\n\nRentalModule -->\n\nValidateEditDetailsPipe->RentalModule\n\n\n\n\n\nValidateRemoveUnavailabilityPipe\n\nValidateRemoveUnavailabilityPipe\n\nRentalModule -->\n\nValidateRemoveUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateUnavailabilityPipe\n\nValidateUnavailabilityPipe\n\nRentalModule -->\n\nValidateUnavailabilityPipe->RentalModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    47 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    38 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MTime   (src/.../military-time.alias.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rental/alias/military-time.alias.ts\n    \n    \n        \n            \n                \n                    \n                    MTime\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            address   (testfile.ts)\n                        \n                        \n                            apiKey   (testfile.ts)\n                        \n                        \n                            axios   (testfile.ts)\n                        \n                        \n                            CreateRentalValidationSchema   (src/.../create-rental-validation.schema.ts)\n                        \n                        \n                            CreateUserValidation   (src/.../create-user-validation.schema.ts)\n                        \n                        \n                            databaseConnection   (src/.../Const.ts)\n                        \n                        \n                            databaseProvider   (src/.../database.provider.ts)\n                        \n                        \n                            geoUrl   (testfile.ts)\n                        \n                        \n                            ImageSchema   (src/.../images.schema.ts)\n                        \n                        \n                            jwtConstants   (src/.../constant.ts)\n                        \n                        \n                            makeRequest   (testfile.ts)\n                        \n                        \n                            ObjectID   (src/.../rental.schema.ts)\n                        \n                        \n                            profile   (src/.../Const.ts)\n                        \n                        \n                            rentals   (src/.../Const.ts)\n                        \n                        \n                            RentalSchema   (src/.../rental.schema.ts)\n                        \n                        \n                            Schema   (src/.../images.schema.ts)\n                        \n                        \n                            Schema   (src/.../rental.schema.ts)\n                        \n                        \n                            Schema   (src/.../unavailability-schema.ts)\n                        \n                        \n                            Schema   (src/.../user.schema.ts)\n                        \n                        \n                            SearchRentalValidationSchema   (src/.../search-rental-validation.schema.ts)\n                        \n                        \n                            Secrets   (src/.../secrets.ts)\n                        \n                        \n                            toItemIndexes   (src/.../to-item-indexes.ts)\n                        \n                        \n                            unavailabilityModel   (src/.../Const.ts)\n                        \n                        \n                            unavailabilityProvider   (src/.../unavailability-model.provider.ts)\n                        \n                        \n                            UnavailabilitySchema   (src/.../unavailability-schema.ts)\n                        \n                        \n                            userModel   (src/.../Const.ts)\n                        \n                        \n                            userProvider   (src/.../user-model.provider.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            validated   (src/.../Const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    testfile.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `9706+Forestdale+Ct+Riverview+33578`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '4ol_YAcp0Lkuu9pN2j2Iu_UY5lDRKWoDyJLQE2Zo6IA'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            axios\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('axios')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocode.search.hereapi.com/v1/geocode'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (geoUrl, address, apiKey) => {\n    const request = await axios.default.get(\n      `${geoUrl}?q=${address}&apiKey=${apiKey}`,\n    );\n    \n    console.log(`Response Data Below`);\n    console.log(JSON.stringify(request.data, null, 2));\n    console.log(JSON.stringify(request.data.items[0].position, null, 2))\n    console.log(JSON.stringify(request.data.items[0].title, null, 2))\n    console.log(JSON.stringify(request.data.items[0].address, null, 2))\n    return;\n}\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/validation/create-rental-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CreateRentalValidationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n  rentalDescription: joi.string(),\n  address: joi.string().required(),\n  specs: joi.object({\n    odometer: joi.number().required(),\n    transmission: joi.string().required(),\n    cityMpg: joi.number().required()\n      .when('fuel', {is: 'electric', then: joi.valid(null)}),\n    hwyMpg: joi.number().required()\n      .when('fuel', {is: 'electric', then: joi.valid(null)}),\n    mpgE: joi.number()\n      .when('fuel', {is: 'electric', then: joi.number().required()})\n      .when('fuel', {not: 'electric', then: joi.valid(null) }),\n    fuel: joi.string().valid('gas', 'hybrid','electric').required(),\n    gasGrade: joi.string().valid('regular', 'mid', 'premium', 'N/A').required()\n      .when('fuel', {is: 'electric', then: joi.valid('N/A')}),\n    description: joi.string().required(),\n    make: joi.string().required(),\n    model: joi.string().required(),\n    style: joi.string().required(),\n    color: joi.string().required(),\n    numOfSeats: joi.number().required(),\n    numDoors: joi.number().required(),\n  }),\n  registration: joi.object({\n    vin: joi.string().required(),\n    licensePlate: joi.string().required(),\n    state: joi.string().required(),\n  }),\n  features: joi.array().items(joi.string()),\n  scheduling: joi.object({\n    requiredNotice: joi.number().required(),\n    rentMinDuration: joi.number().required(),\n    rentMaxDuration: joi.number().required(),\n  }),\n  pricing: joi.object({\n    price: joi.number().required(),\n    discounts: joi.object({\n      weekly: joi.number(),\n      monthly: joi.number(),\n    }),\n  }),\n  loc: joi.object({\n    type: joi.string().required(),\n    coordinates: joi\n      .array()\n      .items(joi.number())\n      .length(2)\n      .required(),\n  }),\n  photos: joi.array().items(joi.string()),\n  listed: joi.boolean().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate requested new rental before passing to the handler\n\nfuel: when the selected fuel type is electric and not gas or hybrid, several fields must change their validation\nmpgE: the metric for electric mileage. When the selected fuel type is electric, mpgE is required, otherwise it must be null\ncityMpg: the metric for gas mileage in the city. cityMpg must be null if the fuel type is electric\nhwyMpg: the metric for gas mileage on the highway. hwyMpg must be null if the fuel type is electric\ngasGrade: the gas grade must be 'N/A' if the selected fuel type is electric\n\n\n\n\n                    \n                \n\n            \n        \n\n    src/user/schema/validation/create-user-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n    username: joi.string().required(),\n    email: joi.string().email().required(),\n    password: joi.string().required(),\n})\n                        \n                    \n\n                \n                    \n                        Validate requested new User before passing to handler\n\n                    \n                \n\n            \n        \n\n    src/common/Const.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'profile'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rentals'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UNAVAILABILITY_MODEL'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_MODEL'\n                        \n                    \n\n                \n                    \n                        summary: export constants to be used in the application. These are mostly names of providers\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'VALIDATED'\n                        \n                    \n\n\n            \n        \n\n    src/database/providers/database.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: databaseConnection,\n    useFactory: (configService: ConfigService): Promise =>\n      mongoose.connect(configService.get('REMOTE_DB')), // currently returning undefined, needs a .env file\n      import: [ConfigModule],\n      inject: [ConfigService],\n  },\n]\n                        \n                    \n\n                \n                    \n                        summary: provide a connection to the remote database\n\n                    \n                \n\n            \n        \n\n    src/images/schema/images.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ImageSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    user_id: String, // ObjectId of the logged in user\n    rental_id: {type: String || null }, // null for profile images\n    bucket: String, // 'rent-a-car-photos/{user_email}/{category}'\n    key: String, // 'timestamp-originalname'\n    originalName: String, \n    etag: String || null,\n    category: String, // rentals or profile\n    size: String,\n    location: String, // aws url for image download\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    src/auth/constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret: process.env.SECRET_KEY,\n    jwt_exp_time: process.env.JWT_EXP_TIME,\n}\n                        \n                    \n\n                \n                    \n                        summary: holds the secret key and expiration time of the JWT token for the Passport Jwt-Strategy\n\n                    \n                \n\n            \n        \n\n    src/rental/schema/rental.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ObjectID\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.ObjectId\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RentalSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  rentalId: ObjectID,\n  rentalTitle: String,\n  rentalDescription: String,\n  address: String,\n  loc: {\n    type: { type: String },\n    coordinates: Object,\n  },\n  specs: {\n    odometer: Number,\n    transmission: String,\n    cityMpg: Number || null,\n    hwyMpg: Number || null,\n    mpgE: Number || null,\n    fuel: String,\n    gasGrade: String,\n    description: String,\n    make: String,\n    model: String,\n    style: String,\n    color: String,\n    numOfSeats: Number,\n    numDoors: Number,\n  },\n  registration: {\n    vin: String,\n    licensePlate: String,\n    state: String,\n  },\n  features: [String],\n  scheduling: {\n    requiredNotice: Number,\n    rentMinDuration: Number,\n    rentMaxDuration: Number,\n  },\n  pricing: {\n    price: { type: Number /*, default: DEFAULT_PRICE*/ },\n    discounts: {\n      weekly: { type: Number, default: null },\n      monthly: { type: Number, default: null },\n    },\n  },\n  photos: [String],\n  listed: Boolean,\n})\n                        \n                    \n\n                \n                    \n                        Rental Schema\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/unavailability-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UnavailabilitySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    unavailabilityId: String,\n    rentalId: String,\n    year: Number,\n    doy: Number, // day of the year\n    start: {type: Number, min: 0, max: 24}, // min: 0; max: 24 military time\n    end: {type: Number, min: 0, max: 24}, // min: 0; max: 24 military time\n    title: String, // e.g. Christmas Break\n})\n                        \n                    \n\n                \n                    \n                        Unavailability Schema\n\n                    \n                \n\n            \n        \n\n    src/user/schema/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    username: String,\n    email: { \n        type: String, \n        unique: true\n    },\n    password: String,\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n})\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/validation/search-rental-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SearchRentalValidationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n  address: joi.string().required(),\n  features: joi.array().items(joi.string()).allow(null),\n  price: joi.number().allow(null),\n  rentalDuration: joi.number().required(),\n  loc: {\n    type: joi.string().required(),\n    coordinates: joi\n      .array()\n      .items(joi.number(), joi.number())\n      .required(),\n  },\n  givenNotice: joi.number().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate an incoming SearchRentalDto\n\n                    \n                \n\n            \n        \n\n    src/secrets/secrets.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Secrets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    key: process.env.PRIVATE_KEY\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/util/to-item-indexes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toItemIndexes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (a: T[]) => {\n    return a.map((item, index) => ({item, index}));\n}\n                        \n                    \n\n                \n                    \n                        summary: map the passed array, of any Type, into a new array of tuples with the index for each value\n\n                    \n                \n\n            \n        \n\n    src/database/providers/unavailability-model.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: unavailabilityModel,// UNAVAILABILITY_MODEL\n    useFactory: (connection: Connection) => connection.model('Unavailability', UnavailabilitySchema),\n    inject: [databaseConnection],\n  },\n]\n                        \n                    \n\n                \n                    \n                        summary: provide a connection to the Unavailability Model\n\n                    \n                \n\n            \n        \n\n    src/database/providers/user-model.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: userModel,// USER_MODEL\n    useFactory: (connection: Connection) => connection.model('User', UserSchema),\n    inject: [databaseConnection],\n  },\n]\n                        \n                    \n\n                \n                    \n                        summary: provide connection to the User Model\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
