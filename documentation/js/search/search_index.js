var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,1.974,1,2.645]],["body/modules/AppConfigModule.html",[0,3.188,1,5.09,2,2.595,3,2.703,4,2.958,5,2.958,6,2.703,7,4.091,8,4.273,9,4.145,10,4.145,11,4.145,12,4.076,13,5.334,14,0.009,15,3.968,16,2.246,17,2.246,18,0.092,19,0.102,20,0.072,21,4.696,22,0.092,23,0.137,24,0.901,25,3.968,26,4.417,27,6.992,28,5.56,29,1.455,30,3.781,31,4.696,32,0.668,33,3.113,34,2.823,35,4.696,36,2.958,37,4.696,38,4.696,39,4.145,40,4.145,41,4.696,42,4.696,43,6.274,44,4.696,45,4.145,46,3.51,47,4.696,48,3.781,49,4.696,50,4.696,51,2.246,52,4.175,53,4.145,54,7.715,55,4.145,56,2.174,57,4.145,58,4.145,59,3.113,60,4.145,61,4.145,62,4.145,63,4.145,64,2.823,65,3.113,66,4.145,67,4.145,68,2.406,69,3.781,70,4.145,71,3.781,72,4.145,73,4.145,74,4.696,75,4.696,76,2.958,77,4.696,78,4.417,79,4.696,80,4.145,81,4.696,82,4.696,83,3.781,84,3.51,85,4.696,86,2.823,87,4.696,88,3.51,89,2.595,90,0.092,91,0.174,92,0.005,93,0.006,94,0.005]],["title/injectables/AppConfigService.html",[12,2.037,95,0.207]],["body/injectables/AppConfigService.html",[0,2.673,12,2.759,13,5.233,14,0.009,18,0.085,19,0.094,20,0.067,22,0.085,23,0.13,24,0.644,27,5.259,32,0.616,34,2.601,48,5.488,53,6.015,55,6.015,57,6.015,58,6.015,61,6.015,62,6.015,63,6.015,66,6.015,67,6.015,70,6.015,71,5.488,72,6.015,73,6.015,84,4.454,90,0.085,91,0.252,92,0.004,93,0.006,94,0.004,95,0.281,96,0.868,97,3.82,98,4.179,99,5.259,100,3.293,101,5.259,102,4.179,103,5.259,104,0.133,105,5.96,106,1.433,107,4.328,108,0.461,109,4.328,110,0.91,111,0.868,112,0.215,113,0.932,114,4.328,115,4.328,116,4.328,117,4.328,118,4.328,119,4.328,120,4.328,121,4.328,122,4.328,123,4.328,124,4.328,125,4.328,126,4.328,127,4.328,128,4.328,129,4.328,130,4.328,131,4.328,132,4.328,133,4.328,134,4.328,135,4.328,136,4.328,137,4.328,138,4.328,139,4.328,140,4.328,141,4.328,142,2.218,143,1.678,144,1.448,145,1.851,146,4.328,147,4.328,148,4.328,149,4.328,150,4.328,151,4.328,152,1.266,153,4.328,154,4.328,155,4.328,156,4.328,157,4.328,158,4.328,159,4.328,160,4.328]],["title/controllers/AppController.html",[161,2.34,162,3.289]],["body/controllers/AppController.html",[14,0.009,18,0.116,19,0.129,20,0.091,22,0.116,23,0.159,24,0.857,25,4.601,26,5.122,32,0.84,90,0.116,91,0.218,92,0.006,93,0.007,94,0.006,100,4.036,104,0.181,108,0.308,110,1.242,111,1.185,113,1.272,145,1.242,161,3.883,162,5.459,163,3.14,164,5.214,165,6.446,166,1.768,167,7.304,168,5.908,169,4.143,170,5.908,171,5.908,172,3.67,173,1.397,174,4.415,175,4.143,176,1.302,177,5.214,178,3.721,179,4.757,180,4.415,181,3.551,182,5.214,183,4.415,184,4.415,185,4.757,186,5.908,187,5.908,188,3.916]],["title/modules/AppModule.html",[0,1.974,189,3.289]],["body/modules/AppModule.html",[0,3.278,1,4.71,2,2.076,3,3.634,4,2.367,5,2.367,6,2.163,7,3.634,8,2.259,12,3.194,13,3.399,14,0.009,15,3.399,16,1.797,17,1.797,18,0.074,19,0.082,20,0.097,22,0.074,23,0.118,24,0.971,25,4.603,26,3.784,32,0.535,33,2.491,34,2.259,36,3.977,83,4.345,90,0.074,91,0.139,92,0.004,93,0.005,94,0.005,162,4.719,163,2.869,189,6.659,190,3.317,191,3.317,192,3.317,193,5.334,194,5.334,195,5.334,196,5.042,197,5.334,198,3.758,199,5.397,200,5.397,201,5.157,202,5.157,203,2.67,204,4.427,205,4.427,206,4.427,207,4.427,208,3.758,209,3.758,210,3.758,211,3.317,212,2.809,213,2.163,214,3.758,215,3.317,216,3.317,217,3.317,218,3.758,219,6.314,220,5.397,221,3.317,222,4.033,223,3.758,224,3.758,225,3.758,226,3.758,227,3.758,228,3.758,229,3.758,230,3.317,231,3.317,232,3.758,233,4.345,234,3.758,235,3.758,236,3.758,237,3.758,238,2.809,239,2.259,240,3.758,241,4.345,242,3.026,243,3.758,244,3.758,245,3.758,246,3.758,247,3.758,248,3.758,249,3.758,250,2.367,251,3.758,252,3.758,253,3.317,254,0.953,255,3.758,256,3.758,257,2.635,258,3.758,259,3.758,260,3.758,261,3.758,262,6.314]],["title/injectables/AppService.html",[95,0.207,197,3.086]],["body/injectables/AppService.html",[14,0.009,18,0.124,19,0.138,20,0.097,22,0.124,23,0.166,24,0.682,25,4.788,26,5.33,32,0.897,90,0.124,91,0.233,92,0.006,93,0.008,94,0.006,95,0.358,96,1.265,100,4.2,104,0.194,108,0.328,144,1.258,145,1.326,165,6.709,166,1.84,173,1.491,197,5.33,263,5.566,264,8.472,265,6.307,266,6.307,267,6.307]],["title/controllers/AuthController.html",[161,2.34,207,3.086]],["body/controllers/AuthController.html",[14,0.009,16,2.931,17,2.157,18,0.058,19,0.064,20,0.045,22,0.13,23,0.176,24,0.828,32,0.42,59,4.062,68,3.828,69,3.631,90,0.058,91,0.109,92,0.003,93,0.004,94,0.003,102,3.162,104,0.091,108,0.344,110,1.388,111,1.324,112,0.304,113,1.421,142,1.512,143,1.144,145,1.388,161,3.51,163,1.568,166,1.483,169,4.631,172,3.617,173,1.561,174,2.205,175,2.069,176,1.596,177,2.603,178,3.448,180,3.37,181,1.773,183,2.205,184,3.37,185,2.375,207,3.162,254,2.111,268,2.603,269,2.205,270,2.375,271,4.509,272,4.509,273,1.775,274,2.595,275,3.98,276,4.509,277,2.84,278,5.606,279,3.98,280,3.98,281,4.581,282,4.581,283,3.98,284,2.95,285,1.643,286,4.298,287,2.95,288,3.632,289,2.95,290,3.631,291,4.298,292,4.062,293,0.971,294,2.603,295,4.298,296,4.509,297,2.95,298,3.37,299,3.399,300,1.849,301,2.989,302,3.631,303,2.95,304,3.969,305,3.386,306,2.95,307,2.95,308,3.98,309,2.603,310,2.95,311,2.95,312,3.631,313,4.581,314,4.062,315,2.023,316,3.828,317,4.509,318,3.98,319,3.37,320,1.962,321,4.509,322,3.162,323,3.37,324,2.603,325,4.298,326,4.509,327,2.95,328,4.509,329,4.377,330,4.091,331,3.162,332,3.162,333,1.568,334,2.603,335,4.407,336,2.603,337,2.603,338,2.95,339,2.205,340,2.95,341,2.603,342,3.29,343,2.375,344,2.95,345,1.838,346,1.858,347,2.95,348,2.95,349,2.95,350,2.95,351,0.803,352,3.838,353,1.682,354,2.95,355,2.95,356,2.95,357,2.205,358,2.95,359,2.603,360,2.95,361,2.95,362,2.95,363,2.95,364,2.95,365,2.95,366,2.95,367,2.95,368,2.95,369,2.95]],["title/modules/AuthModule.html",[0,1.974,193,3.086]],["body/modules/AuthModule.html",[0,3.344,1,4.652,2,2.188,3,2.279,4,2.495,5,2.495,6,2.279,7,3.741,8,3.907,12,3.583,14,0.009,15,3.528,16,1.894,17,1.894,18,0.078,19,0.086,20,0.061,22,0.078,23,0.122,24,0.955,32,0.563,33,3.713,34,2.381,36,3.528,90,0.078,91,0.146,92,0.004,93,0.006,94,0.004,98,3.928,100,3.095,163,2.105,181,4.886,183,2.96,193,6.373,196,5.13,207,3.928,211,3.495,238,2.96,239,2.381,241,4.51,242,3.189,273,1.206,293,0.853,341,3.495,342,5.143,343,3.189,370,3.495,371,3.495,372,3.961,373,3.495,374,5.671,375,5.143,376,5.143,377,5.427,378,5.427,379,3.961,380,5.602,381,5.602,382,3.961,383,3.189,384,5.602,385,2.625,386,4.187,387,3.495,388,3.961,389,3.961,390,3.961,391,3.495,392,1.672,393,2.96,394,3.495,395,2.96,396,3.495,397,3.961,398,3.495,399,3.495,400,3.961,401,5.602,402,3.961,403,2.777,404,1.131,405,1.187,406,3.961]],["title/injectables/AuthService.html",[95,0.207,342,2.645]],["body/injectables/AuthService.html",[12,2.215,14,0.009,16,3.269,17,1.526,18,0.038,19,0.042,20,0.029,22,0.081,23,0.165,24,0.827,25,2.01,32,0.272,56,2.215,59,2.719,65,2.115,68,3.922,89,1.763,90,0.038,91,0.071,92,0.005,93,0.003,94,0.002,95,0.15,96,0.384,100,1.763,102,1.343,104,0.059,106,1.056,108,0.317,110,1.28,111,1.221,112,0.302,113,1.311,143,2.361,144,1.007,145,1.437,166,1.158,172,2.461,173,1.357,176,1.46,203,2.367,233,1.542,239,1.151,250,2.584,254,1.986,273,1.876,274,1.836,277,2.584,279,2.816,280,2.816,281,3.973,282,3.066,283,2.816,285,0.803,286,3.355,288,3.366,290,2.569,291,2.237,292,2.115,293,1.602,294,2.816,295,3.355,298,2.385,299,3.496,300,1.309,301,2.115,302,2.569,308,4.223,309,2.816,313,3.066,314,2.719,316,3.12,318,2.816,319,3.066,320,1.388,324,2.816,325,3.355,329,2.719,330,2.385,333,1.018,334,1.69,335,3.303,336,1.69,337,1.69,342,1.918,345,1.78,351,1.992,352,2.876,353,2.428,374,4.036,375,3.66,376,3.66,383,1.542,391,1.69,392,2.693,393,1.431,394,1.69,395,1.431,396,1.69,404,0.547,405,0.574,407,1.69,408,3.191,409,2.816,410,1.915,411,3.616,412,6.09,413,4.551,414,2.876,415,1.915,416,3.191,417,1.915,418,1.915,419,3.066,420,3.62,421,3.191,422,1.915,423,3.191,424,3.191,425,2.816,426,3.191,427,2.237,428,2.816,429,2.115,430,1.915,431,2.876,432,1.915,433,2.385,434,3.191,435,3.973,436,1.915,437,2.544,438,2.816,439,2.816,440,2.237,441,3.191,442,3.191,443,3.191,444,1.237,445,1.915,446,2.115,447,1.915,448,1.343,449,2.385,450,1.915,451,1.915,452,2.385,453,2.115,454,1.915,455,1.542,456,2.178,457,1.805,458,1.962,459,1.915,460,1.915,461,1.696,462,0.785,463,1.206,464,1.69,465,3.303,466,4.692,467,1.907,468,1.635,469,1.808,470,1.962,471,1.915,472,1.431,473,1.915,474,1.526,475,1.343,476,1.151,477,1.915,478,1.431,479,1.915,480,1.393,481,1.915,482,1.915,483,1.915,484,1.915,485,2.876,486,1.915,487,1.915,488,1.915,489,1.151,490,1.915,491,2.569,492,1.915,493,2.816,494,2.01,495,2.816,496,1.915,497,1.915,498,1.915,499,1.343,500,1.915,501,1.69,502,1.915,503,3.066,504,2.816,505,3.303,506,1.69,507,2.466,508,1.343,509,1.151,510,1.431,511,1.918,512,3.191,513,1.915,514,1.542,515,1.269,516,1.915,517,1.431,518,1.915,519,2.115,520,4.102,521,1.915,522,1.915,523,1.69,524,3.191,525,1.915,526,1.915,527,1.69,528,1.696,529,1.542,530,1.69,531,1.343,532,1.69,533,1.69,534,1.69,535,1.915,536,1.915,537,1.542,538,1.431,539,1.69,540,1.915,541,1.915,542,3.191,543,1.431,544,2.816,545,1.69,546,1.915,547,1.542,548,1.635,549,1.915,550,1.915,551,1.915,552,3.191,553,1.915,554,1.915,555,1.915,556,3.191,557,1.69,558,3.191,559,1.69,560,1.431,561,1.431,562,1.058,563,1.542,564,1.915,565,1.915,566,1.915,567,1.393]],["title/injectables/BcryptHashPipe.html",[95,0.207,568,3.289]],["body/injectables/BcryptHashPipe.html",[14,0.009,18,0.147,19,0.113,20,0.08,22,0.132,23,0.172,24,0.807,32,0.738,90,0.102,91,0.192,92,0.005,93,0.007,94,0.005,95,0.317,96,1.041,104,0.159,108,0.27,110,1.091,111,1.041,112,0.257,113,1.117,145,1.091,166,1.628,173,1.226,254,1.894,273,1.448,288,3.335,293,1.7,316,4.047,345,1.316,351,1.832,353,2.067,404,2.133,448,3.638,452,5.904,457,1.957,469,2.118,470,2.128,514,4.177,519,3.439,543,3.877,568,5.028,569,4.579,570,6.728,571,3.017,572,3.217,573,4.976,574,5.188,575,2.84,576,8.386,577,6.728,578,3.328,579,3.877,580,2.068,581,5.188,582,6.728,583,5.188,584,5.188,585,5.188,586,5.188,587,4.579,588,4.177]],["title/classes/ChangePasswordDto.html",[91,0.163,286,3.086]],["body/classes/ChangePasswordDto.html",[14,0.009,18,0.124,19,0.137,20,0.097,22,0.124,23,0.137,29,1.453,90,0.124,91,0.233,92,0.006,93,0.008,94,0.006,104,0.193,108,0.395,112,0.376,143,3.412,144,1.4,273,1.354,285,1.232,286,5.322,288,2.656,291,4.411,405,1.886,503,6.092,505,6.563,589,7.194,590,4.411,591,3.962,592,6.291,593,0.919,594,5.065,595,4.701]],["title/classes/CheckPasswordTypoDto.html",[91,0.163,596,3.289]],["body/classes/CheckPasswordTypoDto.html",[14,0.009,18,0.124,19,0.138,20,0.097,22,0.124,23,0.138,29,1.456,90,0.124,91,0.233,92,0.006,93,0.008,94,0.006,104,0.194,108,0.396,112,0.377,144,1.402,285,1.489,288,3.577,293,1.357,405,1.891,438,5.566,503,6.099,505,6.57,591,3.972,593,0.921,596,5.681,597,7.202,598,5.566,599,6.307,600,3.352,601,6.307,602,6.307]],["title/injectables/CreateMulterUploadUtil.html",[95,0.207,603,2.917]],["body/injectables/CreateMulterUploadUtil.html",[14,0.009,18,0.091,19,0.101,20,0.109,22,0.091,23,0.165,24,0.854,32,0.662,90,0.091,91,0.172,92,0.005,93,0.006,94,0.005,95,0.295,96,0.933,104,0.143,106,1.54,108,0.368,110,1.316,111,1.255,112,0.231,113,1.001,142,2.383,143,1.803,145,0.978,172,3.275,176,1.025,188,3.083,254,1.18,273,1.001,292,3.083,293,1.001,345,1.588,351,1.267,392,1.964,404,1.788,405,2.269,456,2.53,457,1.754,467,1.854,468,1.854,469,1.465,470,1.908,472,3.476,480,2.869,557,4.105,593,0.758,603,4.148,604,6.678,605,6.12,606,3.745,607,5.04,608,4.747,609,4.105,610,4.889,611,4.651,612,2.495,613,4.105,614,4.689,615,4.456,616,5.04,617,4.651,618,6.259,619,4.148,620,3.476,621,3.476,622,4.651,623,4.105,624,2.677,625,3.261,626,3.261,627,4.651,628,4.651,629,4.105,630,4.105,631,2.796,632,4.651,633,4.651,634,4.651,635,2.472,636,4.651,637,2.383,638,4.651,639,4.651,640,3.476]],["title/classes/CreateQueryDto.html",[91,0.163,641,3.086]],["body/classes/CreateQueryDto.html",[14,0.009,18,0.108,19,0.12,20,0.085,22,0.108,23,0.153,24,0.595,29,1.271,90,0.108,91,0.204,92,0.005,93,0.007,94,0.005,104,0.169,108,0.434,112,0.413,152,2.493,176,1.54,315,3.444,489,4.615,593,0.847,641,4.901,642,7.518,643,4.115,644,2.951,645,2.373,646,6.989,647,1.949,648,6.989,649,3.342,650,2.888,651,1.865,652,5.627,653,4.201,654,4.201,655,4.836,656,3.672,657,3.934,658,4.433,659,4.271,660,4.859,661,4.859,662,4.433,663,4.859,664,2.821]],["title/classes/CreateRentalDto.html",[91,0.163,665,2.772]],["body/classes/CreateRentalDto.html",[14,0.009,18,0.091,19,0.101,20,0.071,22,0.123,23,0.101,29,1.072,90,0.091,91,0.172,92,0.005,93,0.006,94,0.005,104,0.143,108,0.45,112,0.445,144,1.503,152,2.588,293,0.999,300,2.898,475,3.255,562,2.565,593,0.757,645,1.576,647,1.295,651,1.072,665,3.937,666,7.7,667,3.255,668,2.79,669,3.738,670,4.097,671,3.38,672,4.451,673,4.067,674,3.757,675,3.905,676,4.956,677,5.282,678,4.956,679,4.451,680,3.738,681,4.642,682,3.937,683,4.642,684,4.195,685,4.642,686,4.642,687,4.642,688,4.642,689,4.097,690,4.642,691,3.469,692,3.255,693,3.255,694,3.255,695,3.255,696,3.255,697,3.255,698,1.96,699,3.255,700,2.924,701,3.255,702,3.255,703,3.469,704,3.469,705,3.469,706,3.469,707,3.469,708,3.469,709,2.082,710,2.924,711,2.924,712,2.924,713,2.379]],["title/injectables/CreateUpdaterDtoPipe.html",[95,0.207,714,2.772]],["body/injectables/CreateUpdaterDtoPipe.html",[14,0.009,18,0.076,19,0.084,20,0.059,22,0.137,23,0.176,24,0.754,32,0.548,90,0.076,91,0.142,92,0.004,93,0.005,94,0.004,95,0.259,96,0.773,104,0.118,108,0.333,110,1.346,111,1.284,112,0.191,113,0.829,145,1.66,166,1.689,173,0.911,176,1.211,250,3.461,254,1.872,285,1.502,315,2.464,345,1.624,346,3.461,351,2.089,353,1.688,404,2.38,405,1.647,444,2.13,456,2.886,480,2.37,517,2.872,567,1.309,571,2.464,572,2.628,575,2.32,578,2.718,580,1.536,593,0.666,612,2.19,647,1.532,650,1.378,656,2.628,664,2.815,669,4.424,714,3.461,715,6.16,716,4.832,717,3.401,718,4.243,719,4.424,720,4.849,721,6.403,722,6.403,723,5.759,724,3.854,725,6.465,726,3.854,727,3.852,728,3.854,729,3.852,730,5.494,731,4.424,732,3.401,733,2.702,734,2.92,735,4.424,736,2.253,737,4.106,738,3.103,739,5.65,740,3.103,741,5.65,742,3.103,743,5.65,744,4.033,745,5.494,746,5.494,747,2.129,748,1.729,749,3.854,750,3.854]],["title/injectables/CreateUserDto.html",[95,0.207,573,2.772]],["body/injectables/CreateUserDto.html",[14,0.009,18,0.119,19,0.132,20,0.093,22,0.119,23,0.162,24,0.655,32,0.861,90,0.119,91,0.224,92,0.006,93,0.007,94,0.006,95,0.35,96,1.214,104,0.186,108,0.417,112,0.398,144,1.443,273,1.596,285,1.452,288,3.385,293,1.596,299,3.487,461,4.261,573,4.671,593,0.898,751,7.373,752,4.013,753,5.2,754,5.344,755,6.055,756,4.525]],["title/modules/DatabaseModule.html",[0,1.974,757,2.772]],["body/modules/DatabaseModule.html",[0,3.738,2,3.32,7,4.598,8,4.803,14,0.009,18,0.118,19,0.131,20,0.092,22,0.118,23,0.161,24,0.925,32,0.855,33,4.893,34,3.613,36,3.786,56,3.858,90,0.157,91,0.222,92,0.006,93,0.007,94,0.006,102,5.176,274,4.248,698,3.117,757,4.65,758,6.01,759,7.382,760,5.517,761,5.176,762,4.893,763,6.433,764,6.01]],["title/injectables/DeleteS3ImagesUtil.html",[95,0.207,765,2.917]],["body/injectables/DeleteS3ImagesUtil.html",[14,0.009,18,0.061,19,0.068,20,0.048,22,0.111,23,0.155,24,0.509,32,0.444,51,2.253,64,4.678,76,2.967,89,2.602,90,0.061,91,0.116,92,0.003,93,0.005,94,0.003,95,0.222,96,0.627,104,0.096,106,1.034,108,0.329,110,1.192,111,1.137,112,0.155,113,0.673,142,1.601,143,1.211,144,0.517,145,0.99,254,1.195,273,1.707,285,1.236,305,2.602,345,1.601,351,2.271,353,1.939,392,3.52,404,1.62,444,1.826,456,2.028,468,3.032,593,0.571,608,5.055,609,2.758,610,4.279,612,2.26,616,3.793,621,2.335,624,4.939,625,3.303,626,3.303,631,3.794,637,3.988,651,1.309,674,2.504,765,3.122,766,5.978,767,2.758,768,4.157,769,4.711,770,4.966,771,5.67,772,5.67,773,3.125,774,3.125,775,5.457,776,4.426,777,4.426,778,3.125,779,5.571,780,3.125,781,1.494,782,4.711,783,5.978,784,3.355,785,4.711,786,6.313,787,3.125,788,4.711,789,3.125,790,4.711,791,4.711,792,6.313,793,4.711,794,3.351,795,3.125,796,4.711,797,5.182,798,4.157,799,5.978,800,3.125,801,4.711,802,4.711,803,3.125,804,4.711,805,4.711,806,5.083,807,4.711,808,4.711,809,4.711,810,4.711,811,4.157,812,4.711,813,4.711,814,4.711,815,3.125]],["title/injectables/DeleteUserDto.html",[95,0.207,816,3.086]],["body/injectables/DeleteUserDto.html",[14,0.009,18,0.125,19,0.138,20,0.097,22,0.125,23,0.166,24,0.685,32,0.902,90,0.125,91,0.234,92,0.006,93,0.008,94,0.006,95,0.36,96,1.271,104,0.195,108,0.33,112,0.314,144,1.262,273,1.641,288,3.666,531,5.347,593,0.924,752,4.202,756,4.738,794,3.772,816,5.347,817,6.73,818,7.626]],["title/classes/EditDetailsDto.html",[91,0.163,819,2.917]],["body/classes/EditDetailsDto.html",[14,0.009,18,0.114,19,0.127,20,0.09,22,0.142,23,0.127,29,1.345,90,0.114,91,0.215,92,0.006,93,0.007,94,0.006,104,0.179,108,0.41,112,0.409,144,1.502,152,2.48,562,3.217,593,0.877,645,1.977,647,1.624,651,1.345,671,3.767,679,4.962,684,3.095,692,4.083,693,4.083,694,4.083,695,4.083,696,4.083,697,4.083,698,2.458,699,4.083,700,3.668,701,4.083,702,4.083,736,3.231,819,4.798,820,7.273,821,5.139,822,3.5,823,3.859,824,5.823,825,5.823,826,5.823,827,5.823]],["title/injectables/EmailService.html",[95,0.207,374,2.917]],["body/injectables/EmailService.html",[14,0.009,16,3.601,18,0.08,19,0.089,20,0.063,22,0.112,23,0.179,24,0.713,32,0.578,90,0.08,91,0.15,92,0.004,93,0.006,94,0.004,95,0.269,96,0.816,102,4.002,104,0.125,106,2.183,108,0.372,110,1.2,111,1.145,112,0.202,113,1.228,144,1.091,145,0.855,166,1.381,173,1.349,254,1.98,270,4.595,273,1.228,288,3.179,293,0.875,298,3.039,299,3.885,301,5.585,302,4.595,316,2.924,345,1.448,351,1.107,374,3.783,404,1.162,435,4.265,444,2.771,456,2.358,457,1.534,469,1.281,470,1.668,480,1.938,527,5.037,528,3.034,537,4.595,538,4.265,539,6.309,543,3.039,560,3.039,561,3.039,575,2.41,593,0.691,612,1.621,625,4.002,626,4.002,828,3.589,829,6.309,830,3.783,831,6.285,832,6.115,833,7.149,834,3.733,835,4.595,836,8.017,837,6.594,838,5.707,839,4.067,840,4.067,841,4.067,842,5.707,843,4.067,844,5.707,845,6.594,846,5.707,847,4.067,848,4.265,849,4.067,850,3.274,851,3.589,852,5.707,853,3.589,854,4.067,855,4.067]],["title/classes/ErrorFilter.html",[91,0.163,202,3.289]],["body/classes/ErrorFilter.html",[14,0.009,18,0.088,19,0.098,20,0.069,22,0.088,23,0.163,24,0.66,29,1.034,32,0.637,45,3.953,89,4.888,90,0.088,91,0.166,92,0.004,93,0.006,94,0.004,103,5.385,104,0.138,108,0.233,110,0.942,111,1.224,112,0.222,113,0.964,145,1.283,166,1.477,173,1.059,176,0.987,202,4.56,285,1.195,305,2.475,320,1.949,345,1.548,351,2.281,405,1.829,425,5.385,427,3.141,431,4.866,467,3.206,468,2.766,575,2.576,580,2.432,647,1.935,744,3.843,781,3.319,856,3.953,857,6.102,858,6.102,859,6.102,860,6.102,861,6.102,862,6.102,863,6.124,864,2.825,865,6.124,866,6.102,867,5.999,868,6.576,869,4.48,870,6.102,871,6.102,872,5.385,873,4.48,874,4.044,875,2.693,876,4.48,877,4.48,878,3.953,879,3.834,880,3.953,881,3.348,882,4.913,883,4.48,884,4.48,885,6.102,886,4.48,887,4.48,888,4.48,889,4.48,890,2.578,891,3.953,892,4.48,893,3.953,894,4.48,895,4.48,896,4.48,897,6.102,898,4.48,899,4.48,900,3.953,901,6.102,902,4.48,903,4.48]],["title/injectables/ExtractKeyValueUtil.html",[95,0.207,375,2.645]],["body/injectables/ExtractKeyValueUtil.html",[14,0.009,18,0.099,19,0.11,20,0.078,22,0.099,23,0.144,24,0.796,32,0.718,68,4.346,69,5.321,90,0.099,91,0.187,92,0.005,93,0.007,94,0.005,95,0.312,96,1.012,104,0.155,106,2.439,108,0.344,110,1.061,111,1.012,112,0.25,113,1.087,144,0.835,145,1.061,166,1.599,172,3.059,173,1.193,176,1.788,254,1.869,274,3.803,293,1.087,333,2.683,351,1.375,352,4.634,353,2.03,375,3.972,392,3.735,404,1.442,405,1.513,444,2.562,469,1.59,485,4.634,491,6.532,508,4.634,509,4.429,510,4.939,629,6.502,834,3.16,904,6.502,905,4.455,906,4.939,907,5.832,908,6.609,909,6.609,910,6.609,911,5.048,912,6.609,913,5.048,914,3.773,915,5.048,916,5.048,917,4.455,918,4.455,919,5.048,920,4.455,921,4.455,922,4.455]],["title/classes/ExtractKeyValueUtilDto.html",[91,0.163,914,3.289]],["body/classes/ExtractKeyValueUtilDto.html",[14,0.009,17,2.962,18,0.122,19,0.135,20,0.095,22,0.122,23,0.135,29,1.43,68,4.42,90,0.122,91,0.229,92,0.006,93,0.007,94,0.006,104,0.19,108,0.391,112,0.373,144,1.393,285,1.213,392,3.747,404,2.313,405,1.857,429,4.105,507,3.723,508,4.343,509,3.723,510,4.629,591,3.901,593,0.911,834,2.962,914,5.62,923,7.146,924,5.467,925,6.194,926,6.194]],["title/injectables/FindUserDto.html",[95,0.207,446,2.917]],["body/injectables/FindUserDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,22,0.125,23,0.167,24,0.689,32,0.906,90,0.125,91,0.236,92,0.006,93,0.008,94,0.006,95,0.361,96,1.278,104,0.196,108,0.332,112,0.316,144,1.266,273,1.647,299,3.782,437,4.066,446,5.07,593,0.927,752,4.224,756,4.763,794,3.784,927,6.159]],["title/classes/ForgotPasswordDto.html",[91,0.163,295,3.086]],["body/classes/ForgotPasswordDto.html",[14,0.009,16,3.682,18,0.127,19,0.141,20,0.099,22,0.127,23,0.141,29,1.487,90,0.127,91,0.238,92,0.006,93,0.008,94,0.006,104,0.198,108,0.335,112,0.319,144,1.274,285,1.261,295,5.398,298,4.813,299,3.793,405,1.931,419,4.813,560,4.813,590,4.516,593,0.933,595,4.813,777,4.516,928,6.794,929,6.441,930,6.441,931,5.684,932,6.441]],["title/injectables/GenerateRentalDurationEnumUtil.html",[95,0.207,933,2.772]],["body/injectables/GenerateRentalDurationEnumUtil.html",[14,0.009,18,0.076,19,0.085,20,0.06,22,0.076,23,0.168,24,0.757,32,0.553,90,0.076,91,0.144,92,0.004,93,0.005,94,0.004,95,0.26,96,0.779,104,0.119,108,0.288,110,1.162,111,1.108,113,1.189,145,1.775,166,1.337,173,1.306,254,1.951,293,1.189,315,2.478,320,2.404,345,1.777,351,2.094,353,1.193,444,1.506,456,2.3,457,2.084,463,3.48,467,2.202,468,2.202,469,1.74,470,2.266,480,1.876,647,1.954,649,1.858,651,1.776,656,2.643,781,1.858,875,3.865,890,2.236,933,3.48,934,5.675,935,3.934,936,3.428,937,4.876,938,4.844,939,5.526,940,5.526,941,3.662,942,5.526,943,5.526,944,5.526,945,7.262,946,3.885,947,2.724,948,5.64,949,5.526,950,3.885,951,4.449,952,5.526,953,5.526,954,6.192,955,6.371,956,5.671,957,3.128,958,3.428,959,4.129,960,3.885,961,3.885,962,3.885,963,4.449,964,3.885,965,3.885,966,3.885,967,3.885,968,2.903,969,3.885,970,3.885,971,3.428,972,3.885,973,6.431,974,4.509,975,3.885,976,3.047,977,6.431,978,6.431,979,3.428,980,5.526,981,2.447,982,3.428,983,6.431,984,3.885]],["title/injectables/GeoUrlApiPipe.html",[95,0.207,985,2.772]],["body/injectables/GeoUrlApiPipe.html",[12,2.939,14,0.009,18,0.062,19,0.069,20,0.049,22,0.125,23,0.167,24,0.736,32,0.45,51,3.037,52,5.059,80,4.194,90,0.062,91,0.117,92,0.003,93,0.005,94,0.003,95,0.224,96,0.634,104,0.097,106,1.047,108,0.331,110,1.335,111,1.273,112,0.283,113,1.367,142,1.62,143,1.842,144,1.394,145,1.431,166,1.537,173,1.35,176,1.635,239,1.9,254,1.981,273,1.367,285,1.244,293,1.465,300,3.578,331,3.332,345,1.727,351,1.947,353,1.754,392,2.006,404,1.945,405,1.425,414,4.004,444,1.225,456,2.271,457,1.192,467,1.26,468,1.26,469,0.995,470,1.296,474,3.037,480,2.701,509,2.856,511,1.9,528,2.526,571,2.131,572,2.273,575,2.681,644,1.335,645,1.614,647,1.325,651,1.572,713,4.139,748,2.848,761,3.332,776,3.332,781,1.512,784,2.526,864,2.2,879,4.217,985,2.993,986,6.008,987,2.79,988,3.035,989,4.773,990,3.551,991,3.826,992,2.2,993,4.752,994,4.194,995,5.604,996,2.993,997,2.856,998,4.194,999,6.35,1000,5.604,1001,2.79,1002,4.115,1003,3.161,1004,4.752,1005,3.161,1006,4.194,1007,4.752,1008,4.752,1009,4.452,1010,4.194,1011,5.202,1012,5.202,1013,3.161,1014,4.752,1015,6.35,1016,3.161,1017,2.217,1018,2.79,1019,2.095,1020,2.79,1021,2.363,1022,2.363,1023,2.545,1024,1.564,1025,2.545,1026,3.161,1027,3.161,1028,3.161,1029,3.161,1030,3.161,1031,4.194,1032,5.112,1033,2.79,1034,3.161,1035,2.79,1036,3.161,1037,3.161]],["title/injectables/GeoUrlApiUtil.html",[95,0.207,1002,2.533]],["body/injectables/GeoUrlApiUtil.html",[14,0.009,18,0.067,19,0.075,20,0.053,22,0.118,23,0.144,24,0.647,32,0.486,51,3.156,52,5.7,90,0.067,91,0.126,92,0.003,93,0.005,94,0.003,95,0.238,96,0.686,104,0.105,108,0.262,110,1.059,111,1.01,113,1.084,144,1.341,145,1.258,152,2.481,166,1.219,173,1.56,176,1.812,254,1.867,293,1.084,300,3.567,301,3.339,305,1.889,345,2.023,351,1.916,353,1.548,392,2.971,405,2.11,444,1.326,456,2.139,457,1.9,467,2.008,468,2.008,469,1.586,470,2.066,562,1.889,575,2.127,713,3.771,729,2.398,747,2.783,761,3.533,784,2.678,879,4.315,906,2.556,963,4.816,990,5.959,1000,4.446,1002,2.899,1010,4.446,1011,5.686,1012,5.591,1020,3.018,1023,2.753,1024,4.011,1025,2.753,1032,4.816,1038,5.279,1039,3.018,1040,5.038,1041,5.038,1042,6.6,1043,5.038,1044,4.446,1045,4.446,1046,5.038,1047,5.038,1048,5.038,1049,5.038,1050,5.038,1051,2.556,1052,4.056,1053,3.42,1054,5.038,1055,5.038,1056,5.038,1057,5.038,1058,5.038,1059,3.42,1060,5.279,1061,3.765,1062,3.765,1063,2.753,1064,3.42,1065,5.038,1066,3.018,1067,3.42,1068,3.42,1069,3.42,1070,1.534,1071,3.42,1072,3.42,1073,3.42,1074,3.42,1075,3.42,1076,3.42]],["title/injectables/GivenNoticePipe.html",[95,0.207,1077,2.533]],["body/injectables/GivenNoticePipe.html",[14,0.009,18,0.067,19,0.074,20,0.052,22,0.129,23,0.166,24,0.71,32,0.482,78,4.606,89,2.763,90,0.067,91,0.125,92,0.003,93,0.005,94,0.003,95,0.236,96,0.679,104,0.104,108,0.31,110,1.25,111,1.193,112,0.168,113,1.28,145,1.25,152,0.991,166,1.696,173,1.406,176,1.447,254,1.976,273,1.077,285,0.663,293,1.508,300,1.389,315,3.29,320,3.649,331,3.507,345,1.509,351,1.908,353,1.537,404,1.699,444,1.313,456,2.623,457,1.277,462,2.694,463,3.15,467,1.35,468,1.35,469,1.873,470,1.389,474,2.392,480,1.698,562,1.871,567,1.698,571,2.243,572,1.619,575,1.43,578,2.474,580,1.35,600,3.899,644,2.511,651,1.954,656,3.508,671,1.619,709,1.519,748,1.519,830,3.315,864,1.567,874,3.942,875,4.409,935,2.659,945,6.874,948,6.403,957,2.726,976,2.176,992,1.567,1019,2.244,1024,2.942,1070,2.668,1077,2.878,1078,5.797,1079,2.988,1080,5.002,1081,5.002,1082,3.575,1083,5.237,1084,4.027,1085,5.002,1086,4.414,1087,5.002,1088,5.002,1089,5.002,1090,5.002,1091,5.002,1092,5.002,1093,5.948,1094,5.948,1095,5.002,1096,3.386,1097,4.779,1098,3.15,1099,4.17,1100,3.386,1101,4.17,1102,5.002,1103,3.386,1104,4.414,1105,4.414,1106,4.414,1107,5.002,1108,5.002,1109,2.988,1110,3.386,1111,3.386,1112,3.386,1113,3.386,1114,3.386,1115,3.386,1116,2.988,1117,3.386,1118,3.386,1119,3.386,1120,5.002,1121,3.386,1122,3.386,1123,3.386,1124,3.386,1125,2.531,1126,2.726,1127,2.726,1128,4.027,1129,3.738]],["title/classes/GivenNoticeSearchRentalDto.html",[91,0.163,1101,3.086]],["body/classes/GivenNoticeSearchRentalDto.html",[14,0.009,18,0.103,19,0.114,20,0.08,22,0.103,23,0.147,24,0.564,29,1.206,90,0.103,91,0.193,92,0.005,93,0.007,94,0.005,104,0.16,108,0.437,112,0.417,144,1.31,152,2.317,300,3.071,322,4.737,474,3.231,593,0.818,645,2.294,651,1.974,671,3.582,709,3.359,874,5.436,875,3.139,1024,4.229,1077,4.557,1082,5.139,1097,5.166,1099,4.737,1101,4.737,1126,6.03,1127,6.03,1130,7.545,1131,4.204,1132,4.255,1133,6.756,1134,4.255,1135,5.222,1136,5.222,1137,5.222,1138,5.222,1139,5.222,1140,5.222]],["title/classes/HttpErrorFilter.html",[91,0.163,222,3.289]],["body/classes/HttpErrorFilter.html",[14,0.009,18,0.087,19,0.097,20,0.068,22,0.087,24,0.655,29,1.025,32,0.631,65,4.577,89,3.35,90,0.087,91,0.164,92,0.004,93,0.006,94,0.004,104,0.136,108,0.231,110,0.933,111,0.89,112,0.22,113,0.955,166,1.467,173,1.049,176,1.522,222,4.532,233,3.574,274,2.554,305,4.432,345,1.538,351,2.116,403,4.252,429,4.577,467,2.753,567,1.507,580,2.417,647,1.691,744,3.819,781,2.123,799,5.351,863,3.917,865,6.55,867,5.976,868,6.858,872,7.079,874,2.942,875,2.668,878,5.351,880,5.351,881,3.317,882,4.882,931,5.351,1141,5.351,1142,3.917,1143,7.422,1144,5.351,1145,6.064,1146,6.064,1147,8.211,1148,6.064,1149,7.422,1150,6.064,1151,6.064,1152,6.064,1153,6.064,1154,6.064,1155,6.064,1156,6.064,1157,6.064,1158,6.907,1159,6.064,1160,6.064,1161,4.439,1162,3.317,1163,4.439,1164,4.439,1165,4.439,1166,3.574,1167,4.882,1168,4.439,1169,4.439,1170,4.439,1171,4.439,1172,4.439,1173,4.439,1174,4.439,1175,4.439,1176,3.317,1177,4.439,1178,4.439,1179,4.439,1180,4.439,1181,3.917,1182,4.439,1183,4.439,1184,4.439]],["title/classes/ImageDto.html",[91,0.163,1185,3.086]],["body/classes/ImageDto.html",[14,0.009,18,0.126,19,0.14,20,0.099,22,0.126,23,0.14,29,1.483,51,3.933,90,0.126,91,0.237,92,0.006,93,0.008,94,0.006,104,0.197,108,0.4,112,0.381,144,1.41,593,0.931,635,3.415,637,3.938,644,2.712,1181,5.669,1185,5.389,1186,5.669,1187,6.424,1188,5.669,1189,6.147,1190,6.424,1191,6.424]],["title/interfaces/ImageInterface.html",[1192,2.105,1193,2.917]],["body/interfaces/ImageInterface.html",[14,0.009,18,0.112,19,0.124,20,0.088,22,0.112,23,0.124,51,3.911,90,0.112,92,0.006,93,0.007,94,0.006,104,0.175,112,0.437,144,1.539,392,3.453,593,0.865,615,5.152,624,4.707,637,2.92,698,2.407,1192,3.416,1193,4.734,1194,3.59,1195,5.03,1196,6.585,1197,5.421,1198,6.585,1199,5.735]],["title/classes/ImageQueryResultsDto.html",[91,0.163,1200,3.289]],["body/classes/ImageQueryResultsDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,22,0.125,23,0.139,29,1.468,90,0.125,91,0.235,92,0.006,93,0.008,94,0.006,104,0.195,108,0.398,112,0.379,152,2.235,176,1.401,285,1.245,437,3.379,458,3.916,593,0.925,644,2.684,651,1.468,770,4.888,794,3.144,1132,4.004,1200,5.708,1201,6.592,1202,5.61,1203,7.226,1204,6.356,1205,6.356]],["title/classes/ImageUploadDto.html",[91,0.163,1206,3.544]],["body/classes/ImageUploadDto.html",[14,0.009,18,0.12,19,0.134,20,0.115,22,0.12,23,0.134,29,1.416,64,3.686,90,0.12,91,0.227,92,0.006,93,0.007,94,0.006,104,0.188,108,0.42,111,1.499,112,0.4,144,1.447,332,5.652,392,3.403,593,0.905,624,4.829,644,2.589,770,3.529,1201,6.756,1206,6.017,1207,5.411,1208,5.411,1209,6.132,1210,6.132,1211,6.132,1212,6.132,1213,6.132]],["title/controllers/ImagesController.html",[161,2.34,206,3.086]],["body/controllers/ImagesController.html",[12,1.755,14,0.009,18,0.046,19,0.052,20,0.073,22,0.107,23,0.179,24,0.72,32,0.336,90,0.046,91,0.087,92,0.002,93,0.004,94,0.002,104,0.073,106,0.783,108,0.372,110,1.503,111,1.433,112,0.235,113,1.538,143,1.47,145,1.503,161,2.523,163,1.257,166,0.917,169,5.011,172,4.02,173,1.689,174,1.767,175,1.658,176,1.398,178,1.489,179,1.903,180,1.767,184,1.767,188,3.146,203,1.875,206,2.658,239,1.421,254,2.18,269,1.767,273,1.366,304,4.503,305,2.622,316,1.942,332,2.658,333,1.257,345,1.813,353,2.196,405,1.902,414,1.658,437,4.226,456,1.356,457,1.43,458,2.27,467,1.511,468,1.511,474,1.813,538,1.767,567,1.287,614,4.591,615,1.489,635,2.523,637,4.28,651,1.94,674,2.886,770,5.106,775,5.349,776,2.658,784,3.543,794,4.236,797,4.449,806,6.142,992,2.514,1098,1.489,1185,5.141,1214,2.086,1215,2.513,1216,3.791,1217,3.791,1218,3.791,1219,3.791,1220,3.346,1221,3.791,1222,3.346,1223,3.791,1224,3.791,1225,2.364,1226,5.599,1227,2.364,1228,2.364,1229,2.364,1230,2.364,1231,2.364,1232,2.364,1233,6.114,1234,2.364,1235,2.364,1236,2.364,1237,2.364,1238,2.364,1239,2.833,1240,2.364,1241,2.364,1242,3.791,1243,2.364,1244,5.43,1245,2.364,1246,3.808,1247,2.364,1248,2.364,1249,3.146,1250,2.086,1251,1.567,1252,2.086,1253,2.364,1254,2.658,1255,3.791,1256,3.791,1257,2.364,1258,2.364,1259,3.791,1260,5.43,1261,3.791,1262,3.791,1263,3.791,1264,3.791,1265,2.364,1266,2.364,1267,2.364,1268,2.364,1269,2.364,1270,2.364,1271,3.791,1272,2.364,1273,2.364,1274,2.364,1275,2.364,1276,2.364,1277,2.364,1278,3.791,1279,2.364]],["title/modules/ImagesModule.html",[0,1.974,194,3.086]],["body/modules/ImagesModule.html",[0,3.046,1,4.774,2,2.374,3,2.473,4,2.707,5,2.707,6,2.473,7,3.908,8,4.082,12,3.677,14,0.009,15,3.735,16,2.055,17,2.055,18,0.084,19,0.094,20,0.066,22,0.084,23,0.129,24,0.945,32,0.611,36,3.735,90,0.084,91,0.159,92,0.004,93,0.006,94,0.004,100,3.276,106,1.423,111,0.862,163,3.152,194,6.368,203,2.934,206,4.762,212,3.212,213,2.473,238,3.212,239,2.583,494,2.707,603,5.264,605,3.013,608,2.583,610,4.774,621,3.212,757,5.003,765,5.264,770,3.908,976,2.58,1197,2.848,1199,3.013,1215,3.931,1249,5.752,1250,3.792,1280,3.792,1281,3.792,1282,3.792,1283,3.792,1284,5.264,1285,5.264,1286,4.297,1287,5.93,1288,3.46,1289,4.297,1290,4.775,1291,4.297,1292,3.792,1293,5.234,1294,3.792,1295,3.792,1296,3.792,1297,3.792,1298,3.792,1299,3.46,1300,2.848,1301,5.93]],["title/injectables/ImagesService.html",[95,0.207,1249,2.917]],["body/injectables/ImagesService.html",[12,2.008,14,0.009,18,0.032,19,0.036,20,0.067,22,0.111,23,0.149,24,0.783,32,0.234,51,0.786,56,2.456,64,1.686,90,0.032,91,0.061,92,0.002,93,0.003,94,0.002,95,0.132,96,0.33,100,1.55,104,0.05,106,0.929,108,0.311,110,1.191,111,1.197,112,0.082,113,0.354,143,2.196,144,0.878,145,1.435,172,2.008,176,1.169,188,1.089,203,1.388,213,0.946,239,0.988,254,1.437,273,1.737,274,1.614,277,3.76,292,1.089,293,1.142,301,1.859,304,2.928,305,1.55,316,3.192,345,1.955,351,1.858,353,2.259,392,0.694,404,1.618,405,1.301,414,2.573,437,2.306,444,0.637,456,2.135,457,2.001,458,2.329,463,1.035,467,2.114,468,2.573,469,1.534,470,1.998,474,2.075,478,2.097,480,0.558,494,1.767,507,1.686,528,1.491,548,1.437,567,2.115,593,0.34,603,3.755,605,1.967,607,2.259,608,3.744,610,3.405,612,2.258,614,2.432,615,4.63,616,2.259,619,3.516,621,1.228,623,1.451,624,3.715,635,3.628,637,3.91,645,0.953,647,1.479,651,1.721,674,3.173,698,2.392,733,1.153,760,2.743,762,1.859,765,3.755,770,4.721,775,3.72,776,3.415,777,3.72,781,0.786,784,2.589,794,3.687,797,4.893,798,2.476,806,2.259,834,2.537,879,2.397,976,1.887,992,2.456,994,2.476,1083,1.228,1106,2.476,1116,3.829,1132,1.767,1176,2.097,1185,1.967,1189,2.097,1193,1.089,1197,5.28,1199,5.405,1200,1.228,1203,3.829,1208,2.476,1215,1.859,1220,3.239,1222,3.239,1249,1.859,1251,1.089,1252,1.451,1254,3.415,1284,3.755,1285,3.755,1292,1.451,1293,2.476,1294,1.451,1295,1.451,1296,1.451,1297,1.451,1298,1.451,1302,1.451,1303,1.859,1304,2.805,1305,1.859,1306,3.829,1307,5.305,1308,2.805,1309,2.805,1310,2.805,1311,2.805,1312,1.859,1313,2.805,1314,3.67,1315,3.67,1316,4.871,1317,5,1318,1.644,1319,1.644,1320,2.805,1321,1.644,1322,2.805,1323,1.644,1324,2.805,1325,1.644,1326,2.476,1327,2.805,1328,1.859,1329,2.805,1330,2.805,1331,2.476,1332,1.644,1333,3.67,1334,1.644,1335,3.493,1336,2.805,1337,5.665,1338,1.967,1339,2.805,1340,1.644,1341,1.644,1342,2.805,1343,2.259,1344,2.805,1345,1.767,1346,2.805,1347,1.228,1348,1.323,1349,0.988,1350,1.644,1351,1.967,1352,1.451,1353,1.644,1354,1.644,1355,1.644,1356,1.644,1357,6.825,1358,1.644,1359,1.644,1360,1.644,1361,1.644,1362,2.805,1363,4.681,1364,4.338,1365,2.805,1366,0.874,1367,1.644,1368,1.644,1369,1.644,1370,1.644,1371,3.67,1372,1.644,1373,1.644,1374,1.644,1375,1.644,1376,1.644,1377,1.644,1378,1.323,1379,3.239,1380,1.644,1381,1.644,1382,2.476,1383,1.644,1384,1.644,1385,1.644,1386,1.644,1387,1.644,1388,1.644]],["title/injectables/JoiValidationPipe.html",[95,0.207,1389,3.086]],["body/injectables/JoiValidationPipe.html",[14,0.009,18,0.107,19,0.118,20,0.083,22,0.107,23,0.151,24,0.748,30,5.571,32,0.771,39,6.106,78,4.852,89,3.823,90,0.107,91,0.282,92,0.005,93,0.007,94,0.005,95,0.326,96,1.087,104,0.166,106,1.794,108,0.36,110,1.455,111,1.388,112,0.343,113,1.489,142,2.777,143,2.101,145,1.139,166,1.675,173,1.281,293,1.167,351,1.476,404,2.294,462,2.838,469,1.707,528,3.678,571,3.103,572,3.309,578,3.423,580,2.16,587,4.783,781,2.592,900,4.783,988,3.678,1300,5.787,1389,4.852,1390,6.727,1391,4.783,1392,6.919,1393,6.919,1394,6.919,1395,5.42,1396,5.42,1397,5.42,1398,5.42,1399,4.783,1400,5.42,1401,5.42]],["title/injectables/JwtAuthGuard.html",[95,0.207,178,2.772]],["body/injectables/JwtAuthGuard.html",[14,0.009,18,0.127,19,0.141,20,0.099,22,0.127,23,0.168,24,0.832,32,0.916,68,4.219,90,0.127,91,0.238,92,0.006,93,0.008,94,0.006,95,0.363,96,1.292,178,4.849,385,4.269,476,4.627,1402,5.684,1403,5.186,1404,5.102,1405,5.753,1406,4.516,1407,5.684,1408,5.186,1409,4.813,1410,6.441]],["title/classes/JwtPayloadDto.html",[91,0.163,619,2.917]],["body/classes/JwtPayloadDto.html",[14,0.009,18,0.123,19,0.137,20,0.096,22,0.123,23,0.137,29,1.445,68,3.207,90,0.123,91,0.231,92,0.006,93,0.008,94,0.006,104,0.192,108,0.423,112,0.403,144,1.454,285,1.226,299,3.538,405,1.876,461,4.323,591,3.942,593,0.917,619,5.015,620,6.315,1335,6.548,1411,5.523,1412,5.523,1413,6.258,1414,6.258,1415,6.258]],["title/injectables/JwtStrategy.html",[95,0.207,377,3.086]],["body/injectables/JwtStrategy.html",[14,0.009,18,0.103,19,0.114,20,0.08,22,0.103,23,0.173,24,0.887,32,0.744,68,4.383,76,3.296,90,0.103,91,0.193,92,0.005,93,0.007,94,0.005,95,0.319,96,1.049,104,0.161,106,2.482,108,0.352,110,1.1,111,1.049,112,0.26,113,1.126,145,1.666,166,1.637,173,1.237,176,1.491,254,1.902,292,5.253,299,2.276,333,2.782,345,1.327,352,3.669,377,4.744,385,3.468,386,3.911,387,4.618,399,4.618,461,2.782,462,2.774,476,4.506,630,4.618,907,4.618,1335,4.213,1406,4.744,1408,4.213,1409,3.911,1412,5.97,1416,4.618,1417,5.233,1418,6.765,1419,5.233,1420,4.618,1421,5.233,1422,4.618,1423,5.233,1424,5.233,1425,5.233,1426,5.233,1427,5.233,1428,5.233,1429,5.233,1430,5.233,1431,5.233]],["title/classes/LocCreateRentalDto.html",[91,0.163,1017,3.086]],["body/classes/LocCreateRentalDto.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.107,23,0.152,24,0.59,29,1.26,51,3.323,90,0.107,91,0.202,92,0.005,93,0.007,94,0.005,104,0.168,108,0.398,112,0.379,144,1.332,152,2.356,273,1.496,285,1.361,293,1.496,300,3.542,329,4.606,404,2.184,433,5.193,480,2.933,593,0.842,644,2.304,645,2.36,651,1.766,667,3.826,691,4.078,713,3.56,748,3.43,784,3.694,989,5.361,1009,4.873,1017,4.873,1032,6.156,1303,5.335,1432,7.104,1433,5.193,1434,6.949,1435,4.377,1436,4.393,1437,4.393]],["title/injectables/LocalAuthGuard.html",[95,0.207,339,3.289]],["body/injectables/LocalAuthGuard.html",[14,0.009,18,0.127,19,0.141,20,0.099,22,0.127,23,0.168,24,0.832,32,0.916,90,0.127,91,0.238,92,0.006,93,0.008,94,0.006,95,0.363,96,1.292,339,5.753,385,4.269,476,4.627,1403,5.186,1404,5.102,1405,5.753,1406,4.516,1407,5.684,1408,5.186,1409,4.813,1438,5.684,1439,6.63,1440,6.441]],["title/injectables/LocalStrategy.html",[95,0.207,378,3.086]],["body/injectables/LocalStrategy.html",[14,0.009,18,0.094,19,0.105,20,0.074,22,0.094,23,0.139,24,0.828,32,0.682,90,0.094,91,0.177,92,0.005,93,0.006,94,0.005,95,0.301,96,0.962,104,0.147,106,1.588,108,0.333,110,1.344,111,1.282,112,0.317,113,1.376,142,2.459,144,1.358,145,1.009,166,1.547,173,1.134,176,1.408,254,1.823,273,1.888,288,3.537,293,1.376,299,3.57,342,4.933,343,3.863,345,1.621,351,1.307,353,1.474,378,4.481,385,3.18,405,1.916,409,5.64,440,4.481,444,2.477,461,2.551,462,3.142,469,2.013,474,3.056,476,4.797,480,2.17,575,2.026,631,3.841,647,1.782,1338,4.481,1405,5.727,1406,5.596,1409,3.586,1420,4.235,1422,4.235,1439,3.863,1441,4.235,1442,4.798,1443,4.798,1444,6.391,1445,4.798,1446,6.391,1447,4.798,1448,4.798,1449,4.798,1450,3.365,1451,4.798]],["title/guards/LoggedOutGaurd.html",[181,2.645,1404,2.917]],["body/guards/LoggedOutGaurd.html",[14,0.009,17,3.07,18,0.076,19,0.084,20,0.06,22,0.126,23,0.168,24,0.756,32,0.551,59,4.636,65,2.566,68,4.213,86,2.328,90,0.076,91,0.143,92,0.004,93,0.005,94,0.005,95,0.26,104,0.119,106,1.282,108,0.334,110,1.35,111,1.287,112,0.318,113,1.382,142,1.984,143,1.501,145,1.159,166,1.334,172,2.552,173,1.303,176,1.812,181,3.314,254,1.628,273,1.382,278,4.439,281,2.894,282,4.12,291,4.501,293,0.833,312,4.439,313,5.227,314,4.636,316,2.825,319,4.12,320,2.398,323,4.12,330,2.894,333,2.058,345,1.398,351,1.905,353,1.19,392,2.71,405,1.653,413,5.742,429,3.654,431,2.715,444,2.711,456,2.296,469,1.219,507,3.314,508,3.866,509,3.859,510,4.12,523,3.417,548,3.937,562,3.046,567,1.315,575,2.328,580,1.544,647,1.537,682,3.472,906,2.894,917,3.417,918,3.417,920,3.417,988,3.412,1070,2.473,1166,4.439,1167,5.952,1338,2.715,1404,2.566,1452,3.872,1453,6.173,1454,3.417,1455,4.865,1456,7.392,1457,5.513,1458,3.872,1459,3.872,1460,3.872,1461,6.173,1462,3.872,1463,5.513,1464,5.169,1465,3.046,1466,5.513,1467,5.665,1468,5.513,1469,3.872,1470,5.513,1471,4.865,1472,4.865,1473,3.118,1474,3.872,1475,3.872,1476,3.872,1477,3.872,1478,3.872,1479,3.872,1480,3.417,1481,3.872,1482,3.417,1483,3.872]],["title/injectables/LoggingInterceptor.html",[95,0.207,201,3.289]],["body/injectables/LoggingInterceptor.html",[14,0.009,18,0.088,19,0.098,20,0.069,22,0.088,23,0.133,24,0.806,32,0.638,90,0.088,91,0.166,92,0.007,93,0.006,94,0.004,95,0.288,96,0.9,104,0.138,108,0.234,110,0.944,111,0.9,112,0.223,113,0.966,145,0.944,166,1.479,172,2.077,173,1.061,201,4.566,254,1.55,273,1.605,320,1.952,351,2.031,427,3.147,431,4.284,571,2.74,580,1.789,631,4.838,647,2.176,760,4.566,781,2.922,874,2.974,875,2.698,879,3.375,881,3.354,891,3.961,893,3.961,997,3.672,1070,2.74,1132,3.848,1166,4.919,1167,3.613,1176,4.566,1405,5.191,1455,5.392,1461,6.581,1467,6.581,1473,3.613,1482,3.961,1484,5.392,1485,3.961,1486,6.11,1487,6.11,1488,6.11,1489,6.11,1490,6.946,1491,6.11,1492,5.392,1493,6.11,1494,6.11,1495,5.392,1496,6.11,1497,6.11,1498,6.11,1499,4.566,1500,6.11,1501,6.11,1502,6.11,1503,5.392,1504,6.11,1505,6.11,1506,6.11,1507,6.11,1508,6.11,1509,4.871,1510,7.457,1511,4.488,1512,6.11,1513,4.488,1514,4.488,1515,4.488,1516,4.488,1517,4.488,1518,4.488,1519,4.488,1520,4.488,1521,4.488,1522,4.488,1523,3.961,1524,2.974,1525,4.488,1526,4.488,1527,4.488]],["title/injectables/LoginDto.html",[95,0.207,1528,3.544]],["body/injectables/LoginDto.html",[14,0.009,18,0.123,19,0.137,20,0.096,22,0.123,23,0.165,24,0.676,32,0.89,90,0.123,91,0.231,92,0.006,93,0.008,94,0.006,95,0.357,96,1.255,104,0.192,108,0.394,112,0.375,144,1.398,203,3.743,273,1.629,288,3.434,429,5.015,440,5.305,461,4.323,593,0.917,1528,6.092,1529,5.523,1530,6.258,1531,6.258]],["title/classes/LoginUserDto.html",[91,0.163,1532,3.544]],["body/classes/LoginUserDto.html",[14,0.009,18,0.126,19,0.14,20,0.099,22,0.126,23,0.14,29,1.483,90,0.126,91,0.237,92,0.006,93,0.008,94,0.006,104,0.197,108,0.4,112,0.381,144,1.41,273,1.383,285,1.258,405,1.926,429,4.257,435,6.147,461,4.372,591,4.046,593,0.931,752,4.257,1532,6.188,1533,7.259,1534,6.424,1535,6.424]],["title/interfaces/MailOptionsInterface.html",[848,3.289,1192,2.105]],["body/interfaces/MailOptionsInterface.html",[14,0.009,18,0.121,19,0.135,20,0.095,22,0.121,23,0.135,90,0.121,92,0.006,93,0.007,94,0.006,104,0.19,112,0.428,144,1.527,537,4.975,538,4.617,593,0.91,831,4.975,832,4.617,848,5.611,850,6.773,851,7.424,853,7.424,1192,2.955,1194,3.892,1536,5.453]],["title/injectables/MapNewRentalPipe.html",[95,0.207,1435,2.772]],["body/injectables/MapNewRentalPipe.html",[14,0.009,18,0.097,19,0.108,20,0.076,22,0.128,23,0.169,24,0.788,32,0.703,90,0.097,91,0.183,92,0.005,93,0.006,94,0.005,95,0.307,96,0.992,99,4.364,104,0.152,108,0.257,110,1.04,111,0.992,112,0.323,113,1.064,145,1.04,166,1.578,173,1.169,176,1.437,254,1.85,285,1.621,293,1.57,300,2.028,345,1.254,351,1.347,404,1.862,457,1.865,467,1.971,468,1.971,469,1.557,470,2.028,480,2.737,571,3.478,572,3.118,578,3.225,580,1.971,645,2.214,647,1.818,651,1.506,665,5.213,668,3.919,670,5.754,671,2.365,672,3.115,673,2.846,674,2.629,675,2.732,676,3.467,677,3.696,678,3.467,679,3.115,713,2.534,748,3.478,1017,5.437,1018,4.364,1019,4.321,1125,3.696,1435,4.107,1537,5.754,1538,4.364,1539,4.945,1540,5.754,1541,3.981,1542,4.945,1543,4.945,1544,4.945,1545,4.945,1546,4.945,1547,4.945,1548,4.945,1549,3.981,1550,4.945,1551,4.945,1552,4.945]],["title/injectables/MulterUploadUtil.html",[95,0.207,1284,2.917]],["body/injectables/MulterUploadUtil.html",[14,0.009,18,0.088,19,0.098,20,0.094,22,0.12,23,0.163,24,0.484,32,0.637,56,2.825,90,0.088,91,0.166,92,0.004,93,0.006,94,0.004,95,0.288,96,0.898,104,0.138,108,0.233,110,0.942,111,0.898,145,1.283,172,3.212,176,1.345,254,1.136,273,1.678,285,1.195,293,0.964,304,4.479,305,3.371,345,2.125,353,1.376,404,1.28,405,1.829,444,1.737,457,1.69,467,1.786,468,2.97,469,1.411,470,1.837,494,4.91,528,3.243,593,0.739,606,3.607,607,6.627,612,1.786,613,3.953,614,5.694,615,5.066,631,2.693,635,3.243,637,3.994,647,2.078,651,1.721,698,3.396,770,4.486,784,3.243,794,3.018,797,4.279,811,3.953,864,2.825,992,2.825,1197,4.938,1254,5.225,1284,4.044,1317,6.124,1343,4.913,1363,3.953,1553,5.385,1554,6.102,1555,7.451,1556,4.48,1557,4.48,1558,4.48,1559,4.48,1560,4.48]],["title/injectables/PositiveNumber.html",[95,0.207,1561,3.289]],["body/injectables/PositiveNumber.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.12,23,0.163,24,0.659,32,0.868,76,3.843,86,3.667,90,0.12,91,0.226,92,0.006,93,0.007,94,0.006,95,0.351,96,1.224,104,0.187,108,0.318,145,1.566,152,2.354,285,1.195,404,1.743,462,3.299,528,3.96,531,5.224,593,0.903,612,2.432,976,2.654,1561,5.568,1562,6.575,1563,5.384,1564,6.575,1565,6.101,1566,6.101]],["title/classes/PricingDto.html",[91,0.163,1567,2.917]],["body/classes/PricingDto.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.12,23,0.133,29,1.405,90,0.12,91,0.225,92,0.006,93,0.007,94,0.006,104,0.187,108,0.418,112,0.415,144,1.231,152,2.449,567,2.842,593,0.901,645,2.066,647,1.697,651,1.405,675,3.362,684,3.235,709,3.604,710,5.06,711,3.833,712,3.833,736,3.295,822,3.658,1567,4.93,1568,5.371,1569,6.086,1570,6.086,1571,6.086,1572,6.086]],["title/injectables/PricingPipe.html",[95,0.207,1573,2.917]],["body/injectables/PricingPipe.html",[14,0.009,18,0.072,19,0.08,20,0.056,22,0.122,23,0.174,24,0.574,32,0.522,90,0.072,91,0.136,92,0.004,93,0.005,94,0.004,95,0.25,96,0.737,104,0.113,108,0.325,110,1.31,111,1.25,112,0.182,113,0.791,144,0.608,145,1.116,152,1.075,166,1.652,173,0.868,176,1.663,254,1.837,273,1.47,285,1.615,293,1.342,345,1.581,351,1.697,353,1.631,404,2.156,405,1.591,456,2.699,457,1.385,462,2.8,467,1.464,468,1.464,469,1.963,470,1.506,517,3.062,519,2.434,548,2.72,567,2.116,571,2.381,572,2.539,575,2.241,578,2.626,580,1.464,593,0.643,612,2.116,640,2.745,651,1.226,668,3.191,675,3.772,709,3.491,710,4.562,711,2.314,712,2.314,729,4.787,736,2.556,748,3.062,976,2.309,988,2.821,1070,3.062,1450,2.576,1465,4.17,1567,5.592,1573,3.518,1574,3.242,1575,5.308,1576,7.242,1577,7.242,1578,3.673,1579,5.308,1580,3.673,1581,5.497,1582,3.518,1583,3.673,1584,6.828,1585,4.684,1586,5.308,1587,5.308,1588,3.518,1589,2.957,1590,3.673,1591,3.673,1592,5.501,1593,2.745,1594,3.673,1595,6.391,1596,3.673,1597,5.501,1598,3.673,1599,3.242,1600,4.684,1601,3.673,1602,3.673]],["title/classes/ProcessRentalTimeDto.html",[91,0.163,959,3.289]],["body/classes/ProcessRentalTimeDto.html",[14,0.009,18,0.118,19,0.131,20,0.093,22,0.118,23,0.131,29,1.391,90,0.118,91,0.223,92,0.006,93,0.007,94,0.006,104,0.185,108,0.416,112,0.397,152,2.549,593,0.896,644,2.544,647,1.68,651,1.926,654,3.622,834,2.881,935,3.203,937,5.317,938,3.795,947,4.225,954,6.715,955,6.715,956,5.848,959,5.525,992,2.789,1132,3.795,1603,7.361,1604,5.317,1605,6.025,1606,6.025,1607,6.025,1608,6.025,1609,6.025,1610,6.025]],["title/injectables/ProcessSaveDataUtil.html",[95,0.207,1285,2.917]],["body/injectables/ProcessSaveDataUtil.html",[14,0.009,18,0.084,19,0.093,20,0.091,22,0.116,23,0.159,24,0.73,32,0.605,51,2.816,90,0.084,91,0.157,92,0.004,93,0.006,94,0.004,95,0.278,96,0.853,104,0.131,108,0.221,110,0.894,111,0.853,145,1.42,176,1.297,254,1.079,273,1.267,285,1.153,293,1.453,345,1.849,351,1.985,392,2.486,404,1.215,444,1.648,469,1.339,478,5.447,480,1.999,494,4.987,511,3.539,567,1.999,593,0.713,612,1.695,615,5.291,624,3.388,635,3.874,637,4.5,651,1.36,674,3.129,733,2.982,768,5.196,784,2.26,797,2.982,976,1.85,988,3.129,992,2.725,1070,2.641,1193,4.476,1196,4.74,1197,5.38,1198,4.74,1199,5.691,1246,5.111,1254,5.551,1285,3.902,1326,5.196,1338,2.982,1345,3.708,1348,3.424,1351,2.982,1352,3.753,1366,2.26,1465,3.253,1582,3.902,1611,5.196,1612,3.753,1613,6.754,1614,4.252,1615,5.196,1616,5.887,1617,3.753,1618,4.252,1619,4.252,1620,4.252,1621,4.252,1622,4.252,1623,4.252,1624,4.252,1625,4.252,1626,4.252,1627,4.252,1628,4.252,1629,4.252,1630,4.252]],["title/injectables/ProcessUnavailabilityPipe.html",[95,0.207,1631,2.772]],["body/injectables/ProcessUnavailabilityPipe.html",[14,0.009,18,0.046,19,0.051,20,0.036,22,0.106,23,0.151,24,0.684,28,3.328,32,0.334,56,2.504,90,0.046,91,0.087,92,0.002,93,0.004,94,0.002,95,0.178,96,0.471,104,0.072,108,0.246,110,0.993,111,0.948,112,0.116,113,0.505,145,1.33,166,0.912,173,0.555,176,1.523,254,1.503,273,1.361,275,5.582,285,1.353,315,3.561,320,2.751,345,1.372,346,2.375,351,2.074,353,1.662,403,4.154,404,2.037,405,1.622,444,2.097,458,3.179,462,1.546,463,2.375,480,1.837,489,2.84,499,2.644,511,2.266,517,2.426,528,2.004,567,1.837,571,2.119,572,1.123,578,1.865,580,0.936,593,0.457,612,1.503,641,4.435,644,1.592,647,1.052,649,1.803,650,2.897,651,1.249,652,3.036,653,2.266,654,3.802,655,2.976,656,3.576,657,4.248,659,1.932,664,1.932,698,1.592,727,3.793,734,3.149,736,2.218,747,2.61,753,2.644,762,2.499,781,1.123,784,2.004,864,1.745,976,2.353,988,2.004,1051,1.755,1070,1.053,1098,1.479,1105,3.328,1306,2.072,1312,2.499,1328,3.926,1509,2.644,1588,2.499,1613,4.774,1617,2.072,1631,2.375,1632,4.774,1633,1.646,1634,3.77,1635,5.409,1636,3.77,1637,3.77,1638,3.036,1639,4.727,1640,4.725,1641,5.409,1642,4.661,1643,2.348,1644,3.77,1645,3.77,1646,3.328,1647,3.77,1648,3.036,1649,7.476,1650,2.348,1651,3.77,1652,3.77,1653,3.77,1654,3.77,1655,3.77,1656,3.77,1657,3.77,1658,3.036,1659,2.499,1660,2.348,1661,2.072,1662,2.499,1663,3.036,1664,1.646,1665,2.348,1666,4.17,1667,2.348,1668,3.793,1669,2.348,1670,2.348,1671,3.113,1672,4.427,1673,2.348,1674,4.427,1675,2.348,1676,2.072,1677,5.409,1678,5.409,1679,3.77,1680,2.348,1681,2.072,1682,2.348,1683,5.409,1684,3.77,1685,2.348,1686,1.351,1687,1.479,1688,2.072,1689,3.77,1690,3.409,1691,3.77,1692,4.725,1693,4.17,1694,4.725,1695,4.725,1696,4.725,1697,4.725,1698,2.348,1699,3.409,1700,2.348,1701,6.91,1702,5.924,1703,2.348,1704,2.348,1705,3.77,1706,3.328,1707,3.77,1708,3.77,1709,3.77,1710,2.348,1711,2.072,1712,2.348,1713,2.348,1714,2.348,1715,2.348,1716,3.036,1717,2.348,1718,3.036,1719,2.348,1720,2.348]],["title/classes/ProcessedSaveDataDto.html",[91,0.163,1351,3.086]],["body/classes/ProcessedSaveDataDto.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.12,23,0.163,24,0.661,29,1.412,90,0.12,91,0.226,92,0.006,93,0.007,94,0.006,104,0.188,108,0.388,112,0.37,285,1.461,478,6.018,494,5.072,593,0.904,637,4.404,644,3.15,645,2.534,647,2.081,1193,5.697,1331,6.585,1348,4.924,1351,5.232,1721,7.106,1722,4.924,1723,6.116,1724,5.398]],["title/classes/ProcessedUnavailabilityDto.html",[91,0.163,1662,2.917]],["body/classes/ProcessedUnavailabilityDto.html",[14,0.009,18,0.104,19,0.115,20,0.081,22,0.104,23,0.148,24,0.734,29,1.216,90,0.104,91,0.195,92,0.005,93,0.007,94,0.005,104,0.162,108,0.392,112,0.394,176,1.497,285,1.611,293,1.462,480,2.307,567,2.553,593,0.823,645,2.307,647,1.895,649,3.799,650,3.011,668,4.083,684,2.8,762,4.502,834,3.799,1132,4.279,1303,4.502,1465,3.753,1659,3.491,1662,4.502,1664,6.007,1666,5.995,1668,5.273,1690,3.031,1699,3.031,1716,6.055,1718,6.055,1725,6.397,1726,3.031,1727,6.793,1728,5.077,1729,6.793,1730,6.793,1731,5.995,1732,4.648,1733,3.936,1734,4.648]],["title/classes/ProcessedUnavailabilityQueryDto.html",[91,0.163,1668,3.086]],["body/classes/ProcessedUnavailabilityQueryDto.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.107,23,0.119,29,1.263,90,0.107,91,0.202,92,0.005,93,0.007,94,0.005,104,0.168,108,0.45,112,0.429,144,1.407,152,2.559,315,3.433,474,2.615,593,0.843,641,4.88,643,4.087,645,1.857,650,3.128,656,3.661,657,3.922,658,4.403,659,2.802,660,4.826,661,4.826,662,4.403,663,4.826,734,4.069,736,3.139,747,4.229,834,2.615,1668,4.88,1671,4.405,1725,7.042,1728,4.087,1735,5.469,1736,5.469,1737,4.826,1738,5.469,1739,4.403,1740,5.469,1741,4.826]],["title/classes/RawCoordinatesDto.html",[91,0.163,1062,3.289]],["body/classes/RawCoordinatesDto.html",[14,0.009,18,0.124,19,0.137,20,0.097,22,0.124,23,0.137,29,1.453,52,4.169,90,0.124,91,0.233,92,0.006,93,0.008,94,0.006,104,0.193,108,0.395,112,0.376,152,2.477,173,1.487,300,2.58,405,1.886,593,0.919,645,2.577,713,3.223,990,4.701,991,5.065,1002,3.62,1044,7.194,1045,7.194,1060,5.552,1062,5.672,1742,6.563,1743,5.065,1744,5.065,1745,5.552,1746,5.552]],["title/classes/RawCreateRentalDto.html",[91,0.163,989,3.086]],["body/classes/RawCreateRentalDto.html",[14,0.009,18,0.08,19,0.089,20,0.063,22,0.112,23,0.089,29,0.939,51,3.419,90,0.08,91,0.15,92,0.004,93,0.006,94,0.004,104,0.125,108,0.426,112,0.43,144,1.466,152,2.535,203,2.012,273,1.228,285,1.118,293,0.875,314,2.695,322,2.852,329,2.695,405,1.219,475,2.852,480,2.861,489,3.431,519,2.695,562,2.247,567,2.239,571,1.824,593,0.691,637,2.084,645,1.381,647,1.134,651,2.001,655,2.562,665,2.562,668,2.445,671,3.419,672,4.503,674,3.8,675,3.95,676,5.28,678,5.013,679,4.503,682,3.595,684,4.002,692,2.852,693,2.852,694,2.852,695,2.852,696,2.852,697,2.852,698,1.717,699,2.852,700,2.562,701,2.852,702,2.852,703,3.039,704,3.039,705,3.039,706,3.039,707,3.039,708,3.039,709,1.824,710,2.562,711,3.595,712,2.562,748,1.824,762,3.783,935,2.162,981,2.562,985,2.562,989,4.002,992,1.883,997,3.431,1009,2.852,1070,1.824,1082,2.445,1131,3.274,1239,4.265,1305,2.695,1433,3.039,1495,3.589,1499,3.039,1581,3.274,1742,6.696,1747,4.067,1748,4.067,1749,4.067,1750,4.067,1751,3.274,1752,4.067,1753,4.067,1754,3.274,1755,3.589,1756,4.067,1757,4.067,1758,4.067,1759,5.037,1760,5.707,1761,4.067,1762,4.067,1763,4.067,1764,4.067,1765,3.039,1766,4.067,1767,4.067,1768,4.067,1769,4.067,1770,4.067,1771,4.067,1772,4.067,1773,4.067,1774,3.589,1775,4.067]],["title/classes/RawScheduleUnavailabilityDto.html",[91,0.163,1776,3.289]],["body/classes/RawScheduleUnavailabilityDto.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.12,23,0.163,24,0.661,29,1.412,90,0.12,91,0.226,92,0.006,93,0.007,94,0.006,104,0.188,108,0.318,112,0.303,176,1.644,285,1.461,329,4.945,331,5.232,593,0.904,645,2.534,649,4.009,650,3.074,651,1.723,659,4.126,664,3.134,864,3.454,1433,5.576,1726,3.52,1776,5.576,1777,6.585,1778,4.485,1779,4.571]],["title/classes/RawSearchRentalDto.html",[91,0.163,1099,3.086]],["body/classes/RawSearchRentalDto.html",[14,0.009,18,0.114,19,0.126,20,0.089,22,0.114,23,0.126,29,1.338,90,0.114,91,0.214,92,0.006,93,0.007,94,0.006,104,0.178,108,0.441,112,0.42,144,1.361,152,2.112,300,3.374,315,2.599,320,2.521,593,0.874,645,1.968,656,2.771,667,4.063,671,3.935,680,4.666,689,5.114,691,4.331,709,3.69,1024,4.33,1077,3.335,1099,5.061,1126,6.329,1127,6.329,1436,4.666,1437,4.666,1524,5.453,1780,7.616,1781,5.795]],["title/classes/RemoveUnavailabilityDto.html",[91,0.163,1782,2.917]],["body/classes/RemoveUnavailabilityDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,22,0.125,23,0.139,29,1.468,56,2.942,90,0.125,91,0.235,92,0.006,93,0.008,94,0.006,104,0.195,108,0.398,112,0.379,144,1.405,433,4.75,511,3.821,593,0.925,645,2.158,647,1.773,650,2.273,734,4.352,736,3.358,1540,5.61,1726,3.658,1779,4.75,1782,5.062,1783,7.226,1784,6.356,1785,6.356,1786,5.61]],["title/controllers/RentalController.html",[161,2.34,205,3.086]],["body/controllers/RentalController.html",[12,1.122,13,2.435,14,0.009,18,0.048,19,0.053,20,0.037,22,0.048,23,0.084,24,0.936,32,0.345,34,1.456,51,2.634,90,0.048,91,0.178,92,0.002,93,0.004,94,0.002,104,0.074,106,0.802,108,0.35,110,1.415,111,1.35,112,0.334,113,1.449,143,0.939,145,1.415,161,2.565,163,1.288,166,0.936,169,4.72,172,1.122,173,1.591,175,2.711,203,1.913,205,2.711,239,1.456,250,2.435,254,2.128,269,1.811,285,1.079,293,1.295,304,1.456,316,1.981,332,1.699,345,0.615,353,2.068,437,2.055,456,0.866,457,0.914,458,1.159,467,0.966,468,0.966,469,0.763,470,0.994,480,1.87,515,2.563,517,1.734,614,2.563,647,1.078,649,1.849,650,2.915,651,1.958,664,1.981,665,3.469,672,1.526,674,2.055,675,2.136,700,2.435,709,2.164,714,3.039,716,1.526,718,3.65,731,1.951,733,2.711,819,4.251,822,4.535,823,3.988,879,2.136,882,1.951,933,2.435,935,1.288,985,2.435,992,2.549,996,2.435,1002,2.777,1009,3.383,1019,2.563,1021,1.811,1022,1.811,1024,1.913,1077,2.777,1134,1.526,1215,2.563,1239,2.89,1389,1.699,1435,2.435,1541,1.951,1567,4.251,1573,3.198,1589,1.951,1631,2.435,1659,2.563,1662,3.65,1663,1.951,1751,3.113,1754,3.113,1778,2.9,1782,3.65,1787,2.138,1788,2.89,1789,2.711,1790,3.412,1791,4.86,1792,3.412,1793,3.412,1794,3.412,1795,3.412,1796,3.412,1797,3.412,1798,2.138,1799,2.423,1800,3.867,1801,2.423,1802,2.423,1803,2.423,1804,5.507,1805,2.423,1806,3.198,1807,2.423,1808,2.423,1809,2.423,1810,2.423,1811,2.138,1812,3.867,1813,4.825,1814,3.198,1815,2.423,1816,4.22,1817,3.113,1818,2.138,1819,3.867,1820,2.423,1821,2.423,1822,2.423,1823,3.412,1824,2.423,1825,4.04,1826,2.423,1827,2.423,1828,2.423,1829,2.423,1830,3.113,1831,3.412,1832,2.138,1833,3.412,1834,2.423,1835,2.138,1836,3.198,1837,2.138,1838,2.138,1839,2.138,1840,2.138,1841,2.138,1842,2.138,1843,2.138,1844,1.951,1845,2.138,1846,3.412,1847,2.138,1848,2.138,1849,1.951,1850,1.951,1851,1.951,1852,1.526,1853,2.138,1854,2.138,1855,2.138,1856,2.138,1857,1.951,1858,2.423,1859,2.138,1860,4.258,1861,2.138,1862,1.951,1863,1.951,1864,2.138,1865,4.86,1866,2.324,1867,2.138,1868,2.138,1869,2.138,1870,1.951,1871,1.951,1872,2.423,1873,6.974,1874,2.423,1875,2.423,1876,2.423,1877,2.423,1878,2.423,1879,2.423,1880,2.423,1881,2.423,1882,2.423,1883,2.423,1884,2.423,1885,2.423,1886,2.423,1887,2.423,1888,2.423,1889,2.423,1890,2.423,1891,2.423,1892,2.423,1893,2.423,1894,2.138,1895,2.423,1896,2.423]],["title/injectables/RentalDurationPipe.html",[95,0.207,1134,2.772]],["body/injectables/RentalDurationPipe.html",[14,0.009,18,0.092,19,0.102,20,0.072,22,0.123,23,0.165,24,0.819,32,0.664,90,0.092,91,0.173,92,0.005,93,0.006,94,0.005,95,0.296,96,0.936,104,0.143,106,1.546,108,0.327,110,1.319,111,1.259,112,0.311,113,1.351,142,2.392,145,0.982,166,1.519,173,1.104,176,1.383,254,1.798,285,1.229,293,1.005,300,1.915,345,1.184,351,1.272,353,1.435,404,1.793,457,1.761,458,3.625,467,1.861,468,1.861,469,1.47,470,1.915,480,2.573,571,2.815,572,3.001,575,2.65,578,3.104,580,1.861,644,2.993,651,1.953,671,2.233,709,2.094,864,2.905,933,5.129,935,3.768,938,4.464,941,4.159,947,3.274,971,4.121,988,3.336,996,3.953,1024,2.31,1063,3.759,1082,2.807,1097,2.941,1101,5.71,1109,4.121,1125,3.49,1128,3.759,1129,3.49,1134,3.953,1658,5.053,1659,4.159,1831,5.538,1849,3.759,1850,3.759,1897,6.255,1898,4.121,1899,4.669,1900,4.669,1901,7.088,1902,4.669,1903,6.275,1904,4.121,1905,4.669,1906,4.669,1907,4.669,1908,4.669,1909,4.121]],["title/interfaces/RentalInterface.html",[1192,2.105,1910,3.086]],["body/interfaces/RentalInterface.html",[14,0.009,18,0.091,19,0.101,20,0.071,22,0.122,23,0.101,90,0.091,92,0.005,93,0.006,94,0.005,104,0.141,112,0.454,144,1.517,152,2.55,300,3.091,562,2.545,567,2.112,593,0.753,612,2.806,651,1.064,671,3.605,672,4.748,673,4.338,674,4.007,675,4.164,676,5.285,677,5.633,678,5.285,679,4.748,682,4.434,684,4.591,692,3.231,693,3.231,694,3.231,695,3.231,696,3.231,697,3.231,698,2.626,699,3.231,700,2.902,701,3.231,702,3.231,703,3.443,704,3.443,705,3.443,706,3.443,707,3.443,708,3.443,709,2.066,710,2.902,711,2.902,712,2.902,713,2.361,1192,2.974,1194,2.902,1910,4.361,1911,4.066,1912,4.066]],["title/modules/RentalModule.html",[0,1.974,195,3.086]],["body/modules/RentalModule.html",[0,3.437,2,1.634,3,1.702,4,1.863,5,1.863,6,1.702,7,3.155,8,3.295,12,3.226,13,2.846,14,0.009,15,2.846,16,1.414,17,1.414,18,0.058,19,0.065,20,0.045,22,0.089,23,0.134,24,0.949,32,0.421,33,2.994,34,1.777,36,2.846,56,2.841,90,0.058,91,0.109,92,0.003,93,0.004,94,0.003,96,0.906,98,3.168,100,2.496,106,0.979,108,0.285,110,0.622,111,0.906,112,0.147,113,0.637,163,2.401,166,0.716,173,0.699,176,0.995,195,6.344,205,3.844,212,2.21,213,1.702,217,3.987,273,0.972,293,0.637,316,2.315,345,0.75,517,1.326,580,1.179,647,1.712,650,1.96,651,1.043,673,1.702,698,1.907,714,4.39,716,1.863,757,4.39,822,1.777,823,2.994,879,2.496,933,4.39,935,1.572,976,1.965,985,4.39,992,2.091,1002,4.011,1021,2.21,1022,2.21,1077,4.011,1134,4.39,1162,2.21,1288,2.381,1299,2.381,1300,3.633,1312,2.994,1435,4.39,1573,4.619,1631,4.39,1741,3.987,1778,4.189,1788,5.209,1789,2.074,1806,4.619,1814,4.619,1816,2.074,1836,5.345,1837,2.61,1838,2.61,1839,2.61,1840,2.61,1841,2.61,1847,2.61,1848,2.61,1849,2.381,1850,2.381,1852,4.39,1853,2.61,1854,2.61,1855,2.61,1856,2.61,1859,2.61,1860,4.838,1861,2.61,1864,2.61,1865,5.416,1866,4.189,1867,2.61,1868,2.61,1869,2.61,1913,2.61,1914,2.61,1915,2.957,1916,2.61,1917,2.957,1918,3.637,1919,3.987,1920,6.97,1921,3.376,1922,4.518,1923,4.518,1924,6.137,1925,2.61,1926,3.987,1927,5.416,1928,2.957,1929,4.518,1930,4.518,1931,4.838,1932,4.518,1933,4.518,1934,4.518,1935,4.518,1936,2.957,1937,3.637,1938,2.957,1939,3.637,1940,2.957,1941,3.637,1942,2.957,1943,2.61,1944,2.61,1945,2.957,1946,2.61,1947,2.957,1948,2.957,1949,2.957,1950,2.957,1951,2.957,1952,2.957,1953,2.957]],["title/injectables/RentalService.html",[95,0.207,1836,2.917]],["body/injectables/RentalService.html",[14,0.009,18,0.033,19,0.037,20,0.026,22,0.106,23,0.17,24,0.763,32,0.242,46,1.271,51,1.382,56,2.054,86,2.667,90,0.033,91,0.063,92,0.002,93,0.003,94,0.002,95,0.136,96,0.341,104,0.052,106,0.956,108,0.341,110,1.375,111,1.312,112,0.324,113,1.548,143,1.12,145,1.329,166,0.699,173,1.433,176,0.637,213,0.979,250,2.795,254,2.048,257,1.193,285,1.454,293,1.656,301,1.128,320,2.35,345,1.461,351,2.116,353,2.209,403,1.193,404,0.486,405,0.866,456,2.168,457,2.287,458,3.375,462,1.185,467,2.417,468,2.417,469,2.175,470,2.486,475,2.026,480,1.507,489,1.736,509,2.263,511,2.263,517,3.021,519,1.915,528,1.536,559,2.549,562,1.596,567,1.507,593,0.35,600,1.536,612,0.678,645,0.578,647,0.806,649,1.382,650,2.689,651,1.93,654,3.644,655,1.82,664,1.48,665,2.795,671,1.8,673,2.167,675,2.08,679,1.072,698,2.432,700,1.82,709,2.584,710,2.371,711,2.371,712,2.371,713,1.929,716,2.795,718,2.941,731,1.37,733,1.193,734,0.904,736,0.698,744,1.82,779,1.501,781,0.814,819,3.581,822,3.248,823,2.941,935,3.223,968,1.271,976,1.93,992,2.925,995,3.916,996,2.371,997,3.248,998,2.549,1006,2.549,1009,2.026,1019,1.915,1024,1.862,1082,1.736,1083,2.159,1084,2.326,1098,1.072,1144,2.549,1189,2.159,1251,1.128,1338,3.112,1345,1.072,1347,1.271,1349,2.263,1366,1.536,1541,1.37,1567,2.941,1589,1.37,1592,3.322,1595,1.501,1597,1.501,1600,1.501,1615,2.549,1638,2.326,1639,2.159,1648,2.326,1659,1.128,1662,3.294,1663,1.37,1672,2.159,1674,1.271,1686,2.167,1687,2.795,1690,0.979,1699,1.662,1716,1.37,1718,2.326,1751,2.326,1754,2.326,1755,2.549,1765,2.159,1782,2.941,1791,2.549,1792,2.549,1793,2.549,1794,2.549,1795,2.549,1796,2.549,1797,3.916,1798,2.549,1811,2.549,1816,3.112,1817,2.326,1818,2.549,1823,2.549,1825,4.606,1832,2.549,1836,1.915,1851,1.37,1862,1.37,1863,1.37,1871,1.37,1910,1.193,1954,1.501,1955,2.889,1956,3.322,1957,3.765,1958,2.549,1959,1.501,1960,1.701,1961,2.549,1962,1.701,1963,2.889,1964,2.889,1965,2.889,1966,2.549,1967,1.701,1968,2.889,1969,2.889,1970,2.889,1971,1.701,1972,2.889,1973,2.889,1974,1.701,1975,1.701,1976,2.889,1977,1.701,1978,2.889,1979,2.889,1980,2.889,1981,1.701,1982,1.701,1983,2.889,1984,2.889,1985,1.701,1986,2.549,1987,4.438,1988,1.501,1989,1.271,1990,1.193,1991,1.501,1992,1.501,1993,1.501,1994,1.701,1995,1.501,1996,1.701,1997,1.701,1998,1.701,1999,2.889,2000,4.438,2001,2.889,2002,1.701,2003,1.701,2004,1.701,2005,1.701,2006,1.701,2007,1.701,2008,2.889,2009,1.701,2010,1.701,2011,1.701,2012,2.326,2013,1.701,2014,1.701,2015,1.701,2016,1.701,2017,1.701,2018,1.701,2019,1.701,2020,1.501,2021,2.549,2022,1.501,2023,1.501,2024,1.501,2025,1.501,2026,1.501,2027,1.501,2028,1.501,2029,1.501,2030,1.501,2031,1.501,2032,1.501,2033,3.322,2034,1.501,2035,1.501,2036,3.322,2037,1.501,2038,1.701,2039,2.889,2040,1.701,2041,1.701,2042,1.701,2043,1.701,2044,1.701,2045,1.701,2046,1.701,2047,1.701,2048,1.501]],["title/classes/RequestCoordinatesDto.html",[91,0.163,941,2.917]],["body/classes/RequestCoordinatesDto.html",[14,0.009,18,0.115,19,0.128,20,0.09,22,0.115,23,0.128,29,1.351,90,0.115,91,0.216,92,0.006,93,0.007,94,0.007,104,0.18,108,0.442,112,0.421,144,1.366,152,2.531,285,1.146,300,3.238,322,4.103,474,2.798,593,0.88,644,2.47,645,1.987,671,3.776,709,3.541,938,4.973,941,4.812,947,4.103,1077,3.367,1097,5.2,1303,3.878,1743,4.711,1745,5.164,1746,5.164,1852,3.685,2049,7.634,2050,5.851,2051,5.851,2052,5.851]],["title/injectables/RequestCoordinatesPipe.html",[95,0.207,1852,2.772]],["body/injectables/RequestCoordinatesPipe.html",[14,0.009,18,0.089,19,0.099,20,0.07,22,0.121,23,0.163,24,0.809,32,0.643,52,2.997,90,0.089,91,0.167,92,0.004,93,0.006,94,0.004,95,0.289,96,0.907,104,0.139,106,1.497,108,0.32,110,1.291,111,1.231,112,0.346,113,1.322,142,2.317,143,1.753,145,0.951,166,1.486,173,1.069,176,1.648,254,1.769,285,1.203,293,0.973,300,1.854,345,1.147,351,1.899,353,1.389,404,1.754,457,1.705,467,1.802,468,1.802,469,1.424,470,1.854,474,2.937,480,2.085,571,2.754,572,2.937,578,3.038,580,1.802,644,2.593,647,1.712,671,2.162,673,4.013,709,2.028,713,2.317,761,4.306,781,2.162,864,3.462,879,2.498,938,2.848,941,4.957,951,4.944,990,4.589,991,4.944,992,2.842,1001,3.99,1002,4.642,1011,4.306,1012,4.306,1019,2.997,1021,3.379,1022,3.379,1023,3.64,1024,3.449,1025,3.64,1031,3.99,1033,3.99,1035,3.99,1063,3.64,1097,2.848,1125,4.589,1128,3.64,1129,3.379,1549,3.64,1658,4.944,1659,4.07,1765,4.589,1825,5.08,1851,3.64,1852,3.868,1904,3.99,1909,3.99,2053,6.154,2054,3.99,2055,4.521,2056,4.521,2057,6.14,2058,6.14,2059,6.14,2060,4.521]],["title/classes/ResetPasswordDto.html",[91,0.163,325,3.086]],["body/classes/ResetPasswordDto.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.12,23,0.133,29,1.409,90,0.12,91,0.226,92,0.006,93,0.007,94,0.006,104,0.187,108,0.419,112,0.399,143,3.488,144,1.446,273,1.313,285,1.195,288,2.576,325,5.224,405,1.829,420,5.384,590,4.278,593,0.903,594,4.912,595,4.559,2061,7.392,2062,6.101,2063,8.043,2064,8.043,2065,6.011,2066,6.101]],["title/injectables/ResetPasswordTokenDto.html",[95,0.207,2067,3.289]],["body/injectables/ResetPasswordTokenDto.html",[14,0.009,16,4.037,18,0.123,19,0.136,20,0.096,22,0.123,23,0.165,24,0.675,32,0.888,90,0.123,91,0.231,92,0.006,93,0.008,94,0.006,95,0.356,96,1.252,104,0.192,108,0.325,112,0.31,144,1.25,273,1.817,288,3.564,437,4.016,485,6.062,593,0.915,927,6.082,2067,5.646,2068,5.509,2069,6.242]],["title/injectables/S3Provider.html",[95,0.207,610,2.645]],["body/injectables/S3Provider.html",[12,3.73,14,0.009,18,0.107,19,0.119,20,0.084,22,0.107,23,0.176,24,0.827,25,4.383,32,0.778,64,4.601,65,4.612,90,0.107,91,0.202,92,0.005,93,0.007,94,0.005,95,0.328,96,1.097,104,0.168,106,1.81,108,0.362,110,1.15,111,1.097,112,0.271,113,1.177,142,2.802,143,2.12,145,1.15,293,1.177,392,2.938,404,1.562,414,4.88,507,4.183,593,0.843,608,5.111,610,4.183,612,2.18,624,4.637,635,3.699,1946,4.826,2070,4.826,2071,5.603,2072,7.654,2073,5.469,2074,5.469,2075,5.469,2076,6.959,2077,4.826,2078,5.469,2079,5.469,2080,5.469,2081,5.469]],["title/classes/SearchRentalDto.html",[91,0.163,1825,2.772]],["body/classes/SearchRentalDto.html",[14,0.009,18,0.11,19,0.122,20,0.086,22,0.11,23,0.122,29,1.289,90,0.11,91,0.206,92,0.006,93,0.007,94,0.006,104,0.171,108,0.445,112,0.436,144,1.343,152,2.57,176,1.23,300,3.169,331,3.914,474,2.669,593,0.854,644,2.357,645,1.895,647,1.557,651,1.289,667,3.914,668,3.355,671,3.696,673,4.671,680,4.494,684,2.967,691,4.172,709,3.466,713,2.86,938,5.113,1024,2.761,1097,5.113,1436,4.494,1437,4.494,1549,4.494,1765,4.172,1825,4.44,2082,7.661,2083,4.926,2084,5.582,2085,5.582,2086,5.582]],["title/injectables/SortUnavailabilityPipe.html",[95,0.207,1778,2.645]],["body/injectables/SortUnavailabilityPipe.html",[14,0.009,18,0.054,19,0.06,20,0.043,22,0.133,23,0.171,24,0.694,32,0.394,88,2.071,90,0.054,91,0.102,92,0.003,93,0.004,94,0.003,95,0.203,96,0.556,104,0.085,108,0.334,110,1.349,111,1.287,112,0.137,113,0.597,145,1.711,152,0.811,166,1.435,173,0.655,176,1.496,254,1.723,285,1.388,293,1.133,320,1.87,345,1.628,351,1.929,353,1.617,404,2.148,444,2.488,456,2.797,457,1.045,462,2.632,467,1.105,468,1.105,469,1.658,470,1.137,474,1.325,515,2.848,567,1.788,571,1.928,572,2.055,575,1.815,578,2.126,580,1.105,593,0.521,600,3.153,612,2.364,649,3.07,650,2.618,651,1.216,657,4.284,659,3.039,664,2.697,744,1.746,748,2.361,781,1.325,784,3.61,864,2.437,890,2.473,906,2.071,921,2.446,935,2.285,968,2.071,974,1.943,976,2.792,988,2.285,1098,2.707,1312,2.848,1328,3.489,1345,1.746,1524,2.848,1633,1.943,1638,3.46,1671,3.694,1681,3.793,1686,3.908,1687,4.277,1690,2.473,1693,2.446,1699,2.473,1776,4.432,1778,2.583,2012,4.238,2087,5.993,2088,7.823,2089,3.46,2090,4.298,2091,4.298,2092,3.793,2093,4.298,2094,6.419,2095,6.419,2096,6.419,2097,2.772,2098,3.691,2099,2.772,2100,5.387,2101,5.264,2102,2.772,2103,5.264,2104,2.772,2105,4.298,2106,6.791,2107,4.298,2108,2.772,2109,5.234,2110,3.46,2111,6.252,2112,2.231,2113,2.772,2114,3.934,2115,2.772,2116,2.446,2117,2.446,2118,2.772,2119,2.772,2120,2.772,2121,2.772,2122,2.772,2123,2.772,2124,2.772,2125,5.264,2126,2.772,2127,2.446,2128,4.298,2129,2.772,2130,2.772,2131,4.298,2132,2.772,2133,2.772,2134,2.772,2135,5.264,2136,5.264,2137,4.298,2138,2.772,2139,2.772,2140,2.772,2141,3.793,2142,3.793,2143,2.772,2144,2.772,2145,2.772,2146,2.071,2147,2.772]],["title/interfaces/SortedUnavailabilityDto.html",[1192,2.105,2114,3.289]],["body/interfaces/SortedUnavailabilityDto.html",[14,0.009,18,0.11,19,0.123,20,0.086,22,0.11,23,0.155,24,0.608,90,0.11,92,0.006,93,0.007,94,0.006,104,0.173,112,0.351,176,1.56,427,4.965,567,2.632,593,0.858,600,3.764,645,2.404,650,2.91,657,3.628,659,4.455,664,2.88,748,3.176,981,4.46,997,4.256,1192,2.688,1194,3.54,1687,4.46,1726,3.235,1866,4.256,2089,5.701,2100,4.965,2110,6.552,2114,5.292,2141,7.182,2142,7.182,2148,4.96,2149,5.701,2150,7.081,2151,5.292,2152,5.292,2153,6.249,2154,6.249]],["title/injectables/TestRentalService.html",[95,0.207,2155,3.544]],["body/injectables/TestRentalService.html",[14,0.009,18,0.09,19,0.1,20,0.071,22,0.09,24,0.814,32,0.654,46,4.642,65,4.117,90,0.09,91,0.17,92,0.005,93,0.006,94,0.005,95,0.293,96,0.922,98,4.355,104,0.141,106,2.056,108,0.366,110,1.306,111,1.246,112,0.308,113,1.514,143,1.783,145,1.306,166,1.503,173,1.468,213,2.646,254,2.056,351,1.252,403,3.224,456,2.515,458,2.97,509,2.764,567,2.109,651,1.624,673,2.646,698,3.18,709,2.786,713,2.356,829,5.481,996,2.896,1024,2.275,1347,3.437,1349,2.764,1672,4.642,1674,3.437,1910,3.224,1956,4.058,1958,5.481,1959,4.058,1961,6.647,1966,5.481,1988,4.058,1992,4.058,2020,4.058,2021,5.481,2022,4.058,2023,4.058,2024,4.058,2025,4.058,2026,4.058,2027,4.058,2028,4.058,2029,4.058,2030,4.058,2031,4.058,2032,4.058,2033,5.481,2034,4.058,2035,4.058,2036,6.207,2037,4.058,2155,5.001,2156,6.647,2157,4.058,2158,6.211,2159,6.211,2160,7.532,2161,4.599,2162,4.599,2163,4.599,2164,4.599,2165,4.599]],["title/interfaces/TransporterInterface.html",[1192,2.105,2166,3.544]],["body/interfaces/TransporterInterface.html",[14,0.009,18,0.114,19,0.127,20,0.089,22,0.114,23,0.127,48,6.63,76,3.659,90,0.114,92,0.006,93,0.007,94,0.006,104,0.178,112,0.443,144,1.429,152,2.303,270,6.63,273,1.25,435,4.341,593,0.876,682,4.957,684,4.377,831,4.677,832,4.341,867,6.63,1192,3.457,1194,3.659,2166,5.82,2167,5.126,2168,5.126,2169,8.47,2170,8.47,2171,5.809,2172,5.809]],["title/classes/TypeOfValue.html",[91,0.163,2173,3.289]],["body/classes/TypeOfValue.html",[14,0.009,18,0.122,19,0.135,20,0.095,22,0.122,23,0.135,29,1.43,76,3.901,86,3.723,90,0.122,91,0.229,92,0.006,93,0.007,94,0.006,104,0.19,108,0.322,112,0.307,144,1.025,145,1.581,404,2.464,462,3.321,528,3.293,531,4.343,567,2.553,593,0.911,612,2.469,1593,4.629,2173,5.62,2174,6.636,2175,5.467,2176,7.146,2177,6.194]],["title/classes/UnavailabilityDto.html",[91,0.163,659,2.255]],["body/classes/UnavailabilityDto.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.107,23,0.119,29,1.26,90,0.107,91,0.202,92,0.005,93,0.007,94,0.005,104,0.168,108,0.442,112,0.421,144,1.332,152,2.558,273,1.174,315,3.43,320,3.326,463,3.437,489,4.177,593,0.842,649,3.323,651,1.26,655,4.377,656,3.657,657,4.48,659,3.56,736,3.136,747,4.224,760,4.078,890,4.4,997,3.28,1305,3.616,1366,3.694,1639,4.078,1671,4.4,2178,4.815,2179,5.456,2180,5.456,2181,5.456,2182,5.456,2183,5.456,2184,5.456,2185,5.456,2186,5.456,2187,5.456,2188,4.606,2189,5.193,2190,4.393,2191,4.078]],["title/classes/UnavailabilityInterface.html",[91,0.163,1990,3.086]],["body/classes/UnavailabilityInterface.html",[14,0.009,18,0.111,19,0.123,20,0.087,22,0.111,23,0.123,29,1.304,90,0.111,91,0.209,92,0.006,93,0.007,94,0.006,104,0.173,108,0.446,112,0.425,144,1.349,152,2.576,315,3.484,320,3.089,489,4.268,593,0.86,650,2.019,655,4.473,656,3.715,657,4.177,698,2.384,736,3.186,747,4.292,890,3.25,997,3.394,1192,2.701,1366,3.775,1671,4.471,1990,4.979,2188,4.707,2189,5.307,2190,4.546,2191,4.22,2192,4.983,2193,5.647,2194,5.647,2195,5.647,2196,5.647,2197,5.647,2198,5.647]],["title/classes/UnavailabilityQueryDto.html",[91,0.163,1664,3.086]],["body/classes/UnavailabilityQueryDto.html",[14,0.009,18,0.095,19,0.106,20,0.075,22,0.095,23,0.106,29,1.121,56,2.248,90,0.095,91,0.18,92,0.005,93,0.006,94,0.005,104,0.149,108,0.401,112,0.428,144,1.066,152,2.59,176,1.07,277,4.849,285,0.951,315,3.593,548,3.301,593,0.78,600,4.092,643,3.629,644,2.05,649,2.322,650,3.144,651,1.85,652,6.199,653,4.816,654,4.816,656,3.832,657,3.704,658,3.91,662,3.91,684,4.259,727,3.405,736,2.965,830,3.218,834,2.322,974,3.405,976,2.112,1499,3.629,1664,4.517,1671,4.16,1672,5.987,1674,5.987,1676,4.286,1686,2.795,1737,4.286,1744,3.91,2199,7.071,2200,4.856,2201,4.856,2202,4.286,2203,4.856]],["title/classes/UpdateUnavailabilityDataDto.html",[91,0.163,718,2.917]],["body/classes/UpdateUnavailabilityDataDto.html",[14,0.009,18,0.114,19,0.126,20,0.089,22,0.114,23,0.126,29,1.338,90,0.114,91,0.214,92,0.006,93,0.007,94,0.006,104,0.178,108,0.376,112,0.42,144,1.3,152,2.408,250,4.546,285,1.135,315,3.237,405,1.737,475,4.063,507,3.483,517,3.237,593,0.874,645,1.968,647,1.616,650,2.942,651,1.338,656,3.452,684,4.178,714,3.65,716,4.951,718,4.784,719,4.666,734,3.08,736,2.377,744,4.951,747,3.202,1349,3.483,1722,4.666,1724,5.114,2204,6.329,2205,5.795]],["title/classes/UpdateUnavailabilityDto.html",[91,0.163,725,3.289]],["body/classes/UpdateUnavailabilityDto.html",[14,0.009,18,0.113,19,0.125,20,0.088,22,0.113,23,0.125,29,1.322,90,0.113,91,0.212,92,0.006,93,0.007,94,0.006,104,0.176,108,0.439,112,0.418,144,1.424,152,2.397,176,1.262,285,1.122,517,2.569,588,4.611,593,0.868,645,1.945,647,1.597,650,2.048,653,3.442,654,3.442,719,4.611,725,5.354,734,4.156,736,3.206,738,6.295,740,6.295,742,6.295,748,2.569,834,2.739,1305,3.795,1465,3.164,1588,3.795,1726,3.296,1728,4.28,1733,4.28,1734,5.054,1779,4.28,2204,6.928,2206,5.727,2207,5.727,2208,5.727,2209,5.727,2210,4.611,2211,4.611]],["title/injectables/UpdateUserDto.html",[95,0.207,2212,3.086]],["body/injectables/UpdateUserDto.html",[14,0.009,18,0.121,19,0.134,20,0.094,22,0.121,23,0.163,24,0.664,32,0.874,90,0.121,91,0.227,92,0.006,93,0.007,94,0.006,95,0.353,96,1.233,104,0.189,108,0.39,112,0.371,113,1.808,144,1.389,273,1.611,285,1.466,299,3.51,461,4.29,593,0.907,752,4.074,754,5.425,756,4.594,794,3.702,1739,6.026,2212,5.248,2213,7.122]],["title/controllers/UserController.html",[161,2.34,204,3.086]],["body/controllers/UserController.html",[14,0.009,18,0.07,19,0.078,20,0.055,22,0.132,23,0.179,24,0.897,32,0.507,90,0.07,91,0.132,92,0.004,93,0.005,94,0.004,104,0.109,108,0.351,110,1.415,111,1.35,112,0.334,113,1.449,142,1.827,143,1.382,145,1.415,161,3.257,163,1.895,166,1.257,169,4.721,172,3.883,173,1.592,174,2.664,175,2.5,176,1.145,178,2.246,179,2.87,180,2.664,181,2.143,182,3.146,183,2.664,184,4.58,185,4.934,203,2.57,204,3.642,254,2.128,269,2.664,273,1.899,285,1.51,293,1.449,299,3.113,316,2.662,330,2.664,332,2.5,345,1.815,353,1.883,359,4.584,411,3.86,437,2.761,440,3.642,446,4.462,448,4.721,480,1.764,517,3.21,568,3.882,573,4.241,579,2.664,775,3.642,794,3.909,816,4.721,835,4.182,864,2.405,1215,3.443,1226,3.146,1233,3.146,1389,2.5,1833,3.146,1835,3.146,1842,3.146,1843,3.146,1845,3.146,1846,3.146,1870,2.87,1873,5.408,2212,4.721,2214,3.146,2215,5.194,2216,5.194,2217,4.584,2218,5.194,2219,3.565,2220,3.565,2221,3.565,2222,3.565,2223,3.565,2224,3.565,2225,3.565,2226,3.565,2227,3.565,2228,3.565,2229,3.565,2230,3.565,2231,3.565,2232,3.565,2233,3.565,2234,5.194,2235,3.146,2236,3.146,2237,3.565,2238,2.87,2239,3.146,2240,3.565,2241,3.565,2242,3.565,2243,3.565,2244,3.565,2245,3.565,2246,3.565,2247,3.565,2248,3.565,2249,3.565,2250,3.565,2251,3.565]],["title/interfaces/UserInterface.html",[453,2.917,1192,2.105]],["body/interfaces/UserInterface.html",[14,0.009,18,0.119,19,0.132,20,0.093,22,0.119,23,0.132,90,0.119,92,0.006,93,0.007,94,0.006,104,0.186,112,0.425,144,1.51,273,1.307,288,3.531,299,3.637,453,4.923,461,4.445,593,0.9,698,2.563,1192,3.552,1194,3.823,1524,5.319,2065,6.249,2252,5.357,2253,7.38]],["title/modules/UserModule.html",[0,1.974,196,2.917]],["body/modules/UserModule.html",[0,3.655,1,4.779,2,2.383,3,2.482,4,2.716,5,2.716,6,2.482,7,3.915,8,4.089,14,0.009,15,3.744,16,2.062,17,2.062,18,0.085,19,0.094,20,0.066,22,0.085,23,0.13,24,0.945,32,0.613,36,3.744,90,0.085,91,0.159,92,0.004,93,0.006,94,0.004,98,4.169,100,3.284,106,1.428,108,0.225,110,0.907,111,1.192,112,0.214,113,0.928,163,3.16,166,1.044,173,1.019,196,5.864,204,4.77,212,3.223,213,2.482,238,3.223,241,5.478,242,3.472,273,1.464,293,0.928,342,2.592,375,4.779,376,4.779,392,1.821,393,3.223,395,3.223,411,5.424,413,4.443,455,3.472,757,5.008,834,2.062,1162,3.223,1215,3.94,1288,3.472,1299,3.472,1300,2.858,1788,5.48,1919,5.247,1925,3.806,1926,5.247,1927,6.471,1931,5.247,1943,3.806,1944,3.806,2239,3.806,2254,3.806,2255,3.806,2256,3.806,2257,4.313,2258,4.313,2259,5.945,2260,5.084,2261,4.313,2262,4.787,2263,4.313,2264,4.313,2265,4.313,2266,3.472,2267,4.313,2268,3.806,2269,4.313,2270,4.313,2271,4.313,2272,4.313]],["title/classes/UserPropertyDto.html",[91,0.163,449,3.289]],["body/classes/UserPropertyDto.html",[14,0.009,18,0.118,19,0.131,20,0.093,22,0.118,23,0.131,29,1.391,90,0.118,91,0.223,92,0.006,93,0.007,94,0.006,104,0.185,108,0.434,112,0.414,144,1.474,176,1.328,188,3.993,273,1.297,285,1.18,288,3.377,299,3.479,322,4.225,405,1.806,428,5.317,449,5.525,461,4.252,474,2.881,476,3.622,591,3.795,593,0.896,1189,5.978,2273,7.554,2274,5.317,2275,6.025,2276,6.025,2277,6.025,2278,6.025]],["title/injectables/UserService.html",[95,0.207,411,2.772]],["body/injectables/UserService.html",[14,0.009,16,2.229,17,1.774,18,0.045,19,0.05,20,0.035,22,0.123,23,0.172,24,0.844,32,0.327,59,2.459,68,2.739,86,2.23,90,0.045,91,0.085,92,0.002,93,0.004,94,0.002,95,0.175,96,0.462,100,2.05,104,0.071,106,1.228,108,0.357,110,1.442,111,1.376,112,0.34,113,1.476,143,2.073,145,1.529,166,0.898,172,3.366,173,1.559,176,1.638,188,2.459,203,1.835,213,1.324,250,1.449,254,2.064,273,1.874,277,1.449,281,1.72,282,2.773,285,1.529,288,2.257,292,1.525,293,1.6,299,3.163,304,1.383,312,2.987,313,2.773,314,2.459,316,2.739,323,2.773,329,2.459,333,1.223,345,1.796,351,1.98,353,2.327,357,1.72,375,3.963,376,3.963,392,1.566,393,1.72,395,1.72,405,1.112,411,2.337,413,4.927,431,2.601,433,2.773,437,2.842,440,2.601,446,3.543,448,3.749,453,1.525,455,1.853,456,2.708,457,2.212,458,1.101,464,2.031,465,1.853,466,2.031,467,1.858,468,1.858,469,1.846,470,2.405,480,1.815,485,2.601,491,2.987,493,2.031,495,2.031,511,2.23,515,1.525,517,3.397,529,2.987,533,4.718,543,2.773,567,1.26,573,3.367,579,1.72,619,2.459,620,1.72,698,2.257,716,2.936,727,1.614,744,1.449,748,1.032,775,3.268,783,2.031,794,2.306,816,3.749,864,2.901,1070,1.032,1303,2.459,1347,1.72,1349,1.383,1739,1.853,1817,2.987,1870,1.853,1995,2.031,2065,3.483,2067,3.996,2212,4.81,2217,3.274,2235,2.031,2236,3.274,2268,2.031,2279,2.031,2280,3.71,2281,3.71,2282,3.71,2283,3.71,2284,3.71,2285,3.71,2286,3.71,2287,2.301,2288,2.301,2289,2.773,2290,3.71,2291,2.301,2292,3.71,2293,2.301,2294,2.987,2295,3.71,2296,2.301,2297,3.71,2298,2.301,2299,3.71,2300,2.301,2301,3.274,2302,3.71,2303,2.301,2304,3.71,2305,2.301,2306,2.031,2307,2.301,2308,1.853,2309,2.301,2310,2.301,2311,2.301,2312,3.71,2313,2.301,2314,2.301,2315,2.301,2316,2.301,2317,3.71,2318,2.301,2319,2.301,2320,3.71,2321,2.301,2322,2.301,2323,2.301,2324,1.853,2325,2.301,2326,2.301,2327,2.301,2328,2.301,2329,4.661,2330,2.301,2331,2.301,2332,2.301,2333,2.301]],["title/injectables/ValidateEditDetailsPipe.html",[95,0.207,1806,2.917]],["body/injectables/ValidateEditDetailsPipe.html",[14,0.009,18,0.062,19,0.069,20,0.048,22,0.112,23,0.156,24,0.684,32,0.447,90,0.062,91,0.116,92,0.003,93,0.005,94,0.003,95,0.223,96,0.63,104,0.096,106,1.883,108,0.353,110,0.994,111,0.948,112,0.282,113,0.676,144,1.413,145,0.66,152,2.36,166,1.144,173,0.742,176,1.717,254,1.605,285,0.926,293,1.838,345,1.2,351,0.855,353,0.965,404,2.423,419,5.693,444,1.218,456,2.034,462,3.036,463,1.978,469,2.651,474,3.027,517,2.551,548,1.609,571,2.121,572,2.262,575,1.997,578,2.339,580,1.252,593,0.573,612,1.252,635,1.67,647,1.319,651,1.568,736,1.288,737,2.347,748,2.121,819,4.728,822,4.773,823,4.499,864,2.189,1070,2.121,1098,1.978,1129,4.251,1328,2.082,1366,1.67,1450,3.316,1465,2.613,1561,5.532,1564,5.991,1581,2.529,1582,3.134,1585,4.173,1588,3.134,1806,3.134,1862,2.529,1863,2.529,2117,2.772,2173,5.532,2334,5.331,2335,2.772,2336,6.789,2337,4.729,2338,6.789,2339,4.729,2340,3.141,2341,3.141,2342,3.141,2343,3.141,2344,3.141,2345,3.141,2346,3.141,2347,3.141,2348,3.141,2349,4.729,2350,3.141,2351,3.141,2352,3.141,2353,3.141,2354,3.141,2355,3.141,2356,3.141,2357,3.141,2358,3.141,2359,3.141,2360,3.141,2361,3.141,2362,3.141,2363,3.141,2364,3.141,2365,3.141,2366,3.141,2367,3.141,2368,3.141,2369,3.141,2370,3.141,2371,3.141,2372,3.141,2373,3.141,2374,3.141,2375,3.141,2376,3.141,2377,3.141,2378,3.141,2379,3.141,2380,3.141,2381,3.141,2382,3.141,2383,3.141,2384,3.141,2385,3.141,2386,3.141,2387,3.141,2388,3.141,2389,3.141,2390,3.141,2391,3.141,2392,3.141,2393,3.141,2394,3.141,2395,3.141]],["title/injectables/ValidateEmailMiddleware.html",[95,0.207,2260,3.289]],["body/injectables/ValidateEmailMiddleware.html",[14,0.009,18,0.074,19,0.082,20,0.058,22,0.124,23,0.166,24,0.847,32,0.535,56,3.194,90,0.074,91,0.233,92,0.004,93,0.005,94,0.004,95,0.254,96,0.754,104,0.115,106,1.786,108,0.359,110,1.327,111,1.266,112,0.342,113,1.359,143,1.457,166,1.306,172,2.498,173,1.276,176,1.767,254,1.93,257,2.635,273,1.783,274,3.106,293,1.757,299,3.551,304,4.148,305,4.203,333,1.998,345,1.75,351,1.023,353,1.658,404,1.542,448,2.635,453,2.491,456,2.468,458,2.581,462,2.83,472,4.033,480,1.276,532,4.763,548,1.926,573,4.346,575,2.913,579,2.809,580,1.498,593,0.654,600,4.043,631,3.795,647,2.121,653,4.148,698,2.913,753,3.784,830,3.577,864,2.498,1070,3.095,1251,2.491,1349,2.259,1464,4.345,1465,3.812,1509,5.495,1788,4.033,1790,4.763,2260,4.033,2289,2.809,2306,3.317,2396,6.449,2397,3.317,2398,5.397,2399,6.101,2400,6.09,2401,3.758,2402,5.397,2403,4.763,2404,3.758,2405,5.397,2406,5.397,2407,3.758,2408,5.397,2409,5.397,2410,4.763,2411,3.758,2412,3.758,2413,3.758,2414,3.758,2415,3.758,2416,3.758,2417,3.758,2418,3.317,2419,3.758,2420,3.317,2421,3.758,2422,3.758]],["title/injectables/ValidateEmailUtil.html",[95,0.207,2399,3.289]],["body/injectables/ValidateEmailUtil.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.107,23,0.175,24,0.587,32,0.773,89,3.828,90,0.107,91,0.201,92,0.005,93,0.007,94,0.007,95,0.327,96,1.089,104,0.167,106,2.526,108,0.361,110,1.142,111,1.089,113,1.169,145,1.142,166,1.677,173,1.284,273,1.827,293,1.169,299,3.693,345,1.758,357,4.06,437,2.887,458,2.598,469,2.403,548,3.91,653,4.99,951,4.373,1051,4.06,1162,4.06,1345,4.364,1366,4.056,1599,6.115,2399,5.178,2400,6.115,2423,6.734,2424,4.794,2425,8.302,2426,5.432,2427,6.929,2428,5.432,2429,6.929,2430,5.432,2431,5.432,2432,5.432]],["title/injectables/ValidateRemoveUnavailabilityPipe.html",[95,0.207,1814,2.917]],["body/injectables/ValidateRemoveUnavailabilityPipe.html",[14,0.009,18,0.091,19,0.101,20,0.071,22,0.139,23,0.177,24,0.675,32,0.659,90,0.091,91,0.171,92,0.005,93,0.006,94,0.005,95,0.294,96,0.929,104,0.142,108,0.325,110,1.313,111,1.252,112,0.23,113,0.997,144,1.25,145,0.974,166,1.511,173,1.095,176,1.905,293,1.344,345,1.584,404,2.372,419,4.666,456,2.525,462,3.098,469,1.966,548,3.199,571,2.8,572,2.986,575,2.636,578,3.088,580,1.847,593,0.756,612,1.847,635,3.319,647,1.741,650,2.82,651,1.821,664,2.374,734,3.319,735,3.731,736,2.56,737,3.463,748,3.389,864,3.761,1070,2.8,1450,4.378,1582,4.138,1593,4.666,1633,3.249,1782,5.227,1814,4.138,1816,5.822,1871,3.731,2334,5.277,2433,6.243,2434,6.96,2435,4.634,2436,4.634,2437,4.634,2438,4.634]],["title/classes/ValidateScheduleUnavailabilityDto.html",[91,0.163,2098,3.086]],["body/classes/ValidateScheduleUnavailabilityDto.html",[14,0.009,18,0.105,19,0.116,20,0.082,22,0.105,23,0.149,24,0.576,29,1.23,90,0.105,91,0.197,92,0.005,93,0.007,94,0.005,104,0.164,108,0.356,112,0.339,176,1.507,315,3.068,567,2.323,593,0.829,600,3.637,644,2.888,645,2.323,649,3.946,650,2.853,651,1.58,657,4.087,659,4.228,664,2.728,748,3.068,981,4.309,996,4.309,1132,4.309,1303,4.534,1686,3.937,1687,4.309,1690,4.35,1699,4.35,1726,3.064,1733,3.979,1778,4.112,1866,4.112,2089,5.508,2098,4.797,2100,4.797,2110,5.508,2149,5.508,2151,5.113,2152,5.113,2153,6.038,2154,6.038,2210,4.287,2439,6.671,2440,6.841,2441,6.841,2442,6.841,2443,6.841]],["title/injectables/ValidateUnavailabilityPipe.html",[95,0.207,1866,2.645]],["body/injectables/ValidateUnavailabilityPipe.html",[14,0.009,18,0.03,19,0.033,20,0.024,22,0.1,23,0.157,24,0.591,32,0.217,56,1.22,76,0.963,86,0.919,88,2.597,89,3.336,90,0.03,91,0.057,92,0.002,93,0.003,94,0.002,95,0.124,96,0.307,104,0.143,108,0.301,110,1.149,111,1.096,112,0.076,113,0.329,145,1.318,152,0.771,166,1,173,0.361,176,1.272,203,1.304,254,1.532,273,0.567,274,1.517,285,0.999,293,1.613,315,2.091,320,2.815,345,1.642,346,2.937,351,1.763,353,1.926,404,1.791,444,1.602,456,2.761,457,0.577,462,3.218,467,0.609,468,0.609,469,2.267,470,0.627,480,1.18,499,1.849,507,3.769,511,1.585,515,4.155,529,1.231,531,1.849,534,2.327,545,3.648,547,3.754,548,2.799,563,2.123,567,0.895,571,1.182,572,1.261,575,1.969,578,1.304,580,0.609,593,0.319,600,3.884,612,2.178,635,1.401,647,1.684,649,2.23,650,2.896,651,1.333,653,1.585,656,3.583,657,4.389,659,3.408,664,1.351,668,3.284,669,1.231,682,0.963,729,1.849,736,1.425,747,3.336,748,0.686,777,1.849,781,0.731,784,2.71,830,1.747,834,1.261,864,2.159,874,5.02,875,2.484,881,1.143,890,3.322,922,4.115,948,1.231,956,3.575,957,3.328,963,1.231,968,1.97,976,1.798,1051,1.97,1070,2.091,1082,1.585,1083,1.143,1098,1.66,1251,1.013,1312,2.739,1328,3.826,1345,3.211,1366,1.847,1433,1.97,1492,4.5,1509,3.575,1523,1.349,1524,1.747,1633,1.072,1639,3.089,1642,2.898,1648,2.798,1661,1.349,1671,3.475,1686,2.684,1687,2.937,1688,3.067,1690,4.608,1699,4.205,1706,1.349,1711,1.349,1866,1.585,2012,1.231,2083,2.327,2092,2.327,2098,2.898,2100,1.849,2109,4.115,2111,3.067,2112,1.231,2116,1.349,2127,2.327,2146,1.97,2149,2.123,2152,1.97,2188,1.747,2189,1.143,2334,4.513,2444,4.663,2445,3.476,2446,4.663,2447,4.663,2448,4.663,2449,4.663,2450,4.133,2451,1.529,2452,2.636,2453,1.529,2454,1.529,2455,7.2,2456,5.099,2457,2.636,2458,1.529,2459,2.636,2460,2.636,2461,2.636,2462,4.663,2463,1.529,2464,2.636,2465,4.133,2466,2.636,2467,2.636,2468,2.636,2469,5.463,2470,1.529,2471,5.099,2472,1.529,2473,2.636,2474,2.798,2475,2.636,2476,2.327,2477,2.636,2478,2.636,2479,1.529,2480,1.529,2481,1.529,2482,1.529,2483,1.349,2484,1.529,2485,2.123,2486,1.529,2487,2.636,2488,1.529,2489,1.529,2490,1.529,2491,1.529,2492,1.529,2493,1.529,2494,1.529,2495,1.529,2496,3.476,2497,1.529,2498,1.529,2499,1.529,2500,1.349,2501,2.636,2502,1.529,2503,1.529,2504,1.529,2505,4.133,2506,1.529,2507,1.529,2508,3.476,2509,1.529,2510,1.529,2511,1.529,2512,1.529,2513,3.476,2514,1.529,2515,1.529,2516,1.529,2517,1.529,2518,1.529,2519,1.529,2520,1.529,2521,1.529,2522,1.529,2523,1.529,2524,1.529,2525,1.529,2526,2.636,2527,3.476,2528,3.476,2529,1.529,2530,1.529,2531,1.529,2532,2.636,2533,1.349,2534,2.636,2535,2.636,2536,1.529,2537,1.529,2538,1.529,2539,1.529,2540,2.636,2541,2.636,2542,2.636,2543,1.529,2544,1.529,2545,1.529,2546,1.529,2547,1.529,2548,1.529,2549,2.636,2550,2.636,2551,1.529,2552,1.529,2553,2.636,2554,1.529,2555,1.529,2556,1.529,2557,1.529,2558,1.529,2559,2.636]],["title/classes/ValidateUpdateUnavailabilityDto.html",[91,0.163,723,3.086]],["body/classes/ValidateUpdateUnavailabilityDto.html",[14,0.009,18,0.104,19,0.115,20,0.081,22,0.104,23,0.115,29,1.219,90,0.104,91,0.195,92,0.005,93,0.007,94,0.005,104,0.162,108,0.446,112,0.435,144,1.394,152,2.541,273,1.136,285,1.034,458,2.524,462,2.165,517,3.935,563,4.25,567,2.31,593,0.824,650,1.888,651,1.219,654,3.173,684,3.616,723,4.77,734,4.001,736,3.087,738,6.061,740,6.061,742,6.061,777,3.701,834,2.524,1305,3.498,1690,4.332,1699,4.332,1726,3.038,1732,4.658,1779,3.945,1786,4.658,2211,4.25,2560,7.664,2561,5.278,2562,5.278,2563,5.278,2564,6.004,2565,6.004]],["title/injectables/ValidateUpdateUnavailabilityMiddleware.html",[95,0.207,1789,3.086]],["body/injectables/ValidateUpdateUnavailabilityMiddleware.html",[14,0.009,18,0.042,19,0.047,20,0.033,22,0.111,23,0.151,24,0.657,32,0.306,46,1.608,56,3.095,78,1.509,88,2.626,89,1.941,90,0.042,91,0.08,92,0.002,93,0.003,94,0.004,95,0.166,96,0.432,104,0.066,106,1.163,108,0.295,110,1.191,111,1.136,112,0.174,113,0.756,143,0.834,144,1.005,145,0.936,152,2.46,166,1.244,172,1.627,173,0.509,176,1.734,254,1.437,257,1.509,277,2.213,285,1.256,293,1.674,304,3.089,305,3.357,315,2.999,320,2.909,333,1.144,345,1.626,351,0.957,353,1.579,404,1.831,405,1.541,439,4.536,444,0.834,456,2.474,462,2.918,469,2.45,499,2.464,507,2.112,517,3.686,547,4.138,567,1.512,575,2.17,580,0.858,593,0.426,600,2.732,612,1.775,631,2.112,635,1.144,644,0.909,647,1.695,650,3.021,651,1.187,653,2.677,654,3.854,656,3.198,657,2.634,664,1.103,698,2.17,723,2.464,732,1.899,734,1.868,735,2.829,736,0.883,737,2.626,739,5.363,741,5.363,743,3.101,747,1.189,748,1.576,781,1.029,890,2.958,956,2.464,976,2.643,988,3.011,1070,2.305,1084,2.829,1246,2.464,1251,1.426,1349,1.294,1450,5.108,1464,2.829,1465,2.84,1471,3.101,1509,4.851,1582,2.329,1588,2.329,1593,5.444,1671,3.848,1686,1.239,1687,1.356,1690,2.563,1699,2.958,1789,2.464,1989,1.608,1990,1.509,1991,1.899,1993,1.899,2048,1.899,2100,1.509,2146,1.608,2176,4.999,2188,3.407,2191,1.608,2324,2.829,2403,3.101,2410,3.101,2418,3.93,2420,1.899,2434,4.536,2500,3.101,2564,3.101,2565,3.101,2566,5.363,2567,1.899,2568,4.453,2569,6.411,2570,5.664,2571,2.152,2572,2.152,2573,2.152,2574,3.514,2575,3.514,2576,2.152,2577,4.453,2578,8.218,2579,3.514,2580,2.152,2581,2.152,2582,2.152,2583,3.514,2584,3.514,2585,2.152,2586,5.14,2587,5.14,2588,5.14,2589,5.14,2590,3.514,2591,3.514,2592,2.152,2593,3.514,2594,3.514,2595,5.14,2596,3.514,2597,3.514,2598,3.514,2599,3.514,2600,2.152,2601,2.152,2602,2.152,2603,2.152,2604,2.152,2605,2.152]],["title/classes/ValidatedUnavailabilityDto.html",[91,0.163,1642,3.086]],["body/classes/ValidatedUnavailabilityDto.html",[14,0.009,18,0.109,19,0.122,20,0.086,22,0.109,23,0.154,24,0.602,29,1.286,90,0.109,91,0.206,92,0.006,93,0.007,94,0.006,104,0.171,108,0.402,112,0.383,144,1.165,285,1.379,346,5.269,427,4.936,480,2.39,508,4.936,567,2.39,593,0.853,644,2.972,645,2.754,647,2.262,659,4.446,668,4.231,834,3.367,1070,3.157,1465,3.889,1631,4.434,1642,4.936,1690,4.442,1699,4.442,1726,3.205,1731,7.158,1733,4.162,2112,4.484,2210,4.484,2211,4.484,2483,6.213,2606,7.158]],["title/classes/VerifyNewPasswordDto.html",[91,0.163,2607,3.289]],["body/classes/VerifyNewPasswordDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,22,0.125,23,0.139,29,1.468,90,0.125,91,0.235,92,0.006,93,0.008,94,0.006,104,0.195,108,0.398,112,0.379,144,1.405,285,1.245,293,1.828,405,1.906,465,6.592,503,6.119,560,4.75,590,4.457,591,4.004,593,0.925,594,5.118,595,4.75,753,4.457,2607,5.708,2608,7.226]],["title/injectables/VerifyNewPasswordUtil.html",[95,0.207,376,2.645]],["body/injectables/VerifyNewPasswordUtil.html",[14,0.009,18,0.082,19,0.091,20,0.064,22,0.082,23,0.18,24,0.781,32,0.593,56,3.346,90,0.082,91,0.154,92,0.004,93,0.006,94,0.004,95,0.274,96,0.837,104,0.128,108,0.348,110,1.405,111,1.341,112,0.332,113,1.439,145,1.405,166,1.406,173,1.58,254,1.996,273,1.556,277,4.957,285,1.613,288,3.753,293,1.873,335,3.359,345,1.696,351,1.82,353,1.785,376,3.492,444,3.051,452,4.342,457,1.574,462,2.383,469,2.105,499,4.687,501,5.899,504,3.682,506,3.682,514,4.678,515,2.765,544,6.708,548,4.032,561,3.118,596,5.403,988,3.088,1246,4.074,1472,3.682,1480,3.682,2308,5.82,2324,4.678,2607,6.034,2609,3.682,2610,5.81,2611,5.81,2612,5.81,2613,5.81,2614,4.172,2615,5.81,2616,4.172,2617,5.81,2618,4.172,2619,4.172,2620,4.172,2621,4.172,2622,5.81,2623,5.81,2624,5.81,2625,4.172,2626,4.172,2627,4.172]],["title/coverage.html",[2628,5.32]],["body/coverage.html",[6,1.135,12,0.913,14,0.009,16,0.943,20,0.03,91,0.323,92,0.002,93,0.003,94,0.002,95,0.416,97,1.741,112,0.098,161,2.873,162,1.474,164,1.741,178,1.242,181,1.185,197,1.383,201,1.474,202,1.474,204,1.383,205,1.383,206,1.383,207,1.383,222,1.474,263,1.741,268,1.741,273,0.704,286,1.383,288,1.381,293,1.049,295,1.383,300,0.809,325,1.383,339,1.474,342,1.185,346,1.242,374,1.307,375,1.185,376,1.185,377,1.383,378,1.383,386,1.474,392,1.381,404,0.563,407,1.741,411,1.242,446,1.307,449,1.474,453,1.307,458,0.943,480,1.11,494,2.06,517,1.467,568,1.474,569,1.741,573,1.242,589,1.741,590,3.418,596,1.474,597,1.741,598,1.741,603,1.307,604,1.741,605,1.383,606,2.633,608,1.185,610,1.185,619,1.307,620,1.474,631,1.185,640,2.444,641,1.383,642,1.741,643,3.131,649,1.564,650,1.169,651,1.346,659,1.011,665,1.242,666,1.741,667,3.418,714,1.242,715,1.741,716,1.242,717,1.741,718,1.307,723,1.383,725,1.474,751,1.741,752,3.582,763,1.588,765,1.307,766,1.741,767,1.741,794,0.976,816,1.383,817,1.741,819,1.307,820,1.741,821,1.741,822,1.185,828,1.741,848,1.474,856,1.741,879,1.807,904,1.741,905,1.741,914,1.474,923,1.741,924,1.741,927,2.633,928,1.741,933,1.242,934,1.741,935,1.048,936,1.741,941,1.307,959,1.474,985,1.242,986,1.741,987,1.741,989,1.383,992,0.913,1002,1.135,1011,1.383,1012,1.383,1017,1.383,1024,1.618,1038,1.741,1039,1.741,1052,1.588,1061,1.474,1062,1.474,1077,1.135,1078,1.741,1079,1.741,1082,1.185,1099,1.383,1101,1.383,1130,1.741,1131,2.633,1134,1.242,1141,1.741,1142,1.741,1185,1.383,1186,1.741,1192,2.787,1193,1.307,1195,1.741,1200,1.474,1201,2.633,1202,1.741,1206,1.588,1207,1.741,1214,1.741,1249,1.307,1284,1.307,1285,1.307,1290,1.588,1300,3.23,1302,1.741,1351,1.383,1366,4.098,1382,2.886,1389,1.383,1390,1.741,1391,1.741,1402,1.741,1403,2.633,1404,1.307,1411,1.741,1416,1.741,1432,1.741,1435,1.242,1438,1.741,1441,1.741,1453,1.741,1454,1.741,1484,1.741,1485,1.741,1528,1.588,1529,1.741,1532,1.588,1533,1.741,1536,1.741,1537,1.741,1538,1.741,1553,1.741,1561,1.474,1562,1.741,1563,1.741,1567,1.307,1568,1.741,1573,1.307,1574,1.741,1603,1.741,1604,1.741,1611,1.741,1612,1.741,1631,1.242,1632,1.741,1633,3.418,1642,1.383,1662,1.307,1664,1.383,1668,1.383,1721,1.741,1722,2.633,1725,2.633,1726,3.716,1742,2.633,1743,2.633,1776,1.474,1777,1.741,1778,1.185,1780,1.741,1782,1.307,1783,1.741,1787,1.741,1789,1.383,1806,1.307,1814,1.307,1816,1.383,1825,1.242,1836,1.307,1844,1.588,1852,1.242,1857,1.588,1866,1.185,1897,1.741,1898,1.741,1910,1.383,1911,1.741,1921,1.474,1937,1.588,1939,1.588,1941,1.588,1954,1.741,1989,1.474,1990,1.383,2049,1.741,2053,1.741,2054,1.741,2061,1.741,2067,1.474,2068,1.741,2070,1.741,2082,1.741,2087,1.741,2098,1.383,2114,1.474,2148,1.741,2151,2.444,2155,1.588,2156,1.741,2157,1.741,2166,1.588,2167,1.741,2173,1.474,2174,1.741,2175,1.741,2178,1.741,2192,1.741,2199,1.741,2204,2.633,2212,1.383,2213,1.741,2214,1.741,2238,1.588,2252,1.741,2260,1.474,2262,1.588,2266,1.588,2273,1.741,2274,1.741,2279,1.741,2289,1.474,2308,1.588,2334,3.131,2335,1.741,2396,1.741,2397,1.741,2399,1.474,2423,1.741,2424,1.741,2439,1.741,2474,1.588,2485,1.588,2560,1.741,2566,1.741,2567,1.741,2606,1.741,2607,1.474,2608,1.741,2609,1.741,2628,1.741,2629,1.972,2630,1.972,2631,7.502,2632,7.242,2633,1.741,2634,8.445,2635,8.593,2636,7.71,2637,3.27,2638,7.88,2639,7.88,2640,7.086,2641,7.086,2642,3.27,2643,1.972,2644,1.972,2645,1.972,2646,1.972,2647,5.404,2648,5.404,2649,5.404,2650,5.142,2651,1.741,2652,7.71,2653,5.404,2654,1.741,2655,1.741,2656,1.741,2657,1.741,2658,2.886,2659,1.741,2660,3.27,2661,3.27,2662,5.446,2663,6.171,2664,1.972,2665,2.886,2666,3.27,2667,2.886,2668,1.972,2669,1.972,2670,1.972,2671,3.27,2672,1.741,2673,1.972,2674,3.27,2675,4.301,2676,4.874,2677,2.886,2678,3.27,2679,1.972,2680,1.972,2681,1.972,2682,4.189,2683,3.27,2684,3.27,2685,3.697,2686,1.741,2687,2.886,2688,2.886,2689,1.741,2690,3.697,2691,1.741,2692,1.972,2693,1.972,2694,1.741,2695,1.741,2696,1.972,2697,2.886,2698,1.741,2699,4.769,2700,1.972,2701,1.972]],["title/dependencies.html",[3,3.05,2702,3.665]],["body/dependencies.html",[3,3.031,14,0.009,32,0.749,34,3.166,59,3.491,64,3.166,68,2.699,92,0.005,93,0.007,94,0.005,213,3.031,215,4.648,216,4.648,221,4.648,230,4.648,231,4.648,323,5.077,333,2.8,352,3.693,383,4.241,385,3.491,452,3.936,476,4.52,605,4.763,608,3.166,832,5.077,875,3.166,1061,3.936,1349,3.166,1399,4.648,1439,4.241,1473,4.241,2077,4.648,2168,4.648,2703,5.267,2704,7.52,2705,5.267,2706,6.793,2707,5.267,2708,5.267,2709,5.267,2710,5.267,2711,5.267,2712,5.267,2713,6.793,2714,6.793,2715,5.267,2716,5.267,2717,5.267,2718,5.267,2719,5.267,2720,6.793,2721,5.267,2722,5.267,2723,5.267,2724,5.267,2725,5.267,2726,5.267,2727,5.267,2728,5.267,2729,5.267,2730,5.267,2731,5.267,2732,5.267,2733,5.267,2734,5.267,2735,5.267,2736,5.267,2737,5.267,2738,5.267,2739,5.267,2740,5.267,2741,5.267,2742,5.267,2743,5.267,2744,4.648,2745,5.267,2746,5.267,2747,5.267,2748,5.267,2749,4.648,2750,5.267]],["title/miscellaneous/enumerations.html",[2751,2.203,2752,4.677]],["body/miscellaneous/enumerations.html",[14,0.008,23,0.145,92,0.007,93,0.008,94,0.007,104,0.204,320,2.894,651,1.536,890,3.828,935,3.536,947,4.665,954,5.356,955,5.356,956,5.503,958,6.926,974,5.853,976,3.631,979,5.871,981,4.19,982,5.871,1503,5.871,1646,5.871,1918,5.356,2751,3.999,2752,5.871,2753,5.871,2754,6.653]],["title/miscellaneous/functions.html",[2294,4.267,2751,2.203]],["body/miscellaneous/functions.html",[6,4.922,14,0.008,92,0.007,93,0.008,94,0.007,104,0.217,2294,5.683,2672,6.23,2751,4.243,2755,7.059]],["title/index.html",[104,0.113,2756,3.234,2757,3.234]],["body/index.html",[14,0.007,17,2.404,18,0.099,20,0.077,24,0.543,26,4.621,51,3.152,52,3.332,60,4.436,64,3.022,92,0.005,93,0.007,94,0.005,101,4.436,203,3.861,273,1.419,274,2.893,278,4.047,285,0.985,300,2.062,314,3.332,316,2.576,437,2.672,457,2.486,480,1.707,517,2.255,548,2.576,561,3.757,588,4.047,608,3.022,614,3.332,624,2.893,625,5.156,626,5.472,637,2.576,649,2.404,650,1.798,651,1.871,672,4.151,674,2.672,675,2.777,727,3.525,753,3.525,761,3.525,762,3.332,770,2.893,794,2.487,822,3.022,823,3.332,830,3.332,835,4.047,992,3.051,996,3.166,1024,2.487,1086,4.436,1104,4.436,1239,3.757,1246,3.525,1312,4.368,1343,4.047,1378,4.047,1588,4.368,1728,3.757,1830,5.306,1894,4.436,1918,4.047,1921,3.757,2301,4.436,2744,4.436,2749,4.436,2758,7.804,2759,5.027,2760,5.027,2761,5.027,2762,5.027,2763,5.027,2764,5.027,2765,5.027,2766,5.027,2767,5.027,2768,6.591,2769,6.591,2770,5.027,2771,5.027,2772,5.027,2773,5.027,2774,5.027,2775,5.027,2776,5.027,2777,5.027,2778,5.027,2779,5.027,2780,5.027,2781,6.591,2782,5.027,2783,5.027,2784,5.027,2785,5.027,2786,5.027,2787,5.027,2788,5.027,2789,5.027,2790,5.027,2791,5.027,2792,5.027,2793,5.027,2794,5.027,2795,5.027,2796,5.027,2797,5.027,2798,5.027,2799,5.92,2800,5.027,2801,5.027,2802,4.436,2803,6.591,2804,5.027,2805,5.027,2806,5.027,2807,5.027]],["title/license.html",[2756,3.234,2757,3.234,2799,2.951]],["body/license.html",[14,0.007,17,2.707,92,0.006,93,0.007,94,0.006,333,3.009,528,3.009,530,4.995,575,3.003,850,4.557,1082,4.275,1188,4.995,1254,3.969,1499,4.23,1744,4.557,1921,4.23,2071,4.557,2152,4.23,2799,4.557,2802,4.995,2808,7.777,2809,5.66,2810,5.66,2811,5.66,2812,7.112,2813,5.66,2814,5.66,2815,5.66,2816,5.66,2817,5.66,2818,5.66,2819,7.112,2820,8.885,2821,5.66,2822,7.777,2823,5.66,2824,7.112,2825,5.66,2826,5.66,2827,5.66,2828,5.66,2829,5.66,2830,5.66,2831,5.66,2832,5.66,2833,5.66,2834,7.112,2835,5.66,2836,5.66,2837,5.66,2838,5.66,2839,7.112,2840,5.66,2841,5.66,2842,5.66,2843,5.66,2844,5.66,2845,5.66,2846,5.66,2847,5.66,2848,5.66,2849,5.66,2850,5.66,2851,5.66,2852,5.66,2853,5.66,2854,5.66,2855,5.66,2856,5.66,2857,5.66,2858,5.66,2859,5.66,2860,5.66,2861,5.66,2862,5.66,2863,4.995,2864,5.66,2865,5.66]],["title/modules.html",[2,3.331]],["body/modules.html",[1,3.934,2,3.616,14,0.008,92,0.007,93,0.008,94,0.007,189,4.891,193,4.589,194,4.589,195,4.589,196,4.338,757,4.122,1830,5.27,2866,8.883,2867,8.883,2868,8.883,2869,8.974,2870,6.545]],["title/overview.html",[2871,5.32]],["body/overview.html",[0,1.545,1,4.882,2,1.903,3,1.982,4,2.169,5,2.169,6,1.982,7,1.982,8,2.07,9,3.039,10,3.039,11,3.039,12,3.76,13,4.171,14,0.009,15,3.19,16,1.647,17,1.647,29,0.795,92,0.003,93,0.005,94,0.003,96,0.691,163,1.831,181,3.981,189,6.472,190,3.039,191,3.039,192,3.039,193,6.278,194,6.206,195,6.408,196,5.668,197,4.212,342,4.585,370,3.039,371,3.039,373,3.039,374,5.056,375,4.704,376,4.704,377,4.212,378,4.212,411,4.805,603,3.981,610,3.61,714,3.783,757,4.445,765,3.981,933,3.783,976,1.498,981,2.169,985,3.783,1002,3.457,1077,3.457,1134,3.783,1194,2.169,1249,5.056,1280,3.039,1281,3.039,1282,3.039,1283,3.039,1284,3.981,1285,3.981,1404,2.282,1435,3.783,1573,3.981,1631,3.783,1778,3.61,1806,3.981,1814,3.981,1836,5.056,1852,3.783,1866,3.61,1913,3.039,1914,3.039,1916,3.039,2254,3.039,2255,3.039,2256,3.039,2871,3.039,2872,3.039,2873,3.444,2874,3.444,2875,3.039]],["title/miscellaneous/typealiases.html",[2751,2.203,2876,5.299]],["body/miscellaneous/typealiases.html",[14,0.009,92,0.006,93,0.007,94,0.006,104,0.189,112,0.305,509,3.695,519,4.074,640,4.594,974,4.31,976,2.674,981,3.872,1366,3.268,1686,3.538,2151,4.594,2188,4.074,2202,5.425,2533,6.605,2662,5.425,2665,5.425,2675,5.425,2677,5.425,2751,3.695,2872,5.425,2875,5.425,2877,6.147,2878,6.147,2879,7.485,2880,6.147,2881,6.147,2882,6.147,2883,6.147,2884,6.147,2885,6.147,2886,6.147,2887,6.147,2888,6.147]],["title/miscellaneous/variables.html",[84,3.96,2751,2.203]],["body/miscellaneous/variables.html",[7,1.159,13,2.677,14,0.009,20,0.031,22,0.065,23,0.162,24,0.218,25,3.707,30,2.678,33,1.334,40,5.958,43,1.777,51,0.963,54,6.753,56,0.932,64,1.21,68,1.704,71,1.621,78,1.412,83,1.621,84,1.504,86,1.21,90,0.04,92,0.002,93,0.003,94,0.002,104,0.152,112,0.422,144,1.45,145,0.699,152,2.267,176,0.444,203,0.996,253,3.751,254,0.511,257,2.98,273,1.34,285,0.651,288,1.404,290,1.621,291,1.412,293,1.34,299,1.447,300,2.414,315,0.903,319,1.504,320,1.849,346,2.677,351,0.548,353,0.618,357,1.504,386,2.486,392,2.084,398,2.935,404,2.429,405,1.274,444,0.78,456,0.72,461,1.768,462,1.743,472,1.504,476,1.21,485,1.412,489,2.967,562,1.838,567,2.598,600,1.768,612,3.413,615,1.268,624,1.159,625,1.412,626,1.412,637,1.704,645,0.684,650,1.189,651,1.359,655,3.109,656,0.963,657,1.704,671,2.033,672,2.095,673,2.446,674,1.768,675,1.838,676,2.332,677,2.486,678,2.332,679,2.095,682,1.268,692,2.332,693,2.332,694,3.461,695,3.461,696,4.566,697,2.98,698,2.851,699,2.332,700,2.095,701,2.332,702,2.332,703,2.486,704,2.486,705,2.486,706,2.486,707,2.486,708,2.486,709,1.906,710,2.095,711,2.095,712,2.095,713,2.178,720,1.777,729,1.412,734,1.07,736,1.364,747,1.112,763,2.678,770,1.159,776,2.98,794,2.703,834,0.963,879,1.112,890,1.159,938,1.268,988,1.07,992,2.285,997,1.21,1011,2.98,1012,2.98,1052,2.678,1061,2.486,1066,1.777,1070,0.903,1097,1.268,1176,1.504,1196,1.621,1197,1.334,1198,1.621,1199,1.412,1290,2.678,1300,5.136,1305,2.817,1328,1.334,1345,3.109,1366,2.624,1378,1.621,1379,2.935,1406,1.412,1465,1.112,1524,1.334,1582,1.334,1671,1.159,1686,2.841,1759,1.777,1774,4.356,1825,1.268,1844,2.678,1857,2.678,1912,1.777,1937,2.678,1939,3.422,1941,2.678,1986,1.777,1989,3.176,2065,1.504,2071,5.014,2146,1.504,2188,3.271,2189,2.486,2190,1.621,2191,1.504,2238,2.678,2253,1.777,2262,3.422,2266,2.678,2289,3.176,2474,2.678,2476,1.777,2485,3.422,2633,1.777,2650,1.777,2651,4.823,2654,1.777,2655,2.935,2656,1.777,2657,1.777,2658,4.356,2659,1.777,2667,1.777,2685,1.777,2686,4.356,2687,1.777,2688,3.751,2689,1.777,2690,5.194,2691,1.777,2694,1.777,2695,2.935,2697,1.777,2698,1.777,2699,5.194,2751,1.21,2753,5.194,2863,1.777,2889,3.326,2890,2.013,2891,3.326,2892,2.013,2893,4.25,2894,4.25,2895,3.326,2896,2.013,2897,2.013,2898,2.013,2899,2.013,2900,2.013,2901,2.013,2902,2.013,2903,2.013,2904,2.013,2905,2.013,2906,2.013,2907,2.013,2908,2.013,2909,2.013,2910,7.287,2911,5.465,2912,7.133,2913,4.25,2914,4.936,2915,2.013,2916,2.013,2917,2.013,2918,2.013,2919,2.013,2920,2.013,2921,2.013,2922,3.326,2923,3.326,2924,2.013,2925,2.013,2926,4.936,2927,2.013,2928,2.013,2929,2.013,2930,4.25,2931,4.25,2932,2.013,2933,2.013,2934,2.013,2935,2.013,2936,2.013,2937,2.013,2938,3.326,2939,3.326,2940,2.013,2941,2.013,2942,2.013,2943,2.013,2944,2.013,2945,2.013,2946,2.013,2947,4.936,2948,2.013,2949,2.013,2950,2.013,2951,2.013,2952,2.013,2953,2.013,2954,2.013,2955,2.013,2956,2.013,2957,2.013,2958,2.013,2959,2.013,2960,2.013,2961,2.013]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1366,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.1.12",{"_index":2745,"title":{},"body":{"dependencies.html":{}}}],["0.19.2",{"_index":2718,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2705,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2740,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":976,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["1.0.0",{"_index":2742,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2726,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":2736,"title":{},"body":{"dependencies.html":{}}}],["1.22.0",{"_index":2733,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":2714,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2724,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2636,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2632,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2678,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"miscellaneous/typealiases.html":{}}}],["10/10",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":2693,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2635,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2665,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["11.13.4",{"_index":2716,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2677,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["12875",{"_index":2026,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["13",{"_index":2881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["14",{"_index":2675,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["15",{"_index":2882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["16",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["17",{"_index":2883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["17.1.0",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["19",{"_index":2885,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1].doy",{"_index":2539,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["1st",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["2",{"_index":1686,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":2723,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2709,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":2747,"title":{},"body":{"dependencies.html":{}}}],["2.635.0",{"_index":2717,"title":{},"body":{"dependencies.html":{}}}],["2.7.4",{"_index":2739,"title":{},"body":{"dependencies.html":{}}}],["2.9.0",{"_index":2735,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2151,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["2020",{"_index":2152,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"license.html":{}}}],["2021",{"_index":2154,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["21",{"_index":2886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["22",{"_index":2887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["23",{"_index":2888,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["24",{"_index":2188,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["2dsphere",{"_index":1949,"title":{},"body":{"modules/RentalModule.html":{}}}],["2nd",{"_index":2542,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["3",{"_index":974,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["3.0.0",{"_index":2711,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2721,"title":{},"body":{"dependencies.html":{}}}],["3.7.2",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2682,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2644,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["302",{"_index":2249,"title":{},"body":{"controllers/UserController.html":{}}}],["302)@post('delete",{"_index":2225,"title":{},"body":{"controllers/UserController.html":{}}}],["33",{"_index":2638,"title":{},"body":{"coverage.html":{}}}],["3600000",{"_index":1114,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["4",{"_index":2202,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{},"miscellaneous/typealiases.html":{}}}],["4.0.0",{"_index":2741,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2730,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2661,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2874,"title":{},"body":{"overview.html":{}}}],["46",{"_index":2873,"title":{},"body":{"overview.html":{}}}],["4ol_yacp0lkuu9pn2j2iu_uy5ldrkwodyjlqe2zo6ia",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":981,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["5.0.0",{"_index":2719,"title":{},"body":{"dependencies.html":{}}}],["5.9.1",{"_index":2734,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2680,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2631,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":858,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["6",{"_index":2875,"title":{},"body":{"overview.html":{},"miscellaneous/typealiases.html":{}}}],["6.0.0",{"_index":2704,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":2707,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2748,"title":{},"body":{"dependencies.html":{}}}],["6.4.16",{"_index":2737,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2637,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1382,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["66",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2872,"title":{},"body":{"overview.html":{},"miscellaneous/typealiases.html":{}}}],["7.0.0",{"_index":2706,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2668,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/GeoUrlApiPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"miscellaneous/typealiases.html":{}}}],["8.2.0",{"_index":2728,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":2732,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2660,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2679,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":640,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["90",{"_index":2692,"title":{},"body":{"coverage.html":{}}}],["9706+forestdale+ct+riverview+33578",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":1189,"title":{},"body":{"classes/ImageDto.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"classes/UserPropertyDto.html":{}}}],["a.doy",{"_index":2135,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["a.map((item",{"_index":2959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":85,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["above",{"_index":2838,"title":{},"body":{"license.html":{}}}],["accepts",{"_index":1392,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["access",{"_index":65,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{}}}],["access_key_id",{"_index":66,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["accessing",{"_index":1015,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["accesskeyid",{"_index":2078,"title":{},"body":{"injectables/S3Provider.html":{}}}],["accessors",{"_index":105,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["accidentally",{"_index":1636,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["account",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["acl",{"_index":628,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["action",{"_index":1188,"title":{},"body":{"classes/ImageDto.html":{},"license.html":{}}}],["actual",{"_index":2584,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["actually",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["ad",{"_index":1434,"title":{},"body":{"classes/LocCreateRentalDto.html":{}}}],["add",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpErrorFilter.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["added",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/UserPropertyDto.html":{}}}],["adding",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["address",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["address.replace(/\\s+/g",{"_index":1068,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["addresses",{"_index":932,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["addunavailabilityid",{"_index":1640,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["advance",{"_index":1755,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{}}}],["again",{"_index":1472,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["against",{"_index":1394,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["age=${this.appconfig.jwt_exp_time",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["aggregator",{"_index":2200,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["ahead",{"_index":1645,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["aliases",{"_index":2877,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":80,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GeoUrlApiPipe.html":{}}}],["allowed",{"_index":1085,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["allowing",{"_index":1655,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["allowunkown",{"_index":75,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["already",{"_index":653,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["alternative",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["amount",{"_index":1976,"title":{},"body":{"injectables/RentalService.html":{}}}],["and/or",{"_index":2832,"title":{},"body":{"license.html":{}}}],["another",{"_index":1106,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{}}}],["api",{"_index":52,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"index.html":{}}}],["api**](https://developer.here.com/documentation/geocoding",{"_index":1023,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["api.pipe",{"_index":1839,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["api.pipe.ts",{"_index":987,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"coverage.html":{}}}],["api.pipe.ts:12",{"_index":1003,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:19",{"_index":1005,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:31",{"_index":1013,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:46",{"_index":1016,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.util",{"_index":1022,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["api.util.ts",{"_index":1039,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{}}}],["api.util.ts:25",{"_index":1059,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["api.util.ts:43",{"_index":1053,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["api/dev_guide/index.html",{"_index":1025,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["apikey",{"_index":1012,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apikey):promise",{"_index":1067,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["app",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"index.html":{}}}],["app.controller",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["app_filter",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["appconfigservice",{"_index":12,"title":{"injectables/AppConfigService.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice(new",{"_index":1876,"title":{},"body":{"controllers/RentalController.html":{}}}],["appconfigservice.remote_db",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":162,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/LoginDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applied",{"_index":1790,"title":{},"body":{"controllers/RentalController.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["applies",{"_index":1924,"title":{},"body":{"modules/RentalModule.html":{}}}],["apply",{"_index":2418,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["apply(validateemailmiddleware",{"_index":2271,"title":{},"body":{"modules/UserModule.html":{}}}],["apply(validateupdateunavailabilitymiddleware",{"_index":1952,"title":{},"body":{"modules/RentalModule.html":{}}}],["applying",{"_index":1934,"title":{},"body":{"modules/RentalModule.html":{}}}],["appmodule",{"_index":189,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropiate",{"_index":871,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["appropriate",{"_index":1164,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["appservice",{"_index":197,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":2771,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1344,"title":{},"body":{"injectables/ImagesService.html":{}}}],["argumenthost",{"_index":1168,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["arguments",{"_index":1165,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["argumentshost",{"_index":868,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["arising",{"_index":2864,"title":{},"body":{"license.html":{}}}],["array",{"_index":1345,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["array's",{"_index":2091,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["array('upload",{"_index":639,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["arrays",{"_index":1681,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["ascending",{"_index":2093,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["aspect",{"_index":1500,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["assign",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["associate",{"_index":1346,"title":{},"body":{"injectables/ImagesService.html":{}}}],["associated",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["async",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["atlas",{"_index":2777,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1327,"title":{},"body":{"injectables/ImagesService.html":{}}}],["attached",{"_index":1963,"title":{},"body":{"injectables/RentalService.html":{}}}],["auth",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailService.html":{},"interfaces/TransporterInterface.html":{}}}],["auth.guard",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":1403,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":1446,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/controller/auth.controller",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/jwt",{"_index":1350,"title":{},"body":{"injectables/ImagesService.html":{}}}],["auth/gaurds/jwt",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["auth/gaurds/logged",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["auth/util/extract",{"_index":2268,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["auth/util/verify",{"_index":2269,"title":{},"body":{"modules/UserModule.html":{}}}],["authcontroller",{"_index":207,"title":{"controllers/AuthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticated",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserPropertyDto.html":{}}}],["authenticating",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{}}}],["authentication",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication=${token",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":1407,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1410,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1440,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":193,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":69,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AuthController.html":{},"injectables/ExtractKeyValueUtil.html":{}}}],["authorize",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorized",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"guards/LoggedOutGaurd.html":{},"index.html":{}}}],["authorizing",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{}}}],["authors",{"_index":2854,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":342,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1752,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["available",{"_index":1830,"title":{},"body":{"controllers/RentalController.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":64,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["aws_s3_bucket_profile",{"_index":73,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["aws_s3_bucket_rentals",{"_index":72,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["axios",{"_index":1061,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["axios.default.get",{"_index":1066,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":2111,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["b).count('hours",{"_index":2494,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["b.doy",{"_index":2136,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["back",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{}}}],["badrequestexception",{"_index":1398,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":1401,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["base",{"_index":963,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.end",{"_index":2531,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.length('days",{"_index":967,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.length('months",{"_index":965,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.length('weeks",{"_index":966,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.rentalid",{"_index":2525,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.start",{"_index":2530,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.title",{"_index":2541,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.year",{"_index":2535,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["basic",{"_index":1495,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{}}}],["bcrypt",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"dependencies.html":{}}}],["bcrypt.compare(data.newpassword",{"_index":2622,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["bcrypt.compare(value.password",{"_index":583,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["bcrypt.hash(data.newpassword",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.resetpass",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(value.password",{"_index":581,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["bcrypthashpipe",{"_index":568,"title":{"injectables/BcryptHashPipe.html":{}},"body":{"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["bcrypthashpipe())@usepipes(new",{"_index":2220,"title":{},"body":{"controllers/UserController.html":{}}}],["before",{"_index":1070,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":1108,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["begins",{"_index":1117,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["behavior",{"_index":1496,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["belong",{"_index":1307,"title":{},"body":{"injectables/ImagesService.html":{}}}],["belongs",{"_index":1339,"title":{},"body":{"injectables/ImagesService.html":{}}}],["below",{"_index":2146,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["bike",{"_index":1748,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["bind",{"_index":1491,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["block",{"_index":1639,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["blocked",{"_index":1466,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["blocks",{"_index":1638,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["body",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":682,"title":{},"body":{"classes/CreateRentalDto.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"interfaces/TransporterInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":1274,"title":{},"body":{"controllers/ImagesController.html":{}}}],["break",{"_index":2191,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":2869,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2866,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":624,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"interfaces/ImageInterface.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/S3Provider.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":1213,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["c",{"_index":2809,"title":{},"body":{"license.html":{}}}],["cachce",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["cache",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cache_ttl",{"_index":63,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["caching",{"_index":908,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["calculate",{"_index":2577,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["calculaterange",{"_index":2569,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["calculating",{"_index":1506,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calendar",{"_index":2779,"title":{},"body":{"index.html":{}}}],["called",{"_index":2464,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["callhandler",{"_index":1510,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calls",{"_index":1405,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{}}}],["canactivate",{"_index":1456,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["canactivate(context",{"_index":1460,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["canales",{"_index":2797,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":1487,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["car",{"_index":626,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["car/wiki",{"_index":2807,"title":{},"body":{"index.html":{}}}],["case",{"_index":897,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["catch(err",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/EmailService.html":{},"injectables/UserService.html":{}}}],["catch(error",{"_index":866,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch(exception",{"_index":1160,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["catch(httpexception",{"_index":1163,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["catches",{"_index":857,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catching",{"_index":1155,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["category",{"_index":615,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"interfaces/ImageInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["cause",{"_index":2460,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["cb",{"_index":632,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["cb(null",{"_index":633,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["change",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["changepassword",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changepassword(@req",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(data",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(req",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":286,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changing",{"_index":592,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["charge",{"_index":2816,"title":{},"body":{"license.html":{}}}],["check",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["check.length",{"_index":2431,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["checkdeadlist",{"_index":1457,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["checkdeadlist(req",{"_index":1468,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["checkforoverlap",{"_index":1957,"title":{},"body":{"injectables/RentalService.html":{}}}],["checkleapyear",{"_index":2444,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["checkout",{"_index":1922,"title":{},"body":{"modules/RentalModule.html":{}}}],["checkpasswordtypodto",{"_index":596,"title":{"classes/CheckPasswordTypoDto.html":{}},"body":{"classes/CheckPasswordTypoDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["checks",{"_index":1651,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["checktypos",{"_index":2610,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["checktypos(data",{"_index":2613,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["christmas",{"_index":2190,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["ciphers",{"_index":2172,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["city",{"_index":1759,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"miscellaneous/variables.html":{}}}],["citympg",{"_index":694,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":2857,"title":{},"body":{"license.html":{}}}],["class",{"_index":91,"title":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/UserPropertyDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["classes",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/UserPropertyDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"overview.html":{}}}],["client",{"_index":864,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["client/build",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster",{"_index":2778,"title":{},"body":{"index.html":{}}}],["cluster_appconfigmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appconfigmodule_exports",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appconfigmodule_providers",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_imagesmodule",{"_index":1280,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_exports",{"_index":1281,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_imports",{"_index":1282,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_providers",{"_index":1283,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_rentalmodule",{"_index":1913,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_rentalmodule_exports",{"_index":1914,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_rentalmodule_imports",{"_index":1915,"title":{},"body":{"modules/RentalModule.html":{}}}],["cluster_rentalmodule_providers",{"_index":1916,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2254,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2256,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2257,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2255,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collection",{"_index":2786,"title":{},"body":{"index.html":{}}}],["color",{"_index":700,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["combine",{"_index":2005,"title":{},"body":{"injectables/RentalService.html":{}}}],["comes",{"_index":1972,"title":{},"body":{"injectables/RentalService.html":{}}}],["common",{"_index":1586,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["common/const",{"_index":1251,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["common/filters/error.filters",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["common/filters/http",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interceptors/logging",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["common/pipes/joi",{"_index":1842,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["common/routes",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["common/util/positive",{"_index":2343,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["common/util/to",{"_index":2484,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["common/util/typeof",{"_index":2344,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["community",{"_index":1764,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["compare",{"_index":2500,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["complete",{"_index":1042,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["completely",{"_index":1497,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["conataining",{"_index":2477,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["conditions",{"_index":1499,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{},"classes/UnavailabilityQueryDto.html":{},"license.html":{}}}],["config/configuration.module",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/UserModule.html":{}}}],["config/configuration.service",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{}}}],["configmodule",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/RentalModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configservice",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["configuration.service",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configure",{"_index":1925,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["configure(consumer",{"_index":1926,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["confirm",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeleteUserDto.html":{},"injectables/PositiveNumber.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["confirm_password",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmpass",{"_index":2063,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["confirmpassword",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{}}}],["confirms",{"_index":2936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["congruence",{"_index":2471,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["connect",{"_index":2076,"title":{},"body":{"injectables/S3Provider.html":{}}}],["connection",{"_index":2071,"title":{},"body":{"injectables/S3Provider.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["connection.model('unavailability",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('create",{"_index":2332,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('delete",{"_index":783,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/UserService.html":{}}}],["console.log('location",{"_index":1069,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log('redirect",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('update",{"_index":2318,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('you",{"_index":1481,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(`delete",{"_index":808,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(`deleting",{"_index":800,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(`geocoding",{"_index":1064,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log(`here",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`logged",{"_index":1477,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(`response",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(await",{"_index":2319,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(check",{"_index":1478,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(data",{"_index":813,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(err",{"_index":811,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/MulterUploadUtil.html":{}}}],["console.log(images[0].location",{"_index":785,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(item.location",{"_index":802,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(json.stringify(request.data",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].address",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].position",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].title",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(key",{"_index":789,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(location",{"_index":1071,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log(params",{"_index":809,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(rawauth",{"_index":1475,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(res",{"_index":2327,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(update",{"_index":2333,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(user",{"_index":1558,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["console.log(user._doc",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":387,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constants",{"_index":2940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["constructor(appconfig",{"_index":2073,"title":{},"body":{"injectables/S3Provider.html":{}}}],["constructor(authservice",{"_index":1442,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":107,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(generateduration",{"_index":1899,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["constructor(geourlapiutil",{"_index":1001,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["constructor(imagesmodel",{"_index":1318,"title":{},"body":{"injectables/ImagesService.html":{}}}],["constructor(private",{"_index":142,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"controllers/UserController.html":{}}}],["constructor(redisservice",{"_index":1458,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["constructor(rentalmodel",{"_index":1959,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["constructor(s3provider",{"_index":609,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{}}}],["constructor(schema",{"_index":1395,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["constructor(unavailability",{"_index":2571,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["constructor(user",{"_index":2401,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["constructor(usermodel",{"_index":2287,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":1931,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["consumes",{"_index":1919,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["containing",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["contains",{"_index":1303,"title":{},"body":{"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/UserService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["content",{"_index":1153,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context",{"_index":1167,"title":{},"body":{"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.getclass().name}.${context.gethandler().name",{"_index":1527,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context.getrequest",{"_index":1170,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context.getresponse",{"_index":1171,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context.switchtohttp().getrequest",{"_index":1482,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["contians",{"_index":1287,"title":{},"body":{"modules/ImagesModule.html":{}}}],["continue",{"_index":1464,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["continuing",{"_index":2405,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["contract",{"_index":2861,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":2791,"title":{},"body":{"index.html":{}}}],["control",{"_index":1147,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["controller",{"_index":161,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('images",{"_index":1253,"title":{},"body":{"controllers/ImagesController.html":{}}}],["controller('rental",{"_index":1872,"title":{},"body":{"controllers/RentalController.html":{}}}],["controller('user",{"_index":2240,"title":{},"body":{"controllers/UserController.html":{}}}],["controller/auth.controller",{"_index":390,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/images.controller",{"_index":1289,"title":{},"body":{"modules/ImagesModule.html":{}}}],["controller/rental.controller",{"_index":1936,"title":{},"body":{"modules/RentalModule.html":{}}}],["controller/user.controller",{"_index":2264,"title":{},"body":{"modules/UserModule.html":{}}}],["controllers",{"_index":163,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers:[authcontroller",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{}}}],["convert",{"_index":1006,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["converttodatetime",{"_index":2445,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["cookie",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["coordinates",{"_index":713,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCoordinatesDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["coordinates.dto",{"_index":1063,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["coordinates.dto.ts",{"_index":1743,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{},"coverage.html":{}}}],["coordinates.dto.ts:10",{"_index":2051,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:6",{"_index":1745,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:7",{"_index":1746,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:8",{"_index":2050,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:9",{"_index":2052,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.pipe",{"_index":1854,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["coordinates.pipe.ts",{"_index":2054,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["coordinates.pipe.ts:10",{"_index":2055,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["coordinates.pipe.ts:17",{"_index":2056,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["coords",{"_index":1032,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/LocCreateRentalDto.html":{}}}],["copies",{"_index":2834,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2819,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2808,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1054,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["count",{"_index":1203,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{}}}],["coupled",{"_index":2762,"title":{},"body":{"index.html":{}}}],["course",{"_index":1105,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["coverage",{"_index":2628,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"index.html":{}}}],["createaddress",{"_index":999,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["createaddress(value",{"_index":1004,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["created",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{}}}],["creategivennotice",{"_index":1093,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["creategivennotice(starttime",{"_index":1095,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["createmailoptions",{"_index":837,"title":{},"body":{"injectables/EmailService.html":{}}}],["createmailoptions(email",{"_index":840,"title":{},"body":{"injectables/EmailService.html":{}}}],["createmulteruploadutil",{"_index":603,"title":{"injectables/CreateMulterUploadUtil.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["createprofile",{"_index":2215,"title":{},"body":{"controllers/UserController.html":{}}}],["createprofile(@body",{"_index":2243,"title":{},"body":{"controllers/UserController.html":{}}}],["createprofile(user",{"_index":2219,"title":{},"body":{"controllers/UserController.html":{}}}],["createquery",{"_index":1641,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquery1",{"_index":1704,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquery2",{"_index":1710,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquerydto",{"_index":641,"title":{"classes/CreateQueryDto.html":{}},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["createrental",{"_index":1792,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["createrental(@body",{"_index":1877,"title":{},"body":{"controllers/RentalController.html":{}}}],["createrental(rental",{"_index":1798,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["createrentaldto",{"_index":665,"title":{"classes/CreateRentalDto.html":{}},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["createrentalquery",{"_index":1958,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["createrentalquery(rental",{"_index":1966,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["createrentalvalidationschema",{"_index":1844,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":1080,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["createupdatedata",{"_index":721,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["createupdaterdtopipe",{"_index":714,"title":{"injectables/CreateUpdaterDtoPipe.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{},"overview.html":{}}}],["createuser",{"_index":2281,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(user",{"_index":2290,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":573,"title":{"injectables/CreateUserDto.html":{}},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["createuserupdate",{"_index":2282,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserupdate(data",{"_index":2292,"title":{},"body":{"injectables/UserService.html":{}}}],["createuservalidation",{"_index":2238,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":753,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"classes/VerifyNewPasswordDto.html":{},"index.html":{}}}],["credentials",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cross",{"_index":2105,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["crossover",{"_index":2462,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["crypto",{"_index":2725,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"controllers/RentalController.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["currentdatetime",{"_index":2497,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["currently",{"_index":1986,"title":{},"body":{"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["currenttime",{"_index":1081,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["custom",{"_index":103,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ErrorFilter.html":{}}}],["damages",{"_index":2858,"title":{},"body":{"license.html":{}}}],["data",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/ImageQueryResultsDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.confirmpass",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.confirmpassword",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["data.discounts.monthly",{"_index":1597,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.discounts.weekly",{"_index":1600,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.dto",{"_index":733,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["data.dto.ts",{"_index":1722,"title":{},"body":{"classes/ProcessedSaveDataDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{}}}],["data.dto.ts:10",{"_index":2205,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{}}}],["data.dto.ts:6",{"_index":1724,"title":{},"body":{"classes/ProcessedSaveDataDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{}}}],["data.dto.ts:7",{"_index":1723,"title":{},"body":{"classes/ProcessedSaveDataDto.html":{}}}],["data.email",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["data.features",{"_index":2003,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.filter",{"_index":2015,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.newpassword",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["data.oldpassword",{"_index":2623,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["data.password",{"_index":2325,"title":{},"body":{"injectables/UserService.html":{}}}],["data.price",{"_index":1595,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.rentalid",{"_index":1592,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.resetpass",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.resetpasswordtoken",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.specs",{"_index":2002,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.token",{"_index":2313,"title":{},"body":{"injectables/UserService.html":{}}}],["data.unavailabilityid",{"_index":2018,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.updater",{"_index":2016,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.username",{"_index":2329,"title":{},"body":{"injectables/UserService.html":{}}}],["data.util",{"_index":1298,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["data.util.ts",{"_index":1612,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{}}}],["data.util.ts:17",{"_index":1614,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["database",{"_index":56,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RemoveUnavailabilityDto.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":1288,"title":{},"body":{"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["database/providers/unavailability",{"_index":1942,"title":{},"body":{"modules/RentalModule.html":{}}}],["database/providers/user",{"_index":2267,"title":{},"body":{"modules/UserModule.html":{}}}],["database_connection",{"_index":2937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconnection",{"_index":2651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":757,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseprovider",{"_index":763,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databse",{"_index":2408,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["date",{"_index":1524,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawSearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/UserInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["date(value.rentalendtime).toisostring",{"_index":1122,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["date(value.rentalstarttime).toisostring",{"_index":1121,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["date.now",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{}}}],["date.now().tostring",{"_index":1685,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dates",{"_index":1091,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["datetime",{"_index":874,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.fromiso",{"_index":1120,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["datetime.fromobject",{"_index":2487,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.isinleapyear",{"_index":2454,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.isinleapyear()*](https://moment.github.io/luxon/docs/class/src/datetime.js~datetime.html#instance",{"_index":2518,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.local",{"_index":881,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetimes",{"_index":1119,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["day",{"_index":890,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["days",{"_index":956,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["db",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["dead",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["deal",{"_index":2821,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2865,"title":{},"body":{"license.html":{}}}],["december",{"_index":2150,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{}}}],["decemeber",{"_index":2443,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["decides",{"_index":1463,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decoded",{"_index":1412,"title":{},"body":{"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{}}}],["decorators",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":612,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":47,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["default_price",{"_index":1912,"title":{},"body":{"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":108,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["defining",{"_index":1933,"title":{},"body":{"modules/RentalModule.html":{}}}],["delete",{"_index":775,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteallimages",{"_index":1314,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleteallprofileimages",{"_index":1216,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallprofileimages(@req",{"_index":1279,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallprofileimages(req",{"_index":1225,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages",{"_index":1217,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages(@query",{"_index":1277,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages(params",{"_index":1228,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleted",{"_index":779,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/RentalService.html":{}}}],["deleteimages",{"_index":1315,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleteprofile",{"_index":2216,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprofile(@body",{"_index":2250,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprofile(data",{"_index":2223,"title":{},"body":{"controllers/UserController.html":{}}}],["deleterentalimages",{"_index":1218,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleterentalimages(@body",{"_index":1275,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleterentalimages(images",{"_index":1230,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deletes3image",{"_index":771,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["deletes3images",{"_index":772,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["deletes3imagesutil",{"_index":765,"title":{"injectables/DeleteS3ImagesUtil.html":{}},"body":{"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["deleteuser",{"_index":2283,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(data",{"_index":2295,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserdto",{"_index":816,"title":{"injectables/DeleteUserDto.html":{}},"body":{"injectables/DeleteUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["delte",{"_index":1784,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{}}}],["delteing",{"_index":818,"title":{},"body":{"injectables/DeleteUserDto.html":{}}}],["demonstration",{"_index":2759,"title":{},"body":{"index.html":{}}}],["demonstrative",{"_index":2768,"title":{},"body":{"index.html":{}}}],["deny",{"_index":1479,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1498,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["depends",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["deployed",{"_index":2789,"title":{},"body":{"index.html":{}}}],["description",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["detail",{"_index":2348,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["detailed",{"_index":2804,"title":{},"body":{"index.html":{}}}],["details",{"_index":823,"title":{},"body":{"classes/EditDetailsDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"index.html":{}}}],["details')@usepipes(new",{"_index":1805,"title":{},"body":{"controllers/RentalController.html":{}}}],["details.dto",{"_index":1863,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["details.dto.ts",{"_index":821,"title":{},"body":{"classes/EditDetailsDto.html":{},"coverage.html":{}}}],["details.dto.ts:23",{"_index":825,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.dto.ts:7",{"_index":826,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.dto.ts:8",{"_index":827,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.pipe",{"_index":1861,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["details.pipe.ts",{"_index":2335,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["details.pipe.ts:12",{"_index":2341,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:13",{"_index":2339,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:23",{"_index":2342,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:99",{"_index":2340,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["developer",{"_index":2772,"title":{},"body":{"index.html":{}}}],["device",{"_index":2775,"title":{},"body":{"index.html":{}}}],["digits",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"guards/LoggedOutGaurd.html":{}}}],["direct",{"_index":1182,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["discount",{"_index":1757,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["discounts",{"_index":710,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["dispatching",{"_index":1504,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["distilldto",{"_index":722,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["distribute",{"_index":2830,"title":{},"body":{"license.html":{}}}],["diy",{"_index":2505,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["doc",{"_index":2000,"title":{},"body":{"injectables/RentalService.html":{}}}],["doc.email",{"_index":2323,"title":{},"body":{"injectables/UserService.html":{}}}],["doc:jwtpayloaddto",{"_index":2321,"title":{},"body":{"injectables/UserService.html":{}}}],["docs",{"_index":2568,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["document",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["document.password",{"_index":2311,"title":{},"body":{"injectables/UserService.html":{}}}],["document.save",{"_index":1995,"title":{},"body":{"injectables/RentalService.html":{},"injectables/UserService.html":{}}}],["documentation",{"_index":1921,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documents",{"_index":1615,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{}}}],["don't",{"_index":79,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["dotenv",{"_index":2727,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1378,"title":{},"body":{"injectables/ImagesService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["downloading",{"_index":2784,"title":{},"body":{"index.html":{}}}],["doy",{"_index":1671,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["dt",{"_index":2501,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto",{"_index":644,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["dto.pipe",{"_index":1869,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["dto.pipe.ts",{"_index":717,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"coverage.html":{}}}],["dto.pipe.ts:15",{"_index":728,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.pipe.ts:30",{"_index":726,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.pipe.ts:58",{"_index":724,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.ts",{"_index":1131,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":1139,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:11",{"_index":1138,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:12",{"_index":1136,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:13",{"_index":1137,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:16",{"_index":1773,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:32",{"_index":1771,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:37",{"_index":1766,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:38",{"_index":1772,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:43",{"_index":1770,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:50",{"_index":1768,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:55",{"_index":1769,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:56",{"_index":1767,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:8",{"_index":1135,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:9",{"_index":1140,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto/change",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/check",{"_index":2620,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["dto/create",{"_index":579,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["dto/createrental/create",{"_index":1541,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/createrental/loc",{"_index":1018,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/MapNewRentalPipe.html":{}}}],["dto/createrental/raw",{"_index":1020,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["dto/delete",{"_index":2235,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/details/edit",{"_index":1862,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["dto/extract",{"_index":915,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["dto/find",{"_index":2236,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/forgot",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/image",{"_index":1353,"title":{},"body":{"injectables/ImagesService.html":{}}}],["dto/image.dto",{"_index":1252,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["dto/pricing/pricing.dto",{"_index":1589,"title":{},"body":{"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/processed",{"_index":1352,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["dto/reset",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/searchrental/given",{"_index":1109,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{}}}],["dto/searchrental/process",{"_index":960,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["dto/searchrental/raw",{"_index":1110,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["dto/searchrental/request",{"_index":1904,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["dto/searchrental/search",{"_index":1851,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["dto/unavailability/remove/remove",{"_index":1871,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/create",{"_index":1667,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/processed",{"_index":1663,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/unavailability/schedule/raw",{"_index":2113,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/sorted",{"_index":2115,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/unavailability",{"_index":1665,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/validate",{"_index":2116,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto/unavailability/unavailability.dto",{"_index":2112,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["dto/unavailability/update/update",{"_index":731,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/unavailability/update/validate",{"_index":732,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["dto/unavailability/validated",{"_index":1661,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto/update",{"_index":1870,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/user",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/verify",{"_index":2619,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["duration",{"_index":935,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["duration.pipe",{"_index":1848,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["duration.pipe.ts",{"_index":1898,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["duration.pipe.ts:19",{"_index":1902,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["duration.pipe.ts:9",{"_index":1900,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["e.g",{"_index":997,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":1328,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1646,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["east",{"_index":1049,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["ed",{"_index":2565,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["edit",{"_index":822,"title":{},"body":{"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{},"index.html":{}}}],["editdetails",{"_index":1793,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["editdetails(@body",{"_index":1886,"title":{},"body":{"controllers/RentalController.html":{}}}],["editdetails(data",{"_index":1970,"title":{},"body":{"injectables/RentalService.html":{}}}],["editdetails(editdetailsdto",{"_index":1803,"title":{},"body":{"controllers/RentalController.html":{}}}],["editdetailsdto",{"_index":819,"title":{"classes/EditDetailsDto.html":{}},"body":{"classes/EditDetailsDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["editdetailsdto):promise",{"_index":2394,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["editpricing",{"_index":1794,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["editpricing(@body",{"_index":1884,"title":{},"body":{"controllers/RentalController.html":{}}}],["editpricing(data",{"_index":1973,"title":{},"body":{"injectables/RentalService.html":{}}}],["editpricing(pricingdto",{"_index":1808,"title":{},"body":{"controllers/RentalController.html":{}}}],["efficient",{"_index":1311,"title":{},"body":{"injectables/ImagesService.html":{}}}],["electric",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":2124,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["email",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserDto.html":{},"injectables/EmailService.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"miscellaneous/variables.html":{}}}],["email.middleware",{"_index":2265,"title":{},"body":{"modules/UserModule.html":{}}}],["email.middleware.ts",{"_index":2397,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["email.middleware.ts:16",{"_index":2402,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.middleware.ts:28",{"_index":2407,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.middleware.ts:39",{"_index":2404,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.util",{"_index":2412,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.util.ts",{"_index":2424,"title":{},"body":{"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["email.util.ts:14",{"_index":2428,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["email.util.ts:7",{"_index":2426,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["email/email.service",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["emails",{"_index":833,"title":{},"body":{"injectables/EmailService.html":{}}}],["emailservice",{"_index":374,"title":{"injectables/EmailService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["enclose",{"_index":2201,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["enclosed",{"_index":1676,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["encrypt",{"_index":570,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["end",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1361,"title":{},"body":{"injectables/ImagesService.html":{}}}],["endtime",{"_index":945,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{}}}],["endtime):promise",{"_index":962,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["endtime.diff(starttime).toobject().milliseconds",{"_index":1118,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["enforce",{"_index":77,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["ensure",{"_index":1336,"title":{},"body":{"injectables/ImagesService.html":{}}}],["enter",{"_index":2627,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["entered",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["enters",{"_index":2468,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["entire",{"_index":1656,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["enum",{"_index":947,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"miscellaneous/enumerations.html":{}}}],["enum**](https://www.typescriptlang.org/docs/handbook/enums.html",{"_index":971,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalDurationPipe.html":{}}}],["enum.util",{"_index":1850,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{}}}],["enum.util.ts",{"_index":936,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"coverage.html":{}}}],["enum.util.ts:16",{"_index":950,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["enum.util.ts:36",{"_index":946,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["enumerations",{"_index":2752,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":939,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["env",{"_index":83,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":101,"title":{},"body":{"injectables/AppConfigService.html":{},"index.html":{}}}],["equal",{"_index":2507,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["err",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["err.message",{"_index":1264,"title":{},"body":{"controllers/ImagesController.html":{}}}],["err.stack",{"_index":792,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["error",{"_index":89,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('a",{"_index":2432,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["error('bcrypt",{"_index":585,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["error('cannot",{"_index":921,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["error('citympg",{"_index":2360,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('color",{"_index":2382,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('description",{"_index":2373,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('discounts",{"_index":1598,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["error('error",{"_index":2624,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["error('failed",{"_index":1630,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["error('features",{"_index":2393,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('fuel",{"_index":2367,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('gasgrade",{"_index":2370,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('hwympg",{"_index":2364,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('invalid",{"_index":1450,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('minimum",{"_index":2596,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('model",{"_index":2376,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('no",{"_index":1999,"title":{},"body":{"injectables/RentalService.html":{}}}],["error('numdoors",{"_index":2390,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('numofseats",{"_index":2386,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('odometer",{"_index":2353,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('request",{"_index":2526,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('start",{"_index":2529,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('style",{"_index":2379,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('the",{"_index":2513,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('there",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('this",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RentalService.html":{}}}],["error('transmission",{"_index":2356,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('years",{"_index":2119,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["error('you",{"_index":1480,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["error(err",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["error.filter",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["error.filter.ts",{"_index":1142,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["error.filter.ts:23",{"_index":1161,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["error.getstatus",{"_index":884,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.message",{"_index":886,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.name",{"_index":887,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.stack",{"_index":895,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["errorfilter",{"_index":202,"title":{"classes/ErrorFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorFilter.html":{},"coverage.html":{}}}],["errorresponse",{"_index":1174,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["errors",{"_index":870,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["etag",{"_index":1196,"title":{},"body":{"interfaces/ImageInterface.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["etc",{"_index":1754,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["even",{"_index":2467,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["event",{"_index":2853,"title":{},"body":{"license.html":{}}}],["events",{"_index":1505,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exact",{"_index":1151,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exactly",{"_index":2107,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["example",{"_index":1051,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["exception",{"_index":1143,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.getstatus",{"_index":1172,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.message",{"_index":1178,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.message.error",{"_index":1177,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exceptional",{"_index":1520,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exceptionfilter",{"_index":865,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["exceptions",{"_index":1149,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["execution",{"_index":1166,"title":{},"body":{"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["executioncontext",{"_index":1461,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["exist",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["existing",{"_index":1817,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/UserService.html":{}}}],["exists",{"_index":2425,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["expected",{"_index":2176,"title":{},"body":{"classes/TypeOfValue.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["expiration",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"miscellaneous/variables.html":{}}}],["expired",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires",{"_index":1381,"title":{},"body":{"injectables/ImagesService.html":{}}}],["expiresin",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":90,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"controllers/ImagesController.html":{},"injectables/JwtStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"dependencies.html":{},"license.html":{}}}],["extend",{"_index":1494,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["extending",{"_index":1983,"title":{},"body":{"injectables/RentalService.html":{}}}],["extends",{"_index":1409,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extra",{"_index":1492,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["extract",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/UserService.html":{}}}],["extract(req",{"_index":912,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["extractjwt",{"_index":1421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors([(request",{"_index":1425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractkeyvalueutil",{"_index":375,"title":{"injectables/ExtractKeyValueUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["extractkeyvalueutildto",{"_index":914,"title":{"classes/ExtractKeyValueUtilDto.html":{}},"body":{"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"coverage.html":{}}}],["failed",{"_index":587,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/JoiValidationPipe.html":{}}}],["false",{"_index":76,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/JwtStrategy.html":{},"injectables/PositiveNumber.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["far",{"_index":1644,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["features",{"_index":671,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1014,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["fieldname",{"_index":1255,"title":{},"body":{"controllers/ImagesController.html":{}}}],["fields",{"_index":2929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file(s",{"_index":1326,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["file.originalname",{"_index":634,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["filename",{"_index":1329,"title":{},"body":{"injectables/ImagesService.html":{}}}],["files",{"_index":1254,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"license.html":{}}}],["files.length",{"_index":1616,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["files.map(item",{"_index":1624,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["files[0",{"_index":1618,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["fileuploadandsave",{"_index":1316,"title":{},"body":{"injectables/ImagesService.html":{}}}],["filter",{"_index":744,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{}}}],["filter(val",{"_index":2139,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["filters",{"_index":1144,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/RentalService.html":{}}}],["finad",{"_index":1242,"title":{},"body":{"controllers/ImagesController.html":{}}}],["final",{"_index":668,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/SearchRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["find",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FindUserDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"injectables/ResetPasswordTokenDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailUtil.html":{},"index.html":{}}}],["findprofileimage",{"_index":1219,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimage(@req",{"_index":1272,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimage(req",{"_index":1232,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimages",{"_index":1220,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["findprofileimages(@req",{"_index":1270,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimages(req",{"_index":1235,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage",{"_index":1221,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage(@query",{"_index":1268,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage(params",{"_index":1237,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimages",{"_index":1222,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["findrentalimages(@query",{"_index":1266,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimages(params",{"_index":1240,"title":{},"body":{"controllers/ImagesController.html":{}}}],["finduser",{"_index":2217,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finduser(@body",{"_index":2247,"title":{},"body":{"controllers/UserController.html":{}}}],["finduser(data",{"_index":2297,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser(email",{"_index":2227,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyresetpasswordtoken",{"_index":2284,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyresetpasswordtoken(data",{"_index":2299,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserdto",{"_index":446,"title":{"injectables/FindUserDto.html":{}},"body":{"injectables/AuthService.html":{},"injectables/FindUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findvehicleimage",{"_index":1360,"title":{},"body":{"injectables/ImagesService.html":{}}}],["fine",{"_index":2788,"title":{},"body":{"index.html":{}}}],["finish",{"_index":2057,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["first",{"_index":88,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["fitness",{"_index":2849,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1357,"title":{},"body":{"injectables/ImagesService.html":{}}}],["flow",{"_index":1152,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["folder",{"_index":1212,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["following",{"_index":1744,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/UnavailabilityQueryDto.html":{},"license.html":{}}}],["forgot",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["forgotpassword",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(data",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassworddto",{"_index":295,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["forgotten",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/ForgotPasswordDto.html":{}}}],["form",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/SearchRentalDto.html":{}}}],["format",{"_index":669,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["forroutes('v1/rental",{"_index":1953,"title":{},"body":{"modules/RentalModule.html":{}}}],["forroutes('v1/user",{"_index":2272,"title":{},"body":{"modules/UserModule.html":{}}}],["found",{"_index":1338,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{}}}],["framework",{"_index":2767,"title":{},"body":{"index.html":{}}}],["free",{"_index":2815,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1088,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["fromdatetimes",{"_index":953,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["front",{"_index":1635,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["frontend",{"_index":1104,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"index.html":{}}}],["fuel",{"_index":696,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":1146,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["function",{"_index":631,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["function):promise",{"_index":2600,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["functionality",{"_index":100,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["functions",{"_index":2294,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2837,"title":{},"body":{"license.html":{}}}],["future",{"_index":2181,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["gas",{"_index":2926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gasgrade",{"_index":697,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["gaurds/jwt",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["gaurds/local",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["gaurds/logged",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["general",{"_index":41,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["generate",{"_index":937,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{}}}],["generateduration",{"_index":1901,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["generaterentaldurationenum",{"_index":942,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["generaterentaldurationenum(starttime",{"_index":944,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["generaterentaldurationenumutil",{"_index":933,"title":{"injectables/GenerateRentalDurationEnumUtil.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["generaterentaldurationenumutil.processrentaltime",{"_index":1605,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["generator",{"_index":636,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["geo",{"_index":50,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["geo_api_key",{"_index":53,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["geo_url",{"_index":55,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["geocoder",{"_index":2773,"title":{},"body":{"index.html":{}}}],["geocoding",{"_index":990,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["geocoordinate",{"_index":2774,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":1765,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{}}}],["geolocation",{"_index":1964,"title":{},"body":{"injectables/RentalService.html":{}}}],["geometry",{"_index":2027,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["geospatial",{"_index":1965,"title":{},"body":{"injectables/RentalService.html":{}}}],["geospatially",{"_index":993,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["geourl",{"_index":1011,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geourlapipipe",{"_index":985,"title":{"injectables/GeoUrlApiPipe.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["geourlapipipe(new",{"_index":1875,"title":{},"body":{"controllers/RentalController.html":{}}}],["geourlapiutil",{"_index":1002,"title":{"injectables/GeoUrlApiUtil.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["geourlapiutil.getcoordinates",{"_index":2059,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["geourl}?q=${address}&apikey=${apikey",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geourl}?q=${location}&apikey=${apikey",{"_index":1065,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["get('find",{"_index":1233,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["get('profile",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@usepipes(new",{"_index":1826,"title":{},"body":{"controllers/RentalController.html":{}}}],["getaccess_key_id",{"_index":136,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getaws_s3_bucket_profile",{"_index":140,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getaws_s3_bucket_rentals",{"_index":138,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getcache_ttl",{"_index":132,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getcoordinates",{"_index":1000,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["getcoordinates(address",{"_index":1010,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["getgeo_api_key",{"_index":114,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getgeo_url",{"_index":116,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["gethello",{"_index":264,"title":{},"body":{"injectables/AppService.html":{}}}],["getjwt_exp_time",{"_index":124,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getlocal_db",{"_index":120,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getport",{"_index":126,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getprofile",{"_index":167,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":187,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":168,"title":{},"body":{"controllers/AppController.html":{}}}],["getredis_host",{"_index":128,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getredis_port",{"_index":130,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getremote_db",{"_index":118,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["gets3",{"_index":2072,"title":{},"body":{"injectables/S3Provider.html":{}}}],["getsecret_access_key",{"_index":134,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getsecret_key",{"_index":122,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getsingedurl",{"_index":1380,"title":{},"body":{"injectables/ImagesService.html":{}}}],["getter",{"_index":99,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/MapNewRentalPipe.html":{}}}],["getting",{"_index":2756,"title":{"index.html":{},"license.html":{}},"body":{}}],["give",{"_index":1145,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["given",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["givennotice",{"_index":1097,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["givennoticepipe",{"_index":1077,"title":{"injectables/GivenNoticePipe.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/RequestCoordinatesDto.html":{},"coverage.html":{},"overview.html":{}}}],["givennoticesearchrentaldto",{"_index":1101,"title":{"classes/GivenNoticeSearchRentalDto.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["gmail",{"_index":831,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/TransporterInterface.html":{}}}],["grab",{"_index":906,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiUtil.html":{},"guards/LoggedOutGaurd.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["graceful",{"_index":1519,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["grade",{"_index":2933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":2814,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1157,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["graph",{"_index":2870,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":1599,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ValidateEmailUtil.html":{}}}],["grocery",{"_index":1543,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["groupings",{"_index":2089,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["gte",{"_index":1674,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["guard",{"_index":1404,"title":{"guards/LoggedOutGaurd.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/LoggedOutGaurd.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1452,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["handler",{"_index":1465,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["handling",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["hapi/joi",{"_index":1399,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"dependencies.html":{}}}],["hash",{"_index":576,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["hashing",{"_index":586,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["header",{"_index":907,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/JwtStrategy.html":{}}}],["heated",{"_index":1750,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["hello",{"_index":266,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":2729,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":761,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"index.html":{}}}],["hereby",{"_index":2813,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1762,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["highway",{"_index":2932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":2855,"title":{},"body":{"license.html":{}}}],["holds",{"_index":2950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":867,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"interfaces/TransporterInterface.html":{}}}],["host.switchtohttp",{"_index":1169,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["host.switchtohttp().getrequest",{"_index":877,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["host.switchtohttp().getresponse",{"_index":876,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["hour",{"_index":1083,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["html",{"_index":853,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["http",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{}}}],["http_code",{"_index":1175,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["httpcode",{"_index":177,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["httpcode(200",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200)@useguards(localauthguard)@post('login",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["httperrorfilter",{"_index":222,"title":{"classes/HttpErrorFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["httpexception",{"_index":872,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["httpfilter",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["httponly",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["https",{"_index":2957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://geocode.search.hereapi.com/v1/geocode",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/pioneer18/rent",{"_index":2806,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":873,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["httpstatus.bad_request",{"_index":898,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":885,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["hwympg",{"_index":695,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["hybrid",{"_index":2927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hybrid','electric').required",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":1607,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["id",{"_index":635,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/S3Provider.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["identical",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["identified",{"_index":1657,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["identifier",{"_index":2629,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1653,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["identifying",{"_index":1187,"title":{},"body":{"classes/ImageDto.html":{}}}],["ids",{"_index":798,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["ids.push(item._id",{"_index":805,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["if(check.length",{"_index":2430,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["ignoreexpiration",{"_index":1427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":637,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["image(s",{"_index":1373,"title":{},"body":{"injectables/ImagesService.html":{}}}],["image._id",{"_index":1273,"title":{},"body":{"controllers/ImagesController.html":{}}}],["imagedto",{"_index":1185,"title":{"classes/ImageDto.html":{}},"body":{"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["imageinterface",{"_index":1193,"title":{"interfaces/ImageInterface.html":{}},"body":{"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{},"coverage.html":{}}}],["imagequeryresultsdto",{"_index":1200,"title":{"classes/ImageQueryResultsDto.html":{}},"body":{"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["images",{"_index":770,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["images.length",{"_index":1364,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images.map(item",{"_index":801,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.service.saveimages",{"_index":1331,"title":{},"body":{"injectables/ImagesService.html":{},"classes/ProcessedSaveDataDto.html":{}}}],["images.util",{"_index":1295,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["images.util.ts",{"_index":767,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"coverage.html":{}}}],["images.util.ts:16",{"_index":774,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:48",{"_index":778,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:7",{"_index":773,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:9",{"_index":780,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images/controller",{"_index":1895,"title":{},"body":{"controllers/RentalController.html":{}}}],["images/controller/images.controller",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["images/images.module",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["images[0]._id",{"_index":1369,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images[0].location.match(/\\/rentals",{"_index":782,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images[0].location.split(/\\/profile",{"_index":795,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images[0].location.split(/\\/rentals",{"_index":787,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["imageschema",{"_index":1290,"title":{},"body":{"modules/ImagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imageschema.index",{"_index":1301,"title":{},"body":{"modules/ImagesModule.html":{}}}],["imagescontroller",{"_index":206,"title":{"controllers/ImagesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"coverage.html":{}}}],["imagesmodel",{"_index":1320,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagesmodule",{"_index":194,"title":{"modules/ImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagesservice",{"_index":1249,"title":{"injectables/ImagesService.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["imageuploaddto",{"_index":1206,"title":{"classes/ImageUploadDto.html":{}},"body":{"classes/ImageUploadDto.html":{},"coverage.html":{}}}],["img_id",{"_index":1337,"title":{},"body":{"injectables/ImagesService.html":{}}}],["implements",{"_index":580,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["implied",{"_index":2845,"title":{},"body":{"license.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":36,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":2552,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["included",{"_index":2840,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2083,"title":{},"body":{"classes/SearchRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["including",{"_index":2824,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":988,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":2626,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["index",{"_index":104,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":2486,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["indexes.ts",{"_index":2655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":1741,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{},"modules/RentalModule.html":{}}}],["individual",{"_index":2478,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["information",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocCreateRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/UserService.html":{}}}],["inisde",{"_index":2473,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["initial",{"_index":1433,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["inject",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["inject(unavailabilitymodel",{"_index":1993,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["inject(usermodel",{"_index":2413,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["injectables",{"_index":96,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"overview.html":{}}}],["injectmodel",{"_index":1347,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{}}}],["injectmodel('images",{"_index":1355,"title":{},"body":{"injectables/ImagesService.html":{}}}],["injectmodel('rental",{"_index":1992,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["injectmodel('user",{"_index":2309,"title":{},"body":{"injectables/UserService.html":{}}}],["inputed",{"_index":1008,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["insert",{"_index":2006,"title":{},"body":{"injectables/RentalService.html":{}}}],["inside",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["installation",{"_index":2780,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1156,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["instanceof",{"_index":883,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["instantiated",{"_index":1393,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["instead",{"_index":1448,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["interacted",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["interaction",{"_index":1502,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept",{"_index":1507,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":1508,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interception",{"_index":1501,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptor",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.ts",{"_index":1485,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:22",{"_index":1511,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptors",{"_index":1486,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":1192,"title":{"interfaces/ImageInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"interfaces/ImageInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interface/mailoptions.interface",{"_index":849,"title":{},"body":{"injectables/EmailService.html":{}}}],["interface/modelinterface/image.interface",{"_index":1348,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{}}}],["interface/modelinterface/rental/rental.interface",{"_index":1988,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["interface/modelinterface/unavailability/unavailability.interface",{"_index":1991,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["interface/modelinterface/user.interface",{"_index":2306,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["interfaces",{"_index":1194,"title":{},"body":{"interfaces/ImageInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfacing",{"_index":1932,"title":{},"body":{"modules/RentalModule.html":{}}}],["internal_server_errors",{"_index":859,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["interval",{"_index":957,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["interval**](https://moment.github.io/luxon/docs/manual/tour.html#intervals",{"_index":1112,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["interval.fromdatetimes(a",{"_index":2493,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["interval.fromdatetimes(https://moment.github.io/luxon/docs/class/src/interval.js~interval.html#static",{"_index":952,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["interval.fromdatetimes(starttime",{"_index":964,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["invalid",{"_index":2536,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["isinleapyear",{"_index":2519,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["isnan(notice",{"_index":2495,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["it's",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/S3Provider.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["item",{"_index":2485,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.bucket",{"_index":1625,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.end",{"_index":2528,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.etag",{"_index":1627,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.key",{"_index":1626,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.location",{"_index":1629,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.location.split(/\\/profile",{"_index":815,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["item.location.split(/\\/rentals",{"_index":803,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["item.rentalid",{"_index":2524,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.size",{"_index":1628,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.start",{"_index":2527,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.title",{"_index":2540,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.year",{"_index":2534,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["items(joi.number",{"_index":2923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iyear",{"_index":2125,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["j",{"_index":2811,"title":{},"body":{"license.html":{}}}],["january",{"_index":2153,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["javacript",{"_index":1090,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["javascript",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["jean",{"_index":2796,"title":{},"body":{"index.html":{}}}],["joi",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/JoiValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["joi.array().items(joi.string",{"_index":2922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.array().items(joi.string()).allow(null",{"_index":2953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.boolean().required",{"_index":2925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().allow(null",{"_index":2954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":49,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.number().required",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":40,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":43,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":2935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":54,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().valid('gas",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('regular",{"_index":2917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.valid('n/a",{"_index":2921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.valid(null",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["joivalidationpipe",{"_index":1389,"title":{"injectables/JoiValidationPipe.html":{}},"body":{"injectables/JoiValidationPipe.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["joivalidationpipe())@post('create",{"_index":2221,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe())@usepipes(new",{"_index":1800,"title":{},"body":{"controllers/RentalController.html":{}}}],["joivalidationpipe(createrentalvalidationschema",{"_index":1874,"title":{},"body":{"controllers/RentalController.html":{}}}],["joivalidationpipe(createuservalidation",{"_index":2241,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe(searchrentalvalidationschema",{"_index":1879,"title":{},"body":{"controllers/RentalController.html":{}}}],["jonathan",{"_index":2792,"title":{},"body":{"index.html":{}}}],["json",{"_index":1183,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["json(`failed",{"_index":1263,"title":{},"body":{"controllers/ImagesController.html":{}}}],["json.stringify(errorresponse",{"_index":1180,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["jsonwebtoken",{"_index":2731,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":68,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_exp_time",{"_index":71,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":178,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":386,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwt_exp_time}s",{"_index":402,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants.secret",{"_index":399,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayloaddto",{"_index":619,"title":{"classes/JwtPayloadDto.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["jwtservice",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":377,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":392,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"interfaces/ImageInterface.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/S3Provider.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["key/value",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["keys",{"_index":82,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["kind",{"_index":2844,"title":{},"body":{"license.html":{}}}],["know",{"_index":2496,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["larger",{"_index":2597,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["last",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"guards/LoggedOutGaurd.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["lat",{"_index":1044,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["latitude",{"_index":2030,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["launches",{"_index":2783,"title":{},"body":{"index.html":{}}}],["layer",{"_index":1150,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["leap",{"_index":2455,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["leapyear",{"_index":2466,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":2429,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["length(2",{"_index":2924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["less",{"_index":1116,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{}}}],["level",{"_index":1107,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["liability",{"_index":2859,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2856,"title":{},"body":{"license.html":{}}}],["license",{"_index":2799,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":2800,"title":{},"body":{"index.html":{}}}],["licenseplate",{"_index":704,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":2825,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2846,"title":{},"body":{"license.html":{}}}],["link",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["links",{"_index":2776,"title":{},"body":{"index.html":{}}}],["list",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["listed",{"_index":672,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["listing",{"_index":1009,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["literal",{"_index":684,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"classes/SearchRentalDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["lng",{"_index":1045,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["load",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["loc",{"_index":673,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["locaion",{"_index":1903,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["local",{"_index":1439,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local_db",{"_index":58,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["localauthguard",{"_index":339,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":378,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["locate",{"_index":1322,"title":{},"body":{"injectables/ImagesService.html":{}}}],["location",{"_index":51,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loccreaterentaldto",{"_index":1017,"title":{"classes/LocCreateRentalDto.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["log",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"guards/LoggedOutGaurd.html":{},"miscellaneous/variables.html":{}}}],["loggedoutgaurd",{"_index":181,"title":{"guards/LoggedOutGaurd.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["loggedoutguard",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger",{"_index":781,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["logger.error",{"_index":1179,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["logger.error(err",{"_index":902,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["logger.error(error",{"_index":900,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/JoiValidationPipe.html":{}}}],["logger.log",{"_index":1523,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log('the",{"_index":2514,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(`geourl",{"_index":1030,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["logger.log(`months",{"_index":970,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["logger.log(`test1",{"_index":2042,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(`test2",{"_index":2044,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(`the",{"_index":968,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(`this",{"_index":2517,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(base",{"_index":969,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["logger.log(currentdatetime",{"_index":2498,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(data",{"_index":793,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["logger.log(err",{"_index":791,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["logger.log(log",{"_index":903,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["logger.log(merged",{"_index":2010,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(ordered",{"_index":2147,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["logger.log(start",{"_index":2492,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(test1",{"_index":2043,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(test2",{"_index":2045,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(url",{"_index":1388,"title":{},"body":{"injectables/ImagesService.html":{}}}],["logger.log(y1final",{"_index":2515,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logging",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{}}}],["logginginterceptor",{"_index":201,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["logic",{"_index":1493,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logically",{"_index":2459,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["login",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["login(@request",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":1528,"title":{"injectables/LoginDto.html":{}},"body":{"injectables/LoginDto.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":1532,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["logout",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["logout(@request",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logoutuser",{"_index":2285,"title":{},"body":{"injectables/UserService.html":{}}}],["logoutuser(req",{"_index":2302,"title":{},"body":{"injectables/UserService.html":{}}}],["logs",{"_index":860,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["longer",{"_index":1470,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["longitude",{"_index":2032,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["look",{"_index":2805,"title":{},"body":{"index.html":{}}}],["loosely",{"_index":2761,"title":{},"body":{"index.html":{}}}],["lte",{"_index":1672,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["luxon",{"_index":875,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"dependencies.html":{}}}],["luxon**](https://moment.github.io/luxon",{"_index":1111,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["ly",{"_index":2469,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["mail",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["mailoptions",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["mailoptionsinterface",{"_index":848,"title":{"interfaces/MailOptionsInterface.html":{}},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"coverage.html":{}}}],["make",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["makerequest",{"_index":1052,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["makerequest(location",{"_index":1058,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["makes",{"_index":1308,"title":{},"body":{"injectables/ImagesService.html":{}}}],["manage",{"_index":2280,"title":{},"body":{"injectables/UserService.html":{}}}],["manager",{"_index":2720,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":1215,"title":{},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["map",{"_index":729,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["mapnewrentalpipe",{"_index":1435,"title":{"injectables/MapNewRentalPipe.html":{}},"body":{"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["mapnewrentalpipe())@usepipes(new",{"_index":1801,"title":{},"body":{"controllers/RentalController.html":{}}}],["mapped",{"_index":2206,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["mappricingdto",{"_index":1576,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["mapview",{"_index":1046,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["match",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["matches",{"_index":2324,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["matching",{"_index":93,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.sign(data",{"_index":1566,"title":{},"body":{"injectables/PositiveNumber.html":{}}}],["math.sign(data.discounts.monthly",{"_index":1596,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["math.sign(data.price",{"_index":1594,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["mathch",{"_index":2625,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["max",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["maxcount",{"_index":1256,"title":{},"body":{"controllers/ImagesController.html":{}}}],["maxdistance",{"_index":2025,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["maximum",{"_index":2595,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["maxium",{"_index":1969,"title":{},"body":{"injectables/RentalService.html":{}}}],["merchantability",{"_index":2848,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2828,"title":{},"body":{"license.html":{}}}],["merged",{"_index":2008,"title":{},"body":{"injectables/RentalService.html":{}}}],["message",{"_index":863,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["metadata",{"_index":2744,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["method",{"_index":647,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["methods",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["metric",{"_index":2930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mid",{"_index":2918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middleware",{"_index":1788,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["middleware/validate",{"_index":1944,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["middlewareconsumer",{"_index":1927,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mile",{"_index":998,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["mileage",{"_index":2931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miles",{"_index":1956,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["military",{"_index":2189,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":655,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":1084,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["minprice",{"_index":1590,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["miscellaneous",{"_index":2751,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":922,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["mit",{"_index":2802,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":698,"title":{},"body":{"classes/CreateRentalDto.html":{},"modules/DatabaseModule.html":{},"classes/EditDetailsDto.html":{},"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityInterface.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["model.insertmany(packet",{"_index":1358,"title":{},"body":{"injectables/ImagesService.html":{}}}],["model.provider",{"_index":1943,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["model.provider.ts",{"_index":2658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["model.save(image",{"_index":1359,"title":{},"body":{"injectables/ImagesService.html":{}}}],["modern",{"_index":1087,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["modified",{"_index":1735,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["modify",{"_index":2827,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":1978,"title":{},"body":{"injectables/RentalService.html":{}}}],["mongodb",{"_index":727,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["mongoose",{"_index":1349,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"dependencies.html":{}}}],["mongoose.connect(configservice.get('remote_db",{"_index":2943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.objectid",{"_index":2951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":2947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1299,"title":{},"body":{"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":1947,"title":{},"body":{"modules/RentalModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":979,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["monthly",{"_index":712,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["months",{"_index":954,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"miscellaneous/enumerations.html":{}}}],["more",{"_index":1312,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"modules/RentalModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["mostly",{"_index":2941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mpge",{"_index":1774,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"miscellaneous/variables.html":{}}}],["mtime",{"_index":2533,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/typealiases.html":{}}}],["multer",{"_index":605,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"dependencies.html":{}}}],["multers3",{"_index":618,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["multerupload",{"_index":607,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["multerupload(req",{"_index":1556,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["multeruploadutil",{"_index":1284,"title":{"injectables/MulterUploadUtil.html":{}},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"coverage.html":{},"overview.html":{}}}],["multiple",{"_index":797,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["n/a",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n/a').required",{"_index":2920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":111,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["names",{"_index":2942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["near",{"_index":996,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"index.html":{}}}],["necessary",{"_index":1540,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"classes/RemoveUnavailabilityDto.html":{}}}],["need",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["needs",{"_index":720,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"miscellaneous/variables.html":{}}}],["negative",{"_index":1584,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["nest",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestinterceptor",{"_index":1512,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs",{"_index":2766,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":383,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":385,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2708,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":2410,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["nestmodule",{"_index":1935,"title":{},"body":{"modules/RentalModule.html":{}}}],["never",{"_index":2782,"title":{},"body":{"index.html":{}}}],["new",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_password",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["newend",{"_index":740,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["newpassword",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["newstart",{"_index":738,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["newtitle",{"_index":742,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["next",{"_index":1509,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["next.handle().pipe",{"_index":1517,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nice",{"_index":889,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["node_env",{"_index":42,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["nodemailer",{"_index":832,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/TransporterInterface.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":844,"title":{},"body":{"injectables/EmailService.html":{}}}],["noninfringement",{"_index":2852,"title":{},"body":{"license.html":{}}}],["north",{"_index":1050,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["note",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["notice",{"_index":1082,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"license.html":{}}}],["notice.pipe",{"_index":1856,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["notice.pipe.ts",{"_index":1079,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"coverage.html":{}}}],["notice.pipe.ts:20",{"_index":1096,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["notice.pipe.ts:36",{"_index":1103,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["notice.pipe.ts:51",{"_index":1100,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["now",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["now.hour",{"_index":1525,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now.hour}:${now.minute",{"_index":892,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["now.minute",{"_index":1526,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now.month}/${now.day",{"_index":891,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["now.second",{"_index":893,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["null",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"injectables/UserService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":152,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["number.ts",{"_index":1563,"title":{},"body":{"injectables/PositiveNumber.html":{},"coverage.html":{}}}],["number.ts:8",{"_index":1565,"title":{},"body":{"injectables/PositiveNumber.html":{}}}],["numdoors",{"_index":702,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["numofseats",{"_index":701,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/VerifyNewPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":2686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":799,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/HttpErrorFilter.html":{}}}],["objects.push",{"_index":804,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["observable",{"_index":1467,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["obtaining",{"_index":2818,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2441,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["occurred",{"_index":812,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["odometer",{"_index":692,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["offset",{"_index":1679,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["oldpassword",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["once",{"_index":2301,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["one",{"_index":1098,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["onto",{"_index":2575,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["option",{"_index":1257,"title":{},"body":{"controllers/ImagesController.html":{}}}],["optional",{"_index":113,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["options",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/ImagesController.html":{},"interfaces/MailOptionsInterface.html":{}}}],["order",{"_index":2101,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["ordered",{"_index":2012,"title":{},"body":{"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["orderyears",{"_index":2094,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["ordinal",{"_index":2489,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["original",{"_index":588,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"index.html":{}}}],["originalname",{"_index":1379,"title":{},"body":{"injectables/ImagesService.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":2863,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"modules/ImagesModule.html":{},"guards/LoggedOutGaurd.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["out.guard",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{}}}],["out.guard.ts",{"_index":1454,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"coverage.html":{}}}],["out.guard.ts:17",{"_index":1469,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["out.guard.ts:38",{"_index":1462,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["out.guard.ts:9",{"_index":1459,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["outside",{"_index":1680,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["over",{"_index":1148,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["overlap",{"_index":652,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["overlapping",{"_index":1637,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["overlaps",{"_index":1987,"title":{},"body":{"injectables/RentalService.html":{}}}],["override",{"_index":1455,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["overview",{"_index":2871,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2702,"title":{"dependencies.html":{}},"body":{}}],["packet",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{}}}],["packet._id",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["packet.email",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["packet.username",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["page",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["pairs",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["parameter",{"_index":2035,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["params",{"_index":806,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["params.rental_id",{"_index":1260,"title":{},"body":{"controllers/ImagesController.html":{}}}],["parseint(process.env.min_price",{"_index":1591,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["parser",{"_index":2713,"title":{},"body":{"dependencies.html":{}}}],["parses",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["particular",{"_index":2850,"title":{},"body":{"license.html":{}}}],["pass",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/LoginUserDto.html":{},"interfaces/TransporterInterface.html":{}}}],["passed",{"_index":645,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"classes/SearchRentalDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["passing",{"_index":1582,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["passoword",{"_index":930,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["passowrd",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/ForgotPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["passport",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UserPropertyDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["passportmodule",{"_index":384,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1420,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1422,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["password.dto.ts",{"_index":590,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:5",{"_index":595,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["password.dto.ts:6",{"_index":594,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":2066,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.util",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["password.util.ts",{"_index":2609,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["password.util.ts:15",{"_index":2618,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["password.util.ts:25",{"_index":2616,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["password.util.ts:35",{"_index":2614,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["past",{"_index":2481,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["path",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/HttpErrorFilter.html":{}}}],["payload",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["payload.email",{"_index":1431,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":1429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":1411,"title":{},"body":{"classes/JwtPayloadDto.html":{},"coverage.html":{}}}],["payload.ts:5",{"_index":1415,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.ts:6",{"_index":1413,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.ts:7",{"_index":1414,"title":{},"body":{"classes/JwtPayloadDto.html":{}}}],["payload.username",{"_index":1430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pc",{"_index":2785,"title":{},"body":{"index.html":{}}}],["period",{"_index":1823,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["permission",{"_index":2812,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2835,"title":{},"body":{"license.html":{}}}],["person",{"_index":2817,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2836,"title":{},"body":{"license.html":{}}}],["photo",{"_index":1333,"title":{},"body":{"injectables/ImagesService.html":{}}}],["photos",{"_index":674,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["photos/${user.email}/${category",{"_index":627,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["photos/{user_email}/{category",{"_index":2946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pilot",{"_index":1753,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["pipe",{"_index":2483,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["pipes/bcrypt.pipe",{"_index":2237,"title":{},"body":{"controllers/UserController.html":{}}}],["pipes/create",{"_index":1868,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/geo",{"_index":1838,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/given",{"_index":1855,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/map",{"_index":1840,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/pricing.pipe",{"_index":1859,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/process",{"_index":1867,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/rental",{"_index":1847,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/request",{"_index":1853,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/sort",{"_index":1864,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/validate",{"_index":1860,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipetransform",{"_index":578,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["place",{"_index":2122,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["platform",{"_index":1159,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["please",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["point",{"_index":1549,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{}}}],["port",{"_index":48,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"interfaces/TransporterInterface.html":{}}}],["portions",{"_index":2842,"title":{},"body":{"license.html":{}}}],["position",{"_index":1043,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["positive",{"_index":1564,"title":{},"body":{"injectables/PositiveNumber.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["positivenumber",{"_index":1561,"title":{"injectables/PositiveNumber.html":{}},"body":{"injectables/PositiveNumber.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["post",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["post('change",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create",{"_index":2242,"title":{},"body":{"controllers/UserController.html":{}}}],["post('delete",{"_index":1226,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["post('edit",{"_index":1804,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('forgot",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('remove",{"_index":1812,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('reset",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('schedule",{"_index":1819,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('update",{"_index":1833,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["post('upload",{"_index":1244,"title":{},"body":{"controllers/ImagesController.html":{}}}],["post()@usepipes(new",{"_index":1799,"title":{},"body":{"controllers/RentalController.html":{}}}],["postman",{"_index":2781,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":1086,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"index.html":{}}}],["prefix",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":2919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepare",{"_index":1579,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["present",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["presigned",{"_index":1377,"title":{},"body":{"injectables/ImagesService.html":{}}}],["prevent",{"_index":1634,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["previous",{"_index":2482,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["price",{"_index":709,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["price')@usepipes(new",{"_index":1809,"title":{},"body":{"controllers/RentalController.html":{}}}],["pricing",{"_index":675,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pricingdto",{"_index":1567,"title":{"classes/PricingDto.html":{}},"body":{"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["pricingpipe",{"_index":1573,"title":{"injectables/PricingPipe.html":{}},"body":{"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["prior",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["procesed",{"_index":1727,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["process",{"_index":1613,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["process.env",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.geo_api_key",{"_index":1035,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["process.env.geo_url",{"_index":1031,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["process.env.jwt_exp_time",{"_index":2949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":899,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["process.env.private_key",{"_index":2955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.secret_key",{"_index":2948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":1659,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["processed.data",{"_index":2007,"title":{},"body":{"injectables/RentalService.html":{}}}],["processedsavedatadto",{"_index":1351,"title":{"classes/ProcessedSaveDataDto.html":{}},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{},"coverage.html":{}}}],["processedunavailabilitydto",{"_index":1662,"title":{"classes/ProcessedUnavailabilityDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["processedunavailabilityquerydto",{"_index":1668,"title":{"classes/ProcessedUnavailabilityQueryDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["processedunavailabilityquerydto[]s",{"_index":1730,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["processedunavailabilityquerydtos",{"_index":1729,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["processing",{"_index":1133,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["processrentaltime",{"_index":943,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["processrentaltime(starttime",{"_index":949,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["processrentaltimedto",{"_index":959,"title":{"classes/ProcessRentalTimeDto.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["processsavedatautil",{"_index":1285,"title":{"injectables/ProcessSaveDataUtil.html":{}},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{},"overview.html":{}}}],["processunavailabilitypipe",{"_index":1631,"title":{"injectables/ProcessUnavailabilityPipe.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"overview.html":{}}}],["processunavailabilitypipe())@usepipes(new",{"_index":1820,"title":{},"body":{"controllers/RentalController.html":{}}}],["processunavailabilitypipe.createquery",{"_index":646,"title":{},"body":{"classes/CreateQueryDto.html":{}}}],["production",{"_index":45,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ErrorFilter.html":{}}}],["profile",{"_index":794,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profiles",{"_index":2259,"title":{},"body":{"modules/UserModule.html":{}}}],["project",{"_index":2758,"title":{},"body":{"index.html":{}}}],["promise",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1383,"title":{},"body":{"injectables/ImagesService.html":{}}}],["properties",{"_index":593,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["property",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["property.dto",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["property.dto.ts",{"_index":2274,"title":{},"body":{"classes/UserPropertyDto.html":{},"coverage.html":{}}}],["property.dto.ts:5",{"_index":2275,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["property.dto.ts:6",{"_index":2278,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["property.dto.ts:7",{"_index":2276,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["property.dto.ts:8",{"_index":2277,"title":{},"body":{"classes/UserPropertyDto.html":{}}}],["propery",{"_index":940,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["protected",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["provide",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/S3Provider.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/TypeOfValue.html":{},"license.html":{}}}],["provider",{"_index":759,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers/database.provider",{"_index":764,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["providers/s3.provider",{"_index":621,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["provides",{"_index":98,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AuthModule.html":{},"modules/RentalModule.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{}}}],["public",{"_index":629,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractKeyValueUtil.html":{}}}],["publish",{"_index":2829,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2851,"title":{},"body":{"license.html":{}}}],["pw",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["py1",{"_index":1701,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["py2",{"_index":1702,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["queried",{"_index":994,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/ImagesService.html":{}}}],["queries",{"_index":1306,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["query",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["query.dto",{"_index":1666,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{}}}],["query.dto.ts",{"_index":643,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:10",{"_index":662,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:11",{"_index":658,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:12",{"_index":1737,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:13",{"_index":2203,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:6",{"_index":1738,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:7",{"_index":661,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:8",{"_index":660,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:9",{"_index":663,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.features",{"_index":2037,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["query.pricing",{"_index":2034,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["quick",{"_index":1740,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["quiet",{"_index":807,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["rack",{"_index":1749,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["radius",{"_index":995,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["range",{"_index":2578,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["range**](https://www.mathsisfun.com/data/range.html",{"_index":2585,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rate",{"_index":1756,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["raw",{"_index":748,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rawauth",{"_index":917,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["rawauth.slice",{"_index":920,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["rawauth.slice(15",{"_index":919,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["rawcoordinates",{"_index":1073,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinates.lat",{"_index":1075,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinates.lng",{"_index":1076,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinatesdto",{"_index":1062,"title":{"classes/RawCoordinatesDto.html":{}},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"coverage.html":{}}}],["rawcreaterentaldto",{"_index":989,"title":{"classes/RawCreateRentalDto.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["rawcreaterentaldto):promise",{"_index":1034,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["rawscheduleunavailabilitydto",{"_index":1776,"title":{"classes/RawScheduleUnavailabilityDto.html":{}},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{}}}],["rawsearchrentaldto",{"_index":1099,"title":{"classes/RawSearchRentalDto.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"coverage.html":{}}}],["react",{"_index":2798,"title":{},"body":{"index.html":{}}}],["read",{"_index":630,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/JwtStrategy.html":{}}}],["readonly",{"_index":143,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["ready",{"_index":1736,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["real",{"_index":165,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["redirect",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{}}}],["redirect('http://localhost:3000/auth/login",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["redirecting",{"_index":2316,"title":{},"body":{"injectables/UserService.html":{}}}],["redis",{"_index":59,"title":{},"body":{"modules/AppConfigModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["redis/redis.module",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["redis/service/redis.service",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["redis_host",{"_index":61,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["redis_port",{"_index":62,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["redismodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["redisservice",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["reducing",{"_index":1984,"title":{},"body":{"injectables/RentalService.html":{}}}],["reference",{"_index":2209,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["references",{"_index":1761,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["reflect",{"_index":2743,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["registered",{"_index":102,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/EmailService.html":{}}}],["registration",{"_index":676,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["reject",{"_index":1384,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reject(err",{"_index":1386,"title":{},"body":{"injectables/ImagesService.html":{}}}],["related",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["remote",{"_index":2945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remote_db",{"_index":57,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["remove",{"_index":1816,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{}}}],["remove.deletedcount",{"_index":2019,"title":{},"body":{"injectables/RentalService.html":{}}}],["removeunavailability",{"_index":1795,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["removeunavailability(@body",{"_index":1892,"title":{},"body":{"controllers/RentalController.html":{}}}],["removeunavailability(data",{"_index":1811,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["removeunavailabilitydto",{"_index":1782,"title":{"classes/RemoveUnavailabilityDto.html":{}},"body":{"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{}}}],["removeunavailabilitydto):removeunavailabilitydto",{"_index":2437,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["removing",{"_index":769,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["rent",{"_index":625,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rentacar",{"_index":2810,"title":{},"body":{"license.html":{}}}],["rentacar.team2020@gmail.com",{"_index":845,"title":{},"body":{"injectables/EmailService.html":{}}}],["rental",{"_index":651,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/EditDetailsDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rental's",{"_index":1588,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"index.html":{}}}],["rental.controller.updateunavaialability",{"_index":1930,"title":{},"body":{"modules/RentalModule.html":{}}}],["rental.controller.updateunavailability",{"_index":2574,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rental.dto",{"_index":1019,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["rental.dto.ts",{"_index":667,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{}}}],["rental.dto.ts:10",{"_index":1436,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:11",{"_index":2086,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:15",{"_index":2085,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:23",{"_index":688,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:28",{"_index":681,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:29",{"_index":690,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:34",{"_index":687,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:41",{"_index":685,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:45",{"_index":686,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:46",{"_index":683,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:6",{"_index":689,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rental.dto.ts:7",{"_index":680,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:8",{"_index":691,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:9",{"_index":1437,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.features",{"_index":2036,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.givennotice",{"_index":2024,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.coordinates[0",{"_index":2029,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.coordinates[1",{"_index":2031,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.type",{"_index":2028,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.pipe",{"_index":1841,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["rental.pipe.ts",{"_index":1538,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["rental.pipe.ts:13",{"_index":1539,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["rental.price",{"_index":2033,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.pricerange",{"_index":2165,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.rentalduration",{"_index":2021,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.service.createrental",{"_index":670,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{}}}],["rental.service.editdetails",{"_index":824,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["rental.service.editpricing",{"_index":1569,"title":{},"body":{"classes/PricingDto.html":{}}}],["rental.service.removeunavailability",{"_index":1785,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{}}}],["rental.service.scheduleunavailability",{"_index":1731,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["rental.service.searchrentals",{"_index":2084,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.service.ts",{"_index":2157,"title":{},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["rental.service.ts:10",{"_index":2161,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.ts:15",{"_index":2163,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.ts:19",{"_index":2162,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.updateunavailability",{"_index":719,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{}}}],["rental/controller/rental.controller",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["rental/rental.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["rental_id",{"_index":1197,"title":{},"body":{"interfaces/ImageInterface.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["rentalcontroller",{"_index":205,"title":{"controllers/RentalController.html":{}},"body":{"modules/AppModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{}}}],["rentaldescription",{"_index":677,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["rentalduration",{"_index":938,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["rentaldurationpipe",{"_index":1134,"title":{"injectables/RentalDurationPipe.html":{}},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["rentaldurationpipe())@usepipes(new",{"_index":1828,"title":{},"body":{"controllers/RentalController.html":{}}}],["rentaldurationpipe(new",{"_index":1881,"title":{},"body":{"controllers/RentalController.html":{}}}],["rentaldurations",{"_index":958,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["rentaldurations.any",{"_index":975,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['1",{"_index":978,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['3",{"_index":977,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['5",{"_index":984,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentalendtime",{"_index":1127,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rentalid",{"_index":736,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["rentalinterface",{"_index":1910,"title":{"interfaces/RentalInterface.html":{}},"body":{"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"coverage.html":{}}}],["rentalmodel",{"_index":1961,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rentalmodule",{"_index":195,"title":{"modules/RentalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RentalModule.html":{},"modules.html":{},"overview.html":{}}}],["rentals",{"_index":992,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rentals.length",{"_index":1998,"title":{},"body":{"injectables/RentalService.html":{}}}],["rentalschema",{"_index":1937,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rentalschema.index",{"_index":1948,"title":{},"body":{"modules/RentalModule.html":{}}}],["rentalschemavalidation",{"_index":2337,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["rentalservice",{"_index":1836,"title":{"injectables/RentalService.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"coverage.html":{},"overview.html":{}}}],["rentalstarttime",{"_index":1126,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rentaltitle",{"_index":2952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rentmaxduration",{"_index":708,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["rentminduration",{"_index":707,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":1055,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["report",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["represent",{"_index":1606,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["req",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.body.y2",{"_index":2604,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.headers.cookie",{"_index":918,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["req.method",{"_index":1515,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.originalurl",{"_index":2420,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.url",{"_index":1516,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.user",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"injectables/CreateMulterUploadUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{}}}],["req.user._doc.password",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.email",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":878,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["request.url",{"_index":880,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["request/response",{"_index":1489,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request?.cookies?.authentication",{"_index":1426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestcoordinatesdto",{"_index":941,"title":{"classes/RequestCoordinatesDto.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["requestcoordinatespipe",{"_index":1852,"title":{"injectables/RequestCoordinatesPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["requestcoordinatespipe())@usepipes(new",{"_index":1827,"title":{},"body":{"controllers/RentalController.html":{}}}],["requestcoordinatespipe(new",{"_index":1880,"title":{},"body":{"controllers/RentalController.html":{}}}],["requested",{"_index":600,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"injectables/GivenNoticePipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["requesting",{"_index":777,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ForgotPasswordDto.html":{},"injectables/ImagesService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["requests",{"_index":1471,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["require(\"@hapi/joi",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["require('axios",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1305,"title":{},"body":{"injectables/ImagesService.html":{},"classes/RawCreateRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["requirednotice",{"_index":706,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["requires",{"_index":2171,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["res",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["res.deletedcount",{"_index":2328,"title":{},"body":{"injectables/UserService.html":{}}}],["res.send(req.user._doc",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.setheader('set",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(201).json(req.files[0].location",{"_index":1560,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["res.status(404).json(`failed",{"_index":1557,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["res.status(500).json(`failed",{"_index":1376,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/ForgotPasswordDto.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"injectables/ResetPasswordTokenDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["resetpass",{"_index":2064,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["resetpassword",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(data",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassworddto",{"_index":325,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resetpasswordexpires",{"_index":2253,"title":{},"body":{"interfaces/UserInterface.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordtoken",{"_index":2065,"title":{},"body":{"classes/ResetPasswordDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordtokendto",{"_index":2067,"title":{"injectables/ResetPasswordTokenDto.html":{}},"body":{"injectables/ResetPasswordTokenDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["resetplease",{"_index":854,"title":{},"body":{"injectables/EmailService.html":{}}}],["resets",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetting",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{}}}],["resettoken",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(url",{"_index":1387,"title":{},"body":{"injectables/ImagesService.html":{}}}],["response",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["response.data.items[0",{"_index":1041,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["response.data.items[0].position",{"_index":1074,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["response.status(status).json(err",{"_index":901,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["response.status(status).json(errorresponse",{"_index":1184,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["responses",{"_index":1173,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["responsible",{"_index":1154,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["respose",{"_index":1040,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["restriction",{"_index":2823,"title":{},"body":{"license.html":{}}}],["result",{"_index":92,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":94,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.dto",{"_index":1354,"title":{},"body":{"injectables/ImagesService.html":{}}}],["results.dto.ts",{"_index":1202,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"coverage.html":{}}}],["results.dto.ts:5",{"_index":1204,"title":{},"body":{"classes/ImageQueryResultsDto.html":{}}}],["results.dto.ts:6",{"_index":1205,"title":{},"body":{"classes/ImageQueryResultsDto.html":{}}}],["retnals",{"_index":1781,"title":{},"body":{"classes/RawSearchRentalDto.html":{}}}],["return",{"_index":145,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1132,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["returning",{"_index":2944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returnrentalmodel",{"_index":2160,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["returns",{"_index":173,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCoordinatesDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["reutrns",{"_index":862,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["reveals",{"_index":861,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["rights",{"_index":2826,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2746,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":2419,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["router",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routermodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroutes(routes",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/RentalModule.html":{}}}],["rsa",{"_index":2956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":2787,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1473,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1514,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["s3",{"_index":608,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["s3.getsignedurl('getobject",{"_index":1385,"title":{},"body":{"injectables/ImagesService.html":{}}}],["s3provider",{"_index":610,"title":{"injectables/S3Provider.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"overview.html":{}}}],["salt",{"_index":577,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["same",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["save",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedSaveDataDto.html":{},"coverage.html":{}}}],["saved",{"_index":1246,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["saveimages",{"_index":1317,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["saveimages(req.files",{"_index":1559,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["saves",{"_index":1342,"title":{},"body":{"injectables/ImagesService.html":{}}}],["scalable",{"_index":2760,"title":{},"body":{"index.html":{}}}],["schedling",{"_index":1652,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["schedule",{"_index":649,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"index.html":{}}}],["schedule.days",{"_index":983,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["schedule.months",{"_index":973,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["schedule.weeks",{"_index":980,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["scheduled",{"_index":654,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["scheduleunavailability",{"_index":1796,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["scheduleunavailability(@body",{"_index":1888,"title":{},"body":{"controllers/RentalController.html":{}}}],["scheduleunavailability(processed",{"_index":1818,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["scheduling",{"_index":678,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["scheduling.rentmaxduration",{"_index":2022,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["scheduling.rentminduration",{"_index":2020,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["scheduling.requirednotice",{"_index":2023,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["schema",{"_index":1300,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/JoiValidationPipe.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":2688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema/images.schema",{"_index":1291,"title":{},"body":{"modules/ImagesModule.html":{}}}],["schema/rental.schema",{"_index":1938,"title":{},"body":{"modules/RentalModule.html":{}}}],["schema/unavailability",{"_index":1940,"title":{},"body":{"modules/RentalModule.html":{}}}],["schema/validation/create",{"_index":1845,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["schema/validation/search",{"_index":1858,"title":{},"body":{"controllers/RentalController.html":{}}}],["sd",{"_index":2564,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["sdk",{"_index":2077,"title":{},"body":{"injectables/S3Provider.html":{},"dependencies.html":{}}}],["search",{"_index":1024,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"coverage.html":{},"index.html":{}}}],["searching",{"_index":991,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["searchrental",{"_index":1797,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["searchrental(@query",{"_index":1882,"title":{},"body":{"controllers/RentalController.html":{}}}],["searchrental(rental",{"_index":1980,"title":{},"body":{"injectables/RentalService.html":{}}}],["searchrental(searchrentaldto",{"_index":1824,"title":{},"body":{"controllers/RentalController.html":{}}}],["searchrentaldto",{"_index":1825,"title":{"classes/SearchRentalDto.html":{}},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchrentalvalidationschema",{"_index":1857,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchs",{"_index":1968,"title":{},"body":{"injectables/RentalService.html":{}}}],["seats",{"_index":1751,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["second",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["secret",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secret_access_key",{"_index":67,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["secret_key",{"_index":70,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["secretaccesskey",{"_index":2080,"title":{},"body":{"injectables/S3Provider.html":{}}}],["secretorkey",{"_index":1428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrets",{"_index":2695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secure",{"_index":1313,"title":{},"body":{"injectables/ImagesService.html":{}}}],["secureconnection",{"_index":2169,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["security",{"_index":1304,"title":{},"body":{"injectables/ImagesService.html":{}}}],["see",{"_index":1894,"title":{},"body":{"controllers/RentalController.html":{},"index.html":{}}}],["select",{"_index":852,"title":{},"body":{"injectables/EmailService.html":{}}}],["selected",{"_index":776,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"miscellaneous/variables.html":{}}}],["selective",{"_index":1310,"title":{},"body":{"injectables/ImagesService.html":{}}}],["sell",{"_index":2833,"title":{},"body":{"license.html":{}}}],["sells",{"_index":2793,"title":{},"body":{"index.html":{}}}],["semi",{"_index":1658,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["send",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{}}}],["sending",{"_index":1575,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["sendmail",{"_index":838,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendmail(mailoptions",{"_index":842,"title":{},"body":{"injectables/EmailService.html":{}}}],["sends",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["sense",{"_index":1587,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["sent",{"_index":931,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"classes/HttpErrorFilter.html":{}}}],["separate",{"_index":2103,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sequential",{"_index":2109,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["series",{"_index":1654,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["server",{"_index":60,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["serves",{"_index":2207,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["servestaticmodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":829,"title":{},"body":{"injectables/EmailService.html":{},"injectables/TestRentalService.html":{}}}],["service/auth.service",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["service/images.service",{"_index":1250,"title":{},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{}}}],["service/rental.service",{"_index":1837,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["service/user.service",{"_index":2239,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["session",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessions",{"_index":910,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["set",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{}}}],["several",{"_index":2928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":2839,"title":{},"body":{"license.html":{}}}],["share",{"_index":2532,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["show",{"_index":1763,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["side",{"_index":2764,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":400,"title":{},"body":{"modules/AuthModule.html":{}}}],["simpler",{"_index":730,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["simplified",{"_index":2208,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["simply",{"_index":909,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["single",{"_index":784,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["size",{"_index":1198,"title":{},"body":{"interfaces/ImageInterface.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["slightly",{"_index":1309,"title":{},"body":{"injectables/ImagesService.html":{}}}],["smaller",{"_index":2794,"title":{},"body":{"index.html":{}}}],["smtp",{"_index":2738,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":2820,"title":{},"body":{"license.html":{}}}],["soon",{"_index":2790,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":1115,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["sort",{"_index":2088,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sort((a",{"_index":2140,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted",{"_index":2100,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["sorted.ya",{"_index":2121,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted.ya[0].year",{"_index":2123,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted.yb",{"_index":2120,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sortedunavailabilitydto",{"_index":2114,"title":{"interfaces/SortedUnavailabilityDto.html":{}},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"coverage.html":{}}}],["sortunavailabilitypipe",{"_index":1778,"title":{"injectables/SortUnavailabilityPipe.html":{}},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{},"overview.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["south",{"_index":1048,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["spaces",{"_index":1056,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["spans",{"_index":2149,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["spec",{"_index":2336,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["specific",{"_index":760,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"classes/UnavailabilityDto.html":{}}}],["specifications",{"_index":1747,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["specified",{"_index":1831,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{}}}],["specs",{"_index":679,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":786,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["src/.../const.ts",{"_index":2753,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../constant.ts",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":2889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.provider.ts",{"_index":2890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.schema.ts",{"_index":2891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../military",{"_index":2878,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../rental.schema.ts",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../search",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../secrets.ts",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../to",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unavailability",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":263,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:7",{"_index":265,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/constant.ts",{"_index":2633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controller/auth.controller.ts",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controller/auth.controller.ts:26",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:40",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:52",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:61",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:70",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/dto/change",{"_index":589,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/check",{"_index":597,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"coverage.html":{}}}],["src/auth/dto/extract",{"_index":923,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{},"coverage.html":{}}}],["src/auth/dto/forgot",{"_index":928,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/jwt",{"_index":620,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"classes/JwtPayloadDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/auth/dto/login",{"_index":1533,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/reset",{"_index":2061,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/user",{"_index":2273,"title":{},"body":{"classes/UserPropertyDto.html":{},"coverage.html":{}}}],["src/auth/dto/verify",{"_index":2608,"title":{},"body":{"classes/VerifyNewPasswordDto.html":{},"coverage.html":{}}}],["src/auth/gaurds/jwt",{"_index":1402,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/gaurds/local",{"_index":1438,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/gaurds/logged",{"_index":1453,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts:124",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:148",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:22",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:39",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:57",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:76",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:95",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":1416,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:11",{"_index":1417,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:27",{"_index":1419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":1441,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:10",{"_index":1443,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:21",{"_index":1445,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/util/extract",{"_index":904,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"coverage.html":{}}}],["src/auth/util/verify",{"_index":2308,"title":{},"body":{"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["src/common/const.ts",{"_index":2650,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/error.filters.ts",{"_index":856,"title":{},"body":{"classes/ErrorFilter.html":{},"coverage.html":{}}}],["src/common/filters/error.filters.ts:20",{"_index":869,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["src/common/filters/http",{"_index":1141,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["src/common/interceptors/logging",{"_index":1484,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/pipes/joi",{"_index":1390,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/common/util/positive",{"_index":1562,"title":{},"body":{"injectables/PositiveNumber.html":{},"coverage.html":{}}}],["src/common/util/to",{"_index":2654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/util/typeof",{"_index":2174,"title":{},"body":{"classes/TypeOfValue.html":{},"coverage.html":{}}}],["src/config/configuration.module.ts",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["src/config/configuration.service",{"_index":1946,"title":{},"body":{"modules/RentalModule.html":{},"injectables/S3Provider.html":{}}}],["src/config/configuration.service.ts",{"_index":97,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/config/configuration.service.ts:12",{"_index":115,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:15",{"_index":117,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:18",{"_index":119,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:21",{"_index":121,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:24",{"_index":123,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:27",{"_index":125,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:30",{"_index":127,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:33",{"_index":129,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:36",{"_index":131,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:39",{"_index":133,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:42",{"_index":135,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:45",{"_index":137,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:48",{"_index":139,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:51",{"_index":141,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:9",{"_index":109,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/database/database.module.ts",{"_index":758,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/providers/database.provider.ts",{"_index":2656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/unavailability",{"_index":2657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/user",{"_index":2659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/email/email.service.ts",{"_index":828,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/email/email.service.ts:15",{"_index":847,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:27",{"_index":841,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:42",{"_index":843,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:8",{"_index":839,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/interface/mailoptions.interface.ts",{"_index":1536,"title":{},"body":{"interfaces/MailOptionsInterface.html":{},"coverage.html":{}}}],["src/email/interface/transporter.interface.ts",{"_index":2167,"title":{},"body":{"interfaces/TransporterInterface.html":{},"coverage.html":{}}}],["src/images/controller/images.controller.ts",{"_index":1214,"title":{},"body":{"controllers/ImagesController.html":{},"coverage.html":{}}}],["src/images/controller/images.controller.ts:107",{"_index":1229,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:116",{"_index":1227,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:26",{"_index":1248,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:42",{"_index":1245,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:58",{"_index":1241,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:68",{"_index":1238,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:78",{"_index":1236,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:88",{"_index":1234,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:98",{"_index":1231,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/dto/image",{"_index":1201,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts",{"_index":1186,"title":{},"body":{"classes/ImageDto.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts:5",{"_index":1190,"title":{},"body":{"classes/ImageDto.html":{}}}],["src/images/dto/image.dto.ts:6",{"_index":1191,"title":{},"body":{"classes/ImageDto.html":{}}}],["src/images/dto/processed",{"_index":1721,"title":{},"body":{"classes/ProcessedSaveDataDto.html":{},"coverage.html":{}}}],["src/images/images.module.ts",{"_index":1286,"title":{},"body":{"modules/ImagesModule.html":{}}}],["src/images/interface/modelinterface/image.interface.ts",{"_index":1195,"title":{},"body":{"interfaces/ImageInterface.html":{},"coverage.html":{}}}],["src/images/providers/s3.provider.ts",{"_index":2070,"title":{},"body":{"injectables/S3Provider.html":{},"coverage.html":{}}}],["src/images/providers/s3.provider.ts:14",{"_index":2075,"title":{},"body":{"injectables/S3Provider.html":{}}}],["src/images/providers/s3.provider.ts:8",{"_index":2074,"title":{},"body":{"injectables/S3Provider.html":{}}}],["src/images/schema/images.schema.ts",{"_index":2667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/images/service/images.service.ts",{"_index":1302,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/images/service/images.service.ts:106",{"_index":1323,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:126",{"_index":1321,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:145",{"_index":1325,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:22",{"_index":1319,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:33",{"_index":1340,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:42",{"_index":1341,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:64",{"_index":1334,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:86",{"_index":1332,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/util/create",{"_index":604,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"coverage.html":{}}}],["src/images/util/delete",{"_index":766,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"coverage.html":{}}}],["src/images/util/multer",{"_index":1553,"title":{},"body":{"injectables/MulterUploadUtil.html":{},"coverage.html":{}}}],["src/images/util/process",{"_index":1611,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2672,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/redis/service/redis.service",{"_index":1474,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["src/rental/alias/military",{"_index":2880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/rental/const.ts",{"_index":2754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/rental/controller/rental.controller.ts",{"_index":1787,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{}}}],["src/rental/controller/rental.controller.ts:107",{"_index":1834,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:117",{"_index":1815,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:48",{"_index":1802,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:65",{"_index":1829,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:75",{"_index":1810,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:85",{"_index":1807,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:97",{"_index":1822,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/dto/createrental/create",{"_index":666,"title":{},"body":{"classes/CreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/createrental/loc",{"_index":1432,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/createrental/raw",{"_index":1742,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/details/edit",{"_index":820,"title":{},"body":{"classes/EditDetailsDto.html":{},"coverage.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts",{"_index":1568,"title":{},"body":{"classes/PricingDto.html":{},"coverage.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:6",{"_index":1572,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:7",{"_index":1571,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:8",{"_index":1570,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/searchrental/given",{"_index":1130,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/process",{"_index":1603,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/raw",{"_index":1780,"title":{},"body":{"classes/RawSearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/request",{"_index":2049,"title":{},"body":{"classes/RequestCoordinatesDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/search",{"_index":2082,"title":{},"body":{"classes/SearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/remove/remove",{"_index":1783,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/create",{"_index":642,"title":{},"body":{"classes/CreateQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/processed",{"_index":1725,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/raw",{"_index":1777,"title":{},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/sorted",{"_index":2148,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/unavailability",{"_index":2199,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/validate",{"_index":2439,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts",{"_index":2178,"title":{},"body":{"classes/UnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:10",{"_index":2183,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:11",{"_index":2186,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:6",{"_index":2184,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:7",{"_index":2187,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:8",{"_index":2182,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:9",{"_index":2185,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/update/update",{"_index":2204,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/update/validate",{"_index":2560,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/validated",{"_index":2606,"title":{},"body":{"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/interface/modelinterface/rental/rental.interface.ts",{"_index":1911,"title":{},"body":{"interfaces/RentalInterface.html":{},"coverage.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts",{"_index":2192,"title":{},"body":{"classes/UnavailabilityInterface.html":{},"coverage.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:10",{"_index":2197,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:5",{"_index":2195,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:6",{"_index":2198,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:7",{"_index":2193,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:8",{"_index":2196,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/modelinterface/unavailability/unavailability.interface.ts:9",{"_index":2194,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/middleware/validate",{"_index":2566,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["src/rental/pipes/create",{"_index":715,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/geo",{"_index":986,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/given",{"_index":1078,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"coverage.html":{}}}],["src/rental/pipes/map",{"_index":1537,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/pricing.pipe.ts",{"_index":1574,"title":{},"body":{"injectables/PricingPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/pricing.pipe.ts:14",{"_index":1583,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/pricing.pipe.ts:35",{"_index":1580,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/pricing.pipe.ts:51",{"_index":1578,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/process",{"_index":1632,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/rental",{"_index":1897,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/request",{"_index":2053,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/sort",{"_index":2087,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/validate",{"_index":2334,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/rental.module.ts",{"_index":1917,"title":{},"body":{"modules/RentalModule.html":{}}}],["src/rental/rental.module.ts:71",{"_index":1928,"title":{},"body":{"modules/RentalModule.html":{}}}],["src/rental/schema/rental.schema.ts",{"_index":2685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/unavailability",{"_index":2687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/validation/create",{"_index":2689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/validation/search",{"_index":2691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/service/rental.service.ts",{"_index":1954,"title":{},"body":{"injectables/RentalService.html":{},"coverage.html":{}}}],["src/rental/service/rental.service.ts:113",{"_index":1977,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:134",{"_index":1982,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:151",{"_index":1975,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:178",{"_index":1967,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:19",{"_index":1960,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:216",{"_index":1985,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:31",{"_index":1962,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:44",{"_index":1981,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:65",{"_index":1974,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:92",{"_index":1971,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/test",{"_index":2156,"title":{},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["src/rental/utils/generate",{"_index":934,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"coverage.html":{}}}],["src/rental/utils/geo",{"_index":1038,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{}}}],["src/secrets/secrets.ts",{"_index":2694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/controller/user.controller.ts",{"_index":2214,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/controller/user.controller.ts:26",{"_index":2222,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:39",{"_index":2233,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:50",{"_index":2229,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:63",{"_index":2226,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/dto/create",{"_index":751,"title":{},"body":{"injectables/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/delete",{"_index":817,"title":{},"body":{"injectables/DeleteUserDto.html":{},"coverage.html":{}}}],["src/user/dto/find",{"_index":927,"title":{},"body":{"injectables/FindUserDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts",{"_index":1529,"title":{},"body":{"injectables/LoginDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts:7",{"_index":1531,"title":{},"body":{"injectables/LoginDto.html":{}}}],["src/user/dto/login.dto.ts:8",{"_index":1530,"title":{},"body":{"injectables/LoginDto.html":{}}}],["src/user/dto/update",{"_index":2213,"title":{},"body":{"injectables/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/interface/modelinterface/user.interface.ts",{"_index":2252,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/middleware/validate",{"_index":2396,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["src/user/pipes/bcrypt.pipe.ts",{"_index":569,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"coverage.html":{}}}],["src/user/pipes/bcrypt.pipe.ts:14",{"_index":574,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["src/user/schema/user.schema.ts",{"_index":2697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/schema/validation/create",{"_index":2698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/service/user.service.ts",{"_index":2279,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/service/user.service.ts:126",{"_index":2293,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:139",{"_index":2303,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:19",{"_index":2288,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:31",{"_index":2291,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:46",{"_index":2298,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:59",{"_index":2300,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:73",{"_index":2305,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:98",{"_index":2296,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.module.ts",{"_index":2258,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.module.ts:33",{"_index":2261,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/util/validate",{"_index":2423,"title":{},"body":{"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["stack",{"_index":894,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["start",{"_index":656,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2757,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2511,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["starttime",{"_index":948,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["starttime.diffnow().toobject().milliseconds",{"_index":1113,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["state",{"_index":705,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2630,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":882,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"controllers/RentalController.html":{}}}],["status(500",{"_index":1262,"title":{},"body":{"controllers/ImagesController.html":{}}}],["steet",{"_index":1758,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["stop",{"_index":87,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["storage",{"_index":622,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["store",{"_index":2722,"title":{},"body":{"dependencies.html":{}}}],["stores",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["storing",{"_index":1503,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["strategies/jwt.strategy",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":389,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1406,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["strategy**](http://www.passportjs.org/packages/passport",{"_index":1408,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{}}}],["stream",{"_index":1490,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["street",{"_index":1775,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["string",{"_index":144,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"classes/SearchRentalDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":699,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":850,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"license.html":{}}}],["sublicense",{"_index":2831,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/UserService.html":{}}}],["substantial",{"_index":2841,"title":{},"body":{"license.html":{}}}],["success",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["successful",{"_index":814,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["such",{"_index":2442,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["sumamry",{"_index":1324,"title":{},"body":{"injectables/ImagesService.html":{}}}],["summary",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":1423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super({usernamefield",{"_index":1447,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["support",{"_index":2867,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2868,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":896,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["symbols",{"_index":1057,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["t",{"_index":2958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":1923,"title":{},"body":{"modules/RentalModule.html":{}}}],["table",{"_index":2701,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2700,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":638,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["take",{"_index":1181,"title":{},"body":{"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{}}}],["tap",{"_index":1513,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tap(err",{"_index":1522,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["teehee",{"_index":888,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["temp",{"_index":1617,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["temp.bucket",{"_index":1619,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.etag",{"_index":1621,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.key",{"_index":1620,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.location",{"_index":1623,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.size",{"_index":1622,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp1",{"_index":2586,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["temp2",{"_index":2587,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["termination",{"_index":1521,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":46,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["test.length",{"_index":2048,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["test1",{"_index":2038,"title":{},"body":{"injectables/RentalService.html":{}}}],["test1.length",{"_index":2046,"title":{},"body":{"injectables/RentalService.html":{}}}],["test2",{"_index":2040,"title":{},"body":{"injectables/RentalService.html":{}}}],["test2.length",{"_index":2047,"title":{},"body":{"injectables/RentalService.html":{}}}],["testable",{"_index":2763,"title":{},"body":{"index.html":{}}}],["testfile.ts",{"_index":2699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["testing",{"_index":2159,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["testrentalservice",{"_index":2155,"title":{"injectables/TestRentalService.html":{}},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["text",{"_index":851,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["they'll",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.addunavailabilityid(value",{"_index":1703,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.appconfig.access_key_id",{"_index":2079,"title":{},"body":{"injectables/S3Provider.html":{}}}],["this.appconfig.secret_access_key",{"_index":2081,"title":{},"body":{"injectables/S3Provider.html":{}}}],["this.authservice.changepassword(data",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.forgotpassword(data",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.user",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(req",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.resetpassword(data",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":1449,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.calculaterange(req.body.y1",{"_index":2603,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.checkdeadlist(request",{"_index":1483,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["this.checkforoverlap(processed",{"_index":2004,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.checkleapyear(start",{"_index":2555,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.configservice.get('app.access_key_id",{"_index":158,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.aws_s3_bucket_profile",{"_index":160,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.aws_s3_bucket_rentals",{"_index":159,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.cache_ttl",{"_index":156,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.geo_api_key",{"_index":146,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.geo_url",{"_index":147,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.jwt_exp_time",{"_index":151,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.local_db",{"_index":149,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.port",{"_index":153,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.redis_host",{"_index":154,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.redis_port",{"_index":155,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.remote_db",{"_index":148,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.secret_access_key",{"_index":157,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.secret_key",{"_index":150,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.converttodatetime(value.y1[0",{"_index":2499,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.converttodatetime(y1final)).daysinyear",{"_index":2506,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.createaddress(value",{"_index":1036,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.creategivennotice(starttime",{"_index":1124,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["this.createmulteruploadutil.create(req",{"_index":1372,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.createquery(createquery",{"_index":1720,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createquery(createquery1",{"_index":1717,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createquery(createquery2",{"_index":1719,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createrentalquery(rental",{"_index":1996,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.createupdatedata(raw",{"_index":750,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["this.createuserupdate(data",{"_index":2315,"title":{},"body":{"injectables/UserService.html":{}}}],["this.deletes3imagesutil.deletes3image(images",{"_index":1367,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.deletes3imagesutil.deletes3images(images",{"_index":1370,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.distilldto(value",{"_index":749,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["this.emailservice.createmailoptions(user.email",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.emailservice.sendmail(mailoptions",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.extractkeyvalueutil.extract(req",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.finduser({email",{"_index":2322,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateduration",{"_index":1905,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["this.generateduration.generaterentaldurationenum",{"_index":1906,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["this.geourlapiutil.getcoordinates",{"_index":1033,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["this.getcoordinates",{"_index":1007,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.getcoordinates(address",{"_index":1037,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.imagesmodel",{"_index":1374,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.deletemany",{"_index":1371,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.deleteone",{"_index":1368,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.find",{"_index":1362,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.findbyid(img_id",{"_index":1365,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesservice.deleteallimages(req.user",{"_index":1278,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.deleteimages(images",{"_index":1276,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.fileuploadandsave(req",{"_index":1259,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findprofileimages(req.user",{"_index":1271,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findrentalimages(null",{"_index":1267,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findrentalimages(params._id",{"_index":1269,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.saveimages",{"_index":1261,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.jwtservice.sign(payload",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logoutuser(req",{"_index":2317,"title":{},"body":{"injectables/UserService.html":{}}}],["this.makerequest",{"_index":1072,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["this.mappricingdto(value",{"_index":1602,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["this.multeruploadutil.upload(req",{"_index":1375,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.orderyears(sorted",{"_index":2145,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.positivenumber",{"_index":2345,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.citympg",{"_index":2359,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.hwympg",{"_index":2363,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.numdoors",{"_index":2389,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.numofseats",{"_index":2385,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.odometer",{"_index":2352,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.processrentaltime(starttime",{"_index":972,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["this.processsavedatautil.process(files",{"_index":1356,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.redisservice.get(key",{"_index":1476,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["this.redisservice.set(key",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.rentalmodel",{"_index":2164,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["this.rentalmodel(rental",{"_index":1994,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalmodel.find(query",{"_index":1997,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalmodel.findoneandupdate(filter",{"_index":2001,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalservice.createrental(rental",{"_index":1878,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.editdetails(editdetailsdto",{"_index":1887,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.editpricing(pricingdto",{"_index":1885,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.removeunavailability(data",{"_index":1893,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.scheduleunavailability(processed",{"_index":1889,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.searchrental(searchrentaldto",{"_index":1883,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.updateunavailability(data",{"_index":1891,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.s3",{"_index":623,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{}}}],["this.s3.deleteobject",{"_index":790,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["this.s3.deleteobjects(params",{"_index":810,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["this.s3provider.gets3",{"_index":616,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["this.saveimages",{"_index":1555,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["this.schema.validate(value",{"_index":1400,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["this.sort(value",{"_index":2144,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":855,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.typeofvalue",{"_index":2346,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.rentalid",{"_index":2347,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.citympg",{"_index":2358,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.color",{"_index":2381,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.description",{"_index":2372,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.fuel",{"_index":2366,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.gasgrade",{"_index":2369,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.hwympg",{"_index":2362,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.model",{"_index":2375,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.numdoors",{"_index":2388,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.numofseats",{"_index":2384,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.odometer",{"_index":2351,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.style",{"_index":2378,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.transmission",{"_index":2355,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(x",{"_index":2392,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.unavailability.deletemany",{"_index":2017,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.find",{"_index":2592,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.unavailability.find(y1query",{"_index":2039,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.find(y2query",{"_index":2041,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.insertmany(merged",{"_index":2011,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.insertmany(y1",{"_index":2013,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.updatemany",{"_index":2014,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.user.find",{"_index":2415,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.usermodel(user",{"_index":2310,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":2312,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findoneandupdate(filter",{"_index":2320,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(user",{"_index":2244,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(data",{"_index":2251,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduser(email",{"_index":2248,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduser(query",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduser({email",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduserbyresetpasswordtoken({token",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(update",{"_index":2246,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validate2years(tyearb",{"_index":2133,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.validatecrossover(value.y1",{"_index":2556,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatecrossyearcongruence(value.y1[0",{"_index":2557,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatedetails(value",{"_index":2395,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.validatedto(req.body",{"_index":2602,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.validatedto(value",{"_index":2438,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["this.validateeachunavailability(value.y1",{"_index":2553,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validateeachunavailability(value.y2",{"_index":2554,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validateemail(req.body",{"_index":2422,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateemailutil",{"_index":2414,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateemailutil.validateemail(check",{"_index":2417,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateexpectedunavailability(req.body",{"_index":2605,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.validateminnotice(currentdatetime",{"_index":2502,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatepricingdto(value",{"_index":1601,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["this.validaterelevance(value",{"_index":2551,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validaterequestedtime(starttime",{"_index":1123,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["this.verifynewpasswordutil.checktypos",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.checktypos({newpassword",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.verifymatch({newpassword",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.verifynewpasswordutil.verifynew",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.verifynew({newpassword",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["time",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["time.alias.ts",{"_index":2879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["time.dto",{"_index":961,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["time.dto.ts",{"_index":1604,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["time.dto.ts:6",{"_index":1609,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["time.dto.ts:7",{"_index":1610,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["time.dto.ts:8",{"_index":1608,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["times",{"_index":1092,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["timestamp",{"_index":1176,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":747,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["tls",{"_index":2170,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["toggle",{"_index":1896,"title":{},"body":{"controllers/RentalController.html":{}}}],["toitemindexes",{"_index":2474,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toitemindexes(unavailability",{"_index":2523,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["token",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["token.dto",{"_index":2307,"title":{},"body":{"injectables/UserService.html":{}}}],["token.dto.ts",{"_index":2068,"title":{},"body":{"injectables/ResetPasswordTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:7",{"_index":2069,"title":{},"body":{"injectables/ResetPasswordTokenDto.html":{}}}],["tokens",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokyo",{"_index":1542,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["tort",{"_index":2862,"title":{},"body":{"license.html":{}}}],["total",{"_index":2516,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["track",{"_index":1647,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["tranfer",{"_index":929,"title":{},"body":{"classes/ForgotPasswordDto.html":{}}}],["transer",{"_index":2062,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["transfer",{"_index":591,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/ExtractKeyValueUtilDto.html":{},"classes/JwtPayloadDto.html":{},"classes/LoginUserDto.html":{},"classes/UserPropertyDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["transform",{"_index":571,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["transform(value",{"_index":572,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["transformation",{"_index":1682,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["transforming",{"_index":2058,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["transmission",{"_index":693,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["transport",{"_index":2168,"title":{},"body":{"interfaces/TransporterInterface.html":{},"dependencies.html":{}}}],["transporter",{"_index":836,"title":{},"body":{"injectables/EmailService.html":{}}}],["transporterinterface",{"_index":2166,"title":{"interfaces/TransporterInterface.html":{}},"body":{"interfaces/TransporterInterface.html":{},"coverage.html":{}}}],["tree",{"_index":2581,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["true",{"_index":86,"title":{},"body":{"modules/AppConfigModule.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PositiveNumber.html":{},"injectables/RentalService.html":{},"classes/TypeOfValue.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["tuples",{"_index":2476,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["turrendas",{"_index":2795,"title":{},"body":{"index.html":{}}}],["twice",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["two",{"_index":2110,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["ty1",{"_index":1683,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty1.push",{"_index":1691,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty2",{"_index":1684,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty2.push",{"_index":1700,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["tyearb",{"_index":2128,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["tyearb.length",{"_index":2132,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["tyearb.sort((a",{"_index":2134,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["type",{"_index":112,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"classes/ImageUploadDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedSaveDataDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2876,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1593,"title":{},"body":{"injectables/PricingPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["typeofvalue",{"_index":2173,"title":{"classes/TypeOfValue.html":{}},"body":{"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["types/bcrypt",{"_index":2710,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":2712,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":2715,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2749,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typo",{"_index":599,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typo.dto",{"_index":2621,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["typo.dto.ts",{"_index":598,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"coverage.html":{}}}],["typo.dto.ts:5",{"_index":602,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typo.dto.ts:6",{"_index":601,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typos",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["u1",{"_index":2456,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.doy",{"_index":2490,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.isinleapyear",{"_index":2521,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.start",{"_index":2491,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.year",{"_index":2488,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unathi2020",{"_index":846,"title":{},"body":{"injectables/EmailService.html":{}}}],["unauthorizedexception('invalid",{"_index":1451,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unavailability",{"_index":650,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unavailability')@usepipes(new",{"_index":1813,"title":{},"body":{"controllers/RentalController.html":{}}}],["unavailability's",{"_index":2457,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.dto",{"_index":664,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.dto.ts",{"_index":1726,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["unavailability.dto.ts:10",{"_index":1733,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.dto.ts:11",{"_index":1734,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:12",{"_index":1732,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:16",{"_index":2562,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:17",{"_index":2561,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:18",{"_index":2563,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:6",{"_index":1786,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:7",{"_index":1779,"title":{},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:8",{"_index":2211,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.dto.ts:9",{"_index":2210,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.middleware",{"_index":1945,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailability.middleware.ts",{"_index":2567,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["unavailability.middleware.ts:11",{"_index":2572,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:144",{"_index":2573,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:22",{"_index":2576,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:47",{"_index":2582,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:69",{"_index":2580,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.pipe",{"_index":1865,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["unavailability.pipe.ts",{"_index":1633,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["unavailability.pipe.ts:12",{"_index":2436,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:121",{"_index":1643,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:122",{"_index":2453,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:133",{"_index":2472,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:16",{"_index":2104,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:184",{"_index":2470,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:19",{"_index":1660,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:210",{"_index":2451,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:24",{"_index":2435,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:28",{"_index":2458,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:30",{"_index":2108,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:40",{"_index":2099,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:47",{"_index":2479,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:57",{"_index":1650,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:58",{"_index":2102,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:60",{"_index":2480,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:79",{"_index":2463,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:85",{"_index":2097,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability[0",{"_index":2522,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability[index",{"_index":2538,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability[index].doy",{"_index":2537,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability_model",{"_index":2938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unavailabilitydto",{"_index":659,"title":{"classes/UnavailabilityDto.html":{}},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["unavailabilitydtos",{"_index":2092,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailabilityid",{"_index":734,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityinterface",{"_index":1990,"title":{"classes/UnavailabilityInterface.html":{}},"body":{"injectables/RentalService.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["unavailabilitymodel",{"_index":1989,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityprovider",{"_index":1941,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityquerydto",{"_index":1664,"title":{"classes/UnavailabilityQueryDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["unavailabilityschema",{"_index":1939,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityschema.index({rentalid",{"_index":1950,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailabilityschema.index({unavailabilityid",{"_index":1951,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailable",{"_index":1648,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavilable",{"_index":2179,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["undefined",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailUtil.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2801,"title":{},"body":{"index.html":{}}}],["underlying",{"_index":1158,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["unique",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":2158,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["unknown",{"_index":81,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["unschedule",{"_index":2433,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unvalidated",{"_index":2452,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["up",{"_index":2180,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["update",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"index.html":{}}}],["update.email",{"_index":2331,"title":{},"body":{"injectables/UserService.html":{}}}],["update.username",{"_index":2330,"title":{},"body":{"injectables/UserService.html":{}}}],["updated",{"_index":2583,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["updateprofile",{"_index":2218,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile(@body",{"_index":2245,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile(update",{"_index":2230,"title":{},"body":{"controllers/UserController.html":{}}}],["updater",{"_index":716,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updater1",{"_index":745,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["updater2",{"_index":746,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["updates",{"_index":2234,"title":{},"body":{"controllers/UserController.html":{}}}],["updateunavailability",{"_index":1791,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["updateunavailability(@body",{"_index":1890,"title":{},"body":{"controllers/RentalController.html":{}}}],["updateunavailability(data",{"_index":1832,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["updateunavailabilitydatadto",{"_index":718,"title":{"classes/UpdateUnavailabilityDataDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{}}}],["updateunavailabilitydto",{"_index":725,"title":{"classes/UpdateUnavailabilityDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":2286,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(data",{"_index":2304,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto",{"_index":2212,"title":{"injectables/UpdateUserDto.html":{}},"body":{"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":1739,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["upload",{"_index":614,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"index.html":{}}}],["upload.dto.ts",{"_index":1207,"title":{},"body":{"classes/ImageUploadDto.html":{},"coverage.html":{}}}],["upload.dto.ts:5",{"_index":1210,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["upload.dto.ts:6",{"_index":1211,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["upload.dto.ts:7",{"_index":1209,"title":{},"body":{"classes/ImageUploadDto.html":{}}}],["upload.util",{"_index":1293,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["upload.util.ts",{"_index":606,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/MulterUploadUtil.html":{},"coverage.html":{}}}],["upload.util.ts:10",{"_index":611,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["upload.util.ts:12",{"_index":617,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["upload.util.ts:19",{"_index":613,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/MulterUploadUtil.html":{}}}],["uploaded",{"_index":1343,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"index.html":{}}}],["uploader",{"_index":1554,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["uploading",{"_index":1208,"title":{},"body":{"classes/ImageUploadDto.html":{},"injectables/ImagesService.html":{}}}],["uploadprofileimage",{"_index":1223,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadprofileimage(@req",{"_index":1265,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadprofileimage(req",{"_index":1243,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages",{"_index":1224,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages(@req",{"_index":1258,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages(req",{"_index":1247,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploads",{"_index":1330,"title":{},"body":{"injectables/ImagesService.html":{}}}],["upon",{"_index":1518,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["uri",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":879,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":575,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"license.html":{}}}],["use(req",{"_index":2403,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["useclass",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":834,"title":{},"body":{"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/ImagesService.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"modules/UserModule.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":184,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@redirect('http://localhost:3000/auth/login')@post('logout",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@get('find",{"_index":2228,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@get('profile",{"_index":170,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@post('change",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@post('update",{"_index":2231,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@redirect('http://localhost:3000/auth/login",{"_index":2224,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(loggedoutgaurd",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":1835,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":1873,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/FindUserDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"modules/RentalModule.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserPropertyDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user')@redirect('http://localhost:3000/auth/login",{"_index":2232,"title":{},"body":{"controllers/UserController.html":{}}}],["user's",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/EmailService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user._doc",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller.createuser",{"_index":2398,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["user.dto",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["user.dto.ts",{"_index":752,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":1535,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:6",{"_index":1534,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:7",{"_index":756,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"injectables/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":754,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/UpdateUserDto.html":{}}}],["user.dto.ts:9",{"_index":755,"title":{},"body":{"injectables/CreateUserDto.html":{}}}],["user.email",{"_index":2314,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email}/profile/${split[1",{"_index":796,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user.email}/rentals/${split[1",{"_index":788,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user.password",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.remove",{"_index":2326,"title":{},"body":{"injectables/UserService.html":{}}}],["user.resetpasswordexpires",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.resetpasswordtoken",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.save",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.setexpirationdate",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.setresettoken",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":1363,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["user/controller/user.controller",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["user/dto/find",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/interface/modelinterface/user.interface",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/schema/user.schema",{"_index":2263,"title":{},"body":{"modules/UserModule.html":{}}}],["user/service/user.service",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.module",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user_id",{"_index":1199,"title":{},"body":{"interfaces/ImageInterface.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["user_model",{"_index":2939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":204,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":1335,"title":{},"body":{"injectables/ImagesService.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{}}}],["userinterface",{"_index":453,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["usermodel",{"_index":2289,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodule",{"_index":196,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUserDto.html":{},"classes/JwtPayloadDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserPropertyDto.html":{},"miscellaneous/variables.html":{}}}],["userpropertydto",{"_index":449,"title":{"classes/UserPropertyDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/UserPropertyDto.html":{},"coverage.html":{}}}],["userprovider",{"_index":2266,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":835,"title":{},"body":{"injectables/EmailService.html":{},"controllers/UserController.html":{},"index.html":{}}}],["userschema",{"_index":2262,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":411,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,...userprovider",{"_index":2270,"title":{},"body":{"modules/UserModule.html":{}}}],["userservice.finduser",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["uses",{"_index":830,"title":{},"body":{"injectables/EmailService.html":{},"injectables/GivenNoticePipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["using",{"_index":951,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ValidateEmailUtil.html":{}}}],["usually",{"_index":2440,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["util",{"_index":2475,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["util.dto",{"_index":916,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["util.dto.ts",{"_index":924,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{},"coverage.html":{}}}],["util.dto.ts:5",{"_index":925,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{}}}],["util.dto.ts:6",{"_index":926,"title":{},"body":{"classes/ExtractKeyValueUtilDto.html":{}}}],["util/create",{"_index":1292,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/delete",{"_index":1294,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/extract",{"_index":391,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["util/multer",{"_index":1296,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/process",{"_index":1297,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/validate",{"_index":2411,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["util/verify",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["utility",{"_index":768,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["utils/generate",{"_index":1849,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{}}}],["utils/geo",{"_index":1021,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["uuid",{"_index":1649,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["v1/rental/update",{"_index":2601,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["v1/user/create",{"_index":2421,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["v7",{"_index":1060,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["val",{"_index":2130,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["val.year",{"_index":2131,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["valdiate",{"_index":2409,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["valid",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["valid('development",{"_index":44,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validate",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["validate(email",{"_index":1444,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate2years",{"_index":2095,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["validatecrossover",{"_index":2446,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validatecrossyearcongruence",{"_index":2447,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validated",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatedetails",{"_index":2338,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["validatedto",{"_index":2434,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["validatedunavailabilitydto",{"_index":1642,"title":{"classes/ValidatedUnavailabilityDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["validateeachunavailability",{"_index":2448,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateeditdetailspipe",{"_index":1806,"title":{"injectables/ValidateEditDetailsPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validateemail",{"_index":2400,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{}}}],["validateemail(check",{"_index":2427,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["validateemail(value",{"_index":2406,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["validateemailmiddleware",{"_index":2260,"title":{"injectables/ValidateEmailMiddleware.html":{}},"body":{"modules/UserModule.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["validateemailutil",{"_index":2399,"title":{"injectables/ValidateEmailUtil.html":{}},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["validateexpectedunavailability",{"_index":2570,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["validateminnotice",{"_index":2449,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validatepricingdto",{"_index":1577,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["validaterelevance",{"_index":2450,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateremoveunavailabilitypipe",{"_index":1814,"title":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validaterequestedtime",{"_index":1094,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["validaterequestedtime(starttime",{"_index":1102,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["validates",{"_index":1929,"title":{},"body":{"modules/RentalModule.html":{}}}],["validatescheduleunavailabilitydto",{"_index":2098,"title":{"classes/ValidateScheduleUnavailabilityDto.html":{}},"body":{"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["validatesequential",{"_index":2096,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["validateunavailability",{"_index":2461,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateunavailabilitypipe",{"_index":1866,"title":{"injectables/ValidateUnavailabilityPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validateunavailabilitypipe())@usepipes(new",{"_index":1821,"title":{},"body":{"controllers/RentalController.html":{}}}],["validateupdateunavailability",{"_index":1920,"title":{},"body":{"modules/RentalModule.html":{}}}],["validateupdateunavailabilitydto",{"_index":723,"title":{"classes/ValidateUpdateUnavailabilityDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["validateupdateunavailabilitymiddleware",{"_index":1789,"title":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["validateuser",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validateuser(email",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":78,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["validation.pipe",{"_index":1843,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["validation.pipe.ts",{"_index":1391,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:13",{"_index":1396,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation.pipe.ts:16",{"_index":1397,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation.schema",{"_index":1846,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["validation.schema.ts",{"_index":2690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":74,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validationschema",{"_index":39,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/JoiValidationPipe.html":{}}}],["value",{"_index":404,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"classes/ExtractKeyValueUtilDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value.address",{"_index":1125,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.coords",{"_index":1550,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.email",{"_index":2416,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["value.features",{"_index":1129,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["value.features.length",{"_index":2391,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.givennotice",{"_index":1909,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.location.city",{"_index":1028,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.location.street",{"_index":1027,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.location.zip",{"_index":1029,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.newend",{"_index":741,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.newstart",{"_index":739,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.newtitle",{"_index":743,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.password",{"_index":584,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["value.price",{"_index":1128,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.rentalduration",{"_index":2060,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["value.rentalendtime",{"_index":1908,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["value.rentalid",{"_index":737,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.rentalstarttime",{"_index":1907,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["value.specs",{"_index":2349,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.citympg",{"_index":2357,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.color",{"_index":2380,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.description",{"_index":2371,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.fuel",{"_index":2365,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.gasgrade",{"_index":2368,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.hwympg",{"_index":2361,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.model",{"_index":2374,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.numdoors",{"_index":2387,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.numofseats",{"_index":2383,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.odometer",{"_index":2350,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.style",{"_index":2377,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.transmission",{"_index":2354,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.ts",{"_index":2175,"title":{},"body":{"classes/TypeOfValue.html":{},"coverage.html":{}}}],["value.ts:5",{"_index":2177,"title":{},"body":{"classes/TypeOfValue.html":{}}}],["value.unavailability",{"_index":2138,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability.filter",{"_index":2129,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability.sort((a",{"_index":2143,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability[0].year",{"_index":2126,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailabilityid",{"_index":735,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.util",{"_index":393,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["value.util.ts",{"_index":905,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"coverage.html":{}}}],["value.util.ts:12",{"_index":913,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["value.util.ts:9",{"_index":911,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["value.value.features",{"_index":1546,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.listed",{"_index":1552,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.photos",{"_index":1551,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.pricing",{"_index":1548,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.registration",{"_index":1545,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.scheduling",{"_index":1547,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.specs",{"_index":1544,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.y1",{"_index":2559,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["value.y1.ed",{"_index":2594,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y1.map(x",{"_index":1689,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["value.y1.sd",{"_index":2593,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2",{"_index":1688,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["value.y2.ed",{"_index":2599,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2.map(x",{"_index":1698,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["value.y2.sd",{"_index":2598,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2[0",{"_index":2558,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["values",{"_index":1581,"title":{},"body":{"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["variable",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":84,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"miscellaneous/variables.html":{}}}],["vehicle",{"_index":1239,"title":{},"body":{"controllers/ImagesController.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"index.html":{}}}],["vehicle.address",{"_index":1026,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["vehicles",{"_index":2770,"title":{},"body":{"index.html":{}}}],["verified",{"_index":582,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["verifies",{"_index":2465,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["verify",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["verifying",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"classes/CheckPasswordTypoDto.html":{}}}],["verifymatch",{"_index":2611,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifymatch(data",{"_index":2615,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynew",{"_index":2612,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynew(data",{"_index":2617,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynewpassworddto",{"_index":2607,"title":{"classes/VerifyNewPasswordDto.html":{}},"body":{"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["verifynewpasswordutil",{"_index":376,"title":{"injectables/VerifyNewPasswordUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"overview.html":{}}}],["verifynewpasswordutil.verifymatch",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1728,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"index.html":{}}}],["veryify",{"_index":648,"title":{},"body":{"classes/CreateQueryDto.html":{}}}],["vin",{"_index":703,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["violate",{"_index":1585,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["void",{"_index":1162,"title":{},"body":{"classes/HttpErrorFilter.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/ValidateEmailUtil.html":{}}}],["warranties",{"_index":2847,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2843,"title":{},"body":{"license.html":{}}}],["web",{"_index":2769,"title":{},"body":{"index.html":{}}}],["wed",{"_index":1979,"title":{},"body":{"injectables/RentalService.html":{}}}],["week",{"_index":982,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["weekly",{"_index":711,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["weeks",{"_index":955,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"miscellaneous/enumerations.html":{}}}],["well",{"_index":762,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{}}}],["west",{"_index":1047,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["when('fuel",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":2860,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":2803,"title":{},"body":{"index.html":{}}}],["within",{"_index":1955,"title":{},"body":{"injectables/RentalService.html":{}}}],["without",{"_index":2822,"title":{},"body":{"license.html":{}}}],["working",{"_index":1918,"title":{},"body":{"modules/RentalModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["world",{"_index":267,"title":{},"body":{"injectables/AppService.html":{}}}],["wrapper",{"_index":1089,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["wraps",{"_index":1488,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["written",{"_index":2765,"title":{},"body":{"index.html":{}}}],["x",{"_index":2117,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["x.doy",{"_index":1694,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.end",{"_index":1696,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.rentalid",{"_index":1692,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.start",{"_index":1695,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.title",{"_index":1697,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.year",{"_index":1693,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["y1",{"_index":1690,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["y1's",{"_index":2503,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.concat(y2",{"_index":2009,"title":{},"body":{"injectables/RentalService.html":{}}}],["y1.ed",{"_index":2589,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y1.end",{"_index":2547,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.rentalid",{"_index":2543,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.sd",{"_index":2588,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y1.start",{"_index":2545,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.title",{"_index":2549,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1[0",{"_index":1705,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].end",{"_index":1709,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].start",{"_index":1708,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].year",{"_index":1707,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[y1.length",{"_index":1706,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final",{"_index":2504,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.doy",{"_index":2508,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.doy}/${y1final.year",{"_index":2510,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.year",{"_index":2509,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1query",{"_index":1716,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{}}}],["y2",{"_index":1699,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["y2.ed",{"_index":2591,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y2.end",{"_index":2548,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.rentalid",{"_index":2544,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.sd",{"_index":2590,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y2.start",{"_index":2546,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.title",{"_index":2550,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0",{"_index":1711,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0].doy",{"_index":2512,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0].end",{"_index":1715,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[0].start",{"_index":1714,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[0].year",{"_index":1713,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[y2.length",{"_index":1712,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2query",{"_index":1718,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{}}}],["ya",{"_index":2141,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{}}}],["yaer",{"_index":2579,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["yb",{"_index":2142,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{}}}],["year",{"_index":657,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["year's",{"_index":2090,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["year(s",{"_index":2127,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["year**](https://www.timeanddate.com/date/leapyear.html",{"_index":2520,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["year.end",{"_index":1678,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.max.doy",{"_index":1673,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.min.doy",{"_index":1675,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.min.rentalid",{"_index":1669,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.start",{"_index":1677,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.year",{"_index":1670,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["yeara",{"_index":2137,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["yearb",{"_index":2106,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["yearb[0].year",{"_index":2118,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["years",{"_index":1687,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["zip",{"_index":1760,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_providers\n\n\n\ncluster_AppConfigModule_exports\n\n\n\n\nAppConfigService \n\nAppConfigService \n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nAppConfigService  -->\n\nAppConfigModule->AppConfigService \n\n\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAppConfigModule -->\n\nAppConfigService->AppConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/configuration.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: import and provide app configuration related classes\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi = require(\"@hapi/joi\");\nimport { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport configuration from \"./configuration\";\nimport { AppConfigService } from \"./configuration.service\";\n/**\n * **summary**: import and provide app configuration related classes\n */\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            load: [configuration],\n            validationSchema: Joi.object({\n                // GENERAL\n                NODE_ENV: Joi.string()\n                  .valid('development', 'production', 'test')\n                  .default('development'),\n                PORT: Joi.number().default(3000),\n                // GEO LOCATION API\n                GEO_API_KEY: Joi.string().required(),\n                GEO_URL: Joi.string().required(),\n                // DATABASE\n                REMOTE_DB: Joi.string(),\n                LOCAL_DB: Joi.string(),\n                // REDIS SERVER\n                REDIS_HOST: Joi.string().required(),\n                REDIS_PORT: Joi.string().required(),\n                CACHE_TTL: Joi.string().required(),\n                // AWS API ACCESS\n                ACCESS_KEY_ID: Joi.string().required(),\n                SECRET_ACCESS_KEY: Joi.string().required(),\n                // JWT AUTHORIZATION\n                SECRET_KEY: Joi.string().required(),\n                JWT_EXP_TIME: Joi.string().required(),\n                AWS_S3_BUCKET_RENTALS: Joi.string().required(),\n                AWS_S3_BUCKET_PROFILE: Joi.string().required(),\n            }),\n            validationOptions: {\n                allowUnkown: false, // enforce validation, don't allow unknown keys in the env variables\n                abortEarly: true, // stop validation on first error\n            }\n        })\n    ],\n    providers: [ConfigService, AppConfigService],\n    exports: [ConfigService, AppConfigService]\n})\nexport class AppConfigModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: this class provides the configservice 'getter' functionality to get variables from the environment\nthat are registered to this custom configuration module\n\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    geo_api_key\n                                \n                                \n                                    geo_url\n                                \n                                \n                                    remote_db\n                                \n                                \n                                    local_db\n                                \n                                \n                                    secret_key\n                                \n                                \n                                    jwt_exp_time\n                                \n                                \n                                    port\n                                \n                                \n                                    redis_host\n                                \n                                \n                                    redis_port\n                                \n                                \n                                    cache_ttl\n                                \n                                \n                                    secret_access_key\n                                \n                                \n                                    access_key_id\n                                \n                                \n                                    aws_s3_bucket_rentals\n                                \n                                \n                                    aws_s3_bucket_profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        geo_api_key\n                    \n                \n\n                \n                    \n                        getgeo_api_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        geo_url\n                    \n                \n\n                \n                    \n                        getgeo_url()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:15\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        remote_db\n                    \n                \n\n                \n                    \n                        getremote_db()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        local_db\n                    \n                \n\n                \n                    \n                        getlocal_db()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secret_key\n                    \n                \n\n                \n                    \n                        getsecret_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jwt_exp_time\n                    \n                \n\n                \n                    \n                        getjwt_exp_time()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        port\n                    \n                \n\n                \n                    \n                        getport()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        redis_host\n                    \n                \n\n                \n                    \n                        getredis_host()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        redis_port\n                    \n                \n\n                \n                    \n                        getredis_port()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        cache_ttl\n                    \n                \n\n                \n                    \n                        getcache_ttl()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secret_access_key\n                    \n                \n\n                \n                    \n                        getsecret_access_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        access_key_id\n                    \n                \n\n                \n                    \n                        getaccess_key_id()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        aws_s3_bucket_rentals\n                    \n                \n\n                \n                    \n                        getaws_s3_bucket_rentals()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        aws_s3_bucket_profile\n                    \n                \n\n                \n                    \n                        getaws_s3_bucket_profile()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\n/**\n * **summary**: this class provides the configservice 'getter' functionality to get variables from the environment\n * that are registered to this custom configuration module\n */\n@Injectable()\nexport class AppConfigService {\n    constructor(private readonly configService: ConfigService) {}\n\n    get geo_api_key(): string {\n        return this.configService.get('app.geo_api_key');\n    }\n    get geo_url(): string {\n        return this.configService.get('app.geo_url');\n    }\n    get remote_db(): string {\n        return this.configService.get('app.remote_db');\n    }\n    get local_db(): string {\n        return this.configService.get('app.local_db');\n    }\n    get secret_key(): string {\n        return this.configService.get('app.secret_key');\n    }\n    get jwt_exp_time(): string {\n        return this.configService.get('app.jwt_exp_time');\n    }\n    get port(): number { \n        return this.configService.get('app.port');\n    }\n    get redis_host(): string { \n        return this.configService.get('app.redis_host');\n    }\n    get redis_port(): string { \n        return this.configService.get('app.redis_port');\n    }\n    get cache_ttl(): string { \n        return this.configService.get('app.cache_ttl');\n    }\n   get secret_access_key(): string {\n       return this.configService.get('app.secret_access_key');\n   }\n   get access_key_id(): string {\n       return this.configService.get('app.access_key_id');\n   }\n   get aws_s3_bucket_rentals(): string {\n       return this.configService.get('app.aws_s3_bucket_rentals');\n   }\n   get aws_s3_bucket_profile(): string {\n       return this.configService.get('app.aws_s3_bucket_profile');\n   }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                summary: does not provide any real functionality for the app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Post, Request, Req, HttpCode } from '@nestjs/common';\nimport { JwtAuthGuard } from './auth/gaurds/jwt-auth.guard';\nimport { LoggedOutGaurd } from './auth/gaurds/logged-out.guard';\n/**\n * **summary**: does not provide any real functionality for the app\n */\n@Controller()\nexport class AppController {\n\n  @UseGuards(JwtAuthGuard)\n  @UseGuards(LoggedOutGaurd)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\nAppModule -->\n\nAppModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nRentalModule\n\nRentalModule\n\nAppModule -->\n\nRentalModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: register every module in the app and their dependencies. provide the HttpFilter, LoggingInterceptor, and the ErrorFilter for the application\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UserController\n                        \n                        \n                            RentalController\n                        \n                        \n                            ImagesController\n                        \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            AppModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ImagesModule\n                        \n                        \n                            RentalModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RentalModule } from './rental/rental.module';\nimport { UserModule } from './user/user.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RouterModule } from 'nest-router';\nimport { routes } from './common/routes';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { HttpErrorFilter } from './common/filters/http-error.filter';\nimport { ErrorFilter } from './common/filters/error.filters';\nimport { LoggingInterceptor } from './common/interceptors/logging-interceptor';\nimport { ImagesModule } from './images/images.module';\n// import { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { AuthModule } from './auth/auth.module';\nimport { UserController } from './user/controller/user.controller';\nimport { RentalController } from './rental/controller/rental.controller';\nimport { ImagesController } from './images/controller/images.controller';\nimport { AppConfigModule } from './config/configuration.module';\nimport { AppConfigService } from './config/configuration.service';\nimport { AuthController } from './auth/controller/auth.controller';\nimport { RedisModule } from './redis/redis.module';\n\n/**\n * **summary**: register every module in the app and their dependencies. provide the HttpFilter, LoggingInterceptor, and the ErrorFilter for the application\n */\n@Module({\n  imports: [\n    AppModule,\n    RentalModule,\n    AuthModule,\n    UserModule,\n    ImagesModule,\n    RouterModule.forRoutes(routes),\n    // parses the .env file, assign key/value pairs to process.env, stores results in configService\n    // can set alternative .env file path\n    AppConfigModule,\n    RedisModule,\n    MongooseModule.forRootAsync({\n      imports: [AppConfigModule],\n      useFactory: async (appConfigService: AppConfigService) => ({\n        uri: appConfigService.remote_db,\n      }),\n      inject: [AppConfigService],\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '../client/build'),\n    }),\n  ],\n  controllers: [AppController, UserController, RentalController, ImagesController, AuthController],\n  providers: [\n    AppService,\n    { provide: APP_FILTER, useClass: HttpErrorFilter },\n    { provide: APP_INTERCEPTOR, useClass: LoggingInterceptor },\n    { provide: APP_FILTER, useClass: ErrorFilter },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: does not provide any real functionality for the app\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n/**\n * **summary**: does not provide any real functionality for the app\n */\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n            \n                Description\n            \n            \n                summary: controller for handling the authentication and authorization of a registered user\n\nnote: some methods in this controller are protected by JwtAuthGuard and LoggedOutGuard, which verify a user is Authorized\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(req, data: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Post('change-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:52\n                \n            \n\n\n            \n                \n                    summary: change the password of a logged in and authorized user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request with the user JWT payload\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new password data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(data: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:61\n                \n            \n\n\n            \n                \n                    summary: request to reset a forgotten password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the email address to send the forgot-password email to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:26\n                \n            \n\n\n            \n                \n                    summary: authenticate and login a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Redirect('http://localhost:3000/auth/login')@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:40\n                \n            \n\n\n            \n                \n                    summary: logout a user by adding their JWT to a Redis 'dead-list' that will end the user's authorized session prior to the JWT expiration time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request containing the user's JWT payload to be added to the logged-out 'dead-list' in the Redis cache\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(data: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:70\n                \n            \n\n\n            \n                \n                    summary: resets the user's password with the data submitted from the email redirect\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data submitted by the user to the reset-password email form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, HttpCode, Post, UseGuards, Request, Body, Req, Redirect, Res } from \"@nestjs/common\";\nimport { Response } from \"express\";\nimport { ChangePasswordDto } from \"../dto/change-password.dto\";\nimport { ForgotPasswordDto } from \"../dto/forgot-password.dto\";\nimport { ResetPasswordDto } from \"../dto/reset-password.dto\";\nimport { JwtAuthGuard } from \"../gaurds/jwt-auth.guard\";\nimport { LocalAuthGuard } from \"../gaurds/local-auth.guard\";\nimport { LoggedOutGaurd } from \"../gaurds/logged-out.guard\";\nimport { AuthService } from \"../service/auth.service\";\n/**\n * **summary**: controller for handling the authentication and authorization of a registered user\n * - note: some methods in this controller are protected by JwtAuthGuard and LoggedOutGuard, which verify a user is Authorized\n */\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) { }\n\n    /**\n     * **summary**: authenticate and login a user\n     * @param email the user's email\n     * @param password the user's submitted password to be validated\n     */\n    @HttpCode(200)\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Request() req, @Res() res: Response) {\n        const cookie = await this.authService.login(req.user);\n        res.setHeader('Set-Cookie', cookie);\n        req.user._doc.password = undefined;\n        return res.send(req.user._doc);\n    }\n\n    /**\n     * **summary**: logout a user by adding their JWT to a Redis 'dead-list' that will end the user's authorized session prior to the JWT expiration time\n     * @param req the request containing the user's JWT payload to be added to the logged-out 'dead-list' in the Redis cache\n     */\n    @UseGuards(JwtAuthGuard)\n    @Redirect('http://localhost:3000/auth/login')\n    @Post('logout')\n    async logout(@Request() req) {\n        return await this.authService.logout(req);\n    }\n\n    /**\n     * **summary**: change the password of a logged in and authorized user\n     * @param req the request with the user JWT payload\n     * @param data the new password data\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Post('change-password')\n    async changePassword(@Req() req, @Body() data: ChangePasswordDto) {\n        return this.authService.changePassword(data, req)\n    }\n\n    /**\n     * **summary**: request to reset a forgotten password\n     * @param data the email address to send the forgot-password email to\n     */\n    @Post('forgot-password')\n    async forgotPassword(@Body() data: ForgotPasswordDto) {\n        return this.authService.forgotPassword(data)\n    }\n\n    /**\n     * **summary**: resets the user's password with the data submitted from the email redirect\n     * @param data the data submitted by the user to the reset-password email form\n     */\n    @Post('reset-password')\n    async resetPassword(@Body() data: ResetPasswordDto) {\n        return await this.authService.resetPassword(data)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAppConfigModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nAuthModule->EmailService \n\n\n\n\n\nExtractKeyValueUtil \n\nExtractKeyValueUtil \n\nExtractKeyValueUtil  -->\n\nAuthModule->ExtractKeyValueUtil \n\n\n\n\n\nLoggedOutGaurd \n\nLoggedOutGaurd \n\nLoggedOutGaurd  -->\n\nAuthModule->LoggedOutGaurd \n\n\n\n\n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil  -->\n\nAuthModule->VerifyNewPasswordUtil \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAuthModule -->\n\nAppConfigService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nAuthModule -->\n\nExtractKeyValueUtil->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nAuthModule -->\n\nVerifyNewPasswordUtil->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: This module provides all of the functionality for authenticating and authorizing a user\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            LoggedOutGaurd\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserModule } from '../user/user.module';\nimport { AuthService } from './service/auth.service';\nimport { jwtConstants } from './constant';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { AuthController } from './controller/auth.controller';\nimport { RedisModule } from '../redis/redis.module';\nimport { LoggedOutGaurd } from './gaurds/logged-out.guard';\nimport { ExtractKeyValueUtil } from './util/extract-key-value.util';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { VerifyNewPasswordUtil } from './util/verify-new-password.util';\nimport { EmailService } from '../email/email.service';\nimport { AppConfigService } from '../config/configuration.service';\n/**\n * **summary**: This module provides all of the functionality for authenticating and authorizing a user\n */\n@Module({\n  imports: [\n    AppConfigModule,\n    ConfigModule,\n    UserModule,\n    PassportModule,\n    RedisModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: {expiresIn: `${jwtConstants.jwt_exp_time}s`}, // add this expiresIn value to the `jwtConstants` object\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy, LoggedOutGaurd, ExtractKeyValueUtil, VerifyNewPasswordUtil, EmailService, AppConfigService],\n  exports: [AuthService, LoggedOutGaurd, ExtractKeyValueUtil, VerifyNewPasswordUtil, EmailService],\n  controllers:[AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/service/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: provide the functionality to authenticate and authorize a user\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, redisService: RedisService, extractKeyValueUtil: ExtractKeyValueUtil, verifyNewPasswordUtil: VerifyNewPasswordUtil, emailService: EmailService, appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/service/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractKeyValueUtil\n                                                  \n                                                        \n                                                                        ExtractKeyValueUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyNewPasswordUtil\n                                                  \n                                                        \n                                                                        VerifyNewPasswordUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(data: ChangePasswordDto, req)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:95\n                \n            \n\n\n            \n                \n                    summary: change the logged in user's password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(data: ForgotPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:124\n                \n            \n\n\n            \n                \n                    summary: send an email to a valid user email address to request resetting their forgotten password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:57\n                \n            \n\n\n            \n                \n                    summary: return a JWT inside of a Cookie, which may only be interacted with by Http and not Javascript, to the now authenticated user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user logging into the application\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:76\n                \n            \n\n\n            \n                \n                    summary: set the user's JWT in the redis 'dead-list' to log the user out prior to the JWT expiration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(data: ResetPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:148\n                \n            \n\n\n            \n                \n                    summary: reset a user's password with the information submitted by a forgot-and-reset email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:39\n                \n            \n\n\n            \n                \n                    summary:  find the user in the database and authenticate their access to the application by verifying the present user credentials in the database\n\nnote: depends on the userService.findUser() and verifyNewPasswordUtil.verifyMatch() methods\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user email\n\n                                    \n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../../user/service/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { FindUserDto } from '../../user/dto/find-user.dto';\nimport { UserPropertyDto } from '../dto/user-property.dto';\nimport * as bcrypt from 'bcrypt';\nimport { UserInterface } from '../../user/interface/modelInterface/user.interface';\nimport { Request } from 'express';\nimport { RedisService } from '../../redis/service/redis.service';\nimport { ExtractKeyValueUtil } from '../util/extract-key-value.util';\nimport { ChangePasswordDto } from '../dto/change-password.dto';\nimport { VerifyNewPasswordUtil } from '../util/verify-new-password.util';\nimport { ForgotPasswordDto } from '../dto/forgot-password.dto';\nimport { EmailService } from '../../email/email.service';\nimport { ResetPasswordDto } from '../dto/reset-password.dto';\nimport { AppConfigService } from '../../config/configuration.service';\n\n/**\n * **summary**: provide the functionality to authenticate and authorize a user\n */\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly userService: UserService,\n        private readonly jwtService: JwtService,\n        private readonly redisService: RedisService,\n        private readonly extractKeyValueUtil: ExtractKeyValueUtil,\n        private readonly verifyNewPasswordUtil: VerifyNewPasswordUtil,\n        private readonly emailService: EmailService,\n        private readonly appConfig: AppConfigService,\n    ) { }\n\n    /**\n     * **summary**:  find the user in the database and authenticate their access to the application by verifying the present user credentials in the database\n     * - note: depends on the userService.findUser() and verifyNewPasswordUtil.verifyMatch() methods\n     * @param email the user email\n     * @param pass the user password\n     */\n    async validateUser(email: string, pass: string): Promise {\n        try {\n            const query: FindUserDto = { email: email };\n            const user: UserInterface = await this.userService.findUser(query); // find user in db by username\n            // validate the given password\n            await this.verifyNewPasswordUtil.verifyMatch({newPassword: pass, oldPassword: user.password});\n            const { password, ...result } = user;\n            return result;\n        } catch (err) {\n            throw new Error(err);\n            // catch and report the unique email error\n        }\n    }\n\n    /**\n     * summary: return a JWT inside of a Cookie, which may only be interacted with by Http and not Javascript, to the now authenticated user\n     * @param user the user logging into the application\n     */\n    async login(user: any) {\n        console.log(`here is the user property created by Passport`)\n        console.log(user._doc)\n        const packet: UserPropertyDto = user._doc;\n        // create the JWT payload\n        const payload = {\n            username: packet.username,\n            email: packet.email,\n            sub: packet._id,\n        };\n        // create JWT and return as a Cookie string\n        const token = await this.jwtService.sign(payload);\n        return `Authentication=${token}; HttpOnly; Path=/; Max-Age=${this.appConfig.jwt_exp_time}`;\n    }\n\n    /**\n     * **summary**: set the user's JWT in the redis 'dead-list' to log the user out prior to the JWT expiration\n     * @param user user property from the request object\n     */\n    async logout(req: Request) {\n        try {\n            // extract the jwt and the cachce key\n            const { key, jwt } = await this.extractKeyValueUtil.extract(req);\n            // save jwt to redis dead-list with key\n            await this.redisService.set(key, jwt);\n            // return success or error\n            return { key: key, value: jwt };\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: change the logged in user's password\n     * @param new_password\n     * @param confirm_password\n     * @param req\n     */\n    async changePassword(data: ChangePasswordDto, req) {\n        try {\n            // verify user submitted same pw twice\n            await this.verifyNewPasswordUtil.checkTypos({ newPassword: data.newPassword, confirmPassword: data.confirmPassword });\n            // extract the jwt and it's key (last 8 digits)\n            const { jwt, key } = await this.extractKeyValueUtil.extract(req);\n            // find user document\n            const user = await this.userService.findUser({email: req.user.email});\n            // verify new password does not match current password\n            await this.verifyNewPasswordUtil.verifyNew({ newPassword: data.newPassword, oldPassword: user.password });\n            // update the user's password\n            user.password = await bcrypt.hash(data.newPassword, 10);\n            user.save();\n            // logout the user, they'll need to log back in\n            await this.redisService.set(key, jwt);\n            // redirect to login page \n            console.log('redirect to login page...');\n            return;\n        } catch (err) {\n            throw new Error(err);\n        };\n    }\n\n\n    /**\n     * summary: send an email to a valid user email address to request resetting their forgotten password\n     * @param email the email for resetting the password\n     * **summary**: sends user a reset password link to the provided email, if it's an account associated email\n     */\n    async forgotPassword(data: ForgotPasswordDto) {\n        try {\n            // query user and confirm they exist\n            const user = await this.userService.findUser({email: data.email});\n            if (!user) { throw new Error('There is no User registered with the provided email')}\n            // set the reset-token and it's expiration on the user document\n            user.setResetToken();\n            user.setExpirationDate();\n            user.save();\n            // create mail options\n            const mailOptions = await this.emailService.createMailOptions(user.email);\n            const result = await this.emailService.sendMail(mailOptions);\n            return user.resetPasswordToken;\n        } catch(err) { \n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: reset a user's password with the information submitted by a forgot-and-reset email\n     * @param email the valid user email\n     * @param newPassword the new password entered the 1st time\n     * @param confirmPassword the identical new password entered a second time\n     */\n    async resetPassword(data: ResetPasswordDto) {\n        // check new password for typos\n        await this.verifyNewPasswordUtil.checkTypos({newPassword: data.confirmPass, confirmPassword: data.resetPass});\n        // query user by resetToken\n        const user = await this.userService.findUserByResetPasswordToken({token: data.resetPasswordToken});\n        // check reset token has not expired\n        if (Date.now() >= user.resetPasswordExpires) { throw new Error('This passowrd reset request has expired, please make a new request.')}\n        // verify new password is actually new\n        await this.verifyNewPasswordUtil.verifyNew({newPassword: data.resetPass, oldPassword: user.password})\n        // update user password\n        user.password = await bcrypt.hash(data.resetPass, 10);\n        // reset the 'reset tokens' to null\n        user.resetPasswordToken = null;\n        user.resetPasswordExpires = null;\n        // save the user\n        await user.save();\n        // redirect to login\n        return;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptHashPipe.html":{"url":"injectables/BcryptHashPipe.html","title":"injectable - BcryptHashPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BcryptHashPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/pipes/bcrypt.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: encrypt the user's password \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/pipes/bcrypt.pipe.ts:14\n                \n            \n\n\n            \n                \n                    summary: use bcrypt to hash and salt the user's password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from \"@nestjs/common\";\nimport { CreateUserDto } from \"../dto/create-user.dto\";\nimport * as bcrypt from 'bcrypt';\n/**\n * **summary**: encrypt the user's password \n */\n@Injectable()\nexport class BcryptHashPipe implements PipeTransform {\n\n    /**\n     * **summary**: use bcrypt to hash and salt the user's password\n     * @param value new user info\n     */\n    async transform(value: CreateUserDto) {\n        try {\n            const hash = await bcrypt.hash(value.password, 10);\n            const verified = await bcrypt.compare(value.password, hash);\n            if (verified) {\n                value.password = hash;\n                return value;\n            }\n            throw new Error('Bcrypt hashing failed, hash did not match the original')\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data transfer object for changing the password of a logged in user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/change-password.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/change-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ChangePasswordDto {\n\treadonly newPassword: string;\n\treadonly confirmPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckPasswordTypoDto.html":{"url":"classes/CheckPasswordTypoDto.html","title":"class - CheckPasswordTypoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckPasswordTypoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/check-password-typo.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data transfer object for verifying their is no typo in the requested new password data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/check-password-typo.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/check-password-typo.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CheckPasswordTypoDto {\n    newPassword: string;\n    confirmPassword: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMulterUploadUtil.html":{"url":"injectables/CreateMulterUploadUtil.html","title":"injectable - CreateMulterUploadUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMulterUploadUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/create-multer-upload.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a multerUpload object\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3Provider: S3Provider)\n                    \n                \n                        \n                            \n                                Defined in src/images/util/create-multer-upload.util.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/create-multer-upload.util.ts:19\n                            \n                        \n\n                \n                    \n                        summary: create the Multer upload object\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        req\n                                                \n                                                \n                                                        category\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/create-multer-upload.util.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport * as multer from 'multer';\nimport * as multerS3 from 'multer-s3';\nimport { JwtPayloadDto } from \"src/auth/dto/jwt-payload\";\nimport { S3Provider } from \"../providers/s3.provider\";\n/**\n * **summary**: create a multerUpload object\n */\n@Injectable()\nexport class CreateMulterUploadUtil {\n    constructor(private readonly s3Provider: S3Provider) { }\n    private s3 = this.s3Provider.getS3();\n\n    /**\n     * **summary**: create the Multer upload object\n     * @param req \n     * @param category \n     */\n    create = async (req, category) => {\n        try {\n            // create a multer upload\n            const user: JwtPayloadDto = req.user;\n            return multer({\n                storage: multerS3({\n                    s3: this.s3,\n                    bucket: `rent-a-car-photos/${user.email}/${category}`,\n                    acl: 'public-read',\n                    key: function (request, file, cb) {\n                        cb(null, `${Date.now()}-${file.originalname}`); // unique id generator for file (image tag)\n                    },\n                }),\n            }).array('upload', 9);\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQueryDto.html":{"url":"classes/CreateQueryDto.html","title":"class - CreateQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/create-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto is passed to the ProcessUnavailabilityPipe.createQuery() method to veryify the\nrequest to schedule Unavailability for the rental will not overlap with already scheduled Unavailability for the rental\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                start\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: this dto is passed to the ProcessUnavailabilityPipe.createQuery() method to veryify the\n * request to schedule Unavailability for the rental will not overlap with already scheduled Unavailability for the rental\n */\nexport class CreateQueryDto {\n    min: UnavailabilityDto;\n    max: UnavailabilityDto;\n    year: number;\n    start: number;\n    end: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRentalDto.html":{"url":"classes/CreateRentalDto.html","title":"class - CreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/create-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the final format for a new rental to be created\n\npassed to the rental.service.createRental method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                listed\n                            \n                            \n                                loc\n                            \n                            \n                                photos\n                            \n                            \n                                pricing\n                            \n                            \n                                registration\n                            \n                            \n                                rentalDescription\n                            \n                            \n                                scheduling\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pricing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRentalDto {\n  rentalDescription: string;\n  address: string;\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: string[];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: number;\n    discounts: {\n      weekly: number;\n      monthly: number;\n    };\n  };\n  loc: {\n    type: string;\n    coordinates: [number, number];\n  };\n  photos: string[];\n  listed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUpdaterDtoPipe.html":{"url":"injectables/CreateUpdaterDtoPipe.html","title":"injectable - CreateUpdaterDtoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUpdaterDtoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/create-updater-dto.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create the data the request UpdateUnavailabilityDataDto the rental.service.updateUnavailability() method needs\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUpdateData\n                            \n                            \n                                    Private\n                                distillDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidateUpdateUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:58\n                \n            \n\n\n            \n                \n                    summary: use the private methods to return a UpdateUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidateUpdateUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a validated UpdateUnavailabilityDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUpdateData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:30\n                            \n                        \n\n                \n                    \n                        summary: create a MongoDB update object from the UpdateUnavailabilityDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                UpdateUnavailabilityDto\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            distillDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:15\n                            \n                        \n\n                \n                    \n                        summary: map the ValidateUpdateUnavailabilityDto to a simpler UpdateUnavailabilityDto format\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                ValidateUpdateUnavailabilityDto\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { UpdateUnavailabilityDto } from '../dto/unavailability/update/update-unavailability.dto';\nimport { ValidateUpdateUnavailabilityDto } from '../dto/unavailability/update/validate-update-unavailability.dto';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto';\n/**\n * **summary**: create the data the request UpdateUnavailabilityDataDto the rental.service.updateUnavailability() method needs\n */\n@Injectable()\nexport class CreateUpdaterDtoPipe implements PipeTransform> {\n\n    /**\n     * **summary**: map the ValidateUpdateUnavailabilityDto to a simpler UpdateUnavailabilityDto format\n     * @param value ValidateUpdateUnavailabilityDto\n     */\n    private distillDto = async (value: ValidateUpdateUnavailabilityDto) => {\n        const data: UpdateUnavailabilityDto = {\n            unavailabilityId: value.unavailabilityId,\n            rentalId: value.rentalId,\n            newStart: value.newStart,\n            newEnd: value.newEnd,\n            newTitle: value.newTitle,\n        };\n        return data;\n    }\n\n    /**\n     * **summary**: create a MongoDB update object from the UpdateUnavailabilityDto\n     * @param value UpdateUnavailabilityDto\n     */\n    private createUpdateData = async (value: UpdateUnavailabilityDto) => {\n        const filter = {\n            rentalId: value.rentalId,\n            unavailabilityId: value.unavailabilityId,\n        };\n        if (value.newTitle === null) {\n          const updater1 = {\n              $set: {\n                start: value.newStart,\n                end: value.newEnd,\n              },\n          };\n          return {filter, updater: updater1};\n        }\n        const updater2 = {\n            $set: {\n                start: value.newStart,\n                end: value.newEnd,\n                title: value.newTitle,\n            },\n        };\n        return { filter, updater: updater2};\n    }\n\n    /**\n     * **summary**: use the private methods to return a UpdateUnavailabilityDto\n     * @param value a validated UpdateUnavailabilityDto\n     */\n    async transform(value: ValidateUpdateUnavailabilityDto): Promise {\n        // return an UpdateUnavailabilityDto\n        const raw =  await this.distillDto(value);\n        const data = await this.createUpdateData(raw);\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserDto.html":{"url":"injectables/CreateUserDto.html","title":"injectable - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data for creating a new user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: data for creating a new user\n */\n@Injectable()\nexport class CreateUserDto {\n    username: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: import and export the database provider\n\nnote: other specific model providers may be registered here as well as exports of the database module\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProvider } from './providers/database.provider';\nimport { ConfigModule } from '@nestjs/config';\n/**\n * **summary**: import and export the database provider\n * - note: other specific model providers may be registered here as well as exports of the database module\n */\n@Module({\n  imports: [ConfigModule],\n  providers: [...databaseProvider],\n  exports: [...databaseProvider],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteS3ImagesUtil.html":{"url":"injectables/DeleteS3ImagesUtil.html","title":"injectable - DeleteS3ImagesUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteS3ImagesUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/delete-s3-images.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: utility for removing images from an AWS S3 Bucket\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteS3Image\n                            \n                            \n                                deleteS3Images\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3Provider: S3Provider)\n                    \n                \n                        \n                            \n                                Defined in src/images/util/delete-s3-images.util.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteS3Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:16\n                            \n                        \n\n                \n                    \n                        summary: delete the selected image from their AWS S3 Bucket\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        images\n                                                        \n                                                                the image to be delete\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                        \n                                                                the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteS3Images\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:48\n                            \n                        \n\n                \n                    \n                        summary: deleted the selected images from their AWS S3 Bucket\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        images\n                                                        \n                                                                the images to be deleted\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                        \n                                                                the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from \"@nestjs/common\";\nimport { S3Provider } from \"../providers/s3.provider\";\n/**\n * **summary**: utility for removing images from an AWS S3 Bucket\n */\n@Injectable()\nexport class DeleteS3ImagesUtil {\n    constructor(private readonly s3Provider: S3Provider) { }\n    private s3 = this.s3Provider.getS3();\n\n    /**\n     * **summary**: delete the selected image from their AWS S3 Bucket\n     * @param images the image to be delete\n     * @param user the requesting user\n     */\n    deleteS3Image = async (images, user): Promise => {\n        const bucket = `rent-a-car-photos`;\n        if (images[0].location.match(/\\/rentals\\//)) {\n            console.log('Delete Single Image Location')\n            console.log(images[0].location);\n            const split = images[0].location.split(/\\/rentals\\//);\n            const key = `${user.email}/rentals/${split[1]}`;\n            console.log('Delete single Image Key')\n            console.log(key)\n            await this.s3.deleteObject({ Bucket: bucket, Key: key }, function (err, data) {\n                if (err) { Logger.log(err, err.stack) }\n                Logger.log(data);\n            });\n        }\n        // delete profile image from s3 bucket\n        console.log('Delete a single Profile Image Location')\n        console.log(images[0].location);\n        const split = images[0].location.split(/\\/profile\\//);\n        console.log('Delete Single Bucket Image Key');\n        const key = `${user.email}/profile/${split[1]}`;\n        await this.s3.deleteObject({ Bucket: bucket, Key: key }, function (err, data) {\n            if (err) { Logger.log(err, err.stack) }\n            Logger.log(data);\n        });\n        return;\n    }\n\n    /**\n     * **summary**: deleted the selected images from their AWS S3 Bucket\n     * @param images the images to be deleted\n     * @param user the requesting user\n     */\n    deleteS3Images = async (images, user): Promise => {\n        // multiple images\n        const ids: string[] = [];\n        const objects = [];\n        const bucket = `rent-a-car-photos`;\n        // delete multiple aws rental images\n        if (images[0].location.match(/\\/rentals\\//)) {\n            console.log(`Deleting multiple Rental Images`)\n            images.map(item => {\n                console.log(item.location);\n                const split = item.location.split(/\\/rentals\\//);\n                const key = `${user.email}/rentals/${split[1]}`;\n                objects.push({ Key: key })\n                ids.push(item._id);\n            });\n            const params = {\n                Bucket: bucket,\n                Delete: {\n                    Objects: objects,\n                    Quiet: false\n                }\n            }\n            console.log(`Delete Multiple Rental Images params`);\n            console.log(params);\n            await this.s3.deleteObjects(params, function (err, data) {\n                if (err) console.log(err, err.stack); // an error occurred\n                console.log(data);           // successful response\n            })\n            return ids;\n        }\n        // delete multiple aws profile images\n        console.log('Delete Multiple AWS Profile Images')\n        images.map(item => {\n            console.log(item.location);\n            const split = item.location.split(/\\/profile\\//);\n            const key = `${user.email}/profile/${split[1]}`;\n            objects.push({ Key: key })\n            ids.push(item._id);\n        });\n        const params = {\n            Bucket: bucket,\n            Delete: {\n                Objects: objects,\n                Quiet: false\n            }\n        }\n        console.log(`Delete Multiple Profile Images params`);\n        console.log(params);\n        await this.s3.deleteObjects(params, function (err, data) {\n            if (err) console.log(err, err.stack); // an error occurred\n            console.log(data);           // successful response\n        })\n\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserDto.html":{"url":"injectables/DeleteUserDto.html","title":"injectable - DeleteUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/delete-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: user password to confirm delteing their profile\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/delete-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: user password to confirm delteing their profile\n */\n@Injectable()\nexport class DeleteUserDto {\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditDetailsDto.html":{"url":"classes/EditDetailsDto.html","title":"class - EditDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/details/edit-details.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: edit the details of a rental\n\npassed to the rental.service.editDetails method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                features\n                            \n                            \n                                rentalId\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EditDetailsDto {\n  rentalId: string;\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  features: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: this email service uses the gmail nodemailer to send emails to the provided email; used to send the forgot password email to registered users\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMailOptions\n                            \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createMailOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMailOptions(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:27\n                \n            \n\n\n            \n                \n                    summary: create the mail options to be used to send the email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user's email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:42\n                \n            \n\n\n            \n                \n                    summary: use the nodemailer transporter to send the email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport( {\n        service: 'gmail', \n        auth: {\n            user: 'rentacar.team2020@gmail.com',\n            pass: 'Unathi2020!'\n        }\n    })\n                        \n                    \n                        \n                            \n                                    Defined in src/email/email.service.ts:15\n                            \n                        \n\n                \n                    \n                        summary: the gmail nodemailer transporter used to send emails\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport { MailOptionsInterface } from './interface/mailoptions.interface';\n/**\n * **summary**: this email service uses the gmail nodemailer to send emails to the provided email; used to send the forgot password email to registered users\n */\n@Injectable()\nexport class EmailService {\n    constructor() {}\n\n\n    /**\n     * **summary**: the gmail nodemailer transporter used to send emails\n     */\n    private transporter = nodemailer.createTransport( {\n        service: 'gmail', \n        auth: {\n            user: 'rentacar.team2020@gmail.com',\n            pass: 'Unathi2020!'\n        }\n    })\n\n    /**\n     * **summary**: create the mail options to be used to send the email\n     * @param email user's email\n     */\n    async createMailOptions (email: string): Promise {\n        const mailOptions: MailOptionsInterface = {\n            from: 'rentacar.team2020@gmail.com',\n            to: email,\n            subject: 'Reset Forgotten Email Password for Rent-A-Car',\n            text: 'Please select the reset email link to reset your password',\n            html: 'Rent-A-Car Password Resetplease select the reset email link to reset your passowrd'\n        }\n        return mailOptions;\n    }\n\n    /**\n     * **summary**: use the nodemailer transporter to send the email\n     * @param mailOptions \n     */\n    async sendMail(mailOptions): Promise {\n        try{\n            this.transporter.sendMail(mailOptions);\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorFilter.html":{"url":"classes/ErrorFilter.html","title":"class - ErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/error.filters.ts\n        \n\n            \n                Description\n            \n            \n                summary: this Error Filter catches all 500 INTERNAL_SERVER_ERRORs. It logs the Error, reveals the Error object, and reutrns a custom err message to the client\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: Error, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/error.filters.ts:20\n                \n            \n\n\n            \n                \n                    summary: catch http errors and use the Logger to log the appropiate error and data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  HttpException,\n  ArgumentsHost,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { DateTime } from 'luxon';\n/**\n * **summary**: this Error Filter catches all 500 INTERNAL_SERVER_ERRORs. It logs the Error, reveals the Error object, and reutrns a custom err message to the client\n */\n@Catch()\nexport class ErrorFilter implements ExceptionFilter {\n  /**\n   * **summary**: catch http errors and use the Logger to log the appropiate error and data\n   * @param error \n   * @param host \n   */\n  catch(error: Error, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    const request = host.switchToHttp().getRequest();\n    const method = request.method;\n    const url = request.url;\n    const now = DateTime.local();\n\n    const status =\n      error instanceof HttpException\n        ? error.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const err = {\n      message: error.message,\n      name: error.name,\n      teehee: `have a nice day :)`,\n    };\n    const log = {\n      method: `${method}`,\n      url: `${url}`,\n      DateTime: `${now.month}/${now.day} Time: ${now.hour}:${now.minute}:${\n        now.second\n      }`,\n      stack: `${error.stack}`,\n    };\n\n    switch (status) {\n      case HttpStatus.INTERNAL_SERVER_ERROR:\n      case HttpStatus.BAD_REQUEST:\n        if (process.env.NODE_ENV === 'production') {\n          Logger.error(error);\n          return response.status(status).json(err);\n        } else {\n          Logger.error(err);\n          Logger.log(log);\n          return response.status(status).json(err);\n        }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExtractKeyValueUtil.html":{"url":"injectables/ExtractKeyValueUtil.html","title":"injectable - ExtractKeyValueUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExtractKeyValueUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/util/extract-key-value.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: grab the Authorization header Cookie and the extract JWT and the key used for caching the token\n\nnote: the key is simply the last 8 digits of the this sessions JWT\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                extract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/util/extract-key-value.util.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            extract\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extract(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/extract-key-value.util.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { ExtractKeyValueUtilDto } from \"../dto/extract-key-value-util.dto\";\n/**\n * summary: grab the Authorization header Cookie and the extract JWT and the **key** used for caching the token\n * - note: the key is simply the last 8 digits of the this sessions JWT\n */\n@Injectable()\nexport class ExtractKeyValueUtil {\n    constructor() {}\n    \n    public async extract(req: Request): Promise {\n        if (req){\n            const rawAuth: string = req.headers.cookie\n            return {\n                jwt: await rawAuth.slice(15), // JWT\n                key: await rawAuth.slice(-8), // KEY\n            }\n        }\n        throw new Error('Cannot extract JWT and KEY from missing Request Object');\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExtractKeyValueUtilDto.html":{"url":"classes/ExtractKeyValueUtilDto.html","title":"class - ExtractKeyValueUtilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExtractKeyValueUtilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/extract-key-value-util.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for the JWT and it's key (last 8 digits of the JWT used for logging out) \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwt\n                            \n                            \n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/extract-key-value-util.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/extract-key-value-util.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ExtractKeyValueUtilDto {\n    jwt: string;\n    key: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserDto.html":{"url":"injectables/FindUserDto.html","title":"injectable - FindUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FindUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/find-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: find a user profile by email\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/find-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n/**\n * **summary**: find a user profile by email\n */\n@Injectable()\nexport class FindUserDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/forgot-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data tranfer object for requesting to reset a forgotten passowrd. A reset passoword email is sent to only valid email addresses\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/forgot-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ForgotPasswordDto {\n\temail: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateRentalDurationEnumUtil.html":{"url":"injectables/GenerateRentalDurationEnumUtil.html","title":"injectable - GenerateRentalDurationEnumUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GenerateRentalDurationEnumUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/utils/generate-rental-duration-enum.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: generate RentalDuration Enums for the rentalDuration propery of the RequestCoordinatesDto\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateRentalDurationEnum\n                            \n                            \n                                    Private\n                                    Async\n                                processRentalTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateRentalDurationEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRentalDurationEnum(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/generate-rental-duration-enum.util.ts:36\n                \n            \n\n\n            \n                \n                    summary: create a RentalDuration Enum from the given start and end time \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            processRentalTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processRentalTime(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/generate-rental-duration-enum.util.ts:16\n                \n            \n\n\n            \n                \n                    summary: using the [Luxon Interval.fromDateTimes(https://moment.github.io/luxon/docs/class/src/interval.js~Interval.html#static-method-fromDateTimes)] method return the \nduration of the rental in months, weeks, and days\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Interval } from 'luxon';\nimport { RentalDurations } from '../const';\nimport { ProcessRentalTimeDto } from '../dto/searchRental/process-rental-time.dto';\n/**\n * **summary**: generate RentalDuration Enums for the rentalDuration propery of the RequestCoordinatesDto\n */\n@Injectable()\nexport class GenerateRentalDurationEnumUtil {\n  /**\n   * **summary**: using the [**Luxon Interval.fromDateTimes(https://moment.github.io/luxon/docs/class/src/interval.js~Interval.html#static-method-fromDateTimes)**] method return the \n   * duration of the rental in months, weeks, and days\n   * @param startTime \n   * @param endTime \n   */\n  private async processRentalTime(startTime, endTime):Promise {\n    try {\n      const base = Interval.fromDateTimes(startTime, endTime);\n      const months = base.length('months');\n      const weeks = base.length('weeks');\n      const days = base.length('days');\n      Logger.log(`The Base`);\n      Logger.log(base);\n      Logger.log(`months: ${months}, weeks: ${weeks}, days: ${days}`);\n      return { months, weeks, days };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: create a RentalDuration [**Enum**](https://www.typescriptlang.org/docs/handbook/enums.html) from the given start and end time \n   * @param startTime \n   * @param endTime \n   */\n  async generateRentalDurationEnum(startTime, endTime) {\n    try {\n      const schedule: ProcessRentalTimeDto = await this.processRentalTime(startTime, endTime);\n      if (schedule.months > 3) {\n        return RentalDurations.Any;\n      }\n      if (schedule.months  1) {\n        return RentalDurations['3 Months'];\n      }\n      if (schedule.months  3) {\n        return RentalDurations['1 Month'];\n      }\n      if (schedule.weeks  1) {\n        return RentalDurations['3 Weeks'];\n      }\n      if (schedule.weeks  5) {\n        return RentalDurations['1 Week'];\n      }\n      if (schedule.days  3) {\n        return RentalDurations['5 Days'];\n      }\n      if (schedule.days  1) {\n        return RentalDurations['3 Days'];\n      }\n      if (schedule.days === 1) {\n        return RentalDurations['1 Day'];\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoUrlApiPipe.html":{"url":"injectables/GeoUrlApiPipe.html","title":"injectable - GeoUrlApiPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoUrlApiPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/geo-url-api.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create an address from the incoming RawCreateRentalDto and then use the HERE Geocoding & Searching API\nto get the coordinates of the address. The coordinates allow Rentals to be geospatially queried in a radius near a user or selected location; e.g. 8 mile radius\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createAddress\n                            \n                            \n                                    Async\n                                getCoordinates\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geoUrlApiUtil: GeoUrlApiUtil, appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/geo-url-api.pipe.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geoUrlApiUtil\n                                                  \n                                                        \n                                                                        GeoUrlApiUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(value)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:19\n                \n            \n\n\n            \n                \n                    summary: convert the location property object into a single address property string; will be passed to this.getCoordinates method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw form data inputed by user to create a new Rental listing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoordinates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoordinates(address: string, geoUrl: string, apiKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:31\n                \n            \n\n\n            \n                \n                    summary: request coordinates for the provided address\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the address to fetch coordinates for from the API\n\n                                    \n                                \n                                \n                                    geoUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url for accessing the API\n\n                                    \n                                \n                                \n                                    apiKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key for accessing the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawCreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:46\n                \n            \n\n\n            \n                \n                    summary: use the createAddress() and getCoordinates() methods to return the request data with coordinates and an address string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawCreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw request from a client to create a new Rental listing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { LocCreateRentalDto } from '../dto/createRental/loc-create-rental.dto';\nimport { RawCreateRentalDto } from '../dto/createRental/raw-create-rental-dto';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\n\n/**\n * **summary**: create an address from the incoming RawCreateRentalDto and then use the [**HERE Geocoding & Searching API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html)\n * to get the coordinates of the address. The coordinates allow Rentals to be geospatially queried in a radius near a user or selected location; e.g. 8 mile radius\n */\n@Injectable()\nexport class GeoUrlApiPipe {\n  constructor(private readonly geoUrlApiUtil: GeoUrlApiUtil, private readonly appConfig: AppConfigService) {}\n\n  /**\n   * **summary**: convert the location property object into a single address property string; will be passed to this.getCoordinates method\n   * @param value the raw form data inputed by user to create a new Rental listing\n   */\n  private async createAddress(value) {\n    // create address string from incoming vehicle.address document\n    const address: string = `${value.location.street} ${value.location.city} ${value.location.zip}`;\n    return address;\n  }\n\n  /**\n   * **summary**: request coordinates for the provided address\n   * @param address the address to fetch coordinates for from the API\n   * @param geoUrl the url for accessing the API\n   * @param apiKey the key for accessing the API\n   */\n  async getCoordinates(address: string, geoUrl: string, apiKey: string,\n  ) {\n    Logger.log(`geoUrl: ${process.env.GEO_URL}`);\n    const coords = await this.geoUrlApiUtil.getCoordinates(\n      address,\n      geoUrl,\n     apiKey\n    );\n    return coords;\n  }\n\n  /**\n   * **summary**: use the createAddress() and getCoordinates() methods to return the request data with coordinates and an address string\n   * @param value the raw request from a client to create a new Rental listing\n   */\n  async transform(value: RawCreateRentalDto):Promise {\n    const apiKey = process.env.GEO_API_KEY;\n    const geoUrl = process.env.GEO_URL;\n    try {\n      // create the address\n      const address = await this.createAddress(value);\n      // request the coordinates from the API\n      const coords = await this.getCoordinates(address, geoUrl, apiKey);\n      return { value, coords, address };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoUrlApiUtil.html":{"url":"injectables/GeoUrlApiUtil.html","title":"injectable - GeoUrlApiUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoUrlApiUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/utils/geo-url-api.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: use Geocoding & Search API to get coordinates for an address\n\n[Respose Object] = response.data.items[0]\n.title: the complete address as a string\n.address the complete address as an object\n.position: {lat: number, lng: number}\n.mapView: {west: -number, south: number, east: -number, north: number}\n\n\n\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoordinates\n                            \n                            \n                                    Private\n                                    Async\n                                makeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoordinates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoordinates(address, geoUrl, apiKey)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/geo-url-api.util.ts:43\n                \n            \n\n\n            \n                \n                    summary: returns an address as a single string, and the corresponding coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        replace the spaces in the address with + symbols for the api request\n\n                                    \n                                \n                                \n                                    geoUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url for the api\n\n                                    \n                                \n                                \n                                    apiKey\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key for the api\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            makeRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRequest(location, geoUrl, apiKey)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/geo-url-api.util.ts:25\n                \n            \n\n\n            \n                \n                    Send Geocoding & Search API request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    location\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the address string\n\n                                    \n                                \n                                \n                                    geoUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the base HERE geocoding and search v7 api url\n\n                                    \n                                \n                                \n                                    apiKey\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the api key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as axios from 'axios';\nimport { RawCoordinatesDto } from '../dto/createRental/raw-coordinates.dto';\n\n/**\n * **summary**: use [**Geocoding & Search API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html) to get coordinates for an address\n * - [Respose Object] = response.data.items[0]\n *  - .title: the complete address as a string\n *  - .address the complete address as an object\n *  - .position: {lat: number, lng: number}\n *  - .mapView: {west: -number, south: number, east: -number, north: number}\n * @param {string} address the address to request coordinates for\n * @param {string} geoUrl base url of the Geocoding and Search geocoding request\n * @param {string} apiKey Geocoding and Search v7 API Key\n * \n */\n@Injectable()\nexport class GeoUrlApiUtil {\n  /**\n   * Send Geocoding & Search API request\n   * @param location the address string\n   * @param geoUrl the base HERE geocoding and search v7 api url\n   * @param apiKey the api key\n   */\n  private async makeRequest(location, geoUrl, apiKey) {\n    try {\n      console.log(`Geocoding & Search API Request: ${geoUrl}?q=${location}&apiKey=${apiKey}`)\n      const request: any = await axios.default.get(\n        `${geoUrl}?q=${location}&apiKey=${apiKey}`,\n      );\n      return request;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: returns an address as a single string, and the corresponding coordinates\n   * @param address replace the spaces in the address with + symbols for the api request\n   * @param geoUrl the url for the api\n   * @param apiKey the key for the api\n   */\n  async getCoordinates(address, geoUrl, apiKey):Promise {\n    try {\n      const location: string = address.replace(/\\s+/g, '+');\n      // make the API request\n      console.log('location before the request')\n      console.log(location);\n      const response: any = await this.makeRequest(\n        location,\n        geoUrl,\n        apiKey\n      );\n      // grab the coordinates\n      const rawCoordinates: RawCoordinatesDto =\n        response.data.items[0].position;\n      // map the coords object to return\n      const coords: [number, number] = [\n        rawCoordinates.lat,\n        rawCoordinates.lng,\n      ];\n      return coords;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GivenNoticePipe.html":{"url":"injectables/GivenNoticePipe.html","title":"injectable - GivenNoticePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GivenNoticePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/given-notice.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: creates a Luxon Interval from the startTime and currentTime\nand then uses Luxon methods to validate the Given Notice is at least 1 hour in duration; this is the minimum allowed for any user\n\nLuxon is \"a powerful, modern, and friendly wrapper for Javacript dates and times\"\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createGivenNotice\n                            \n                            \n                                    Async\n                                transform\n                            \n                            \n                                    Private\n                                    Async\n                                validateRequestedTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createGivenNotice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGivenNotice(startTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:20\n                \n            \n\n\n            \n                \n                    summary: create the givenNotice property value, it must be at least one hour\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request start time of the rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawSearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:51\n                \n            \n\n\n            \n                \n                    summary: use the validateRequestedTime and createGivenNotice methods to return a GivenNoticeSearchRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawSearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request data to search for rentals\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateRequestedTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequestedTime(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:36\n                \n            \n\n\n            \n                \n                    summary: validate that the rental start time is not before the requested rental end time. The frontend of course has validation for this on the form,\nthis is just another level of validation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested time for the Rental to begin\n\n                                    \n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested time for the Rental to end\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { GivenNoticeSearchRentalDto } from '../dto/searchRental/given-notice-search-rental-dto';\nimport { RawSearchRentalDto } from '../dto/searchRental/raw-search-rental.dto';\nimport { DateTime } from 'luxon';\n/**\n * **summary**: creates a [**Luxon**](https://moment.github.io/luxon/) [**Interval**](https://moment.github.io/luxon/docs/manual/tour.html#intervals) from the startTime and currentTime\n * and then uses Luxon methods to validate the Given Notice is at least 1 hour in duration; this is the minimum allowed for any user\n * - Luxon is \"a powerful, modern, and friendly wrapper for Javacript dates and times\"\n */\n@Injectable()\nexport class GivenNoticePipe implements PipeTransform {\n\n  /**\n   * **summary**: create the **givenNotice** property value, it must be at least one hour\n   * @param startTime the request start time of the rental\n   */\n  private async createGivenNotice(startTime) {\n    const givenNotice: number = startTime.diffNow().toObject().milliseconds;\n    if (givenNotice >= 3600000) {\n      return givenNotice;\n    }\n    throw new Error(\n      'Sorry, you cannot request a rental less than an hour before it begins',\n    );\n  }\n\n  /**\n   * **summary**: validate that the rental start time is not before the requested rental end time. The frontend of course has validation for this on the form,\n   * this is just another level of validation.\n   * @param startTime the requested time for the Rental to begin\n   * @param endTime the requested time for the Rental to end\n   */\n  private async validateRequestedTime(startTime, endTime) {\n    if (startTime > endTime) {\n      throw new Error(\n        'The rental start time cannot be after the rental end time',\n      );\n    }\n    if (endTime.diff(startTime).toObject().milliseconds  {\n    try {\n      // make start and end time into DateTimes\n      const startTime: DateTime = DateTime.fromISO(\n        new Date(value.rentalStartTime).toISOString(),\n      );\n      const endTime: DateTime = DateTime.fromISO(\n        new Date(value.rentalEndTime).toISOString(),\n      );\n      await this.validateRequestedTime(startTime, endTime);\n      const givenNotice = await this.createGivenNotice(startTime);\n      const dto: GivenNoticeSearchRentalDto = {\n        address: value.address,\n        rentalStartTime: startTime,\n        rentalEndTime: endTime,\n        price: value.price ? value.price : null,\n        features: value.features ? value.features : null,\n        givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GivenNoticeSearchRentalDto.html":{"url":"classes/GivenNoticeSearchRentalDto.html","title":"class - GivenNoticeSearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GivenNoticeSearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/given-notice-search-rental-dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the GivenNoticePipe after processing a RawSearchRentalDto\n\nThe GivenNoticePipe added the 'givenNotice' property\npassed to the RentalDurationPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                price\n                            \n                            \n                                rentalEndTime\n                            \n                            \n                                rentalStartTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalEndTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalStartTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DateTime } from 'luxon';\n/**\n * **summary**: returned by the GivenNoticePipe after processing a RawSearchRentalDto\n * - The GivenNoticePipe added the 'givenNotice' property\n * - passed to the RentalDurationPipe\n */\nexport class GivenNoticeSearchRentalDto {\n  address: string;\n  rentalStartTime: DateTime;\n  rentalEndTime: DateTime;\n  price: number;\n  features: string[];\n  givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorFilter.html":{"url":"classes/HttpErrorFilter.html","title":"class - HttpErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-error.filter.ts\n        \n\n            \n                Description\n            \n            \n                \nException filters give full control over the exceptions layer\nAdd Logging\nControl exact flow of control and the content of the response sent\nThis filter is responsible for catching exceptions which are an instance of the HttpException\nGrants us access to the underlying platform 'Request' & 'Response' objects\n\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/http-error.filter.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  ArgumentsHost,\n  Logger,\n} from '@nestjs/common';\nimport { DateTime } from 'luxon';\n\n/**\n * - Exception filters give full control over the exceptions layer\n * - Add Logging\n * - Control exact flow of control and the content of the response sent\n * - This filter is responsible for catching exceptions which are an instance of the HttpException\n * - Grants us access to the underlying platform 'Request' & 'Response' objects\n */\n@Catch(HttpException)\nexport class HttpErrorFilter implements ExceptionFilter {\n  /**\n   * @param {} exception\n   * @param {ArgumentsHost} host\n   */\n  catch(exception: HttpException, host: ArgumentsHost) {\n    // note: access the appropriate underlying arguments for any execution context with ArgumentHost\n    const context = host.switchToHttp();\n    const request = context.getRequest();\n    const response = context.getResponse();\n    const status = exception.getStatus();\n\n    /**\n     * error responses\n     */\n    const errorResponse = {\n      http_code: status,\n      timestamp: DateTime.local(),\n      path: request.url,\n      method: request.method,\n      message: exception.message.error || exception.message || null,\n    };\n\n    /**\n     * error logging\n     */\n    Logger.error(\n      `${request.method} ${request.url}`,\n      JSON.stringify(errorResponse),\n      'ExceptionFilter',\n    );\n\n    /**\n     * take direct control of the response with the json method\n     */\n    response.status(status).json(errorResponse);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageDto.html":{"url":"classes/ImageDto.html","title":"class - ImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the dto for identifying an image to take an action on\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageDto {\n    _id: string; // id of an Image\n    location: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageInterface.html":{"url":"interfaces/ImageInterface.html","title":"interface - ImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/modelInterface/image.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the Image Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucket\n                                \n                                \n                                        category\n                                \n                                \n                                        etag\n                                \n                                \n                                        key\n                                \n                                \n                                        location\n                                \n                                \n                                        rental_id\n                                \n                                \n                                        size\n                                \n                                \n                                        user_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rental_id\n                                    \n                                \n                                \n                                    \n                                        rental_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageInterface{\n    user_id: string;\n    rental_id: string;\n    bucket: string;\n    key: string;\n    etag: string;\n    category: string;\n    size: string;\n    location: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageQueryResultsDto.html":{"url":"classes/ImageQueryResultsDto.html","title":"class - ImageQueryResultsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageQueryResultsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image-query-results.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the dto for data returned from a request to find Rental or Profile images\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                images\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-query-results.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-query-results.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageQueryResultsDto {\n    count: number;\n    images: any;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageUploadDto.html":{"url":"classes/ImageUploadDto.html","title":"class - ImageUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image-upload.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: dto for uploading images to AWS\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Body\n                            \n                            \n                                Bucket\n                            \n                            \n                                Key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-upload.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-upload.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-upload.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageUploadDto {\n    Bucket: string; // bucket name and folder\n    Key: string; // file name\n    Body: string; // buffer\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagesController.html":{"url":"controllers/ImagesController.html","title":"controller - ImagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/controller/images.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                images\n            \n\n            \n                Description\n            \n            \n                summary: controller for managing images in the application\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllProfileImages\n                            \n                            \n                                    Async\n                                deleteAllRentalImages\n                            \n                            \n                                    Async\n                                deleteRentalImages\n                            \n                            \n                                    Async\n                                findProfileImage\n                            \n                            \n                                    Async\n                                findProfileImages\n                            \n                            \n                                    Async\n                                findRentalImage\n                            \n                            \n                                    Async\n                                findRentalImages\n                            \n                            \n                                    Async\n                                uploadProfileImage\n                            \n                            \n                                    Async\n                                uploadRentalImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllProfileImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllProfileImages(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-all-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:116\n                \n            \n\n\n            \n                \n                    Delete All Profile Images\nSummary: Delete all of the user's profile images\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllRentalImages(params, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-all-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:107\n                \n            \n\n\n            \n                \n                    Delete all Rental Images\nSummary: delete all images for a selected rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRentalImages(images: ImageDto[], req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:98\n                \n            \n\n\n            \n                \n                    Delete Rental Images\nSummary: Delete a single or multiple images of a rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    images\n                                    \n                                                ImageDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfileImage(req, image: ImageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-profile-image')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:88\n                \n            \n\n\n            \n                \n                    Find Profile Image\nSummary: Find a user profile image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request object\n\n                                    \n                                \n                                \n                                    image\n                                    \n                                                ImageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfileImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfileImages(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:78\n                \n            \n\n\n            \n                \n                    Find Profile Images\nSummary: Find a user profile image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRentalImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRentalImage(params: ImageDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-rental-image')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:68\n                \n            \n\n\n            \n                \n                    Find Rental Image\nSummary: Find a vehicle image by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ImageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRentalImages(params, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:58\n                \n            \n\n\n            \n                \n                    Finad Rental Images\nSummary: Find all of a rentals images\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object, which has a user property\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadProfileImage(req, res, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:42\n                \n            \n\n\n            \n                \n                    Upload Profile Images\nSummary: Upload a single or multiple profile photos to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadRentalImages(req, res, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:26\n                \n            \n\n\n            \n                \n                    Upload a single or multiple rental photos to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards, Body, Get, Query, Res } from '@nestjs/common';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { JwtAuthGuard } from '../../auth/gaurds/jwt-auth.guard';\nimport { ImagesService } from '../service/images.service';\nimport { response } from 'express';\nimport { profile, rentals } from '../../common/Const';\nimport { ImageDto } from '../dto/image.dto';\n/**\n * **summary**: controller for managing images in the application\n */\n@UseGuards(JwtAuthGuard)\n@Controller('images')\nexport class ImagesController {\n    constructor(\n        private readonly imagesService: ImagesService,\n        private readonly appConfig: AppConfigService,\n    ) { }\n\n    /**\n     * Upload a single or multiple rental photos to be saved\n     * @param files fieldName\n     * @param maxCount maxCount\n     * @param options option\n     */\n    @Post('upload-rental-images')\n    async uploadRentalImages(@Req() req, @Res() res, @Query() params) {\n        try {\n            await this.imagesService.fileuploadAndSave(req, res, rentals, params.rental_id, this.imagesService.saveImages)\n        } catch (err) {\n            return response\n                .status(500)\n                .json(`Failed to upload image file: ${err.message}`);\n        }\n    }\n\n    /**\n     * Upload Profile Images\n     * Summary: Upload a single or multiple profile photos to be saved\n     * @param files fieldName\n     */\n    @Post('upload-profile-images')\n    async uploadProfileImage(@Req() req, @Res() res, @Query() params) {\n        try {\n            await this.imagesService.fileuploadAndSave(req, res, profile, params.rental_id, this.imagesService.saveImages)\n        } catch (err) {\n            return response\n                .status(500)\n                .json(`Failed to upload image file: ${err.message}`);\n        }\n    }\n\n    /**\n     * Finad Rental Images\n     * Summary: Find all of a rentals images\n     * @param req the request object, which has a user property\n     */\n    @Get('find-rental-images')\n    async findRentalImages(@Query() params, @Req() req) {\n        return await this.imagesService.findRentalImages(null, params.rental_id, req.user);\n    }\n\n    /**\n     * Find Rental Image\n     * Summary: Find a vehicle image by id\n     * @param image the id of the image to find\n     */\n    @Get('find-rental-image')\n    async findRentalImage(@Query() params: ImageDto, @Req() req) {\n        return await this.imagesService.findRentalImages(params._id, null, req.user);\n    }\n\n    /**\n     * Find Profile Images\n     * Summary: Find a user profile image\n     * @param req request object\n     */\n    @Get('find-profile-images')\n    async findProfileImages(@Req() req) {\n        return await this.imagesService.findProfileImages(req.user);\n    }\n\n    /**\n     * Find Profile Image\n     * Summary: Find a user profile image\n     * @param req request object\n     */\n    @Get('find-profile-image')\n    async findProfileImage(@Req() req, @Body() image: ImageDto) {\n        return await this.imagesService.findProfileImages(req.user, image._id);\n    }\n\n    /**\n     * Delete Rental Images\n     * Summary: Delete a single or multiple images of a rental\n     * @param category both or a single one\n     */\n    @Post('delete-images')\n    async deleteRentalImages(@Body() images: ImageDto[], @Req() req) {\n        return await this.imagesService.deleteImages(images, req.user);\n    }\n\n    /**\n     * Delete all Rental Images\n     * Summary: delete all images for a selected rental\n     */\n    @Post('delete-all-rental-images')\n    async deleteAllRentalImages(@Query() params, @Req() req) {\n        return await this.imagesService.deleteAllImages(req.user, params.rental_id);\n    }\n\n   /**\n    * Delete All Profile Images\n    * Summary: Delete all of the user's profile images\n    */\n   @Post('delete-all-profile-images')\n   async deleteAllProfileImages(@Req() req) {\n        return await this.imagesService.deleteAllImages(req.user, null);\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagesModule.html":{"url":"modules/ImagesModule.html","title":"module - ImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_imports\n\n\n\ncluster_ImagesModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nAppConfigModule->ImagesModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nImagesModule -->\n\nDatabaseModule->ImagesModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nImagesModule -->\n\nAppConfigService->ImagesModule\n\n\n\n\n\nCreateMulterUploadUtil\n\nCreateMulterUploadUtil\n\nImagesModule -->\n\nCreateMulterUploadUtil->ImagesModule\n\n\n\n\n\nDeleteS3ImagesUtil\n\nDeleteS3ImagesUtil\n\nImagesModule -->\n\nDeleteS3ImagesUtil->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nMulterUploadUtil\n\nMulterUploadUtil\n\nImagesModule -->\n\nMulterUploadUtil->ImagesModule\n\n\n\n\n\nProcessSaveDataUtil\n\nProcessSaveDataUtil\n\nImagesModule -->\n\nProcessSaveDataUtil->ImagesModule\n\n\n\n\n\nS3Provider\n\nS3Provider\n\nImagesModule -->\n\nS3Provider->ImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/images/images.module.ts\n        \n\n\n        \n            Description\n        \n        \n            summary: contians all of the functionality for managing images in the application\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            CreateMulterUploadUtil\n                        \n                        \n                            DeleteS3ImagesUtil\n                        \n                        \n                            ImagesService\n                        \n                        \n                            MulterUploadUtil\n                        \n                        \n                            ProcessSaveDataUtil\n                        \n                        \n                            S3Provider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { AppConfigService } from '../config/configuration.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { ImagesController } from './controller/images.controller';\nimport { S3Provider } from './providers/s3.provider';\nimport { ImageSchema } from './schema/images.schema';\nimport { ImagesService } from './service/images.service';\nimport { CreateMulterUploadUtil } from './util/create-multer-upload.util';\nimport { DeleteS3ImagesUtil } from './util/delete-s3-images.util';\nimport { MulterUploadUtil } from './util/multer-upload.util';\nimport { ProcessSaveDataUtil } from './util/process-save-data.util';\n/**\n * **summary**: contians all of the functionality for managing images in the application\n */\n@Module({\n    imports: [\n        DatabaseModule,\n        MongooseModule.forFeature([{ name: 'Images', schema: ImageSchema }]),\n        AppConfigModule,\n    ],\n    controllers: [ImagesController],\n    providers: [\n        ImagesService,\n        AppConfigService,\n        ProcessSaveDataUtil,\n        S3Provider,\n        CreateMulterUploadUtil,\n        MulterUploadUtil,\n        DeleteS3ImagesUtil,\n    ],\n    exports: [ImagesService]\n\n})\nexport class ImagesModule {\n    constructor() {\n        ImageSchema.index({ rental_id: 1 });\n        ImageSchema.index({ user_id: 1 });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/service/images.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: contains all of the functionality for uploading and managing photos in the application.\n\nnote: for security, user_id is required for all queries to verify the queried images belong to the requesting user.\nthis makes queries slightly less selective and less efficient, but more secure.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAllImages\n                            \n                            \n                                deleteImages\n                            \n                            \n                                fileuploadAndSave\n                            \n                            \n                                findProfileImages\n                            \n                            \n                                findRentalImages\n                            \n                            \n                                s3\n                            \n                            \n                                saveImages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imagesModel: Model, appConfig: AppConfigService, processSaveDataUtil: ProcessSaveDataUtil, s3Provider: S3Provider, createMulterUploadUtil: CreateMulterUploadUtil, multerUploadUtil: MulterUploadUtil, deleteS3ImagesUtil: DeleteS3ImagesUtil)\n                    \n                \n                        \n                            \n                                Defined in src/images/service/images.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imagesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processSaveDataUtil\n                                                  \n                                                        \n                                                                        ProcessSaveDataUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createMulterUploadUtil\n                                                  \n                                                        \n                                                                        CreateMulterUploadUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        multerUploadUtil\n                                                  \n                                                        \n                                                                        MulterUploadUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteS3ImagesUtil\n                                                  \n                                                        \n                                                                        DeleteS3ImagesUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAllImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:126\n                            \n                        \n\n                \n                    \n                        summary: delete all images of the selected rental or profile from the S3 bucket and database\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user_id\n                                                        \n                                                                used to locate the user's photos as well as verify they belong to them\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the id of the rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:106\n                            \n                        \n\n                \n                    \n                        sumamry: Delete a single or multiple of a user's selected images from the S3 Bucket and database\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        category\n                                                        \n                                                                the images category; rentals or profile\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                used to verify the photos belong to the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileuploadAndSave\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:145\n                            \n                        \n\n                \n                    \n                        summary: send the file(s) to the bucket and attach a timestamp to each filename\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        req\n                                                        \n                                                                the request\n\n                                                        \n                                                \n                                                \n                                                        res\n                                                        \n                                                                the response\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                rentals or profile\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the rental_id for rental image uploads\n\n                                                        \n                                                \n                                                \n                                                        saveImages\n                                                        \n                                                                the images.service.saveImages method\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findProfileImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:86\n                            \n                        \n\n                \n                    \n                        summary: query multiple profile images by user_id and profile category, or find a specific profile photo by id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                the user property of the request object\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findRentalImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:64\n                            \n                        \n\n                \n                    \n                        summary: query multiple rental images by userId and rental_id. The userId\nis just to ensure only the user's photos are returned and not another user's rental images\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                the user property of the request object\n\n                                                        \n                                                \n                                                \n                                                        img_id\n                                                        \n                                                                id of an image; if provided only this image will be found\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the id of the rental\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                used to verify the image belongs to the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:42\n                            \n                        \n\n                \n                    \n                        summary: saves AWS uploaded images to the database. This method is passed as an argument to the fileUploadAndSave method \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        files\n                                                        \n                                                                array of files\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                rentals / profile\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                user id to associate with the image\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                id of the rental (if it's a rental image): Check for null\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger, Req, Res } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ImageInterface } from '../interface/modelInterface/image.interface';\nimport { Model } from 'mongoose';\nimport { JwtPayloadDto } from '../../auth/dto/jwt-payload';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { profile } from '../../common/Const';\nimport { ImageDto } from '../dto/image.dto';\nimport { ProcessSaveDataUtil } from '../util/process-save-data.util';\nimport { ProcessedSaveDataDto } from '../dto/processed-save-data.dto';\nimport { S3Provider } from '../providers/s3.provider';\nimport { CreateMulterUploadUtil } from '../util/create-multer-upload.util';\nimport { MulterUploadUtil } from '../util/multer-upload.util';\nimport { ImageQueryResultsDto } from '../dto/image-query-results.dto';\nimport { DeleteS3ImagesUtil } from '../util/delete-s3-images.util';\n/**\n * **summary**: contains all of the functionality for uploading and managing photos in the application.\n * - note: for security, user_id is required for all queries to verify the queried images belong to the requesting user.\n * this makes queries slightly less selective and less efficient, but more secure.\n */\n@Injectable()\nexport class ImagesService {\n\n  constructor(\n    @InjectModel('Images') private readonly imagesModel: Model,\n    private readonly appConfig: AppConfigService,\n    private readonly processSaveDataUtil: ProcessSaveDataUtil,\n    private readonly s3Provider: S3Provider,\n    private readonly createMulterUploadUtil: CreateMulterUploadUtil,\n    private readonly multerUploadUtil: MulterUploadUtil,\n    private readonly deleteS3ImagesUtil: DeleteS3ImagesUtil,\n  ) { }\n  s3 = this.s3Provider.getS3();\n\n  /**\n   * **summary**: saves AWS uploaded images to the database. This method is passed as an argument to the fileUploadAndSave method \n   * @param files array of files\n   * @param category rentals / profile\n   * @param {string} user_id user id to associate with the image\n   * @param {string | null} rental_id id of the rental (if it's a rental image): Check for null\n   */\n  saveImages = async (files, category, user_id, rental_id, model) => {\n    try {\n      const { packet, image }: ProcessedSaveDataDto = await this.processSaveDataUtil.process(files, user_id, rental_id, category);\n      let flag;\n      packet === null ? flag = 'single' : flag = 'multiple';\n      if (flag === 'multiple') {\n        return await model.insertMany(packet);\n      }\n      return await model.save(image)\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: query multiple rental images by userId and rental_id. The userId\n   * is just to ensure only the user's photos are returned and not another user's rental images\n   * @param user the user property of the request object\n   * @param img_id id of an image; if provided only this image will be found\n   * @param rental_id the id of the rental\n   * @param user_id used to verify the image belongs to the requesting user\n   */\n  findRentalImages = async (img_id: string | null, rental_id: string | null, user: JwtPayloadDto): Promise => {\n    // img_id given from findVehicleImage endpoint\n    try {\n      let flag;\n      img_id !== null ? flag = 'single' : flag = 'multiple';\n      // find multiple images\n      if (flag === 'multiple') {\n        const images = await this.imagesModel.find({ rental_id: rental_id, user_id: user.userId });\n        return { count: images.length, images: images }\n      }\n      // find a specific image\n      const image = await this.imagesModel.findById(img_id);\n      return { count: 1, images: image }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: query multiple profile images by user_id and profile category, or find a specific profile photo by id\n   * @param user the user property of the request object\n   */\n  findProfileImages = async (user: JwtPayloadDto, img_id?: string) => {\n    try {\n      let flag;\n      img_id ? flag = 'single' : flag = 'multiple';\n      if (flag === 'multiple') {\n        const images = await this.imagesModel.find({ user_id: user.userId })\n        return { count: images.length, images: images };\n      };\n      const image = await this.imagesModel.findById(img_id);\n      return { count: 1, images: image }\n    } catch (err) {\n      throw new Error(err)\n    }\n  }\n\n  /**\n   * **sumamry**: Delete a single or multiple of a user's selected images from the S3 Bucket and database\n   * @param category the images category; rentals or profile\n   * @param user_id used to verify the photos belong to the requesting user\n   */\n  deleteImages = async (images: ImageDto[], user: JwtPayloadDto) => {\n    try {\n      if (images && images.length > 0) {\n        if (images.length === 1) {\n          await this.deleteS3ImagesUtil.deleteS3Image(images, user);\n          return await this.imagesModel.deleteOne({ _id: images[0]._id, user_id: user.userId });\n        }\n        const ids = await this.deleteS3ImagesUtil.deleteS3Images(images, user);\n        return await this.imagesModel.deleteMany({ _id: { $in: ids }, user_id: user.userId })\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: delete all images of the selected rental or profile from the S3 bucket and database\n   * @param user_id used to locate the user's photos as well as verify they belong to them\n   * @param rental_id the id of the rental\n   */\n  deleteAllImages = async (user: JwtPayloadDto, rental_id: string) => {\n    // delete all images of the selected rental\n    if (user && rental_id !== null) {\n      return await this.imagesModel.deleteMany({ rental_id: rental_id, user_id: user.userId });\n    }\n    // delete all of the user's profile images\n    if (user && rental_id === null) {\n      return await this.imagesModel.deleteMany({ user_id: user.userId, category: profile });\n    }\n  }\n\n  /**\n   * **summary**: send the file(s) to the bucket and attach a timestamp to each filename\n   * @param req the request\n   * @param res the response\n   * @param category rentals or profile\n   * @param rental_id the rental_id for rental image uploads\n   * @param saveImages the images.service.saveImages method\n   */\n  fileuploadAndSave = async (req, res, category, rental_id, saveimages) => {\n    try {\n      // create a multer upload\n      const user: JwtPayloadDto = req.user;\n      const multerUpload = await this.createMulterUploadUtil.create(req, category)\n      // Upload the image(s)\n      const model = this.imagesModel;\n      await this.multerUploadUtil.upload(req, res, multerUpload, saveimages, category, user, rental_id, model);\n    } catch (err) {\n      return res.status(500).json(`Failed to upload image file: ${err}`)\n    }\n  }\n\n  // Get Presigned Url to download file\n  /**\n   * @param originalname file name\n   * @param bucket location of the photo\n  private getSingedUrl = async (bucket, originalname) => {\n    const s3 = this.s3;\n    const params = {\n      Bucket: bucket,\n      Key: originalname,\n      Expires: 60 * 60, //1 hour\n    };\n    try {\n      const url = await new Promise((resolve, reject) => {\n        s3.getSignedUrl('getObject', params, (err, url) => {\n          err ? reject(err) : resolve(url);\n        });\n      });\n      Logger.log(url)\n      return url;\n    } catch (err) {\n      if (err) {\n        throw new Error(err);\n      }\n    }\n  }\n  */\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/joi-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: this class accepts a joi validationSchema when instantiated. It will validate an incoming value against the provided validation schema\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: Schema)\n                    \n                \n                        \n                            \n                                Defined in src/common/pipes/joi-validation.pipe.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        Schema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/joi-validation.pipe.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport { Schema } from '@hapi/joi';\n\n/**\n * **summary**: this class accepts a joi validationSchema when instantiated. It will validate an incoming value against the provided validation schema\n */\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private readonly schema: Schema) {}\n\n  transform(value: any) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      Logger.error(error);\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/gaurds/jwt-auth.guard.ts\n        \n\n            \n                Description\n            \n            \n                summary: the guard that calls the Passport jwt-strategy\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n/**\n * **summary**: the guard that calls the [**Passport jwt-strategy**](http://www.passportjs.org/packages/passport-jwt/)\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtPayloadDto.html":{"url":"classes/JwtPayloadDto.html","title":"class - JwtPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/jwt-payload.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for a decoded JWT\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/jwt-payload.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/jwt-payload.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/jwt-payload.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class JwtPayloadDto { \n    username: string;\n    email: string; \n    userId: string;\n    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                summary: Passport Jwt-Strategy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n                    summary: return the decoded payload of the JWT\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwtConstants } from '../constant';\nimport { Request } from 'express'\n/**\n * **summary**: [**Passport Jwt-Strategy**](http://www.passportjs.org/packages/passport-jwt/)\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      // read JWT from the Cookie Header\n      jwtFromRequest: ExtractJwt.fromExtractors([(request: Request) => {\n        return request?.cookies?.Authentication;\n      }]),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  /**\n   * **summary**: return the decoded payload of the JWT\n   * @param payload \n   */\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username, email: payload.email };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocCreateRentalDto.html":{"url":"classes/LocCreateRentalDto.html","title":"class - LocCreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocCreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/loc-create-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: contains the initial data submitted by a user to create a new rental listing. It also\ncontains the raw location information as a single \"address\" string ad the coordinates for the address\n\npassed to the MapNewRentalPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                coords\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RawCreateRentalDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RawCreateRentalDto } from './raw-create-rental-dto';\n/**\n * **summary**: contains the initial data submitted by a user to create a new rental listing. It also\n * contains the raw location information as a single \"address\" string ad the coordinates for the address\n * - passed to the MapNewRentalPipe\n */\nexport class LocCreateRentalDto {\n  value: RawCreateRentalDto;\n  coords: [number, number];\n  address: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/gaurds/local-auth.guard.ts\n        \n\n            \n                Description\n            \n            \n                summary: the guard the calls the Passport local-strategy\n\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n/**\n * **summary**: the guard the calls the [**Passport local-strategy**](http://www.passportjs.org/packages/passport-local/)\n */\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:21\n                \n            \n\n\n            \n                \n                    summary: every passport strategy calls the validate method (which calls the validateUser function in the auth.service) for any strategy. \nif the user is found, Passport will create a user property on the request object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user email\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super({usernameField: 'email' }); // use email instead of username\n    }\n\n    /**\n     * **summary**: every passport strategy calls the validate method (which calls the validateUser function in the auth.service) for any strategy. \n     * if the user is found, Passport will create a user property on the request object\n     * @param email the user email\n     * @param password the user password\n     */\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validateUser(email, password);\n        if (!user) {\n            throw new Error('invalid credentials');\n            // throw new UnauthorizedException('invalid credentials');\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoggedOutGaurd.html":{"url":"guards/LoggedOutGaurd.html","title":"guard - LoggedOutGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoggedOutGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/gaurds/logged-out.guard.ts\n            \n\n                \n                Description\n                \n                \n                    summary: override the JWT expiration time and 'logout' a user by adding their JWT to a Redis cache 'dead-list'\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkDeadList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(redisService: RedisService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/gaurds/logged-out.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/gaurds/logged-out.guard.ts:38\n                \n            \n\n\n            \n                \n                    summary: method that decides if the request will continue to the handler or be blocked \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the execution context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            checkDeadList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDeadList(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/gaurds/logged-out.guard.ts:17\n                \n            \n\n\n            \n                \n                    summary: this is where we use redis to check the incoming jwt by it's last 8 digits. If the user's JWT is on the 'dead-list'\nthey are no longer authorized to make requests before logging in again\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { Observable } from \"rxjs\";\nimport { RedisService } from \"src/redis/service/redis.service\";\n/**\n * **summary**: override the JWT expiration time and 'logout' a user by adding their JWT to a Redis cache 'dead-list'\n */\n@Injectable()\nexport class LoggedOutGaurd implements CanActivate {\n    constructor(private readonly redisService: RedisService) {}\n\n    /**\n     * **summary**: this is where we use redis to check the incoming jwt by it's last 8 digits. If the user's JWT is on the 'dead-list'\n     * they are no longer authorized to make requests before logging in again\n     * @param req the request object\n     */\n    private async checkDeadList(req: Request): Promise {\n        // grab the key from the incoming jwt\n        const rawAuth = req.headers.cookie;\n        console.log(rawAuth);\n        const key = rawAuth.slice(-8);\n        const check = await this.redisService.get(key);\n        console.log(`LOGGED-OUT Guard Check Results: `);\n        console.log(check)\n        // if the key is found, deny access; User is Logged Out\n        if (check && check !== null) {\n            throw new Error('You are logged out, log back in to continue');\n            // REDIRECT to login\n        }\n        console.log('You are logged in :)')\n        return true;\n    }\n\n    /**\n     * **summary**: method that decides if the request will continue to the handler or be blocked \n     * @param context the execution context\n     */\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        const request = context.switchToHttp().getRequest();\n        return this.checkDeadList(request);\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logging-interceptor.ts\n        \n\n            \n                Description\n            \n            \n                summary: Interceptors capabilities:\n\nwraps the request/response stream so we can bind extra logic before / after method execution\ntransform the result returned from a function\nextend the basic function behavior\ncompletely override a function depending on specific conditions\nAspect Interception: log user interaction (e.g. storing user calls, async dispatching events, calculating a timestamp)\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logging-interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DateTime } from 'luxon';\n\n/**\n * **summary**: Interceptors capabilities:\n * - wraps the request/response stream so we can bind extra logic before / after method execution\n * - transform the result returned from a function\n * - extend the basic function behavior\n * - completely override a function depending on specific conditions\n * - Aspect Interception: log user interaction (e.g. storing user calls, async dispatching events, calculating a timestamp)\n */\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n\n    const req = context.switchToHttp().getRequest();\n    const method = req.method;\n    const url = req.url;\n    const now = DateTime.local();\n\n    return next.handle().pipe(\n      // calls Logger method upon graceful or exceptional termination of the observable stream\n      tap(err => {\n        Logger.log(\n          `${method} ${url} Date: ${now.month}/${now.day} Time: ${now.hour}:${\n            now.minute\n          }:${now.second}`,\n          `${context.getClass().name}.${context.getHandler().name}`,\n        );\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginDto.html":{"url":"injectables/LoginDto.html","title":"injectable - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: user credentials for logging into the application\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: user credentials for logging into the application\n */\n@Injectable()\nexport class LoginDto {\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for logging in a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pass\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    username: string;\n    pass: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailOptionsInterface.html":{"url":"interfaces/MailOptionsInterface.html","title":"interface - MailOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/interface/mailoptions.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: the mail options for the gmail NodeMailer\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        html\n                                \n                                \n                                        subject\n                                \n                                \n                                        text\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MailOptionsInterface {\n    from: string;\n    to: string;\n    subject: string;\n    text: string;\n    html: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapNewRentalPipe.html":{"url":"injectables/MapNewRentalPipe.html","title":"injectable - MapNewRentalPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapNewRentalPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/map-new-rental.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create the final CreateRentalDto that will be passed to the rental.service.createRental() method\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: LocCreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/map-new-rental.pipe.ts:13\n                \n            \n\n\n            \n                \n                    summary: transform the raw data into a CreateRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LocCreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request to create a rental with all of the necessary raw data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { LocCreateRentalDto } from '../dto/createRental/loc-create-rental.dto';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\n/**\n * **summary**: create the final CreateRentalDto that will be passed to the rental.service.createRental() method\n */\n@Injectable()\nexport class MapNewRentalPipe implements PipeTransform {\n  /**\n   * **summary**: transform the raw data into a CreateRentalDto\n   * @param value the request to create a rental with all of the necessary raw data\n   */\n  async transform(value: LocCreateRentalDto) {\n    try {\n      const data: CreateRentalDto = {\n        rentalDescription: 'this is a tokyo grocery getter',\n        address: value.address,\n        specs: value.value.specs,\n        registration: value.value.registration,\n        features: value.value.features,\n        scheduling: value.value.scheduling,\n        pricing: value.value.pricing,\n        loc: {\n          type: 'Point',\n          coordinates: value.coords,\n        },\n        photos: value.value.photos,\n        listed: value.value.listed,\n      };\n      return data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterUploadUtil.html":{"url":"injectables/MulterUploadUtil.html","title":"injectable - MulterUploadUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MulterUploadUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/multer-upload.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: upload a single or multiple files as a multerUpload\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/multer-upload.util.ts:19\n                            \n                        \n\n                \n                    \n                        summary: upload the provided files with the multerUpload object\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        req\n                                                        \n                                                                the client request\n\n                                                        \n                                                \n                                                \n                                                        res\n                                                        \n                                                                the response\n\n                                                        \n                                                \n                                                \n                                                        multerUpload\n                                                        \n                                                                uploader\n\n                                                        \n                                                \n                                                \n                                                        saveImages\n                                                        \n                                                                this.saveImages() method to save the uploaded image data\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                the image category: rentals || profile\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                        \n                                                                the user\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                id of the rental if this is a rental images upload\n\n                                                        \n                                                \n                                                \n                                                        model\n                                                        \n                                                                the database model which the this.saveImages() method will save images to\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: upload a single or multiple files as a multerUpload\n */\n@Injectable()\nexport class MulterUploadUtil {\n\n    /**\n     * **summary**: upload the provided files with the multerUpload object\n     * @param req the client request\n     * @param res the response\n     * @param multerUpload uploader\n     * @param saveImages this.saveImages() method to save the uploaded image data\n     * @param category the image category: rentals || profile\n     * @param user the user\n     * @param rental_id id of the rental if this is a rental images upload\n     * @param model the database model which the this.saveImages() method will save images to\n     */\n    upload = async (req, res, multerUpload, saveImages, category, user, rental_id, model): Promise => {\n        try {\n            await multerUpload(req, res, function (err) {\n                if (err) {\n                    console.log(err);\n                    return res.status(404).json(`Failed to upload image file: ${err}`);\n                }\n                // Save the Images\n                console.log(user)\n                saveImages(req.files, category, user.userId, rental_id, model);\n                return res.status(201).json(req.files[0].location);\n            });\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PositiveNumber.html":{"url":"injectables/PositiveNumber.html","title":"injectable - PositiveNumber","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PositiveNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/util/positive-number.ts\n        \n\n            \n                Description\n            \n            \n                summary: confirm the provided number is positive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/util/positive-number.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * **summary**: confirm the provided number is positive\n */\n@Injectable()\nexport class PositiveNumber {\n    validate = (data: number) => {\n        if (Math.sign(data) === -1) {\n            return false;\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PricingDto.html":{"url":"classes/PricingDto.html","title":"class - PricingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PricingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/pricing/pricing.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: edit the pricing of a rental\n\npassed to the rental.service.editPricing method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                discounts\n                            \n                            \n                                price\n                            \n                            \n                                rentalId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PricingDto {\n    rentalId: string;\n    price: number | null;\n    discounts: {\n        weekly: number | null;\n        monthly: number | null;\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PricingPipe.html":{"url":"injectables/PricingPipe.html","title":"injectable - PricingPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PricingPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/pricing.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate incoming price and discounts and map data into a PricingDto before sending to handler\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mapPricingDto\n                            \n                            \n                                    Private\n                                validatePricingDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: PricingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/pricing.pipe.ts:51\n                \n            \n\n\n            \n                \n                    summary: use the validatePricingDto() and mapPricingDto() methods to prepare the data for the request handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw request from a user to update the pricing of a Rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapPricingDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/pricing.pipe.ts:35\n                            \n                        \n\n                \n                    \n                        summary: map the final values of the PricingDto before passing to the handler\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        [object Object]\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validatePricingDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/pricing.pipe.ts:14\n                            \n                        \n\n                \n                    \n                        summary: validate the price and discounts do not have negative values nor violate common sense\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                the raw user request to update the Rental's pricing\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform} from '@nestjs/common';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\n\n/**\n * **summary**: validate incoming price and discounts and map data into a PricingDto before sending to handler\n */\n@Injectable()\nexport class PricingPipe implements PipeTransform {\n\n    /**\n     * **summary**: validate the price and discounts do not have negative values nor violate common sense\n     * @param data the raw user request to update the Rental's pricing\n     */\n    private validatePricingDto = async (data: PricingDto) => {\n        const minPrice: number = parseInt(process.env.MIN_PRICE, 10);\n        // check rentalId\n        if (!data.rentalId || (typeof data.rentalId !== 'string')) {\n            throw new Error('Invalid rentalID');\n        }\n        // check price is not negative && >= 9\n        if (Math.sign(data.price) === -1 || data.price  data.price) ||\n            (Math.sign(data.discounts.monthly) === -1 || data.discounts.monthly > data.price)) {\n            throw new Error('Discounts cannot be negative or greater than the price');\n        }\n    }\n\n    /**\n     * **summary**: map the final values of the PricingDto before passing to the handler\n     * @param \n     */\n    private mapPricingDto = async (data: PricingDto) => {\n        const value: PricingDto = {\n            rentalId: data.rentalId,\n            price: data.price ? data.price : null,\n            discounts: {\n                weekly: data.discounts.weekly ? data.discounts.weekly : null,\n                monthly: data.discounts.monthly ? data.discounts.monthly : null,\n            },\n        };\n        return value;\n    }\n\n    /**\n     * **summary**: use the validatePricingDto() and mapPricingDto() methods to prepare the data for the request handler\n     * @param value the raw request from a user to update the pricing of a Rental\n     */\n    async transform(value: PricingDto) {\n        try {\n            await this.validatePricingDto(value);\n            const data: PricingDto = await this.mapPricingDto(value);\n            return data;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessRentalTimeDto.html":{"url":"classes/ProcessRentalTimeDto.html","title":"class - ProcessRentalTimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessRentalTimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/process-rental-time.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the GenerateRentalDurationEnumUtil.processRentalTime() method\n\nthis dto is used to generate a RentalDuration Enum to represent this rentals scheduled duration; i.e. days, weeks, months\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                days\n                            \n                            \n                                months\n                            \n                            \n                                weeks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            days\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            months\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weeks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessRentalTimeDto {\n    months: number;\n    weeks: number;\n    days: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessSaveDataUtil.html":{"url":"injectables/ProcessSaveDataUtil.html","title":"injectable - ProcessSaveDataUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessSaveDataUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/process-save-data.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: utility to process the save image request data before passing it to the handler\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            process\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/process-save-data.util.ts:17\n                            \n                        \n\n                \n                    \n                        summary: create a new Image Document or an array of Image Documents to be saved\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        files\n                                                        \n                                                                the incoming file(s) to be saved\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                the user id\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the rental id\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                the category of the image: rentals or photos\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ImageInterface } from \"../interface/modelInterface/image.interface\";\nimport { ProcessedSaveDataDto } from \"../dto/processed-save-data.dto\";\n/**\n * **summary**: utility to process the save image request data before passing it to the handler\n */\n@Injectable()\nexport class ProcessSaveDataUtil {\n\n  /**\n   * **summary**: create a new Image Document or an array of Image Documents to be saved\n   * @param files the incoming file(s) to be saved\n   * @param user_id the user id\n   * @param rental_id the rental id\n   * @param category the category of the image: rentals or photos\n   */\n  process = async (files, user_id, rental_id, category): Promise => {\n    if (files && files.length > 0) {\n      // single file\n      if (files.length === 1) {\n        const temp = files[0];\n        const image: ImageInterface = {\n          user_id: user_id,\n          rental_id: rental_id,\n          bucket: temp.bucket,\n          key: temp.key,\n          etag: temp.etag,\n          category: category,\n          size: temp.size,\n          location: temp.location\n        }\n       return {packet: null, image: image}\n\n      }\n      // multiple files\n      const packet = files.map(item => {\n        const image: ImageInterface = {\n          user_id: user_id,\n          rental_id: rental_id,\n          bucket: item.bucket,\n          key: item.key,\n          etag: item.etag,\n          category: category,\n          size: item.size,\n          location: item.location\n        }\n        return image\n      });\n      return {packet: packet, image: null}\n    }\n    throw new Error('Failed to save: files were not found')\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessUnavailabilityPipe.html":{"url":"injectables/ProcessUnavailabilityPipe.html","title":"injectable - ProcessUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/process-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: query for any scheduled unavailability already in the database that would overlap with this request to add more unavailability to the Rental\nThis is to prevent the user on the front-end from accidentally overlapping 'blocks' of scheduled unavailability. The front-end of course should also block this\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addUnavailabilityId\n                            \n                            \n                                    Protected\n                                createQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidatedUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/process-unavailability.pipe.ts:121\n                \n            \n\n\n            \n                \n                    summary: process the request to update a rental's 'scheduled unavailability'\n\nthe user may schedule as far as a year ahead. To easily track the data as a single 'block' of unavailable time for the rental, each Unavailability document related to this query is given the same 'uuid'\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidatedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the validated unavailability request dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            addUnavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/process-unavailability.pipe.ts:57\n                            \n                        \n\n                \n                    \n                        summary: add unavailabilityId (uuid) to each UnavailabilityDto in the incoming ValidatedUnavailabilityDto\n\nthis method checks if the user is schedling time only for this year or into the next year as well\nthe uuid identifies a series of unavailability, allowing the entire block of time to be identified in the database\n\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the semi processed and validate client request data\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/process-unavailability.pipe.ts:19\n                            \n                        \n\n                \n                    \n                        summary: create a MongoDB query object from the provided CreateQueryDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        year\n                                                        \n                                                                data for creating a MongoDB update object\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { ValidatedUnavailabilityDto } from '../dto/unavailability/validated-unavailability.dto';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { UnavailabilityQueryDto } from '../dto/unavailability/schedule/unavailability-query.dto';\nimport { CreateQueryDto } from '../dto/unavailability/schedule/create-query.dto';\nimport { ProcessedUnavailabilityQueryDto } from '../dto/unavailability/schedule/processed-unavailability-query.dto';\n/**\n * **summary**: query for any scheduled unavailability already in the database that would overlap with this request to add more unavailability to the Rental\n * This is to prevent the user on the front-end from accidentally overlapping 'blocks' of scheduled unavailability. The front-end of course should also block this\n * @param year \n */\n@Injectable()\nexport class ProcessUnavailabilityPipe implements PipeTransform {\n\n  /**\n   * **summary**: create a MongoDB query object from the provided CreateQueryDto\n   * @param year data for creating a MongoDB update object\n   */\n  protected createQuery = async (\n    year: CreateQueryDto,\n  ): Promise => {\n    return {\n      rentalId: year.min.rentalId,\n      year: year.year,\n      doy: { $lte: year.max.doy, $gte: year.min.doy },\n      $or: [\n        {\n          // enclosed\n          start: { $gte: year.start },\n          end: { $lte: year.end },\n        },\n        {\n          // offset before start\n          start: { $lte: year.start },\n          end: { $gte: year.start },\n        },\n        {\n          // offset after end\n          start: { $lte: year.end },\n          end: { $gte: year.end },\n        },\n        {\n          // outside\n          start: { $lte: year.start },\n          end: { $gte: year.end },\n        },\n      ],\n    };\n  }\n\n  /**\n   * **summary**: add unavailabilityId (uuid) to each UnavailabilityDto in the incoming ValidatedUnavailabilityDto\n   * - this method checks if the user is schedling time only for this year or into the next year as well\n   * - the uuid identifies a series of unavailability, allowing the entire block of time to be identified in the database\n   * @param value the semi processed and validate client request data\n   */\n  protected addUnavailabilityId = async (\n    value: ValidatedUnavailabilityDto,\n  ): Promise => {\n    // temp arrays for transformation\n    const tY1 = [];\n    const tY2 = [];\n    const uuid = Date.now().toString();\n    // process 2 years\n    if (value.y2) {\n      value.y1.map(x => {\n        // y1\n        tY1.push({\n          unavailabilityId: uuid,\n          rentalId: x.rentalId,\n          year: x.year,\n          doy: x.doy,\n          start: x.start,\n          end: x.end,\n          title: x.title,\n        });\n      });\n      value.y2.map(x => {\n        // y2\n        tY2.push({\n          unavailabilityId: uuid,\n          rentalId: x.rentalId,\n          year: x.year,\n          doy: x.doy,\n          start: x.start,\n          end: x.end,\n          title: x.title,\n        });\n      });\n      // return processedUnavailabilityDto\n      const pY1: ProcessedUnavailabilityQueryDto[] = tY1;\n      const pY2: ProcessedUnavailabilityQueryDto[] = tY2;\n      return { pY1, pY2 };\n    }\n    // process 1 year\n    const ty1 = [];\n    value.y1.map(x => {\n      // y1\n      ty1.push({\n        unavailabilityId: uuid,\n        rentalId: x.rentalId,\n        year: x.year,\n        doy: x.doy,\n        start: x.start,\n        end: x.end,\n        title: x.title,\n      });\n    });\n    const py1: ProcessedUnavailabilityQueryDto[] = ty1;\n    return { pY1: py1, pY2: null };\n  }\n\n  /**\n   * **summary**: process the request to update a rental's 'scheduled unavailability'\n   * - the user may schedule as far as a year ahead. To easily track the data as a single 'block' of unavailable time for the rental, each Unavailability document related to this query is given the same 'uuid'\n   * @param value the validated unavailability request dto\n   */\n  async transform(\n    value: ValidatedUnavailabilityDto,\n  ): Promise {\n    // add uuid\n    const {pY1, pY2} = await this.addUnavailabilityId(value);\n    const { y1, y2 } = value;\n    // create Unavailability model queries for each year\n    if (y2 !== null) {\n      const createQuery1: CreateQueryDto = {\n        min: y1[0],\n        max: y1[y1.length - 1],\n        year: y1[0].year,\n        start: y1[0].start,\n        end: y1[0].end,\n      };\n      const createQuery2: CreateQueryDto = {\n        min: y2[0],\n        max: y2[y2.length - 1],\n        year: y2[0].year,\n        start: y2[0].start,\n        end: y2[0].end,\n      };\n      return {\n        y1Query: await this.createQuery(createQuery1),\n        y2Query: await this.createQuery(createQuery2),\n        data: {\n          y1: pY1,\n          y2: pY2,\n        },\n      };\n    }\n    // create an Unavailability model query for just one year\n    const createQuery = {\n      min: y1[0],\n      max: y1[y1.length - 1],\n      year: y1[0].year,\n      start: y1[0].start,\n      end: y1[0].end,\n    };\n    return {\n      y1Query: await this.createQuery(createQuery),\n      y2Query: null,\n      data: {\n        y1: pY1,\n        y2: null,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedSaveDataDto.html":{"url":"classes/ProcessedSaveDataDto.html","title":"class - ProcessedSaveDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedSaveDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/processed-save-data.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the dto for image data to be passed to the images.service.saveImages() method\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                image\n                            \n                            \n                                packet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/processed-save-data.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            packet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageInterface[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/processed-save-data.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ImageInterface } from \"../interface/modelInterface/image.interface\";\n/**\n * **summary**: the dto for image data to be passed to the images.service.saveImages() method\n */\nexport class ProcessedSaveDataDto {\n    packet: ImageInterface[];\n    image: ImageInterface;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedUnavailabilityDto.html":{"url":"classes/ProcessedUnavailabilityDto.html","title":"class - ProcessedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the final procesed version of the request to schedule unavailability. It contains the UnavailabilityQueryDto data that was used\nto create the ProcessedUnavailabilityQueryDtos as well as the returned ProcessedUnavailabilityQueryDto[]s that will be used by the handler\nto schedule the new unavailability.\n\npassed to the rental.service.scheduleUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                y1Query\n                            \n                            \n                                y2Query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1Query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityQueryDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2Query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityQueryDto | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityQueryDto } from './unavailability-query.dto';\nimport { ProcessedUnavailabilityQueryDto } from './processed-unavailability-query.dto';\n/**\n * **summary**: the final procesed version of the request to schedule unavailability. It contains the UnavailabilityQueryDto data that was used\n * to create the ProcessedUnavailabilityQueryDtos as well as the returned ProcessedUnavailabilityQueryDto[]s that will be used by the handler\n * to schedule the new unavailability.\n * - passed to the rental.service.scheduleUnavailability() method\n */\nexport class ProcessedUnavailabilityDto {\n    y1Query: UnavailabilityQueryDto;\n    y2Query: UnavailabilityQueryDto | null;\n    data: {\n        y1: ProcessedUnavailabilityQueryDto[];\n        y2: ProcessedUnavailabilityQueryDto[] | null;\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedUnavailabilityQueryDto.html":{"url":"classes/ProcessedUnavailabilityQueryDto.html","title":"class - ProcessedUnavailabilityQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedUnavailabilityQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this is a modified version of the UnavailabilityDto that is ready to be used in the CreateQueryDto\n\npassed as a property of the CreateQueryDto\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                unavailabilityId\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessedUnavailabilityQueryDto {\n    unavailabilityId: string; // for updating and quick indexing\n    rentalId: string;\n    year: number;\n    doy: number;\n    start: number;\n    end: number;\n    title: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawCoordinatesDto.html":{"url":"classes/RawCoordinatesDto.html","title":"class - RawCoordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawCoordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/raw-coordinates.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the Geocoding & Searching v7 API returns the following coordinates object when passed an address\n\npassed to GeoUrlApiUtil\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lat\n                            \n                            \n                                lng\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-coordinates.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lng\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-coordinates.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawCoordinatesDto {\n    lat: number;\n    lng: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawCreateRentalDto.html":{"url":"classes/RawCreateRentalDto.html","title":"class - RawCreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawCreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/raw-create-rental-dto.ts\n        \n\n            \n                Description\n            \n            \n                summary:\n\nThe initial values submitted by a user to create a new rental listing\nspecs: specifications about the vehicle\nregistration: basic vehicle registration data\nfeatures: e.g. 'bike rack', 'heated seats', 'auto-pilot', etc.\nscheduling: list the required advance notice, as well as min & max rental duration\npricing: the rental rate as well as discount conditions; e.g. weekly rentals get $5 off\nlocation: the steet, city, and zip of the user\nphotos: a max of 10 image references\nlisted: hide or show the rental to the application community\npassed to the GeoUrlApiPipe transform method. This is the raw data before the GeoJSON object is added and the final\nCreateRentalDto has not been created\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                features\n                            \n                            \n                                listed\n                            \n                            \n                                location\n                            \n                            \n                                photos\n                            \n                            \n                                pricing\n                            \n                            \n                                registration\n                            \n                            \n                                scheduling\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pricing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawCreateRentalDto {\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number | null;\n    hwyMpg: number | null;\n    mpgE: number | null;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: string[];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: number;\n    discounts: {\n      weekly: number;\n      monthly: number;\n    };\n  };\n  location: {\n    street: string;\n    city: string;\n    zip: number;\n  };\n  photos: string[];\n  listed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawScheduleUnavailabilityDto.html":{"url":"classes/RawScheduleUnavailabilityDto.html","title":"class - RawScheduleUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawScheduleUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the initial form data submitted from the client to request to schedule Unavailability for a rental\n\npassed to the SortUnavailabilityPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                unavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: the initial form data submitted from the client to request to schedule Unavailability for a rental\n * - passed to the SortUnavailabilityPipe\n */\nexport class RawScheduleUnavailabilityDto {\n  unavailability: UnavailabilityDto[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawSearchRentalDto.html":{"url":"classes/RawSearchRentalDto.html","title":"class - RawSearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawSearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/raw-search-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: search for retnals by address, a start and end time, price, and features\n\npassed to the GivenNoticePipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                price\n                            \n                            \n                                rentalEndTime\n                            \n                            \n                                rentalStartTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalEndTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalStartTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawSearchRentalDto {\n    address: string;\n    rentalStartTime: Date;\n    rentalEndTime: Date;\n    price: number;\n    features: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveUnavailabilityDto.html":{"url":"classes/RemoveUnavailabilityDto.html","title":"class - RemoveUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/remove/remove-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the information necessary to delte an Unavailability document from the database\n\npassed to the rental.service.removeUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/remove/remove-unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/remove/remove-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveUnavailabilityDto {\n  rentalId: string;\n  unavailabilityId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RentalController.html":{"url":"controllers/RentalController.html","title":"controller - RentalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RentalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/controller/rental.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rental\n            \n\n            \n                Description\n            \n            \n                \nsummary: controller for managing rentals in the application\nMiddleware: The ValidateUpdateUnavailabilityMiddleware class is applied to the updateUnavailability method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRental\n                            \n                            \n                                    Async\n                                editDetails\n                            \n                            \n                                    Async\n                                editPricing\n                            \n                            \n                                    Async\n                                removeUnavailability\n                            \n                            \n                                    Async\n                                scheduleUnavailability\n                            \n                            \n                                    Async\n                                searchRental\n                            \n                            \n                                    Async\n                                updateUnavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRental(rental: CreateRentalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new JoiValidationPipe())@UsePipes(new MapNewRentalPipe())@UsePipes(new GeoUrlApiPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:48\n                \n            \n\n\n            \n                \n                    Create Rental:\ncreate a new vehicle rental listing\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                CreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editDetails(editDetailsDto: EditDetailsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit-details')@UsePipes(new ValidateEditDetailsPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:85\n                \n            \n\n\n            \n                \n                    Edit Rental Details:\nedit the details of the Rental (# of seats, color, etc.)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editDetailsDto\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editPricing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editPricing(pricingDto: PricingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit-price')@UsePipes(new PricingPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:75\n                \n            \n\n\n            \n                \n                    Edit Pricing:\nedit the rental price\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pricingDto\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUnavailability(data: RemoveUnavailabilityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('remove-unavailability')@UsePipes(new ValidateRemoveUnavailabilityPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:117\n                \n            \n\n\n            \n                \n                    Remove Unavailability\nremove existing unavailability\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleUnavailability(processed: ProcessedUnavailabilityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('schedule-unavailability')@UsePipes(new ProcessUnavailabilityPipe())@UsePipes(new ValidateUnavailabilityPipe())@UsePipes(new SortUnavailabilityPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:97\n                \n            \n\n\n            \n                \n                    Schedule Unavailability\nset a period of unavailability for the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    processed\n                                    \n                                                ProcessedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRental(searchRentalDto: SearchRentalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UsePipes(new JoiValidationPipe())@UsePipes(new RequestCoordinatesPipe())@UsePipes(new RentalDurationPipe())@UsePipes(new GivenNoticePipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:65\n                \n            \n\n\n            \n                \n                    Search Rental:\nfind rentals available near a specified location (user's location)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchRentalDto\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUnavailability(data: UpdateUnavailabilityDataDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update-unavailability')@UsePipes(new CreateUpdaterDtoPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:107\n                \n            \n\n\n            \n                \n                    Update Unavailability\nedit current unavailability\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUnavailabilityDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, Param, UsePipes, Query, Res, Req } from '@nestjs/common';\nimport { RentalService } from '../service/rental.service';\nimport { GeoUrlApiPipe } from '../pipes/geo-url-api.pipe';\nimport { MapNewRentalPipe } from '../pipes/map-new-rental.pipe';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\nimport { JoiValidationPipe } from '../../common/pipes/joi-validation.pipe';\nimport { CreateRentalValidationSchema } from '../schema/validation/create-rental-validation.schema';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\nimport { RentalDurationPipe } from '../pipes/rental-duration.pipe';\nimport { GenerateRentalDurationEnumUtil } from '../utils/generate-rental-duration-enum.util';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\nimport { RequestCoordinatesPipe } from '../pipes/request-coordinates.pipe';\nimport { GivenNoticePipe } from '../pipes/given-notice.pipe';\nimport { SearchRentalValidationSchema } from '../schema/validation/search-rental-validation.schema';\nimport { PricingPipe } from '../pipes/pricing.pipe';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\nimport { ValidateEditDetailsPipe } from '../pipes/validate-edit-details.pipe';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { SortUnavailabilityPipe } from '../pipes/sort-unavailability.pipe';\nimport { ValidateUnavailabilityPipe } from '../pipes/validate-unavailability.pipe';\nimport { ProcessUnavailabilityPipe } from '../pipes/process-unavailability.pipe';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { CreateUpdaterDtoPipe } from '../pipes/create-updater-dto.pipe';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto' // '../dto/update-unavailability-data.dto';\nimport { ValidateRemoveUnavailabilityPipe } from '../pipes/validate-remove-unavailability.pipe';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * - **summary**: controller for managing rentals in the application\n * - **Middleware**: The ValidateUpdateUnavailabilityMiddleware class is applied to the updateUnavailability method\n */\n@Controller('rental')\nexport class RentalController {\n  constructor(\n    private readonly rentalService: RentalService,\n    ) {}\n\n  /**\n   * Create Rental:\n   * create a new vehicle rental listing\n   */\n  @Post()\n  @UsePipes(new JoiValidationPipe(CreateRentalValidationSchema))\n  @UsePipes(new MapNewRentalPipe())\n  @UsePipes(new GeoUrlApiPipe(new GeoUrlApiUtil(), new AppConfigService(new ConfigService)))\n  async createRental(@Body() rental: CreateRentalDto) {\n    try {\n      return await this.rentalService.createRental(rental);\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * Search Rental:\n   * find rentals available near a specified location (user's location)\n   */\n  @Get()\n  @UsePipes(new JoiValidationPipe(SearchRentalValidationSchema))\n  @UsePipes(new RequestCoordinatesPipe(new GeoUrlApiUtil()))\n  @UsePipes(new RentalDurationPipe(new GenerateRentalDurationEnumUtil()))\n  @UsePipes(new GivenNoticePipe())\n  async searchRental(@Query() searchRentalDto: SearchRentalDto) {\n      return await this.rentalService.searchRental(searchRentalDto);\n  }\n\n  /**\n   * Edit Pricing:\n   * edit the rental price\n   */\n  @Post('edit-price')\n  @UsePipes(new PricingPipe())\n  async editPricing(@Body() pricingDto: PricingDto) {\n      return await this.rentalService.editPricing(pricingDto);\n  }\n\n  /**\n   * Edit Rental Details:\n   * edit the details of the Rental (# of seats, color, etc.)\n   */\n  @Post('edit-details')\n  @UsePipes(new ValidateEditDetailsPipe())\n  async editDetails(@Body() editDetailsDto: EditDetailsDto) {\n      return await this.rentalService.editDetails(editDetailsDto);\n  }\n\n  /**\n   * Schedule Unavailability\n   * set a period of unavailability for the rental\n   */\n  @Post('schedule-unavailability')\n  @UsePipes(new ProcessUnavailabilityPipe())\n  @UsePipes(new ValidateUnavailabilityPipe())\n  @UsePipes(new SortUnavailabilityPipe())\n  async scheduleUnavailability(@Body() processed: ProcessedUnavailabilityDto ) {\n    return await this.rentalService.scheduleUnavailability(processed);\n  }\n\n  /**\n   * Update Unavailability\n   * edit current unavailability\n   */\n  @Post('update-unavailability')\n  @UsePipes(new CreateUpdaterDtoPipe())\n  async updateUnavailability(@Body() data: UpdateUnavailabilityDataDto) {\n    return await this.rentalService.updateUnavailability(data);\n  }\n\n   /**\n    * Remove Unavailability\n    * remove existing unavailability\n    */\n   @Post('remove-unavailability')\n   @UsePipes(new ValidateRemoveUnavailabilityPipe())\n   async removeUnavailability(@Body() data: RemoveUnavailabilityDto) {\n     return await this.rentalService.removeUnavailability(data);\n   }\n\n   /**\n    * Upload Rental Photos\n    * upload photos of your rental listing\n    * ! see the images/controller\n    */\n\n    /**\n     * Toggle Rental listed status\n     */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalDurationPipe.html":{"url":"injectables/RentalDurationPipe.html","title":"injectable - RentalDurationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RentalDurationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/rental-duration.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a rental Duration from the incoming GivenNoticeSearchRentalDto\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(generateDuration: GenerateRentalDurationEnumUtil)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/rental-duration.pipe.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        generateDuration\n                                                  \n                                                        \n                                                                        GenerateRentalDurationEnumUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: GivenNoticeSearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/rental-duration.pipe.ts:19\n                \n            \n\n\n            \n                \n                    summary: use the generateRentalDurationEnumUtil() to create a RentalDuration Enum for the\nRental query\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                GivenNoticeSearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the semi processed client request data to query a rental near their, or a specified, locaion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { GivenNoticeSearchRentalDto } from '../dto/searchRental/given-notice-search-rental-dto';\nimport { GenerateRentalDurationEnumUtil } from '../utils/generate-rental-duration-enum.util';\nimport { RequestCoordinatesDto } from '../dto/searchRental/request-coordinates.dto';\n/**\n * **summary**: create a rental Duration from the incoming GivenNoticeSearchRentalDto\n */\n@Injectable()\nexport class RentalDurationPipe implements PipeTransform {\n  constructor(private generateDuration: GenerateRentalDurationEnumUtil) {\n    this.generateDuration = generateDuration;\n  }\n\n  /**\n   * **summary**: use the generateRentalDurationEnumUtil() to create a RentalDuration [**Enum**](https://www.typescriptlang.org/docs/handbook/enums.html) for the\n   * Rental query\n   * @param value the semi processed client request data to query a rental near their, or a specified, locaion\n   */\n  async transform(value: GivenNoticeSearchRentalDto) {\n    try {\n      const dto: RequestCoordinatesDto = {\n        address: value.address,\n        price: value.price,\n        features: value.features,\n        rentalDuration: await this.generateDuration.generateRentalDurationEnum(\n          value.rentalStartTime,\n          value.rentalEndTime,\n        ),\n        givenNotice: value.givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RentalInterface.html":{"url":"interfaces/RentalInterface.html","title":"interface - RentalInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RentalInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/interface/modelInterface/Rental/rental.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the 'Rental' Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        features\n                                \n                                \n                                        listed\n                                \n                                \n                                        loc\n                                \n                                \n                                        photos\n                                \n                                \n                                        pricing\n                                \n                                \n                                        registration\n                                \n                                \n                                        rentalDescription\n                                \n                                \n                                        scheduling\n                                \n                                \n                                        specs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     [string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listed\n                                    \n                                \n                                \n                                    \n                                        listed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loc\n                                    \n                                \n                                \n                                    \n                                        loc:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:     [string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pricing\n                                    \n                                \n                                \n                                    \n                                        pricing:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration\n                                    \n                                \n                                \n                                    \n                                        registration:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rentalDescription\n                                    \n                                \n                                \n                                    \n                                        rentalDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduling\n                                    \n                                \n                                \n                                    \n                                        scheduling:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        specs\n                                    \n                                \n                                \n                                    \n                                        specs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RentalInterface {\n  rentalDescription: string;\n  address: string;\n  loc: {\n    type: string;\n    coordinates: string;\n  };\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: [string];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: { type: number /*; default: DEFAULT_PRICE*/ };\n    discounts: {\n      weekly: { type: number; default: null };\n      monthly: { type: number; default: null };\n    };\n  };\n  photos: [string];\n  listed: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RentalModule.html":{"url":"modules/RentalModule.html","title":"module - RentalModule","body":"\n                   \n\n\n\n\n    Modules\n    RentalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RentalModule\n\n\n\ncluster_RentalModule_exports\n\n\n\ncluster_RentalModule_imports\n\n\n\ncluster_RentalModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nRentalModule\n\nRentalModule\n\nRentalModule -->\n\nDatabaseModule->RentalModule\n\n\n\n\n\nRentalService \n\nRentalService \n\nRentalService  -->\n\nRentalModule->RentalService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nRentalModule -->\n\nAppConfigService->RentalModule\n\n\n\n\n\nCreateUpdaterDtoPipe\n\nCreateUpdaterDtoPipe\n\nRentalModule -->\n\nCreateUpdaterDtoPipe->RentalModule\n\n\n\n\n\nGenerateRentalDurationEnumUtil\n\nGenerateRentalDurationEnumUtil\n\nRentalModule -->\n\nGenerateRentalDurationEnumUtil->RentalModule\n\n\n\n\n\nGeoUrlApiPipe\n\nGeoUrlApiPipe\n\nRentalModule -->\n\nGeoUrlApiPipe->RentalModule\n\n\n\n\n\nGeoUrlApiUtil\n\nGeoUrlApiUtil\n\nRentalModule -->\n\nGeoUrlApiUtil->RentalModule\n\n\n\n\n\nGivenNoticePipe\n\nGivenNoticePipe\n\nRentalModule -->\n\nGivenNoticePipe->RentalModule\n\n\n\n\n\nMapNewRentalPipe\n\nMapNewRentalPipe\n\nRentalModule -->\n\nMapNewRentalPipe->RentalModule\n\n\n\n\n\nPricingPipe\n\nPricingPipe\n\nRentalModule -->\n\nPricingPipe->RentalModule\n\n\n\n\n\nProcessUnavailabilityPipe\n\nProcessUnavailabilityPipe\n\nRentalModule -->\n\nProcessUnavailabilityPipe->RentalModule\n\n\n\n\n\nRentalDurationPipe\n\nRentalDurationPipe\n\nRentalModule -->\n\nRentalDurationPipe->RentalModule\n\n\n\n\n\nRentalService\n\nRentalService\n\nRentalModule -->\n\nRentalService->RentalModule\n\n\n\n\n\nRequestCoordinatesPipe\n\nRequestCoordinatesPipe\n\nRentalModule -->\n\nRequestCoordinatesPipe->RentalModule\n\n\n\n\n\nSortUnavailabilityPipe\n\nSortUnavailabilityPipe\n\nRentalModule -->\n\nSortUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateEditDetailsPipe\n\nValidateEditDetailsPipe\n\nRentalModule -->\n\nValidateEditDetailsPipe->RentalModule\n\n\n\n\n\nValidateRemoveUnavailabilityPipe\n\nValidateRemoveUnavailabilityPipe\n\nRentalModule -->\n\nValidateRemoveUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateUnavailabilityPipe\n\nValidateUnavailabilityPipe\n\nRentalModule -->\n\nValidateUnavailabilityPipe->RentalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rental/rental.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nsummary: This module provides all of the functionality for working with Rentals\nMiddleware: This module consumes the ValidateUpdateUnavailability middleware; for more details, in the documentation checkout the Injectables ValidateUpdateUnavailability tab\nDatabase: This module applies indexing to the Unavailability model of the database\n\n\n\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            CreateUpdaterDtoPipe\n                        \n                        \n                            GenerateRentalDurationEnumUtil\n                        \n                        \n                            GeoUrlApiPipe\n                        \n                        \n                            GeoUrlApiUtil\n                        \n                        \n                            GivenNoticePipe\n                        \n                        \n                            MapNewRentalPipe\n                        \n                        \n                            PricingPipe\n                        \n                        \n                            ProcessUnavailabilityPipe\n                        \n                        \n                            RentalDurationPipe\n                        \n                        \n                            RentalService\n                        \n                        \n                            RequestCoordinatesPipe\n                        \n                        \n                            SortUnavailabilityPipe\n                        \n                        \n                            ValidateEditDetailsPipe\n                        \n                        \n                            ValidateRemoveUnavailabilityPipe\n                        \n                        \n                            ValidateUnavailabilityPipe\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RentalController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RentalService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/rental.module.ts:71\n                \n            \n\n\n            \n                \n                    summary: applies the ValidateUpdateUnavailability which validates a user's request to the rental.controller.updateUnavaialability method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        interfacing defining method for applying user defined middleware to routes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { RentalController } from './controller/rental.controller';\nimport { RentalService } from './service/rental.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RentalSchema } from './schema/rental.schema';\nimport { GeoUrlApiUtil } from './utils/geo-url-api.util';\nimport { UnavailabilitySchema } from './schema/unavailability-schema';\nimport { DatabaseModule } from '../database/database.module';\nimport { unavailabilityProvider } from '../database/providers/unavailability-model.provider';\nimport { ValidateUpdateUnavailabilityMiddleware } from './middleware/validate-update-unavailability.middleware';\nimport { MapNewRentalPipe } from './pipes/map-new-rental.pipe';\nimport { GeoUrlApiPipe } from './pipes/geo-url-api.pipe';\nimport { RequestCoordinatesPipe } from './pipes/request-coordinates.pipe';\nimport { RentalDurationPipe } from './pipes/rental-duration.pipe';\nimport { GivenNoticePipe } from './pipes/given-notice.pipe';\nimport { PricingPipe } from './pipes/pricing.pipe';\nimport { ValidateEditDetailsPipe } from './pipes/validate-edit-details.pipe';\nimport { ProcessUnavailabilityPipe } from './pipes/process-unavailability.pipe';\nimport { ValidateUnavailabilityPipe } from './pipes/validate-unavailability.pipe';\nimport { SortUnavailabilityPipe } from './pipes/sort-unavailability.pipe';\nimport { CreateUpdaterDtoPipe } from './pipes/create-updater-dto.pipe';\nimport { ValidateRemoveUnavailabilityPipe } from './pipes/validate-remove-unavailability.pipe';\nimport { AppConfigService } from 'src/config/configuration.service';\nimport { GenerateRentalDurationEnumUtil } from './utils/generate-rental-duration-enum.util';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n/**\n * - **summary**: This module provides all of the functionality for working with Rentals\n *   - **Middleware**: This module consumes the **ValidateUpdateUnavailability** middleware; for more details, in the documentation checkout the **Injectables** ValidateUpdateUnavailability tab\n *   - **Database**: This module applies indexing to the **Unavailability** model of the database\n */\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Rental', schema: RentalSchema }]),\n    MongooseModule.forFeature([{name: 'Unavailability', schema: UnavailabilitySchema}]),\n    DatabaseModule,\n    ConfigModule,\n  ],\n  controllers: [RentalController],\n  providers: [\n    RentalService,\n    GeoUrlApiUtil,\n    ...unavailabilityProvider,\n    MapNewRentalPipe,\n    GeoUrlApiPipe,\n    RequestCoordinatesPipe,\n    RentalDurationPipe,\n    GenerateRentalDurationEnumUtil,\n    GivenNoticePipe,\n    PricingPipe,\n    ValidateEditDetailsPipe,\n    ProcessUnavailabilityPipe,\n    ValidateUnavailabilityPipe,\n    SortUnavailabilityPipe,\n    CreateUpdaterDtoPipe,\n    ValidateRemoveUnavailabilityPipe,\n    AppConfigService,\n    ConfigService\n  ],\n  exports: [RentalService],\n})\nexport class RentalModule implements NestModule {\n  constructor() {\n    RentalSchema.index({ loc: '2dsphere' });\n    UnavailabilitySchema.index({rentalId: 1});\n    UnavailabilitySchema.index({UnavailabilityId: 1});\n  }\n  /**\n   * **summary**: applies the ValidateUpdateUnavailability which validates a user's request to the rental.controller.updateUnavaialability method\n   * @param consumer interfacing defining method for applying user defined middleware to routes\n   */\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ValidateUpdateUnavailabilityMiddleware)\n      .forRoutes('v1/rental');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalService.html":{"url":"injectables/RentalService.html","title":"injectable - RentalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RentalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/service/rental.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: create, search for near (within a radius: e.g. 10 miles of) a location, update details, and schedule blocks of unavailable time for Rentals\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkForOverlap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRental\n                            \n                            \n                                    Private\n                                    Async\n                                createRentalQuery\n                            \n                            \n                                    Async\n                                editDetails\n                            \n                            \n                                    Async\n                                editPricing\n                            \n                            \n                                    Async\n                                removeUnavailability\n                            \n                            \n                                    Async\n                                scheduleUnavailability\n                            \n                            \n                                    Async\n                                searchRental\n                            \n                            \n                                    Async\n                                updateUnavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rentalModel: Model, unavailability: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/service/rental.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rentalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unavailability\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRental(rental: CreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:31\n                \n            \n\n\n            \n                \n                    summary: create a new rental listing with attached geolocation coordinates\nso the rental may be found by a geospatial query\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                CreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new rental to be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createRentalQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRentalQuery(rental: SearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:178\n                \n            \n\n\n            \n                \n                    summary: convert a searchRentalDto into a mongoose query for the searchRental method\n\nThe query searchs a maxium 8 mile radius for rentals\nFilters: \nrental min duration\nrental max duration\nadvance notice minimum; e.g. 1 hour\nloc: GeoJSON object\nrental price: optional\nrental features: optional\n\n\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        searchRentalDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editDetails(data: EditDetailsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:92\n                \n            \n\n\n            \n                \n                    summary: edit the details of the Rental (# of seats, color, etc.)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data comes as an EditDetailsDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editPricing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editPricing(data: PricingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:65\n                \n            \n\n\n            \n                \n                    summary: edit the rental pricing\n\nprice\ndiscounts:\nweekly\nmonthly\n\n\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUnavailability(data: RemoveUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:151\n                \n            \n\n\n            \n                \n                    summary: remove an amount of time from a scheduled duration of unavailability on the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleUnavailability(processed: ProcessedUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:113\n                \n            \n\n\n            \n                \n                    summary: set a period of unavailability for the rental (e.g. mon - wed)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    processed\n                                    \n                                                ProcessedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRental(rental: SearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:44\n                \n            \n\n\n            \n                \n                    summary: query rentals in the database with the data provided in the SearchRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SearchRentalDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUnavailability(data: UpdateUnavailabilityDataDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:134\n                \n            \n\n\n            \n                \n                    summary: edit a block of scheduled unavailability by either extending or reducing the scheduled duration of time on the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUnavailabilityDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkForOverlap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/service/rental.service.ts:216\n                            \n                        \n\n                \n                    \n                        summary: validate there currently is no scheduled unavailability for the rental in the database that overlaps \nwith the requested unavailability \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                query for 1 or 2 years\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger } from '@nestjs/common';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RentalInterface } from '../interface/modelInterface/Rental/rental.interface';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { unavailabilityModel } from '../../common/Const';\nimport { UnavailabilityInterface } from '../interface/modelInterface/Unavailability/unavailability.interface';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\n\n/**\n * **summary**: create, search for near (within a radius: e.g. 10 miles of) a location, update details, and schedule blocks of unavailable time for Rentals\n */\n@Injectable()\nexport class RentalService {\n  constructor(\n    @InjectModel('Rental') private readonly rentalModel: Model,\n    @Inject(unavailabilityModel)\n    private readonly unavailability: Model,\n  ) { }\n\n  /**\n   * **summary**: create a new rental listing with attached geolocation coordinates\n   * so the rental may be found by a geospatial query\n   * @param rental the new rental to be created\n   */\n  async createRental(rental: CreateRentalDto) {\n    try {\n      const document = await new this.rentalModel(rental);\n      return await document.save();\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: query rentals in the database with the data provided in the SearchRentalDto\n   * @param rental SearchRentalDto\n   */\n  async searchRental(rental: SearchRentalDto) {\n    try {\n      const query = await this.createRentalQuery(rental);\n      const rentals = await this.rentalModel.find(query);\n      if (rentals.length > 0) {\n        return rentals;\n      } else {\n        throw new Error('No rentals were found');\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit the rental pricing\n   * - price\n   * - discounts:\n   *   - weekly\n   *   - monthly\n   */\n  async editPricing(data: PricingDto) {\n    // make an update document\n    try {\n      const filter = { _id: data.rentalId };\n      const update = {\n        pricing: {\n          price: data.price,\n          discounts: {\n            weekly: data.discounts.weekly,\n            monthly: data.discounts.monthly,\n          },\n        },\n      };\n      const updater = {\n        $set: update,\n      };\n      const doc = await this.rentalModel.findOneAndUpdate(filter, updater, { new: true });\n      return doc;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit the details of the Rental (# of seats, color, etc.)\n   * @param data the data comes as an EditDetailsDto\n   */\n  async editDetails(data: EditDetailsDto) {\n    // make an update document\n    try {\n      const filter = { _id: data.rentalId };\n      const update = {\n        specs: data.specs,\n        features: data.features,\n      };\n      const updater = {\n        $set: update,\n      };\n      const doc = await this.rentalModel.findOneAndUpdate(filter, updater, { new: true });\n      return doc;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: set a period of unavailability for the rental (e.g. mon - wed)\n   */\n  async scheduleUnavailability(processed: ProcessedUnavailabilityDto) {\n    try {\n      await this.checkForOverlap(processed);\n      // if it passed, combine data into one array and insert\n      const { y1, y2 } = processed.data;\n      if (y2 !== null) {\n        const merged = y1.concat(y2);\n        Logger.log(`the merged years`);\n        Logger.log(merged);\n        return await this.unavailability.insertMany(merged, { ordered: true });\n      }\n      return await this.unavailability.insertMany(y1, { ordered: true });\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit a block of scheduled unavailability by either extending or reducing the scheduled duration of time on the rental\n   * @param data \n   */\n  async updateUnavailability(data: UpdateUnavailabilityDataDto) {\n    // send the update\n    try {\n      const update = await this.unavailability.updateMany(\n        data.filter,\n        data.updater,\n      );\n      return update;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: remove an amount of time from a scheduled duration of unavailability on the rental\n   * @param data \n   */\n  async removeUnavailability(data: RemoveUnavailabilityDto) {\n    try {\n      const remove = await this.unavailability.deleteMany({\n        rentalId: data.rentalId,\n        unavailabilityId: data.unavailabilityId,\n      });\n      if (remove.deletedCount === 0) {\n        throw new Error('No Unavailability documents were found, no documents were deleted');\n      }\n      return remove;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: convert a searchRentalDto into a mongoose query for the searchRental method\n   * - The query searchs a maxium 8 mile radius for rentals\n   * - Filters: \n   *   - rental min duration\n   *   - rental max duration\n   *   - advance notice minimum; e.g. 1 hour\n   *   - loc: GeoJSON object\n   *   - rental price: optional\n   *   - rental features: optional\n   * @param rental searchRentalDto\n   */\n  private async createRentalQuery(rental: SearchRentalDto) {\n    try {\n      const query: any = {\n        'scheduling.rentMinDuration': { $lte: rental.rentalDuration },\n        'scheduling.rentMaxDuration': { $gte: rental.rentalDuration },\n        'scheduling.requiredNotice': { $lte: rental.givenNotice },\n        'loc': {\n          $near: {\n            $maxDistance: 12875, // 8 miles\n            $geometry: {\n              type: rental.loc.type,\n              coordinates: [\n                rental.loc.coordinates[0], // latitude\n                rental.loc.coordinates[1], // longitude\n              ],\n            },\n          },\n        },\n      };\n      rental.price\n        ? (query.pricing = {\n          price: rental.price, // add price as optional search parameter\n        })\n        : (rental.price = null);\n      rental.features\n        ? (query.features = { $in: rental.features })\n        : (rental.features = null);\n      return query;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: validate there currently is no scheduled unavailability for the rental in the database that overlaps \n   * with the requested unavailability \n   * @param data query for 1 or 2 years\n   */\n  private checkForOverlap = async (data: ProcessedUnavailabilityDto) => {\n    const { y1Query, y2Query } = data;\n    // if there are 2 years\n    if (y2Query !== null) {\n      const test1 = await this.unavailability.find(y1Query);\n      const test2 = await this.unavailability.find(y2Query);\n      Logger.log(`test1`);\n      Logger.log(test1);\n      Logger.log(`test2`);\n      Logger.log(test2);\n      if (test1.length || test2.length) {\n        throw new Error('this request overlaps with existing unavailability');\n      }\n    }\n    // else\n    const test = await this.unavailability.find(y1Query);\n    if (test.length) {\n      throw new Error('this request overlaps with existing unavailability');\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCoordinatesDto.html":{"url":"classes/RequestCoordinatesDto.html","title":"class - RequestCoordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCoordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/request-coordinates.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto contains the results of the GivenNoticePipe; which added the givenNotice property to this data\n\npassed to the RequestCoordinatesPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                price\n                            \n                            \n                                rentalDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RequestCoordinatesDto {\n  address: string;\n  price: number;\n  features: string[];\n  rentalDuration: number; // enum\n  givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestCoordinatesPipe.html":{"url":"injectables/RequestCoordinatesPipe.html","title":"injectable - RequestCoordinatesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestCoordinatesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/request-coordinates.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a SearchRentalDto with the GeoJSON loc property with the HERE Geocoding & Searching API\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geoUrlApiUtil: GeoUrlApiUtil)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/request-coordinates.pipe.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geoUrlApiUtil\n                                                  \n                                                        \n                                                                        GeoUrlApiUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RequestCoordinatesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/request-coordinates.pipe.ts:17\n                \n            \n\n\n            \n                \n                    summary: finish transforming the client request into a SearchRentalDto using the geoUrlApiUtil.getCoordinates() method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RequestCoordinatesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the semi-processed client request data to search for Rentals\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { RequestCoordinatesDto } from '../dto/searchRental/request-coordinates.dto';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\n\n/**\n * **summary**: create a SearchRentalDto with the GeoJSON loc property with the [**HERE Geocoding & Searching API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html)\n */\n@Injectable()\nexport class RequestCoordinatesPipe implements PipeTransform {\n  constructor(private readonly geoUrlApiUtil: GeoUrlApiUtil) {}\n\n  /**\n   * **summary**: finish transforming the client request into a SearchRentalDto using the geoUrlApiUtil.getCoordinates() method\n   * @param value the semi-processed client request data to search for Rentals\n   */\n  async transform(value: RequestCoordinatesDto) {\n    const geoUrl = process.env.GEO_URL;\n    const apiKey = process.env.GEO_API_KEY; \n    try {\n      const dto: SearchRentalDto = {\n        address: value.address,\n        price: value.price,\n        features: value.features,\n        rentalDuration: value.rentalDuration,\n        loc: {\n          type: 'Point',\n          coordinates: await this.geoUrlApiUtil.getCoordinates(\n            value.address,\n            geoUrl,\n            apiKey\n          ),\n        },\n        givenNotice: value.givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/reset-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transer object for resetting a user password\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPass\n                            \n                            \n                                    Readonly\n                                resetPass\n                            \n                            \n                                    Readonly\n                                resetPasswordToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            confirmPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resetPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resetPasswordToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ResetPasswordDto {\n\treadonly resetPass: string;\n\treadonly confirmPass: string;\n\treadonly resetPasswordToken: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordTokenDto.html":{"url":"injectables/ResetPasswordTokenDto.html","title":"injectable - ResetPasswordTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/find-user-by-reset-password-token.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: find a user by the reset password token\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/find-user-by-reset-password-token.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: find a user by the reset password token\n */\n@Injectable()\nexport class ResetPasswordTokenDto {\n    token: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Provider.html":{"url":"injectables/S3Provider.html","title":"injectable - S3Provider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Provider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/providers/s3.provider.ts\n        \n\n            \n                Description\n            \n            \n                summary: provide connection to the AWS S3 bucket\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getS3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/images/providers/s3.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/providers/s3.provider.ts:14\n                            \n                        \n\n                \n                    \n                        summary: connect to the S3 bucket with the access key and it's ID\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AppConfigService } from \"src/config/configuration.service\";\nimport { S3 } from 'aws-sdk'\n/**\n * **summary**: provide connection to the AWS S3 bucket\n */\n@Injectable()\nexport class S3Provider {\n    constructor(private readonly appConfig: AppConfigService) {\n    }\n    /**\n     * **summary**: connect to the S3 bucket with the access key and it's ID\n     */\n    getS3 = () => {\n        return new S3({\n            accessKeyId: this.appConfig.access_key_id,\n            secretAccessKey: this.appConfig.secret_access_key\n        })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchRentalDto.html":{"url":"classes/SearchRentalDto.html","title":"class - SearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/search-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto is the final form of the request to search for a rental. It includes the givenNotice,\nthe rentalDuration, and the GeoJSON loc property\n\npassed to the rental.service.searchRentals method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                loc\n                            \n                            \n                                price\n                            \n                            \n                                rentalDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SearchRentalDto {\n    address: string;\n    price: number;\n    features: string[];\n    rentalDuration: number;\n    loc: {\n        type: 'Point'\n        coordinates: [number, number];\n    };\n    givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SortUnavailabilityPipe.html":{"url":"injectables/SortUnavailabilityPipe.html","title":"injectable - SortUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SortUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/sort-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: sort the requested Rental Unavailability into a single or 2 year groupings (arrays). Sort each year's (array's) UnavailabilityDtos by ascending DOY (Day of the Year)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderYears\n                            \n                            \n                                    Private\n                                sort\n                            \n                            \n                                    Private\n                                validate2Years\n                            \n                            \n                                    Private\n                                validateSequential\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawScheduleUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:85\n                \n            \n\n\n            \n                \n                    summary: use the sort(), orderYears(), validateSequential(), and validate2Years() methods to sort and return the data as a ValidateScheduleUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawScheduleUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            orderYears\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:40\n                            \n                        \n\n                \n                    \n                        summary: return the sorted (by DOY) years in order, or return a single year\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        sorted\n                                                        \n                                                                the incoming data to be sorted\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:58\n                            \n                        \n\n                \n                    \n                        summary: separate years into y1 and y2 array and sort each by DOY\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw client request to schedule Unavailability on a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validate2Years\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:16\n                            \n                        \n\n                \n                    \n                        summary: validate that the requested Unavailability does not cross more than a one year duration\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        yearB\n                                                        \n                                                                this value is exactly 1 year from the current date\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateSequential\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:30\n                            \n                        \n\n                \n                    \n                        summary: validate that the request to schedule unavailability is sequential and not two separate blocks of time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        a\n                                                        \n                                                                year 1\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                year 2\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { UnavailabilityDto } from '../dto/unavailability/unavailability.dto';\nimport { RawScheduleUnavailabilityDto } from '../dto/unavailability/schedule/raw-schedule-unavailability.dto';\nimport { SortedUnavailabilityDto } from '../dto/unavailability/schedule/sorted-unavailability.dto';\nimport { ValidateScheduleUnavailabilityDto } from '../dto/unavailability/schedule/validate-schedule-unavailability.dto';\n/**\n * **summary**: sort the requested Rental Unavailability into a single or 2 year groupings (arrays). Sort each year's (array's) UnavailabilityDtos by ascending DOY (Day of the Year)\n */\n@Injectable()\nexport class SortUnavailabilityPipe implements PipeTransform {\n  \n  /**\n   * **summary**: validate that the requested Unavailability does not cross more than a one year duration\n   * @param yearB this value is exactly 1 year from the current date\n   */\n  private validate2Years = async (yearB: UnavailabilityDto[]): Promise => {\n    for (const x of yearB) {\n      if (x.year !== yearB[0].year) {\n        throw new Error('Cannot request 3 years of unavailability');\n      }\n    }\n    return;\n  }\n\n  /**\n   * **summary**: validate that the request to schedule unavailability is sequential and not two separate blocks of time\n   * @param a year 1\n   * @param b year 2\n   */\n  private validateSequential = async (a, b): Promise => {\n    if (a + 1 !== b) {\n      throw new Error('years must be sequential');\n    }\n  }\n\n  /**\n   * **summary**: return the sorted (by DOY) years in order, or return a single year\n   * @param sorted the incoming data to be sorted\n   */\n  private orderYears = async (sorted: SortedUnavailabilityDto): Promise => {\n    // return a single year\n    if (sorted.yB === null) {\n      return { y1: sorted.yA, y2: null };\n    }\n    // place 2 years in order & validate they are sequential\n    if (sorted.yA[0].year  => {\n    // grab the year property from the first element\n    const iYear: number = value.unavailability[0].year;\n    // filter for other year(s)\n    const tYearB: UnavailabilityDto[] = value.unavailability.filter(\n      val => val.year !== iYear,\n    );\n    // return 2 sorted years\n    if (tYearB && tYearB.length) {\n      await this.validate2Years(tYearB);\n      const yearB = tYearB.sort((a, b) => a.doy - b.doy);\n      const yearA: UnavailabilityDto[] = value.unavailability\n        .filter(val => val.year === iYear)\n        .sort((a, b) => a.doy - b.doy);\n      return { yA: yearA, yB: yearB };\n    }\n    // return a single sorted year\n    return {\n      yA: value.unavailability.sort((a, b) => a.doy - b.doy),\n      yB: null,\n    };\n  }\n\n  /**\n   * **summary**: use the sort(), orderYears(), validateSequential(), and validate2Years() methods to sort and return the data as a ValidateScheduleUnavailabilityDto\n   * @param value the raw client request data\n   */\n  async transform(value: RawScheduleUnavailabilityDto): Promise {\n    try {\n      const sorted: SortedUnavailabilityDto = await this.sort(value);\n      const ordered = await this.orderYears(sorted);\n      Logger.log(`the ordered data below:`);\n      Logger.log(ordered);\n      return ordered;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SortedUnavailabilityDto.html":{"url":"interfaces/SortedUnavailabilityDto.html","title":"interface - SortedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SortedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/sorted-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the raw unavailability request has now been sorted into two year groupings, if the requested unavailability\nspans across two years; e.g. December 20 2020 - January 5 2021\n\npassed to the ValidateUnavailabilityPipe\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        yA\n                                \n                                \n                                        yB\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        yA\n                                    \n                                \n                                \n                                    \n                                        yA:         UnavailabilityDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnavailabilityDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yB\n                                    \n                                \n                                \n                                    \n                                        yB:         UnavailabilityDto[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnavailabilityDto[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: the raw unavailability request has now been sorted into two year groupings, if the requested unavailability\n * spans across two years; e.g. December 20 2020 - January 5 2021\n * - passed to the ValidateUnavailabilityPipe\n */\nexport interface SortedUnavailabilityDto {\n    yA: UnavailabilityDto[];\n    yB: UnavailabilityDto[] | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestRentalService.html":{"url":"injectables/TestRentalService.html","title":"injectable - TestRentalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestRentalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/service/test-rental.service.ts\n        \n\n            \n                Description\n            \n            \n                Test Rental Service provides access to private rentalModel for Unit Testing\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRentalQuery\n                            \n                            \n                                    Async\n                                returnRentalModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rentalModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/service/test-rental.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rentalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRentalQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRentalQuery(rental)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/test-rental.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rental\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            returnRentalModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    returnRentalModel()\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/test-rental.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RentalInterface } from '../interface/modelInterface/Rental/rental.interface';\nimport { Injectable } from '@nestjs/common';\n\n/**\n * Test Rental Service provides access to private rentalModel for Unit Testing\n */\n@Injectable()\nexport class TestRentalService {\n  constructor(\n    @InjectModel('Rental') private readonly rentalModel: Model,\n  ) {}\n\n  async returnRentalModel() {\n    return this.rentalModel;\n  }\n\n  async createRentalQuery(rental) {\n    const query: any = {\n      'scheduling.rentMinDuration': { $lte: rental.rentalDuration },\n      'scheduling.rentMaxDuration': { $gte: rental.rentalDuration },\n      'scheduling.requiredNotice': { $lte: rental.givenNotice },\n      'loc': {\n        $near: {\n          $maxDistance: 12875, // 8 miles\n          $geometry: {\n            type: rental.loc.type,\n            coordinates: [\n              rental.loc.coordinates[0], // latitude\n              rental.loc.coordinates[1], // longitude\n            ],\n          },\n        },\n      },\n    };\n    rental.price\n      ? (query.pricing = {\n          price: rental.price, // add price as optional search parameter\n        })\n      : (rental.priceRange = null);\n    rental.features\n      ? (query.features = { $in: rental.features })\n      : (rental.features = null);\n    return query;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransporterInterface.html":{"url":"interfaces/TransporterInterface.html","title":"interface - TransporterInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransporterInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/interface/transporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: transport interface for the gmail NodeMailer\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                                \n                                        host\n                                \n                                \n                                        port\n                                \n                                \n                                        secureConnection\n                                \n                                \n                                        tls\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secureConnection\n                                    \n                                \n                                \n                                    \n                                        secureConnection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tls\n                                    \n                                \n                                \n                                    \n                                        tls:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransporterInterface {\n    host: string;\n    secureConnection: boolean // TLS requires secureConnection to be false\n    port: number;\n    tls: {\n        ciphers: string;\n    }\n    auth: {\n        user: string;\n        pass: string;\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeOfValue.html":{"url":"classes/TypeOfValue.html","title":"class - TypeOfValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeOfValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/util/typeof-value.ts\n        \n\n            \n                Description\n            \n            \n                summary: confirm the provided value is the expected type or null\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/util/typeof-value.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TypeOfValue {\n    validate = (value: any, expected: string) => {\n        if ((typeof value) !== expected && value !== null) {\n            return false;\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityDto.html":{"url":"classes/UnavailabilityDto.html","title":"class - UnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: schedule a block of unavilable time for the rental on a given day and year\n\na user may schedule up to a year in the future so the specific \"year\" and \"day of the year\" is required\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityDto {\n    rentalId: string;\n    year: number;\n    doy: number; // day of the year\n    start: number; // min: 0; max: 24 military time\n    end: number; // min: 0; max: 24 military time\n    title: string; // e.g. Christmas Break\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityInterface.html":{"url":"classes/UnavailabilityInterface.html","title":"class - UnavailabilityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the 'Unavailability' Model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityInterface {\n    rentalId: string;\n    year: number;\n    doy: number; // day of the year\n    start: number; // min: 0; max: 24 military time\n    end: number; // min: 0; max: 24 military time\n    title: string; // e.g. Christmas Break\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityQueryDto.html":{"url":"classes/UnavailabilityQueryDto.html","title":"class - UnavailabilityQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/unavailability-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is used to check if the request to schedule Unavailability will overlap with Unavailability already scheduled for the rental in the database.\nThis dto uses a MongoDB $or aggregator to check the following Unavailability overlap conditions:\n\n1: verify the requested Unavailability does not 'enclose' an already scheduled Unavailability for this rental\n2: verify the requested Unavailability does not 'overlap' the end of an already scheduled Unavailability for this rental\n3: verify the requested Unavailability does not 'overlap' the start of an already scheduled Unavailability for this rental\n4: verify the requested Unavailability is not 'enclosed by' an already scheduled Unavailability for this rental\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $or\n                            \n                            \n                                doy\n                            \n                            \n                                rentalId\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $or\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type, literal type, literal type, literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityQueryDto {\n  rentalId: string;\n  year: number;\n  doy: { $lte: number; $gte: number };\n  $or: [\n    {\n      start: { $gte: number};\n      end: { $lte: number };\n    },\n    {\n      start: {$lte: number};\n      end: { $gte: number };\n    },\n    {\n        start: {$lte: number},\n        end: {$gte: number},\n    },\n    {\n        start: {$lte: number},\n        end: {$gte: number},\n    }\n  ];\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUnavailabilityDataDto.html":{"url":"classes/UpdateUnavailabilityDataDto.html","title":"class - UpdateUnavailabilityDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUnavailabilityDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/update-unavailability-data.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the mongoose update object created by the CreateUpdaterDtoPipe, it's the data to update an Unavailability for a rental\n\npassed to the rental.service.updateUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability-data.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability-data.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUnavailabilityDataDto {\n    filter: {\n        rentalId: string,\n        unavailabilityId: string,\n    };\n    updater: {\n        $set: {\n            start: number,\n            end: number,\n        },\n    } | {\n        $set: {\n            start: number,\n            end: number,\n            title: string,\n        },\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUnavailabilityDto.html":{"url":"classes/UpdateUnavailabilityDto.html","title":"class - UpdateUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/update-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this is a mapped version of the raw request to update a Rental's already scheduled Unavailability.\nIt serves a simplified reference to the original data that will be used by the handler\n\npassed to rental.service.updateUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEnd\n                            \n                            \n                                newStart\n                            \n                            \n                                newTitle\n                            \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEnd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUnavailabilityDto {\n  unavailabilityId: string;\n  rentalId: string;\n  newStart: number;\n  newEnd: number;\n  newTitle: string; // not required\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserDto.html":{"url":"injectables/UpdateUserDto.html","title":"injectable - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data for updating a user profile\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: data for updating a user profile\n */\n@Injectable()\nexport class UpdateUserDto {\n    username?: string;\n    email?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n            \n                Description\n            \n            \n                summary: controller for managing users in the application\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(user: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new BcryptHashPipe())@UsePipes(new JoiValidationPipe())@Post('create-user')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:26\n                \n            \n\n\n            \n                \n                    summary: create a new user profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(data: DeleteUserDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Redirect('http://localhost:3000/auth/login', 302)@Post('delete-profile')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:63\n                \n            \n\n\n            \n                \n                    summary: delete a user profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user credentials\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(email: FindUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Get('find-user')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:50\n                \n            \n\n\n            \n                \n                    summary: find a user by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                FindUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(update: UpdateUserDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Post('update-user')@Redirect('http://localhost:3000/auth/login')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:39\n                \n            \n\n\n            \n                \n                    summary: update a user's profile data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        updates\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, UsePipes, UseGuards, Req, Redirect } from '@nestjs/common';\nimport { JwtAuthGuard } from '../../auth/gaurds/jwt-auth.guard';\nimport { LoggedOutGaurd } from '../../auth/gaurds/logged-out.guard';\nimport { JoiValidationPipe } from '../../common/pipes/joi-validation.pipe';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { DeleteUserDto } from '../dto/delete-user.dto';\nimport { FindUserDto } from '../dto/find-user.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { BcryptHashPipe } from '../pipes/bcrypt.pipe';\nimport { CreateUserValidation } from '../schema/validation/create-user-validation.schema';\nimport { UserService } from '../service/user.service';\n/**\n * **summary**: controller for managing users in the application\n */\n@Controller('user')\nexport class UserController {\n    constructor(private readonly userService: UserService) {}\n    \n    /**\n     * **summary**: create a new user profile\n     * @param user new user data\n     */\n    @UsePipes(new BcryptHashPipe())\n    @UsePipes(new JoiValidationPipe(CreateUserValidation))\n    @Post('create-user')\n    async createProfile(@Body() user: CreateUserDto) {\n        return await this.userService.createUser(user);\n    }\n\n    /**\n     * **summary**: update a user's profile data\n     * @param update updates\n     * @param req client request\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Post('update-user')\n    @Redirect('http://localhost:3000/auth/login')\n    async updateProfile(@Body() update: UpdateUserDto, @Req() req) {\n        return await this.userService.updateUser(update, req);\n    }\n\n    /**\n     * summary: find a user by email\n     * @param email \n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Get('find-user')\n    async findUser(@Body() email: FindUserDto) {\n        return await this.userService.findUser(email)\n    }\n\n\n    /**\n     * **summary**: delete a user profile\n     * @param data user credentials\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Redirect('http://localhost:3000/auth/login', 302)\n    @Post('delete-profile')\n    async deleteProfile(@Body() data: DeleteUserDto, @Req() req) {\n        return this.userService.deleteUser(data, req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/modelInterface/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the User model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        resetPasswordExpires\n                                \n                                \n                                        resetPasswordToken\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordExpires\n                                    \n                                \n                                \n                                    \n                                        resetPasswordExpires:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordToken\n                                    \n                                \n                                \n                                    \n                                        resetPasswordToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n    username: string;\n    email: string;\n    password: string;\n    resetPasswordToken: string;\n    resetPasswordExpires: Date;\n  }\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_imports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppConfigModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nUserModule -->\n\nExtractKeyValueUtil->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nUserModule -->\n\nVerifyNewPasswordUtil->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nsummary: this module provides all of the functionality for managing user profiles\nMiddleware: this module consumes the ValidateEmailMiddleware middleware\n\n\n\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            UserService\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from '../user/schema/user.schema'\nimport { UserController } from './controller/user.controller';\nimport { UserService } from './service/user.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { ValidateEmailMiddleware } from './middleware/validate-email.middleware';\nimport { userProvider} from '../database/providers/user-model.provider';\nimport { RedisModule } from '../redis/redis.module';\nimport { ExtractKeyValueUtil } from '../auth/util/extract-key-value.util';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { VerifyNewPasswordUtil } from '../auth/util/verify-new-password.util';\nimport { RedisService } from '../redis/service/redis.service';\n/**\n * - **summary**: this module provides all of the functionality for managing user profiles\n *   - **Middleware**: this module consumes the **ValidateEmailMiddleware** middleware\n */\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema}]),\n    DatabaseModule,\n    RedisModule,\n    AppConfigModule,\n    RedisModule\n  ],\n  providers: [UserService,...userProvider, ExtractKeyValueUtil, VerifyNewPasswordUtil, RedisService],\n  controllers: [UserController],\n  exports: [UserService], // used in the AuthService\n})\nexport class UserModule  {\n  constructor() {\n  }\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ValidateEmailMiddleware)\n      .forRoutes('v1/user')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPropertyDto.html":{"url":"classes/UserPropertyDto.html","title":"class - UserPropertyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPropertyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user-property.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the data transfer object for the req.user property added to the request by passport when a user is authenticated\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user-property.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserPropertyDto {\n    _id: string;\n    username: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/user.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: contains all of the functionality to manage a user profile\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Private\n                                createUserUpdate\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                findUserByResetPasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                logoutUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, extractKeyValueUtil: ExtractKeyValueUtil, verifyNewPasswordUtil: VerifyNewPasswordUtil, redisService: RedisService)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractKeyValueUtil\n                                                  \n                                                        \n                                                                        ExtractKeyValueUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyNewPasswordUtil\n                                                  \n                                                        \n                                                                        VerifyNewPasswordUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:31\n                \n            \n\n\n            \n                \n                    summary: create a new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createUserUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserUpdate(data: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:126\n                \n            \n\n\n            \n                \n                    *** Private Functions ****\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(data: DeleteUserDto, req)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:98\n                \n            \n\n\n            \n                \n                    summary: delete a user's account\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user credentials\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(data: FindUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:46\n                \n            \n\n\n            \n                \n                    summary: find a user by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FindUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserByResetPasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByResetPasswordToken(data: ResetPasswordTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:59\n                \n            \n\n\n            \n                \n                    summary: find a user by their resetPasswordToken once they have submitted the reset password email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutUser(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:139\n                \n            \n\n\n            \n                \n                    summary: log a user out of the application by adding their JWT to the Redis cache 'dead-list'\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(data: UpdateUserDto, req)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:73\n                \n            \n\n\n            \n                \n                    summary: update an existing user's information\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the update user data\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { UserInterface } from '../interface/modelInterface/user.interface';\nimport { FindUserDto } from '../dto/find-user.dto';\nimport { ResetPasswordTokenDto } from '../dto/find-user-by-reset-password-token.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { Request } from 'express';\nimport { ExtractKeyValueUtil } from '../../auth/util/extract-key-value.util';\nimport { DeleteUserDto } from '../dto/delete-user.dto';\nimport { VerifyNewPasswordUtil } from 'src/auth/util/verify-new-password.util';\nimport { RedisService } from '../../redis/service/redis.service';\nimport { JwtPayloadDto } from 'src/auth/dto/jwt-payload';\n/**\n * **summary**: contains all of the functionality to manage a user profile\n */\n@Injectable()\nexport class UserService {\n    constructor(\n        @InjectModel('User') private readonly userModel: Model,\n        private readonly extractKeyValueUtil: ExtractKeyValueUtil,\n        private readonly verifyNewPasswordUtil: VerifyNewPasswordUtil,\n        private readonly redisService: RedisService,\n    ) { }\n\n    /**\n     * **summary**: create a new user\n     * @param user \n     */\n    async createUser(user: CreateUserDto) {\n        try {\n            const document = await new this.userModel(user);\n            await document.save();\n            document.password = undefined;\n            return document;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: find a user by email\n     * @param data email\n     */\n    async findUser(data: FindUserDto) {\n        try {\n            const user = await this.userModel.findOne({ email: data.email });\n            return user;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * **summary**: find a user by their resetPasswordToken once they have submitted the reset password email\n     * @param data the token\n     */\n    async findUserByResetPasswordToken(data: ResetPasswordTokenDto) {\n        try {\n            const user = await this.userModel.findOne({ resetPasswordToken: data.token });\n            return user;\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n\n    /**\n     * **summary**: update an existing user's information\n     * @param data the update user data\n     * @param req the client request\n     */\n    async updateUser(data: UpdateUserDto, req ) {\n        try {\n            // extract user email\n            const user: JwtPayloadDto = req.user;\n            const filter = {email: user.email };\n            // create an update object\n            let update = this.createUserUpdate(data);\n            const updater = {\n                $set: update,\n            }\n            // logout the user and return the data before redirecting to login\n            await this.logoutUser(req);\n            console.log('UPDATE USER: RETURN')\n            console.log(await this.userModel.findOneAndUpdate(filter, updater, {new: true}));\n            return await this.userModel.findOneAndUpdate(filter, updater, {new: true});\n       } catch(err) {\n           throw new Error(err)\n       }\n    }\n\n    /**\n     * **summary**: delete a user's account\n     * @param data user credentials\n     * @param req the client request\n     */\n    async deleteUser(data: DeleteUserDto, req) {\n        try {\n            // extract user email\n            const doc:JwtPayloadDto = req.user;\n            // query the user\n            const user = await this.findUser({email: doc.email});\n            // verify their password matches the current\n            await this.verifyNewPasswordUtil.verifyMatch({newPassword: data.password, oldPassword: user.password})\n            // logout\n            await this.logoutUser(req);\n            // delete\n            const res = await user.remove();\n            console.log('DELETE USER: RETURN')\n            console.log(res);\n            return res.deletedCount;\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     ************************ Private Functions ************************\n    */\n\n    /**\n     * **summary**: create a MongoDB update object for updating a user profile\n     * @param data raw request data to update a user\n     */\n    private createUserUpdate(data: UpdateUserDto) {\n        let update: UpdateUserDto = {}\n        data.username ? update.username = data.username : data.username = null;\n        data.email ? update.email = data.email : data.email = null;\n        console.log('CREATE USER UPDATE: RETURN')\n        console.log(update);\n        return update;\n    }\n\n    /**\n     * **summary**: log a user out of the application by adding their JWT to the Redis cache 'dead-list'\n     * @param req the client request\n     */\n    private async logoutUser(req: Request){\n        const {jwt, key} = await this.extractKeyValueUtil.extract(req);\n        await this.redisService.set(key, jwt);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEditDetailsPipe.html":{"url":"injectables/ValidateEditDetailsPipe.html","title":"injectable - ValidateEditDetailsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEditDetailsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-edit-details.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate that the request to update the Rental's details (the spec property) will not violate the\nRentalSchemaValidation\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                positiveNumber\n                            \n                            \n                                typeOfValue\n                            \n                            \n                                    Private\n                                validateDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/validate-edit-details.pipe.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: EditDetailsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:99\n                \n            \n\n\n            \n                \n                    summary: use the validateDetails() method to validate the request before passing to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request to edit the details (spec property) of a Rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positiveNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PositiveNumber\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeOfValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TypeOfValue\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:23\n                            \n                        \n\n                \n                    \n                        summary: validate EditDetailsDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the request data to edit the rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { PositiveNumber } from '../../common/util/positive-number';\nimport { TypeOfValue } from '../../common/util/typeof-value';\n/**\n * **summary**: validate that the request to update the Rental's details (the spec property) will not violate the\n * RentalSchemaValidation\n */\n@Injectable()\nexport class ValidateEditDetailsPipe implements PipeTransform {\n\n    positiveNumber: PositiveNumber;\n    typeOfValue: TypeOfValue;\n    constructor() {\n        this.positiveNumber = new PositiveNumber();\n        this.typeOfValue = new TypeOfValue();\n    }\n\n    /**\n     * **summary**: validate EditDetailsDto\n     * @param value the request data to edit the rental\n     */\n    private validateDetails = async (value: EditDetailsDto) => {\n        // check rentalId\n        if (!value.rentalId || !this.typeOfValue.validate(value.rentalId, 'string')) {\n            throw new Error('Invalid rental id');\n        }\n        // must have at least one detail to update\n        if (!value.specs && !value.features) {\n            throw new Error('Invalid request, no details given');\n        }\n        // validate each spec value\n        if (value.specs) {\n            if (value.specs.odometer &&\n                !this.typeOfValue.validate(value.specs.odometer, 'number') || !this.positiveNumber.validate(value.specs.odometer)\n                ) {\n                    throw new Error('Odometer must be a positive number');\n                }\n            if (value.specs.transmission &&\n                !this.typeOfValue.validate(value.specs.transmission, 'string')) {\n                    throw new Error('transmission must be a valid value (string)');\n                }\n            if (value.specs.cityMpg &&\n                !this.typeOfValue.validate(value.specs.cityMpg, 'number') || !this.positiveNumber.validate(value.specs.cityMpg)) {\n                    throw new Error('cityMpg must be a positive number');\n                }\n            if (value.specs.hwyMpg &&\n                !this.typeOfValue.validate(value.specs.hwyMpg, 'number') || !this.positiveNumber.validate(value.specs.hwyMpg)) {\n                    throw new Error('hwyMpg must be a positive number');\n                }\n            if (value.specs.fuel &&\n                !this.typeOfValue.validate(value.specs.fuel, 'string')) {\n                    throw new Error('fuel must be a valid value (string)');\n                }\n            if (value.specs.gasGrade &&\n                !this.typeOfValue.validate(value.specs.gasGrade, 'string')) {\n                    throw new Error('gasGrade must be a valid value (string)');\n                }\n            if (value.specs.description &&\n                !this.typeOfValue.validate(value.specs.description, 'string')) {\n                    throw new Error('description must be a valid value (string)');\n                }\n            if (value.specs.model &&\n                !this.typeOfValue.validate(value.specs.model, 'string')) {\n                    throw new Error('model must be a valid value (string)');\n                }\n            if (value.specs.style &&\n                !this.typeOfValue.validate(value.specs.style, 'string')) {\n                    throw new Error('style must be a valid value (string)');\n                }\n            if (value.specs.color &&\n                !this.typeOfValue.validate(value.specs.color, 'string')) {\n                    throw new Error('color must be a valid value (string)');\n                }\n            if (value.specs.numOfSeats &&\n                !this.typeOfValue.validate(value.specs.numOfSeats, 'number') || !this.positiveNumber.validate(value.specs.numOfSeats)) {\n                    throw new Error('numOfSeats must be a positive number');\n                }\n            if (value.specs.numDoors &&\n                !this.typeOfValue.validate(value.specs.numDoors, 'number') || !this.positiveNumber.validate(value.specs.numDoors)) {\n                    throw new Error('numDoors must be a positive number');\n                }\n        }\n        if (value.features) {\n            if (value.features.length > 0) {\n                for (const x of value.features) {\n                    if (!this.typeOfValue.validate(x, 'string')) {\n                        throw new Error('features must be valid values (string)');\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * **summary**: use the validateDetails() method to validate the request before passing to the handler\n     * @param value the raw client request to edit the details (spec property) of a Rental\n     */\n    async transform(value: EditDetailsDto):Promise {\n        await this.validateDetails(value);\n        return value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEmailMiddleware.html":{"url":"injectables/ValidateEmailMiddleware.html","title":"injectable - ValidateEmailMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEmailMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/middleware/validate-email.middleware.ts\n        \n\n            \n                Description\n            \n            \n                summary: before creating a new user, validate that their email is not already in the database. this middleware is only applied to the \nuser.controller.createUser() method\n\nnote: uses the ValidateEmailUtil class\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validateEmailUtil\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Private\n                                    Async\n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/middleware/validate-email.middleware.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/user/middleware/validate-email.middleware.ts:39\n                \n            \n\n\n            \n                \n                    summary: use the validateEmail method to validate the requested new user email does not already exist before continuing to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the client request\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the response\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the next method to continue to the request handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmail(value: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/middleware/validate-email.middleware.ts:28\n                \n            \n\n\n            \n                \n                    summary: query the databse to valdiate the requested new email is unique to the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested new user email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateEmailUtil\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateEmailUtil\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/middleware/validate-email.middleware.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, NestMiddleware } from '@nestjs/common'\nimport { Request, Response } from 'express';\nimport { userModel } from '../../common/Const';\nimport { UserInterface } from '../interface/modelInterface/user.interface';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { ValidateEmailUtil } from '../util/validate-email.util';\n/**\n * **summary**: before creating a new user, validate that their email is not already in the database. this middleware is only applied to the \n * user.controller.createUser() method\n * - note: uses the ValidateEmailUtil class\n */\n@Injectable()\nexport class ValidateEmailMiddleware implements NestMiddleware {\n\n    validateEmailUtil: ValidateEmailUtil;\n    constructor(\n        @Inject(userModel)\n        private readonly user: Model,\n    ) {\n        this.validateEmailUtil = new ValidateEmailUtil()\n    }\n\n    /**\n     * **summary**: query the databse to valdiate the requested new email is unique to the database\n     * @param value the requested new user email\n     */\n    private async validateEmail(value: CreateUserDto) {\n        const check = await this.user.find({ email: value.email });\n        this.validateEmailUtil.validateEmail(check)\n    }\n\n    /**\n     * **summary**: use the validateEmail method to validate the requested new user email does not already exist before continuing to the handler\n     * @param req the client request\n     * @param res the response\n     * @param next the next method to continue to the request handler\n     */\n    async use(req: Request, res: Response, next: Function) {\n        // apply to create-user route\n        if (req.originalUrl === '/v1/user/create-user') {\n            await this.validateEmail(req.body);\n        }\n        next();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEmailUtil.html":{"url":"injectables/ValidateEmailUtil.html","title":"injectable - ValidateEmailUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEmailUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/util/validate-email.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: throw an error if the user email already exists\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/user/util/validate-email.util.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateEmail(check)\n                \n            \n\n\n            \n                \n                    Defined in src/user/util/validate-email.util.ts:14\n                \n            \n\n\n            \n                \n                    summary: if the array has a length greater than 0, a user with the email already exists\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    check\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n/**\n * **summary**: throw an error if the user email already exists\n * @param check the results of a find user by email query\n */\n@Injectable()\nexport class ValidateEmailUtil {\n    constructor() {}\n\n    /**\n     * **summary**: if the array has a length greater than 0, a user with the email already exists\n     * @param check \n     */\n    validateEmail(check){\n        if(check.length === 0 || check.length === undefined) return\n        throw new Error('A User exists that is already using this email');\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateRemoveUnavailabilityPipe.html":{"url":"injectables/ValidateRemoveUnavailabilityPipe.html","title":"injectable - ValidateRemoveUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateRemoveUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-remove-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate a client request to remove (unschedule) Unavailability from a Rental\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                validateDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: RemoveUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-remove-unavailability.pipe.ts:24\n                \n            \n\n\n            \n                \n                    summary: use the validateDto method to validate the request before passing it on\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RemoveUnavailabilityDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-remove-unavailability.pipe.ts:12\n                            \n                        \n\n                \n                    \n                        summary: check the request has a valid rentalId and unavailabilityId\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw client request to remove Unavailability from a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\n/**\n * **summary**: validate a client request to remove (unschedule) Unavailability from a Rental\n */\n@Injectable()\nexport class ValidateRemoveUnavailabilityPipe implements PipeTransform {\n    /**\n     * **summary**: check the request has a valid rentalId and unavailabilityId\n     * @param value the raw client request to remove Unavailability from a Rental\n     */\n    private validateDto = (value: RemoveUnavailabilityDto) => {\n        if (typeof value.rentalId !== 'string') {\n            throw new Error('invalid rental ID; must be a string');\n        }\n        if (typeof value.unavailabilityId !== 'string') {\n            throw new Error('invalid unavailability ID; must be a string');\n        }\n    }\n    /**\n     * **summary**: use the validateDto method to validate the request before passing it on\n     * @param value the raw client request\n     */\n    transform(value: RemoveUnavailabilityDto):RemoveUnavailabilityDto {\n        this.validateDto(value);\n        return value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateScheduleUnavailabilityDto.html":{"url":"classes/ValidateScheduleUnavailabilityDto.html","title":"class - ValidateScheduleUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateScheduleUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the SortUnavailabilityPipe, this dto contains the raw request to schedule Unavailability\nfor a rental sorted into two year groupings; if the requested Unavailability spans across 2 years. This would usually occur\nnear the end of a year, such as from Decemeber 20, 2020 - January 5, 2021\n\npassed to the ValidateUnavailabilityPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[] | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: returned by the SortUnavailabilityPipe, this dto contains the raw request to schedule Unavailability\n * for a rental sorted into two year groupings; if the requested Unavailability spans across 2 years. This would usually occur\n * near the end of a year, such as from Decemeber 20, 2020 - January 5, 2021\n * - passed to the ValidateUnavailabilityPipe\n */\nexport class ValidateScheduleUnavailabilityDto {\n    y1: UnavailabilityDto[];\n    y2: UnavailabilityDto[] | null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateUnavailabilityPipe.html":{"url":"injectables/ValidateUnavailabilityPipe.html","title":"injectable - ValidateUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-unavailability.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLeapYear\n                            \n                            \n                                    Private\n                                convertToDateTime\n                            \n                            \n                                    Private\n                                validateCrossover\n                            \n                            \n                                    Private\n                                validateCrossYearCongruence\n                            \n                            \n                                    Private\n                                validateEachUnavailability\n                            \n                            \n                                    Private\n                                validateMinNotice\n                            \n                            \n                                    Private\n                                validateRelevance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidateScheduleUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:210\n                \n            \n\n\n            \n                \n                    summary: use the validateRelevance(), validateEachUnavailability(), validateCrossover(), validateCrossYearCongruence(),\nvalidateMinNotice(), and checkLeapYear() methods to validate the client request and return a ValidatedUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidateScheduleUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sorted but unvalidated client request data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkLeapYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:122\n                            \n                        \n\n                \n                    \n                        summary: use the Luxon DateTime.isInLeapYear() method\nto check if the this current year is a leap year. For example, this year 2020 is actually a leap year!\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        u1\n                                                        \n                                                                the initial unavailability's DateTime\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            convertToDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:28\n                            \n                        \n\n                \n                    \n                        summary: confirm that the user is requesting to schedule a single block of Unavailable time for their Rental that is logically and will\nnot cause an error in the application\n-validate requested rental start DateTime is not before the current DateTime\n\nif 2 years\nvalidate each unavailability for y1 and y2 (private validateUnavailability)\ncheck if y1 is a leap year, validate the number of days in the year (DOY) if it is a leap year\nvalidate DOY crossover from y1 to y2; validate the extra DOY if it's a leap year\n\n\nelse: \nvalidate each unavailability in the single year\n\n\nreturn the validated year(s)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateCrossover\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:79\n                            \n                        \n\n                \n                    \n                        summary: this method is called when the requested Unavailability spans into the next year. this method verifies that the crossover into the next year\nincludes the extra day if it's a leapYear. Even if it's not a leap year, this method verifies there are no missing or extra days as the Unavailability enters the\nstart of the next year\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                \n                                                \n                                                        y2\n                                                \n                                                \n                                                        ly\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateCrossYearCongruence\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:184\n                            \n                        \n\n                \n                    \n                        summary: validate congruence in rentalId, start, end, and title across y1 and y2\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                        \n                                                                the first year of the requested Unavailability\n\n                                                        \n                                                \n                                                \n                                                        y2\n                                                        \n                                                                the second year of the requested Unavailability\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateEachUnavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:133\n                            \n                        \n\n                \n                    \n                        summary: validate the data inisde of each UnavailabilityDto that will be used to schedule a sequential single 'block of Unavailability' for the Rental\n\nnote: uses the toItemIndexes() util to map a new array of tuples conataining an UnavailabilityDto and it's index in the array\n\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        unavailability\n                                                        \n                                                                an array of UnavailabilityDtos, which is the data to create an individual Unavailability Document in the database\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateMinNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:47\n                            \n                        \n\n                \n                    \n                        summary: validate that the requested unavailability is not before the current date & time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        a\n                                                        \n                                                                = request start DateTime\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                = current DateTime\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateRelevance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:60\n                            \n                        \n\n                \n                    \n                        summary: validate the requested unavailability start time is not in the past\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the ordered unavailability from previous pipe\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { DateTime, Interval } from 'luxon';\nimport { ValidateScheduleUnavailabilityDto } from '../dto/unavailability/schedule/validate-schedule-unavailability.dto';\nimport { UnavailabilityDto } from '../dto/unavailability/unavailability.dto';\nimport { toItemIndexes } from '../../common/util/to-item-indexes';\nimport { validated } from '../../common/Const';\nimport { ValidatedUnavailabilityDto } from '../dto/unavailability/validated-unavailability.dto';\n\n@Injectable()\nexport class ValidateUnavailabilityPipe implements PipeTransform {\n  /**\n   * **summary**: confirm that the user is requesting to schedule a single block of Unavailable time for their Rental that is logically and will\n   * not cause an error in the application\n   * -validate requested rental start DateTime is not before the current DateTime\n   * - if 2 years\n   *   - validate each unavailability for y1 and y2 (private validateUnavailability)\n   *   - check if y1 is a leap year, validate the number of days in the year (DOY) if it is a leap year\n   *   - validate DOY crossover from y1 to y2; validate the extra DOY if it's a leap year\n   * - else: \n   *   - validate each unavailability in the single year\n   * - return the validated year(s)\n   */\n\n  /**\n   * **summary**: use the [**Luxon DateTime.fromObject()**]() method to create a new DateTime from the raw client requested startTime\n   * @param u1 the 1st unavailabilityDto\n   */\n  private convertToDateTime = async (u1: UnavailabilityDto): Promise => {\n    if (!u1) {\n      throw new Error('There is no requested unavailability');\n    }\n    const start: DateTime = DateTime.fromObject({\n      year: u1.year,\n      ordinal: u1.doy,\n      hour: u1.start,\n    });\n    Logger.log(`the requested start DateTime below:`);\n    Logger.log(start);\n    return start;\n  }\n\n  /**\n   * **summary**: validate that the requested unavailability is not before the current date & time\n   * @param a = request start DateTime\n   * @param b = current DateTime\n   */\n  private validateMinNotice = async (a: DateTime, b: DateTime) => {\n    const notice: Interval = Interval.fromDateTimes(a, b).count('hours');\n    if (isNaN(notice) || notice  => {\n    // should already know y1 and y2\n    const currentDateTime = DateTime.local();\n    Logger.log(`the current DateTime below:`);\n    Logger.log(currentDateTime);\n    const start: DateTime = await this.convertToDateTime(value.y1[0]);\n    // compare current DT and start DT\n    await this.validateMinNotice(currentDateTime, start);\n    return start;\n  }\n\n  /**\n   * **summary**: this method is called when the requested Unavailability spans into the next year. this method verifies that the crossover into the next year\n   * includes the extra day if it's a leapYear. Even if it's not a leap year, this method verifies there are no missing or extra days as the Unavailability enters the\n   * start of the next year\n   * @param y1 \n   * @param y2 \n   * @param ly \n   */\n  private validateCrossover = async (\n    y1: UnavailabilityDto[],\n    y2: UnavailabilityDto[],\n    ly: boolean,\n  ): Promise => {\n    // y1's final Unavailability\n    const y1Final = y1[y1.length - 1];\n    // # of days in y1\n    const diy = (await this.convertToDateTime(y1Final)).daysInYear;\n    // final DOY of y1 must equal diy of y1\n    if (diy !== y1Final.doy) {\n      if (ly) {\n        throw new Error(\n          `the final day of this leap year, ${y1Final.doy}/${\n            y1Final.year\n          }, is missing`,\n        );\n      }\n      throw new Error(\n        `the final day of this year, ${y1Final.doy}/${y1Final.year}, is missing`,\n      );\n    }\n    // validate y2 starts at 0, we already know it's sequential\n    if (y2[0]) {\n      if (y2[0].doy !== 0) {\n        throw new Error('the 1st day of the second year is missing');\n      }\n    } else {\n      throw new Error('there is not a second year');\n    }\n    Logger.log('the final unavailability of y1');\n    Logger.log(y1Final);\n    Logger.log(\n      `the total days in y1: ${diy} & the final day of y1: ${y1Final.doy}`,\n    );\n    Logger.log(`this is a leap year: ${ly}`);\n  }\n\n  /**\n   * **summary**: use the [*Luxon DateTime.isInLeapYear()*](https://moment.github.io/luxon/docs/class/src/datetime.js~DateTime.html#instance-get-isInLeapYear) method\n   * to check if the this current year is a [**leap year**](https://www.timeanddate.com/date/leapyear.html). For example, this year 2020 is actually a leap year!\n   * @param u1 the initial unavailability's DateTime\n   */\n  private checkLeapYear = async (u1: DateTime) => {\n    const check = u1.isInLeapYear;\n\n    return check; // true or false\n  }\n\n  /**\n   * **summary**: validate the data inisde of each UnavailabilityDto that will be used to schedule a sequential single 'block of Unavailability' for the Rental\n   * - note: uses the toItemIndexes() util to map a new array of **tuples** conataining an UnavailabilityDto and it's index in the array\n   * @param unavailability an array of UnavailabilityDtos, which is the data to create an individual Unavailability Document in the database\n   */\n  private validateEachUnavailability = async (\n    unavailability: UnavailabilityDto[],\n  ) => {\n    const base = unavailability[0];\n    for (const { item, index } of toItemIndexes(unavailability)) {\n      // rentalId congruence\n      if (item.rentalId !== base.rentalId) {\n        throw new Error('request cannot have more than 1 Rental ID');\n      }\n      // interval\n      if (item.start >= item.end) {\n        throw new Error('start time cannot be before end time');\n      }\n      // interval congruence\n      if (item.start !== base.start || item.end !== base.end) {\n        throw new Error(\n          'each requested day of unavailability must share the same start end time',\n        );\n      }\n      // MTime\n      if (item.start  24 || item.end  24) {\n        throw new Error('the unavailable time must be in military time format');\n      }\n      // year congruence\n      if (item.year !== base.year) {\n        throw new Error(\n          `invalid year: first year ${item.year} second year ${base.year}`,\n        );\n      }\n      // sequential DOY\n      if (index > 0) {\n        if (unavailability[index].doy - 1 !== unavailability[index - 1].doy) {\n          throw new Error('The requested unavailability is not sequential');\n        }\n      }\n      // title congruence\n      if (item.title !== base.title) {\n        throw new Error(\n          `request cannot have more than one title: 1st year title \"${\n            item.title\n          }\" 2nd year title \"${base.title}\"`,\n        );\n      }\n    }\n  }\n\n  /**\n   * **summary**: validate congruence in rentalId, start, end, and title across y1 and y2\n   * @param y1 the first year of the requested Unavailability\n   * @param y2 the second year of the requested Unavailability\n   */\n  private validateCrossYearCongruence = async (\n    y1: UnavailabilityDto,\n    y2: UnavailabilityDto,\n  ) => {\n    if (y1.rentalId !== y2.rentalId) {\n      throw new Error('request cannot have more than 1 Rental ID');\n    }\n    if (y1.start !== y2.start || y1.end !== y2.end) {\n      throw new Error(\n        'each requested day of unavailability must share the same start end time',\n      );\n    }\n    if (y1.title !== y2.title) {\n      throw new Error(\n        `request cannot have more than one title: 1st year title \"${\n          y1.title\n        }\" 2nd year title \"${y2.title}\"`,\n      );\n    }\n  }\n\n  /**\n   * **summary**: use the validateRelevance(), validateEachUnavailability(), validateCrossover(), validateCrossYearCongruence(),\n   * validateMinNotice(), and checkLeapYear() methods to validate the client request and return a ValidatedUnavailabilityDto\n   * @param value the sorted but unvalidated client request data\n   */\n  async transform(value: ValidateScheduleUnavailabilityDto): Promise {\n    try {\n      const start: DateTime = await this.validateRelevance(value);\n      // if 2 years; if there are 2 years we know y1 must include the final doy of y1\n      if (value.y2 !== null) {\n        // validate 2 years\n        await this.validateEachUnavailability(value.y1);\n        await this.validateEachUnavailability(value.y2);\n        // check if y1 is a leap year\n        const ly = await this.checkLeapYear(start);\n        // validate crossover from y1 to y2; account for if it's a leap year\n        await this.validateCrossover(value.y1, value.y2, ly);\n        await this.validateCrossYearCongruence(value.y1[0], value.y2[0]);\n        // return a ValidatedUnavailabilityDto\n        return { y1: value.y1, y2: value.y2, validated };\n      }\n      await this.validateEachUnavailability(value.y1);\n      return { y1: value.y1, y2: null, validated };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateUpdateUnavailabilityDto.html":{"url":"classes/ValidateUpdateUnavailabilityDto.html","title":"class - ValidateUpdateUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateUpdateUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is used to query and validate that the Rental actually has the scheduled Unavailability\nthat the user is requesting to update\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEnd\n                            \n                            \n                                newStart\n                            \n                            \n                                newTitle\n                            \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEnd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidateUpdateUnavailabilityDto {\n  unavailabilityId: string;\n  rentalId: string;\n  y1: {\n    sD: number;\n    eD: number;\n  };\n  y2: {\n    sD: number;\n    eD: number;\n  };\n  newStart: number;\n  newEnd: number;\n  newTitle: string | null; // not required\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{"url":"injectables/ValidateUpdateUnavailabilityMiddleware.html","title":"injectable - ValidateUpdateUnavailabilityMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateUpdateUnavailabilityMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/middleware/validate-update-unavailability.middleware.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate that incoming request to update a rental's already scheduled Unavailability. Validate that the expected # of unavailability docs are present in the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateRange\n                            \n                            \n                                    Private\n                                validateDto\n                            \n                            \n                                    Private\n                                validateExpectedUnavailability\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(unavailability: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        unavailability\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:144\n                \n            \n\n\n            \n                \n                    summary: apply the validatedto(), calculateRange(), and validateExpectedUnavailability() methods to incoming requests to the\nrental.controller.updateUnavailability() method. Validate the request before passing the data to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the response object\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the next method to continue onto the next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:22\n                            \n                        \n\n                \n                    \n                        summary: calculate the range of the requested Unavailability to update for the Rental\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                        \n                                                                the start and end day of the first year that the Unavailability is scheduled across\n\n                                                        \n                                                \n                                                \n                                                        y2\n                                                        \n                                                                the start and end day of the second yaer that the Unavailability is scheduled across; if there is a second year\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:69\n                            \n                        \n\n                \n                    \n                        summary: validate the incoming dto data does not break the below validation tree\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the sorted request to update already scheduled Unavailability on a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateExpectedUnavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:47\n                            \n                        \n\n                \n                    \n                        summary: validate that the unavailability to be updated is present in the database, and verify that the expected range (number of days) of the Unavailability to update\nmatches the actual range of the Unavailability as it's saved in the database. Use the results of the calculateRange() method, to compare the range of the Unavailability in\nthe database to the range of the request\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw request data\n\n                                                        \n                                                \n                                                \n                                                        range\n                                                        \n                                                                the range of the requested update Unavailability data\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { unavailabilityModel } from '../../common/Const';\nimport { Model } from 'mongoose';\nimport { UnavailabilityInterface } from '../interface/modelInterface/Unavailability/unavailability.interface';\nimport { ValidateUpdateUnavailabilityDto } from '../dto/unavailability/update/validate-update-unavailability.dto';\n/**\n * **summary**: validate that incoming request to update a rental's already scheduled Unavailability. Validate that the expected # of unavailability docs are present in the database\n */\n@Injectable()\nexport class ValidateUpdateUnavailabilityMiddleware implements NestMiddleware {\n  constructor(\n    @Inject(unavailabilityModel)\n    private readonly unavailability: Model,\n  ) {}\n\n  /**\n   * **summary**: calculate the [**range**](https://www.mathsisfun.com/data/range.html) of the requested Unavailability to update for the Rental\n   * @param y1 the start and end day of the first year that the Unavailability is scheduled across\n   * @param y2 the start and end day of the second yaer that the Unavailability is scheduled across; if there is a second year\n   */\n  private calculateRange = async (\n    y1: { sD: number; eD: number },\n    y2: { sD: number; eD: number } | null,\n  ) => {\n    if (y2 !== null) {\n      // calculate range for 2 years\n      let temp1: number;\n      let temp2: number;\n      y1.sD === y1.eD ? temp1 = 1 : temp1 = y1.eD - y1.sD + 1;\n      y2.sD === y2.eD ? temp2 = 1 : temp2 = y2.eD - y2.sD + 1;\n      return {range: temp1 + temp2};\n    }\n    if (y1.sD !== y1.eD) {\n      return { range: y1.eD - y1.sD + 1 };\n    }\n    return { range: 1 };\n  }\n\n  /**\n   * **summary**: validate that the unavailability to be updated is present in the database, and verify that the expected **range** (number of days) of the Unavailability to update\n   * matches the actual range of the Unavailability as it's saved in the database. Use the results of the calculateRange() method, to compare the range of the Unavailability in\n   * the database to the range of the request\n   * @param value the raw request data\n   * @param range the range of the requested update Unavailability data\n   */\n  private validateExpectedUnavailability = async (\n    value: ValidateUpdateUnavailabilityDto, range: {range: number},\n  ) => {\n    const test = await this.unavailability.find({\n      rentalId: value.rentalId,\n      unavailabilityId: value.unavailabilityId,\n    });\n\n    if (test.length  {\n    if (typeof value.unavailabilityId !== 'string') {\n      throw new Error('invalid unavailabilityId; must be a string');\n    }\n    if (typeof value.rentalId !== 'string') {\n      throw new Error('invalid rental ID; must be a string');\n    }\n    if (\n      typeof value.newStart !== 'number' ||\n      value.newStart  24\n    ) {\n      throw new Error('invalid start time; must be a number');\n    }\n    if (\n      typeof value.newEnd !== 'number' ||\n      value.newEnd  24\n    ) {\n      throw new Error('invalid end time; must be a number');\n    }\n    if (value.newStart >= value.newEnd) {\n      throw new Error(\n        'start time cannot be the same as, or before, the end time',\n      );\n    }\n    if (typeof value.y1.sD !== 'number') {\n      throw new Error('invalid minimum DOY; must be a number');\n    }\n    if (typeof value.y1.eD !== 'number') {\n      throw new Error('invalid maximum DOY; must be a number');\n    }\n    if (value.y1.sD > value.y1.eD) {\n      throw new Error('minimum DOY cannot be larger than maximum DOY');\n    }\n    if (typeof value.y2.sD !== 'number') {\n      throw new Error('invalid minimum DOY; must be a number');\n    }\n    if (typeof value.y2.eD !== 'number') {\n      throw new Error('invalid maximum DOY; must be a number');\n    }\n    if (value.y2.sD > value.y2.eD) {\n      throw new Error('minimum DOY cannot be larger than maximum DOY');\n    }\n    if (typeof value.newTitle !== 'string' && value.newTitle !== null) {\n      throw new Error('invalid title; must be a string');\n    }\n    if (\n      typeof value.newStart !== 'number' ||\n      value.newStart  24\n    ) {\n      throw new Error('invalid update start time; must be a number');\n    }\n    if (\n      typeof value.newEnd !== 'number' ||\n      value.newEnd  24\n    ) {\n      throw new Error('invalid update end time; must be a number');\n    }\n    if (value.newStart >= value.newEnd) {\n      throw new Error(\n        'update start time cannot be the same as, or before, the update end time',\n      );\n    }\n  }\n\n  /**\n   * **summary**: apply the validatedto(), calculateRange(), and validateExpectedUnavailability() methods to incoming requests to the\n   * rental.controller.updateUnavailability() method. Validate the request before passing the data to the handler\n   * @param req the request object\n   * @param res the response object\n   * @param next the next method to continue onto the next handler\n   */\n  async use(req: Request, res: Response, next: Function):Promise {\n    // apply only to update-unavailability request\n    if (req.originalUrl === '/v1/rental/update-unavailability') {\n      await this.validateDto(req.body);\n      const range = await this.calculateRange(req.body.y1, req.body.y2); // to validate expected # of Unavailability docs\n      await this.validateExpectedUnavailability(req.body, range);\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidatedUnavailabilityDto.html":{"url":"classes/ValidatedUnavailabilityDto.html","title":"class - ValidatedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidatedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/validated-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is the now validated UnavailabilityDto that will be used to create the final dto to be passed to\nthe rental.service.scheduleUnavailability() method\n\npassed to the ProcessUnavailabilityPipe, the last pipe before the rental.service.scheduleUnavailability() handler method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validated\n                            \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[] | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../../dto/unavailability/unavailability.dto';\n/**\n * **summary**: this data is the now validated UnavailabilityDto that will be used to create the final dto to be passed to\n * the rental.service.scheduleUnavailability() method\n * - passed to the ProcessUnavailabilityPipe, the last pipe before the rental.service.scheduleUnavailability() handler method\n */\nexport class ValidatedUnavailabilityDto {\n    y1: UnavailabilityDto[];\n    y2: UnavailabilityDto[] | null;\n    validated: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyNewPasswordDto.html":{"url":"classes/VerifyNewPasswordDto.html","title":"class - VerifyNewPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyNewPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/verify-new-password.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: data transfer object for creating a new passowrd\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/verify-new-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/verify-new-password.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class VerifyNewPasswordDto {\n    newPassword: string;\n    oldPassword: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyNewPasswordUtil.html":{"url":"injectables/VerifyNewPasswordUtil.html","title":"injectable - VerifyNewPasswordUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VerifyNewPasswordUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/util/verify-new-password.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate incoming new password data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkTypos\n                            \n                            \n                                    Async\n                                verifyMatch\n                            \n                            \n                                    Async\n                                verifyNew\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkTypos\n                        \n                        \n                    \n                \n            \n            \n                \ncheckTypos(data: CheckPasswordTypoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:35\n                \n            \n\n\n            \n                \n                    summary: verify the user entered the same password twice\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CheckPasswordTypoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyMatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyMatch(data: VerifyNewPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:25\n                \n            \n\n\n            \n                \n                    summary: verify the entered password matches the password saved in the database for this user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VerifyNewPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyNew\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyNew(data: VerifyNewPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:15\n                \n            \n\n\n            \n                \n                    summary: verify the new password does not match the database password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VerifyNewPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { VerifyNewPasswordDto } from \"../dto/verify-new-password.dto\";\nimport * as bcrypt from 'bcrypt';\nimport { CheckPasswordTypoDto } from \"../dto/check-password-typo.dto\";\n/**\n * **summary**: validate incoming new password data\n */\n@Injectable()\nexport class VerifyNewPasswordUtil {\n\n    /**\n     * **summary**: verify the new password does not match the database password\n     * @param data \n     */\n    async verifyNew(data: VerifyNewPasswordDto): Promise{\n        const check = await bcrypt.compare(data.newPassword, data.oldPassword);\n        if (check) { throw new Error('Error: The new password cannot mathch the current password.') };\n        return;\n    }\n\n    /**\n     * **summary**: verify the entered password matches the password saved in the database for this user\n     * @param data \n     */\n    async verifyMatch(data: VerifyNewPasswordDto): Promise{\n        const check = await bcrypt.compare(data.newPassword, data.oldPassword);\n        if (!check) { throw new Error('Error: incorrect password entered')};\n        return;\n    }\n\n    /**\n     * **summary**: verify the user entered the same password twice\n     * @param data \n     */\n    checkTypos(data: CheckPasswordTypoDto): Promise {\n        const check = data.newPassword === data.confirmPassword;\n        if (check) { return };\n        throw new Error('You did not enter the same password twice, please try again')\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/constant.ts\n            \n            variable\n            jwtConstants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/check-password-typo.dto.ts\n            \n            class\n            CheckPasswordTypoDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/extract-key-value-util.dto.ts\n            \n            class\n            ExtractKeyValueUtilDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/dto/jwt-payload.ts\n            \n            class\n            JwtPayloadDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/dto/user-property.dto.ts\n            \n            class\n            UserPropertyDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/auth/dto/verify-new-password.dto.ts\n            \n            class\n            VerifyNewPasswordDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/gaurds/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/gaurds/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/gaurds/logged-out.guard.ts\n            \n            guard\n            LoggedOutGaurd\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/auth/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/util/extract-key-value.util.ts\n            \n            injectable\n            ExtractKeyValueUtil\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/util/verify-new-password.util.ts\n            \n            injectable\n            VerifyNewPasswordUtil\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            databaseConnection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            rentals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            unavailabilityModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            userModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            validated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/error.filters.ts\n            \n            class\n            ErrorFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/common/filters/http-error.filter.ts\n            \n            class\n            HttpErrorFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/logging-interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/pipes/joi-validation.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/util/positive-number.ts\n            \n            injectable\n            PositiveNumber\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/util/to-item-indexes.ts\n            \n            variable\n            toItemIndexes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/util/typeof-value.ts\n            \n            class\n            TypeOfValue\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/config/configuration.service.ts\n            \n            injectable\n            AppConfigService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/database/providers/database.provider.ts\n            \n            variable\n            databaseProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/providers/unavailability-model.provider.ts\n            \n            variable\n            unavailabilityProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/providers/user-model.provider.ts\n            \n            variable\n            userProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/email/interface/mailoptions.interface.ts\n            \n            interface\n            MailOptionsInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/email/interface/transporter.interface.ts\n            \n            interface\n            TransporterInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/images/controller/images.controller.ts\n            \n            controller\n            ImagesController\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/images/dto/image-query-results.dto.ts\n            \n            class\n            ImageQueryResultsDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/images/dto/image-upload.dto.ts\n            \n            class\n            ImageUploadDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/images/dto/image.dto.ts\n            \n            class\n            ImageDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/images/dto/processed-save-data.dto.ts\n            \n            class\n            ProcessedSaveDataDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/images/interface/modelInterface/image.interface.ts\n            \n            interface\n            ImageInterface\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/images/providers/s3.provider.ts\n            \n            injectable\n            S3Provider\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/images/schema/images.schema.ts\n            \n            variable\n            ImageSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/images/schema/images.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/service/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/images/util/create-multer-upload.util.ts\n            \n            injectable\n            CreateMulterUploadUtil\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/images/util/delete-s3-images.util.ts\n            \n            injectable\n            DeleteS3ImagesUtil\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/images/util/multer-upload.util.ts\n            \n            injectable\n            MulterUploadUtil\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/images/util/process-save-data.util.ts\n            \n            injectable\n            ProcessSaveDataUtil\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/controller/rental.controller.ts\n            \n            controller\n            RentalController\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/create-rental.dto.ts\n            \n            class\n            CreateRentalDto\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/loc-create-rental.dto.ts\n            \n            class\n            LocCreateRentalDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/raw-coordinates.dto.ts\n            \n            class\n            RawCoordinatesDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/raw-create-rental-dto.ts\n            \n            class\n            RawCreateRentalDto\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/rental/dto/details/edit-details.dto.ts\n            \n            class\n            EditDetailsDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/pricing/pricing.dto.ts\n            \n            class\n            PricingDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/given-notice-search-rental-dto.ts\n            \n            class\n            GivenNoticeSearchRentalDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/process-rental-time.dto.ts\n            \n            class\n            ProcessRentalTimeDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/raw-search-rental.dto.ts\n            \n            class\n            RawSearchRentalDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/request-coordinates.dto.ts\n            \n            class\n            RequestCoordinatesDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/search-rental.dto.ts\n            \n            class\n            SearchRentalDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/remove/remove-unavailability.dto.ts\n            \n            class\n            RemoveUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/create-query.dto.ts\n            \n            class\n            CreateQueryDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts\n            \n            class\n            ProcessedUnavailabilityQueryDto\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts\n            \n            class\n            ProcessedUnavailabilityDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts\n            \n            class\n            RawScheduleUnavailabilityDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/sorted-unavailability.dto.ts\n            \n            interface\n            SortedUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/unavailability-query.dto.ts\n            \n            class\n            UnavailabilityQueryDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts\n            \n            class\n            ValidateScheduleUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/unavailability.dto.ts\n            \n            class\n            UnavailabilityDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/update-unavailability-data.dto.ts\n            \n            class\n            UpdateUnavailabilityDataDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/update-unavailability.dto.ts\n            \n            class\n            UpdateUnavailabilityDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts\n            \n            class\n            ValidateUpdateUnavailabilityDto\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/validated-unavailability.dto.ts\n            \n            class\n            ValidatedUnavailabilityDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/interface/modelInterface/Rental/rental.interface.ts\n            \n            interface\n            RentalInterface\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/rental/interface/modelInterface/Unavailability/unavailability.interface.ts\n            \n            class\n            UnavailabilityInterface\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/middleware/validate-update-unavailability.middleware.ts\n            \n            injectable\n            ValidateUpdateUnavailabilityMiddleware\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/create-updater-dto.pipe.ts\n            \n            injectable\n            CreateUpdaterDtoPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/geo-url-api.pipe.ts\n            \n            injectable\n            GeoUrlApiPipe\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/rental/pipes/given-notice.pipe.ts\n            \n            injectable\n            GivenNoticePipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/map-new-rental.pipe.ts\n            \n            injectable\n            MapNewRentalPipe\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/rental/pipes/pricing.pipe.ts\n            \n            injectable\n            PricingPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/process-unavailability.pipe.ts\n            \n            injectable\n            ProcessUnavailabilityPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/rental-duration.pipe.ts\n            \n            injectable\n            RentalDurationPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/request-coordinates.pipe.ts\n            \n            injectable\n            RequestCoordinatesPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/sort-unavailability.pipe.ts\n            \n            injectable\n            SortUnavailabilityPipe\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-edit-details.pipe.ts\n            \n            injectable\n            ValidateEditDetailsPipe\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-remove-unavailability.pipe.ts\n            \n            injectable\n            ValidateRemoveUnavailabilityPipe\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-unavailability.pipe.ts\n            \n            injectable\n            ValidateUnavailabilityPipe\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            ObjectID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            RentalSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/unavailability-schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/unavailability-schema.ts\n            \n            variable\n            UnavailabilitySchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/validation/create-rental-validation.schema.ts\n            \n            variable\n            CreateRentalValidationSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/validation/search-rental-validation.schema.ts\n            \n            variable\n            SearchRentalValidationSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/service/rental.service.ts\n            \n            injectable\n            RentalService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/rental/service/test-rental.service.ts\n            \n            injectable\n            TestRentalService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/utils/generate-rental-duration-enum.util.ts\n            \n            injectable\n            GenerateRentalDurationEnumUtil\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/rental/utils/geo-url-api.util.ts\n            \n            injectable\n            GeoUrlApiUtil\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/secrets/secrets.ts\n            \n            variable\n            Secrets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            injectable\n            CreateUserDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/user/dto/delete-user.dto.ts\n            \n            injectable\n            DeleteUserDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/dto/find-user-by-reset-password-token.dto.ts\n            \n            injectable\n            ResetPasswordTokenDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/dto/find-user.dto.ts\n            \n            injectable\n            FindUserDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/dto/login.dto.ts\n            \n            injectable\n            LoginDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            injectable\n            UpdateUserDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/interface/modelInterface/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/user/middleware/validate-email.middleware.ts\n            \n            injectable\n            ValidateEmailMiddleware\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/user/pipes/bcrypt.pipe.ts\n            \n            injectable\n            BcryptHashPipe\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/schema/validation/create-user-validation.schema.ts\n            \n            variable\n            CreateUserValidation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/user/util/validate-email.util.ts\n            \n            injectable\n            ValidateEmailUtil\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            apiKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            axios\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            geoUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            makeRequest\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.0\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/mongoose : ^6.3.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/serve-static : ^2.1.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/cookie-parser : ^1.4.2\n        \n            @types/node : 11.13.4\n        \n            aws-sdk : ^2.635.0\n        \n            axios : ^0.19.2\n        \n            bcrypt : ^5.0.0\n        \n            cache-manager : ^3.4.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            cookie-parser : ^1.4.5\n        \n            crypto : ^1.0.1\n        \n            dotenv : ^8.2.0\n        \n            helmet : ^4.2.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            luxon : ^1.22.0\n        \n            mongoose : ^5.9.1\n        \n            multer : ^1.4.2\n        \n            multer-s3 : ^2.9.0\n        \n            nest-router : ^1.0.9\n        \n            nodemailer : ^6.4.16\n        \n            nodemailer-smtp-transport : ^2.7.4\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            typescript : 3.7.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RentalDurations   (src/.../const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rental/const.ts\n    \n        \n            \n                \n                    \n                        \n                        RentalDurations\n                    \n                \n                    \n                        \n                            summary: an enum for easily storing and working with the time duration of a rental\n\n                        \n                    \n                        \n                            \n                                 Any\n                            \n                        \n                        \n                            \n                                 1 Day\n                            \n                        \n                        \n                            \n                                 3 Days\n                            \n                        \n                        \n                            \n                                 5 Days\n                            \n                        \n                        \n                            \n                                 1 Week\n                            \n                        \n                        \n                            \n                                 3 Weeks\n                            \n                        \n                        \n                            \n                                 1 Month\n                            \n                        \n                        \n                            \n                                 3 Months\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRent-A-Car\nThis project is a demonstration of a scalable, loosely-coupled, testable, server-side application written with TypeScript and the NestJS framework. Rent-A-Car is a demonstrative car rental web application for authorized users to list their vehicle as available for rental, and to find rental vehicles available in their area. The application uses the powerful HERE Developer Geocoder API to create rentals with geocoordinate location data as well as to search for listed rentals near a user's address or device location. User profile and rental images are uploaded to an AWS S3 bucket, and the image download links and metadata are saved to a MongoDB Atlas cluster. Once a user has listed a rental, they may upload photos, edit the rental's pricing, schedule unavailability on the calendar, and update the rental's details.\nInstallation\nTry the App with Postman:\n\n\nNote: If Postman Web never launches try downloading the app to your pc, it will import the collection and environment and run fine. \nwill be deployed soon :)\n\nContributing\n\nJonathan Sells\nThis project is a smaller demonstrative version of the original project Turrendas that I was working on with Jean Canales, who was creating the React frontend.\n\nLicense\nThis project is licensed under the MIT license. See the LICENSE file for more info.\nDocumentation\nRent-A-Car Wiki\nplease check out the wiki for a more detailed look at the application.\nhttps://github.com/Pioneer18/Rent-A-Car/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 RentACar J\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RentalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_exports\n\n\n\ncluster_AppConfigModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_imports\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_RentalModule\n\n\n\ncluster_RentalModule_exports\n\n\n\ncluster_RentalModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppConfigService \n\nAppConfigService \n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nAppConfigService  -->\n\nAppConfigModule->AppConfigService \n\n\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAppConfigModule->AuthModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nAppConfigModule->ImagesModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppConfigModule->UserModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAppConfigModule -->\n\nAppConfigService->AppConfigModule\n\n\n\nAuthModule -->\n\nAppConfigService->AuthModule\n\n\n\nImagesModule -->\n\nAppConfigService->ImagesModule\n\n\n\n\n\nRentalModule\n\nRentalModule\n\nRentalModule -->\n\nAppConfigService->RentalModule\n\n\n\nAppModule -->\n\nAppModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nAuthModule->EmailService \n\n\n\n\n\nExtractKeyValueUtil \n\nExtractKeyValueUtil \n\nExtractKeyValueUtil  -->\n\nAuthModule->ExtractKeyValueUtil \n\n\n\n\n\nLoggedOutGaurd \n\nLoggedOutGaurd \n\nLoggedOutGaurd  -->\n\nAuthModule->LoggedOutGaurd \n\n\n\n\n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil  -->\n\nAuthModule->VerifyNewPasswordUtil \n\n\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\nAppModule -->\n\nRentalModule->AppModule\n\n\n\n\n\nRentalService \n\nRentalService \n\nRentalService  -->\n\nRentalModule->RentalService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nAuthModule -->\n\nExtractKeyValueUtil->AuthModule\n\n\n\nUserModule -->\n\nExtractKeyValueUtil->UserModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nAuthModule -->\n\nVerifyNewPasswordUtil->AuthModule\n\n\n\nUserModule -->\n\nVerifyNewPasswordUtil->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nImagesModule -->\n\nDatabaseModule->ImagesModule\n\n\n\nRentalModule -->\n\nDatabaseModule->RentalModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nCreateMulterUploadUtil\n\nCreateMulterUploadUtil\n\nImagesModule -->\n\nCreateMulterUploadUtil->ImagesModule\n\n\n\n\n\nDeleteS3ImagesUtil\n\nDeleteS3ImagesUtil\n\nImagesModule -->\n\nDeleteS3ImagesUtil->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nMulterUploadUtil\n\nMulterUploadUtil\n\nImagesModule -->\n\nMulterUploadUtil->ImagesModule\n\n\n\n\n\nProcessSaveDataUtil\n\nProcessSaveDataUtil\n\nImagesModule -->\n\nProcessSaveDataUtil->ImagesModule\n\n\n\n\n\nS3Provider\n\nS3Provider\n\nImagesModule -->\n\nS3Provider->ImagesModule\n\n\n\n\n\nCreateUpdaterDtoPipe\n\nCreateUpdaterDtoPipe\n\nRentalModule -->\n\nCreateUpdaterDtoPipe->RentalModule\n\n\n\n\n\nGenerateRentalDurationEnumUtil\n\nGenerateRentalDurationEnumUtil\n\nRentalModule -->\n\nGenerateRentalDurationEnumUtil->RentalModule\n\n\n\n\n\nGeoUrlApiPipe\n\nGeoUrlApiPipe\n\nRentalModule -->\n\nGeoUrlApiPipe->RentalModule\n\n\n\n\n\nGeoUrlApiUtil\n\nGeoUrlApiUtil\n\nRentalModule -->\n\nGeoUrlApiUtil->RentalModule\n\n\n\n\n\nGivenNoticePipe\n\nGivenNoticePipe\n\nRentalModule -->\n\nGivenNoticePipe->RentalModule\n\n\n\n\n\nMapNewRentalPipe\n\nMapNewRentalPipe\n\nRentalModule -->\n\nMapNewRentalPipe->RentalModule\n\n\n\n\n\nPricingPipe\n\nPricingPipe\n\nRentalModule -->\n\nPricingPipe->RentalModule\n\n\n\n\n\nProcessUnavailabilityPipe\n\nProcessUnavailabilityPipe\n\nRentalModule -->\n\nProcessUnavailabilityPipe->RentalModule\n\n\n\n\n\nRentalDurationPipe\n\nRentalDurationPipe\n\nRentalModule -->\n\nRentalDurationPipe->RentalModule\n\n\n\n\n\nRentalService\n\nRentalService\n\nRentalModule -->\n\nRentalService->RentalModule\n\n\n\n\n\nRequestCoordinatesPipe\n\nRequestCoordinatesPipe\n\nRentalModule -->\n\nRequestCoordinatesPipe->RentalModule\n\n\n\n\n\nSortUnavailabilityPipe\n\nSortUnavailabilityPipe\n\nRentalModule -->\n\nSortUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateEditDetailsPipe\n\nValidateEditDetailsPipe\n\nRentalModule -->\n\nValidateEditDetailsPipe->RentalModule\n\n\n\n\n\nValidateRemoveUnavailabilityPipe\n\nValidateRemoveUnavailabilityPipe\n\nRentalModule -->\n\nValidateRemoveUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateUnavailabilityPipe\n\nValidateUnavailabilityPipe\n\nRentalModule -->\n\nValidateUnavailabilityPipe->RentalModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    46 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    40 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MTime   (src/.../military-time.alias.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rental/alias/military-time.alias.ts\n    \n    \n        \n            \n                \n                    \n                    MTime\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            address   (testfile.ts)\n                        \n                        \n                            apiKey   (testfile.ts)\n                        \n                        \n                            axios   (testfile.ts)\n                        \n                        \n                            CreateRentalValidationSchema   (src/.../create-rental-validation.schema.ts)\n                        \n                        \n                            CreateUserValidation   (src/.../create-user-validation.schema.ts)\n                        \n                        \n                            databaseConnection   (src/.../Const.ts)\n                        \n                        \n                            databaseProvider   (src/.../database.provider.ts)\n                        \n                        \n                            geoUrl   (testfile.ts)\n                        \n                        \n                            ImageSchema   (src/.../images.schema.ts)\n                        \n                        \n                            jwtConstants   (src/.../constant.ts)\n                        \n                        \n                            makeRequest   (testfile.ts)\n                        \n                        \n                            ObjectID   (src/.../rental.schema.ts)\n                        \n                        \n                            profile   (src/.../Const.ts)\n                        \n                        \n                            rentals   (src/.../Const.ts)\n                        \n                        \n                            RentalSchema   (src/.../rental.schema.ts)\n                        \n                        \n                            Schema   (src/.../images.schema.ts)\n                        \n                        \n                            Schema   (src/.../rental.schema.ts)\n                        \n                        \n                            Schema   (src/.../unavailability-schema.ts)\n                        \n                        \n                            Schema   (src/.../user.schema.ts)\n                        \n                        \n                            SearchRentalValidationSchema   (src/.../search-rental-validation.schema.ts)\n                        \n                        \n                            Secrets   (src/.../secrets.ts)\n                        \n                        \n                            toItemIndexes   (src/.../to-item-indexes.ts)\n                        \n                        \n                            unavailabilityModel   (src/.../Const.ts)\n                        \n                        \n                            unavailabilityProvider   (src/.../unavailability-model.provider.ts)\n                        \n                        \n                            UnavailabilitySchema   (src/.../unavailability-schema.ts)\n                        \n                        \n                            userModel   (src/.../Const.ts)\n                        \n                        \n                            userProvider   (src/.../user-model.provider.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            validated   (src/.../Const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    testfile.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `9706+Forestdale+Ct+Riverview+33578`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '4ol_YAcp0Lkuu9pN2j2Iu_UY5lDRKWoDyJLQE2Zo6IA'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            axios\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('axios')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocode.search.hereapi.com/v1/geocode'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (geoUrl, address, apiKey) => {\n    const request = await axios.default.get(\n      `${geoUrl}?q=${address}&apiKey=${apiKey}`,\n    );\n    \n    console.log(`Response Data Below`);\n    console.log(JSON.stringify(request.data, null, 2));\n    console.log(JSON.stringify(request.data.items[0].position, null, 2))\n    console.log(JSON.stringify(request.data.items[0].title, null, 2))\n    console.log(JSON.stringify(request.data.items[0].address, null, 2))\n    return;\n}\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/validation/create-rental-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CreateRentalValidationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n  rentalDescription: joi.string(),\n  address: joi.string().required(),\n  specs: joi.object({\n    odometer: joi.number().required(),\n    transmission: joi.string().required(),\n    cityMpg: joi.number().required()\n      .when('fuel', {is: 'electric', then: joi.valid(null)}),\n    hwyMpg: joi.number().required()\n      .when('fuel', {is: 'electric', then: joi.valid(null)}),\n    mpgE: joi.number()\n      .when('fuel', {is: 'electric', then: joi.number().required()})\n      .when('fuel', {not: 'electric', then: joi.valid(null) }),\n    fuel: joi.string().valid('gas', 'hybrid','electric').required(),\n    gasGrade: joi.string().valid('regular', 'mid', 'premium', 'N/A').required()\n      .when('fuel', {is: 'electric', then: joi.valid('N/A')}),\n    description: joi.string().required(),\n    make: joi.string().required(),\n    model: joi.string().required(),\n    style: joi.string().required(),\n    color: joi.string().required(),\n    numOfSeats: joi.number().required(),\n    numDoors: joi.number().required(),\n  }),\n  registration: joi.object({\n    vin: joi.string().required(),\n    licensePlate: joi.string().required(),\n    state: joi.string().required(),\n  }),\n  features: joi.array().items(joi.string()),\n  scheduling: joi.object({\n    requiredNotice: joi.number().required(),\n    rentMinDuration: joi.number().required(),\n    rentMaxDuration: joi.number().required(),\n  }),\n  pricing: joi.object({\n    price: joi.number().required(),\n    discounts: joi.object({\n      weekly: joi.number(),\n      monthly: joi.number(),\n    }),\n  }),\n  loc: joi.object({\n    type: joi.string().required(),\n    coordinates: joi\n      .array()\n      .items(joi.number())\n      .length(2)\n      .required(),\n  }),\n  photos: joi.array().items(joi.string()),\n  listed: joi.boolean().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate requested new rental before passing to the handler\n\nfuel: when the selected fuel type is electric and not gas or hybrid, several fields must change their validation\nmpgE: the metric for electric mileage. When the selected fuel type is electric, mpgE is required, otherwise it must be null\ncityMpg: the metric for gas mileage in the city. cityMpg must be null if the fuel type is electric\nhwyMpg: the metric for gas mileage on the highway. hwyMpg must be null if the fuel type is electric\ngasGrade: the gas grade must be 'N/A' if the selected fuel type is electric\n\n\n\n\n                    \n                \n\n            \n        \n\n    src/user/schema/validation/create-user-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n    username: joi.string().required(),\n    email: joi.string().email().required(),\n    password: joi.string().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate the requested new User data confirms to the User model\n\n                    \n                \n\n            \n        \n\n    src/common/Const.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'profile'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rentals'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UNAVAILABILITY_MODEL'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_MODEL'\n                        \n                    \n\n                \n                    \n                        summary: export constants to be used in the application. These are mostly names of providers\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'VALIDATED'\n                        \n                    \n\n\n            \n        \n\n    src/database/providers/database.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: databaseConnection,\n    useFactory: (configService: ConfigService): Promise =>\n      mongoose.connect(configService.get('REMOTE_DB')), // currently returning undefined, needs a .env file\n      import: [ConfigModule],\n      inject: [ConfigService],\n  },\n]\n                        \n                    \n\n                \n                    \n                        summary: provide a connection to the remote database\n\n                    \n                \n\n            \n        \n\n    src/images/schema/images.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ImageSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    user_id: String, // ObjectId of the logged in user\n    rental_id: {type: String || null }, // null for profile images\n    bucket: String, // 'rent-a-car-photos/{user_email}/{category}'\n    key: String, // 'timestamp-originalname'\n    originalName: String, \n    etag: String || null,\n    category: String, // rentals or profile\n    size: String,\n    location: String, // aws url for image download\n})\n                        \n                    \n\n                \n                    \n                        summary: the schema for the Image Model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    src/auth/constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret: process.env.SECRET_KEY,\n    jwt_exp_time: process.env.JWT_EXP_TIME,\n}\n                        \n                    \n\n                \n                    \n                        summary: holds the secret key and expiration time of the JWT token for the Passport Jwt-Strategy\n\n                    \n                \n\n            \n        \n\n    src/rental/schema/rental.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ObjectID\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.ObjectId\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RentalSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  rentalId: ObjectID,\n  rentalTitle: String,\n  rentalDescription: String,\n  address: String,\n  loc: {\n    type: { type: String },\n    coordinates: Object,\n  },\n  specs: {\n    odometer: Number,\n    transmission: String,\n    cityMpg: Number || null,\n    hwyMpg: Number || null,\n    mpgE: Number || null,\n    fuel: String,\n    gasGrade: String,\n    description: String,\n    make: String,\n    model: String,\n    style: String,\n    color: String,\n    numOfSeats: Number,\n    numDoors: Number,\n  },\n  registration: {\n    vin: String,\n    licensePlate: String,\n    state: String,\n  },\n  features: [String],\n  scheduling: {\n    requiredNotice: Number,\n    rentMinDuration: Number,\n    rentMaxDuration: Number,\n  },\n  pricing: {\n    price: { type: Number /*, default: DEFAULT_PRICE*/ },\n    discounts: {\n      weekly: { type: Number, default: null },\n      monthly: { type: Number, default: null },\n    },\n  },\n  photos: [String],\n  listed: Boolean,\n})\n                        \n                    \n\n                \n                    \n                        summary: the schema for the Rental Model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/unavailability-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UnavailabilitySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    unavailabilityId: String,\n    rentalId: String,\n    year: Number,\n    doy: Number, // day of the year\n    start: {type: Number, min: 0, max: 24}, // min: 0; max: 24 military time\n    end: {type: Number, min: 0, max: 24}, // min: 0; max: 24 military time\n    title: String, // e.g. Christmas Break\n})\n                        \n                    \n\n                \n                    \n                        summary: the schema for the Unavailability Model\n\n                    \n                \n\n            \n        \n\n    src/user/schema/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    username: String,\n    email: { \n        type: String, \n        unique: true\n    },\n    password: String,\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n})\n                        \n                    \n\n                \n                    \n                        summary: schema for the User model\n\n                    \n                \n\n            \n        \n\n    src/rental/schema/validation/search-rental-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SearchRentalValidationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n  address: joi.string().required(),\n  features: joi.array().items(joi.string()).allow(null),\n  price: joi.number().allow(null),\n  rentalDuration: joi.number().required(),\n  loc: {\n    type: joi.string().required(),\n    coordinates: joi\n      .array()\n      .items(joi.number(), joi.number())\n      .required(),\n  },\n  givenNotice: joi.number().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate an incoming SearchRentalDto\n\n                    \n                \n\n            \n        \n\n    src/secrets/secrets.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Secrets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    key: process.env.PRIVATE_KEY\n}\n                        \n                    \n\n                \n                    \n                        private rsa key for https\n\n                    \n                \n\n            \n        \n\n    src/common/util/to-item-indexes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toItemIndexes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (a: T[]) => {\n    return a.map((item, index) => ({item, index}));\n}\n                        \n                    \n\n                \n                    \n                        summary: map the passed array, of any Type, into a new array of tuples with the index for each value\n\n                    \n                \n\n            \n        \n\n    src/database/providers/unavailability-model.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: unavailabilityModel,// UNAVAILABILITY_MODEL\n    useFactory: (connection: Connection) => connection.model('Unavailability', UnavailabilitySchema),\n    inject: [databaseConnection],\n  },\n]\n                        \n                    \n\n                \n                    \n                        summary: provide a connection to the Unavailability Model\n\n                    \n                \n\n            \n        \n\n    src/database/providers/user-model.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: userModel,// USER_MODEL\n    useFactory: (connection: Connection) => connection.model('User', UserSchema),\n    inject: [databaseConnection],\n  },\n]\n                        \n                    \n\n                \n                    \n                        summary: provide connection to the User Model\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
