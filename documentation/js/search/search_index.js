var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,2.054,1,2.662]],["body/modules/AppConfigModule.html",[0,3.282,1,5.098,2,2.556,3,2.662,4,2.911,5,2.911,6,2.662,7,4.253,8,4.253,9,4.072,10,4.072,11,4.072,12,4.096,13,5.34,14,0.009,15,3.934,16,2.29,17,2.556,18,0.089,19,0.098,20,0.069,21,4.612,22,0.606,23,0.876,24,5.022,25,5.502,26,7.894,27,5.502,28,1.636,29,3.716,30,4.612,31,0.655,32,3.062,33,2.779,34,4.612,35,2.911,36,4.612,37,4.612,38,4.072,39,4.072,40,4.612,41,4.612,42,6.231,43,4.612,44,4.072,45,3.451,46,4.612,47,3.716,48,4.612,49,4.612,50,2.215,51,4.138,52,4.072,53,7.72,54,4.072,55,2.46,56,4.072,57,4.072,58,3.451,59,4.072,60,4.072,61,4.072,62,4.072,63,3.062,64,3.451,65,4.072,66,4.072,67,2.779,68,4.072,69,4.072,70,3.716,71,4.072,72,4.072,73,4.612,74,4.612,75,2.779,76,4.612,77,4.138,78,4.612,79,4.072,80,4.612,81,4.612,82,3.716,83,3.716,84,4.612,85,2.779,86,4.612,87,3.451,88,2.556,89,0.098,90,0.103,91,0.004,92,0.006,93,0.004]],["title/injectables/AppConfigService.html",[12,2.054,94,0.204]],["body/injectables/AppConfigService.html",[12,2.779,13,5.264,14,0.009,18,0.083,19,0.093,20,0.065,22,0.57,23,0.63,31,0.616,33,2.614,47,5.51,52,6.037,54,6.037,56,6.037,57,6.037,60,6.037,61,6.037,62,6.037,65,6.037,66,6.037,69,6.037,70,5.51,71,6.037,72,6.037,89,0.093,90,0.153,91,0.004,92,0.006,93,0.004,94,0.275,95,0.863,96,3.831,97,4.817,98,5.277,99,5.277,100,0.13,101,5.977,102,1.378,103,4.338,104,0.586,105,4.338,106,0.926,107,0.884,108,0.21,109,0.926,110,4.338,111,4.338,112,4.338,113,4.338,114,4.338,115,4.338,116,4.338,117,4.338,118,4.338,119,4.338,120,4.338,121,4.338,122,4.338,123,4.338,124,4.338,125,4.338,126,4.338,127,4.338,128,4.338,129,4.338,130,4.338,131,4.338,132,4.338,133,4.338,134,4.338,135,4.338,136,4.338,137,4.338,138,2.231,139,1.692,140,1.482,141,1.842,142,4.338,143,4.338,144,4.338,145,4.338,146,4.338,147,4.338,148,1.282,149,4.338,150,4.338,151,4.338,152,4.338,153,4.338,154,4.338,155,4.338,156,4.338]],["title/controllers/AppController.html",[157,2.356,158,3.306]],["body/controllers/AppController.html",[14,0.009,18,0.116,19,0.128,20,0.091,23,0.844,31,0.854,89,0.128,90,0.135,91,0.006,92,0.007,93,0.006,100,0.181,102,1.911,104,0.397,106,1.284,107,1.226,109,1.284,141,1.254,157,3.946,158,5.536,159,3.209,160,5.313,161,1.771,162,7.398,163,6.017,164,4.226,165,6.017,166,6.017,167,3.611,168,1.408,169,4.503,170,4.226,171,1.44,172,5.313,173,3.799,174,4.849,175,4.503,176,3.626,177,5.313,178,4.503,179,4.503,180,4.849,181,6.017,182,6.017,183,4.226]],["title/modules/AppModule.html",[0,2.054,184,3.306]],["body/modules/AppModule.html",[0,2.954,1,4.746,2,2.1,3,2.186,4,2.392,5,2.392,6,2.186,7,3.828,8,2.283,12,3.227,13,3.43,14,0.009,15,3.43,16,1.881,17,2.1,18,0.073,19,0.081,20,0.096,23,0.951,24,5.12,31,0.538,32,2.516,33,2.283,35,4.011,82,4.379,89,0.081,90,0.085,91,0.004,92,0.005,93,0.005,158,4.754,159,2.898,184,6.697,185,3.345,186,3.345,187,3.345,188,5.371,189,5.371,190,5.371,191,5.078,192,5.371,193,3.788,194,4.462,195,4.462,196,4.462,197,4.462,198,3.788,199,3.788,200,3.788,201,3.345,202,2.835,203,2.1,204,3.788,205,3.345,206,3.345,207,3.345,208,3.788,209,6.353,210,5.433,211,3.345,212,4.066,213,3.788,214,3.788,215,4.066,216,3.788,217,4.066,218,3.788,219,3.788,220,3.788,221,3.788,222,3.345,223,3.345,224,3.788,225,4.379,226,3.788,227,3.788,228,3.788,229,3.788,230,2.835,231,2.283,232,3.788,233,4.379,234,3.053,235,3.788,236,3.788,237,3.345,238,3.788,239,3.788,240,3.788,241,3.788,242,2.392,243,3.788,244,3.788,245,3.345,246,0.95,247,3.788,248,3.788,249,2.661,250,3.788,251,3.788,252,3.788,253,3.788,254,6.353]],["title/injectables/AppService.html",[94,0.204,192,3.103]],["body/injectables/AppService.html",[14,0.009,18,0.125,19,0.139,20,0.098,23,0.687,31,0.925,89,0.139,90,0.146,91,0.006,92,0.008,93,0.006,94,0.358,95,1.297,100,0.196,104,0.43,140,1.31,141,1.359,161,1.859,168,1.525,192,5.454,255,5.755,256,8.587,257,6.518,258,6.518,259,6.518]],["title/controllers/AuthController.html",[157,2.356,197,3.103]],["body/controllers/AuthController.html",[14,0.009,16,2.599,18,0.069,19,0.077,20,0.054,23,0.853,31,0.51,89,0.077,90,0.081,91,0.003,92,0.005,93,0.003,100,0.108,104,0.474,106,1.536,107,1.466,108,0.328,109,1.536,138,1.85,139,1.403,141,1.501,157,1.918,159,1.918,161,1.253,164,5.056,167,3.581,168,1.684,169,2.691,170,2.526,171,0.861,172,3.175,173,2.27,175,3.916,176,2.167,178,2.691,179,3.916,180,2.898,197,3.675,246,2.166,260,3.175,261,2.691,262,2.898,263,4.621,264,4.621,265,5.07,266,5.46,267,4.621,268,3.596,269,2.282,270,4.758,271,3.596,272,3.894,273,3.596,274,4.217,275,3.175,276,4.758,277,5.233,278,3.596,279,4.621,280,3.596,281,4.338,282,3.91,283,3.596,284,3.596,285,3.175,286,3.596,287,3.596,288,3.175,289,4.758,290,5.233,291,3.596,292,1.041,293,4.621,294,3.02,295,3.675,296,2.618,297,4.616,298,2.388,299,1.786,300,3.175,301,4.971,302,3.175,303,3.175,304,3.596,305,2.691,306,3.596,307,3.175,308,3.717,309,2.898,310,3.596,311,1.912,312,3.596,313,3.596,314,3.596,315,3.596,316,0.967,317,4.333,318,1.912,319,3.596,320,3.596,321,3.596,322,2.691,323,3.596,324,3.175,325,3.596,326,3.596,327,3.596,328,3.596,329,3.596,330,3.596,331,3.596,332,3.596,333,3.596,334,3.596,335,3.596]],["title/modules/AuthModule.html",[0,2.054,188,3.103]],["body/modules/AuthModule.html",[0,2.99,1,4.642,2,2.146,3,2.235,4,2.445,5,2.445,6,2.235,7,3.875,8,3.875,12,3.582,14,0.009,15,3.484,16,1.923,17,2.146,18,0.074,19,0.083,20,0.058,23,0.935,31,0.55,32,3.665,33,2.334,35,3.484,89,0.083,90,0.087,91,0.004,92,0.005,93,0.004,159,2.065,176,4.884,178,2.898,188,6.418,191,5.116,197,3.876,201,3.419,230,2.898,231,2.334,233,4.448,234,3.121,307,3.419,308,5.152,309,3.121,336,3.419,337,3.419,338,3.872,339,3.419,340,5.677,341,5.152,342,5.152,343,4.642,344,5.41,345,5.41,346,3.872,347,3.872,348,3.121,349,5.519,350,2.572,351,4.13,352,3.419,353,3.872,354,3.872,355,3.872,356,2.898,357,1.693,358,2.898,359,3.419,360,0.906,361,2.898,362,3.419,363,3.419,364,2.898,365,3.872,366,3.419,367,3.419,368,3.872,369,5.519,370,3.872,371,2.72,372,1.117,373,1.597,374,3.872]],["title/injectables/AuthService.html",[94,0.204,308,2.662]],["body/injectables/AuthService.html",[12,2.253,14,0.009,16,3.199,18,0.037,19,0.042,20,0.029,22,0.256,23,0.822,31,0.277,58,2.424,67,4.586,77,2.151,88,1.795,89,0.042,90,0.044,91,0.005,92,0.003,93,0.002,94,0.149,95,0.388,100,0.059,102,1.029,104,0.405,106,1.312,107,1.253,108,0.298,109,1.312,139,2.512,140,1.038,141,1.343,161,0.776,167,2.424,168,1.358,171,1.651,225,1.57,231,1.174,237,2.86,242,2.045,246,1.976,263,2.86,264,2.86,265,4.603,266,4.334,267,2.86,269,1.365,270,3.403,272,3.646,274,2.611,275,2.86,276,3.403,279,3.671,285,2.86,288,2.86,289,3.403,292,0.827,293,1.72,294,2.796,295,2.275,296,3.13,297,2.424,299,0.968,300,1.72,301,3.351,302,1.72,303,1.72,308,1.952,311,2.193,316,2.016,317,1.368,318,2.488,340,4.085,341,3.707,342,3.707,343,3.707,348,1.57,356,1.458,357,2.816,358,1.458,359,1.72,360,1.692,361,1.458,362,1.72,363,1.72,364,1.458,372,0.562,373,0.804,375,1.72,376,3.112,377,2.611,378,3.239,379,2.307,380,3.571,381,4.278,382,1.887,383,2.045,384,1.795,385,2.492,386,1.948,387,3.664,388,6.151,389,4.603,390,2.92,391,1.948,392,3.239,393,1.948,394,1.948,395,3.239,396,1.948,397,1.948,398,1.948,399,3.239,400,4.024,401,1.948,402,2.275,403,1.23,404,1.948,405,2.151,406,1.948,407,1.368,408,2.424,409,1.948,410,1.948,411,2.424,412,2.151,413,1.948,414,1.57,415,2.381,416,1.839,417,2.138,418,1.948,419,2.045,420,1.948,421,0.827,422,1.23,423,1.72,424,3.351,425,4.748,426,1.943,427,1.667,428,1.843,429,1.998,430,1.948,431,1.458,432,1.948,433,1.609,434,1.368,435,1.948,436,1.458,437,1.948,438,2.151,439,1.948,440,1.948,441,1.948,442,1.948,443,3.351,444,1.948,445,1.948,446,1.948,447,1.174,448,1.948,449,3.239,450,2.611,451,3.112,452,1.948,453,2.86,454,2.045,455,2.86,456,1.948,457,1.948,458,1.948,459,1.948,460,1.57,461,1.368,462,1.948,463,1.72,464,1.948,465,3.112,466,2.86,467,3.351,468,1.72,469,1.57,470,1.72,471,1.952,472,3.239,473,1.72,474,1.57,475,1.294,476,1.948,477,1.46,478,1.948,479,2.151,480,4.158,481,1.948,482,1.948,483,1.458,484,1.72,485,3.239,486,1.948,487,1.948,488,1.948,489,1.72,490,2.045,491,2.151,492,1.72,493,1.72,494,1.458,495,1.948,496,1.72,497,1.72,498,1.948,499,1.948,500,1.948,501,1.948,502,1.948,503,1.72,504,1.72,505,1.948,506,1.948,507,3.239,508,1.458,509,1.666,510,1.948,511,1.948,512,1.948,513,3.239,514,1.948,515,1.948,516,1.948,517,3.239,518,1.72,519,3.239,520,1.72,521,1.72,522,1.458,523,1.125,524,1.57,525,1.948,526,1.948,527,1.948,528,1.387]],["title/injectables/BcryptHashPipe.html",[94,0.204,529,3.306]],["body/injectables/BcryptHashPipe.html",[14,0.009,18,0.144,19,0.111,20,0.078,22,0.684,23,0.789,31,0.739,89,0.111,90,0.116,91,0.005,92,0.007,93,0.005,94,0.311,95,1.036,100,0.156,104,0.343,106,1.11,107,1.06,108,0.252,109,1.11,141,1.085,161,1.616,168,1.217,246,1.878,272,3.042,294,3.896,311,1.613,316,1.814,318,2.092,360,1.855,372,2.161,379,1.857,407,3.655,411,5.932,416,1.975,428,2.144,429,2.146,474,4.193,479,3.456,508,3.894,529,5.051,530,4.594,531,3.042,532,3.242,533,5.005,534,5.203,535,3.042,536,8.417,537,6.75,538,3.352,539,3.894,540,2.086,541,5.203,542,5.203,543,5.203,544,5.203,545,6.75,546,5.203,547,5.203,548,5.203,549,5.203,550,5.203,551,4.594,552,4.193]],["title/classes/ChangePasswordDto.html",[90,0.099,270,3.103]],["body/classes/ChangePasswordDto.html",[14,0.009,18,0.123,19,0.137,20,0.096,28,1.683,89,0.137,90,0.143,91,0.006,92,0.007,93,0.006,100,0.192,104,0.507,108,0.373,139,3.458,140,1.441,270,5.399,465,6.162,467,6.636,553,7.271,554,4.5,555,0.932,556,5.658,557,4.795]],["title/classes/CheckPasswordTypoDto.html",[90,0.099,558,3.306]],["body/classes/CheckPasswordTypoDto.html",[14,0.009,18,0.124,19,0.138,20,0.097,28,1.697,89,0.138,90,0.145,91,0.006,92,0.008,93,0.006,100,0.194,104,0.509,108,0.374,140,1.445,272,3.725,465,6.184,467,6.66,555,0.937,558,5.781,559,7.297,560,5.706,561,6.462,562,6.462]],["title/injectables/CreateMulterUploadUtil.html",[94,0.204,563,2.934]],["body/injectables/CreateMulterUploadUtil.html",[14,0.009,18,0.094,19,0.105,20,0.109,23,0.849,31,0.696,89,0.105,90,0.11,91,0.005,92,0.006,93,0.005,94,0.299,95,0.975,100,0.147,102,1.556,104,0.479,106,1.045,107,0.998,108,0.237,109,1.045,138,2.52,139,1.911,141,1.021,167,2.208,171,1.173,183,3.442,246,1.229,316,1.317,357,2.142,360,1.146,372,1.872,379,1.348,382,2.718,384,2.716,415,2.69,416,1.86,426,1.965,427,1.965,428,1.556,429,2.021,431,3.667,438,3.254,518,4.327,555,0.787,563,4.309,564,6.839,565,6.095,566,3.949,567,4.855,568,4.327,569,4.989,570,4.9,571,2.602,572,4.9,573,5.23,574,4.9,575,6.489,576,4.097,577,3.667,578,3.667,579,3.094,580,2.828,581,4.9,582,4.327,583,2.953,584,3.442,585,3.442,586,4.9,587,4.9,588,4.327,589,4.327,590,2.953,591,4.9,592,4.9,593,4.9,594,4.9,595,2.52,596,4.9,597,4.9,598,3.667]],["title/classes/CreateQueryDto.html",[90,0.099,599,3.103]],["body/classes/CreateQueryDto.html",[14,0.009,18,0.114,19,0.126,20,0.089,23,0.624,28,1.555,89,0.126,90,0.133,91,0.006,92,0.007,93,0.006,100,0.178,104,0.563,108,0.414,148,2.571,447,4.794,555,0.889,599,5.146,600,7.684,601,4.432,602,3.699,603,5.022,604,3.821,605,4.091,606,4.773,607,4.393,608,5.23,609,5.23,610,4.773,611,4.773,612,3.046]],["title/classes/CreateRentalDto.html",[90,0.099,613,2.789]],["body/classes/CreateRentalDto.html",[14,0.009,18,0.087,19,0.097,20,0.068,22,0.81,28,1.192,89,0.097,90,0.102,91,0.004,92,0.006,93,0.004,100,0.136,104,0.569,108,0.435,140,1.535,148,2.612,292,0.903,360,1.062,434,3.187,523,2.619,555,0.747,613,3.891,614,7.698,615,3.187,616,2.735,617,3.657,618,1.138,619,1.634,620,4.007,621,1.441,622,3.06,623,3.362,624,4.419,625,4.04,626,3.733,627,3.879,628,4.916,629,5.238,630,4.916,631,4.419,632,3.657,633,4.538,634,3.891,635,4.538,636,4.187,637,4.538,638,4.538,639,4.538,640,4.538,641,4.007,642,4.538,643,3.396,644,3.187,645,3.187,646,3.187,647,3.187,648,3.187,649,3.187,650,2.045,651,3.187,652,2.865,653,3.187,654,3.187,655,3.396,656,3.396,657,3.396,658,3.396,659,3.396,660,3.396,661,2.045,662,2.865,663,2.865,664,2.865,665,2.334]],["title/injectables/CreateUpdaterDtoPipe.html",[94,0.204,666,2.789]],["body/injectables/CreateUpdaterDtoPipe.html",[14,0.009,18,0.072,19,0.08,20,0.056,22,0.906,23,0.727,31,0.531,89,0.08,90,0.084,91,0.004,92,0.005,93,0.004,94,0.248,95,0.744,100,0.112,104,0.416,106,1.345,107,1.284,108,0.181,109,0.798,141,1.635,161,1.651,168,0.875,171,1.288,242,3.398,246,1.833,269,2.145,292,1.598,311,1.954,316,2.046,318,1.668,372,2.394,373,2.22,382,2.421,383,3.398,403,2.043,415,2.968,477,2.842,528,1.247,531,2.425,532,2.585,535,2.425,538,2.673,540,1.499,555,0.653,571,2.158,602,2.503,604,2.585,612,2.768,617,4.337,621,1.709,666,3.398,667,6.091,668,4.806,669,3.301,670,4.188,671,4.337,672,4.752,673,6.306,674,6.306,675,5.744,676,3.738,677,6.462,678,3.738,679,4.027,680,3.738,681,3.78,682,5.382,683,4.337,684,3.301,685,1.382,686,3.013,687,2.871,688,4.337,689,2.22,690,4.027,691,3.013,692,5.568,693,3.013,694,5.568,695,3.013,696,5.568,697,3.981,698,5.382,699,5.382,700,2.072,701,1.738,702,3.738,703,3.738]],["title/injectables/CreateUserDto.html",[94,0.204,533,2.789]],["body/injectables/CreateUserDto.html",[14,0.009,18,0.12,19,0.133,20,0.094,23,0.657,31,0.885,89,0.133,90,0.14,91,0.006,92,0.007,93,0.006,94,0.348,95,1.24,100,0.187,104,0.536,108,0.394,140,1.486,272,3.667,296,3.454,385,4.184,533,4.772,555,0.917,704,7.469,705,4.138,706,5.502,707,6.232,708,4.663]],["title/modules/DatabaseModule.html",[0,2.054,709,2.789]],["body/modules/DatabaseModule.html",[0,3.623,2,3.633,7,3.951,8,3.951,14,0.009,18,0.126,19,0.14,20,0.099,23,0.876,31,0.931,32,5.175,33,3.951,35,4.139,89,0.14,90,0.147,91,0.006,92,0.008,93,0.006,709,4.919,710,6.555,711,6.701,712,6.555]],["title/injectables/DeleteS3ImagesUtil.html",[94,0.204,713,2.934]],["body/injectables/DeleteS3ImagesUtil.html",[14,0.009,18,0.064,19,0.071,20,0.05,22,0.434,23,0.518,31,0.469,50,2.361,63,3.899,75,2.962,88,2.724,89,0.071,90,0.074,91,0.003,92,0.005,93,0.003,94,0.227,95,0.657,100,0.099,102,1.049,104,0.429,106,0.705,107,1.196,108,0.16,109,0.705,138,1.699,139,1.288,140,0.557,141,1.025,246,1.232,269,1.832,282,2.837,316,2.272,318,2.015,357,3.751,372,1.693,379,1.353,403,1.866,415,2.17,427,3.109,460,3.962,555,0.596,567,4.86,568,2.917,569,4.391,571,2.354,573,3.962,578,2.472,583,5.135,584,4.567,585,4.567,590,3.919,595,3.748,618,1.63,626,3.469,713,3.264,714,6.138,715,2.917,716,4.916,717,5.871,718,5.871,719,3.303,720,3.303,721,3.303,722,3.303,723,1.587,724,4.573,725,5.118,726,4.916,727,6.138,728,3.604,729,4.916,730,6.503,731,3.303,732,4.916,733,3.303,734,4.916,735,4.916,736,5.742,737,4.916,738,4.189,739,3.303,740,4.916,741,5.648,742,4.34,743,5.602,744,3.303,745,4.916,746,4.916,747,3.303,748,4.916,749,4.916,750,4.866,751,4.34,752,4.916,753,4.916,754,4.916,755,3.962,756,4.34,757,4.34,758,3.303]],["title/injectables/DeleteUserDto.html",[94,0.204,759,3.103]],["body/injectables/DeleteUserDto.html",[14,0.009,18,0.127,19,0.141,20,0.099,23,0.695,31,0.936,89,0.141,90,0.148,91,0.006,92,0.008,93,0.006,94,0.36,95,1.312,100,0.198,104,0.435,108,0.32,140,1.319,272,3.757,555,0.948,705,4.379,708,4.934,759,5.492,760,6.904]],["title/classes/EditDetailsDto.html",[90,0.099,761,2.934]],["body/classes/EditDetailsDto.html",[14,0.009,18,0.111,19,0.123,20,0.087,22,0.946,28,1.512,89,0.123,90,0.129,91,0.006,92,0.007,93,0.006,100,0.173,104,0.518,108,0.399,140,1.535,148,2.502,292,1.146,523,3.323,555,0.873,618,1.443,619,2.073,621,1.828,623,3.772,631,4.959,636,3.071,644,4.044,645,4.044,646,4.044,647,4.044,648,4.044,649,4.044,650,2.595,651,4.044,652,3.635,653,4.044,654,4.044,689,3.239,761,4.781,762,7.266,763,5.084,764,3.47,765,3.824,766,5.758,767,5.758,768,5.758,769,5.758]],["title/injectables/EmailService.html",[94,0.204,340,2.934]],["body/injectables/EmailService.html",[14,0.009,16,3.886,18,0.086,19,0.096,20,0.068,22,0.804,23,0.824,31,0.638,89,0.096,90,0.101,91,0.004,92,0.006,93,0.004,94,0.282,95,0.894,100,0.135,102,2.211,104,0.493,106,1.306,107,1.247,108,0.218,109,1.306,140,1.175,141,0.937,161,1.466,168,1.432,246,2.024,262,4.934,272,3.138,294,3.533,296,3.694,311,1.393,316,1.208,340,4.065,360,1.051,372,1.296,379,1.685,400,4.581,403,2.839,415,2.574,416,1.706,428,1.427,429,1.853,489,5.405,504,6.148,508,3.362,521,3.967,522,3.362,555,0.742,571,1.801,584,4.3,585,4.3,770,3.967,771,6.026,772,6.963,773,6.963,774,6.122,775,4.493,776,4.493,777,4.493,778,6.122,779,4.493,780,6.122,781,6.122,782,6.963,783,6.122,784,4.493,785,6.148,786,4.493,787,3.967,788,3.967,789,4.581,790,4.493,791,3.362,792,4.493,793,3.621,794,4.493,795,3.967,796,6.122,797,3.967,798,4.493,799,4.493]],["title/classes/ErrorFilter.html",[90,0.099,215,3.306]],["body/classes/ErrorFilter.html",[14,0.009,18,0.089,19,0.099,20,0.07,22,0.61,23,0.659,28,1.218,31,0.659,44,4.097,88,4.851,89,0.099,90,0.104,91,0.005,92,0.006,93,0.005,100,0.139,104,0.306,106,0.99,107,1.274,108,0.225,109,0.99,141,1.304,161,1.498,168,1.085,171,1.111,215,4.682,282,2.678,316,2.277,373,2.58,426,3.038,427,2.838,483,3.472,540,2.509,621,2.248,697,3.95,723,2.228,800,4.097,801,6.257,802,6.257,803,6.257,804,6.257,805,6.257,806,6.257,807,6.257,808,6.251,809,3.337,810,6.251,811,6.257,812,5.705,813,6.69,814,4.64,815,5.525,816,4.64,817,4.155,818,2.796,819,4.64,820,4.64,821,4.097,822,3.923,823,4.097,824,3.472,825,3.472,826,5.042,827,4.64,828,4.64,829,6.257,830,4.64,831,4.64,832,4.64,833,4.64,834,2.678,835,4.097,836,2.228,837,4.64,838,4.097,839,4.64,840,4.64,841,4.64,842,6.257,843,4.64,844,4.64,845,4.097,846,6.257,847,4.64,848,4.64]],["title/injectables/ExtractKeyValueUtil.html",[94,0.204,341,2.662]],["body/injectables/ExtractKeyValueUtil.html",[14,0.009,18,0.1,19,0.111,20,0.078,22,0.684,23,0.789,31,0.739,67,5.164,68,5.96,89,0.111,90,0.116,91,0.005,92,0.007,93,0.005,94,0.311,95,1.036,100,0.156,102,2.379,104,0.445,106,1.11,107,1.06,108,0.252,109,1.11,140,0.878,141,1.085,161,1.616,167,3.042,168,1.217,171,1.966,246,1.878,299,2.584,316,1.399,317,4.741,318,2.092,341,4.068,357,3.838,360,1.217,372,1.501,373,2.146,403,2.562,428,1.652,451,6.147,588,6.615,849,6.615,850,4.594,851,5.051,852,5.96,853,5.203,854,5.96,855,5.203,856,3.894,857,5.203,858,5.203,859,4.594,860,4.594,861,5.203,862,4.594,863,3.456,864,4.594,865,4.594]],["title/interfaces/ExtractKeyValueUtilInterface.html",[856,3.306,866,1.512]],["body/interfaces/ExtractKeyValueUtilInterface.html",[14,0.009,18,0.125,19,0.139,20,0.098,67,5.175,89,0.139,91,0.006,92,0.008,93,0.006,100,0.196,108,0.376,140,1.502,357,3.836,372,1.88,555,0.942,856,5.811,866,2.23,867,3.237,868,5.755,869,5.755]],["title/injectables/ExtractUserUtil.html",[94,0.204,343,2.662]],["body/injectables/ExtractUserUtil.html",[14,0.009,18,0.11,19,0.123,20,0.086,23,0.827,31,0.815,89,0.123,90,0.129,91,0.006,92,0.007,93,0.006,94,0.331,95,1.143,100,0.172,102,2.492,104,0.474,106,1.225,107,1.17,108,0.278,109,1.225,141,1.197,161,1.721,167,2.588,168,1.343,171,1.968,183,4.034,246,1.967,296,2.438,299,2.852,316,1.932,343,4.332,379,1.978,385,2.954,403,2.729,438,3.814,451,5.379,576,4.538,854,6.347,870,6.927,871,5.071,872,5.743,873,5.743,874,5.071,875,4.628,876,5.743,877,5.743,878,4.298,879,5.743]],["title/injectables/FindUserDto.html",[94,0.204,405,2.934]],["body/injectables/FindUserDto.html",[14,0.009,18,0.127,19,0.141,20,0.099,23,0.695,31,0.936,89,0.141,90,0.148,91,0.006,92,0.008,93,0.006,94,0.36,95,1.312,100,0.198,104,0.435,108,0.32,140,1.319,296,3.538,405,5.192,555,0.948,705,4.379,708,4.934,880,6.301]],["title/classes/ForgotPasswordDto.html",[90,0.099,276,3.103]],["body/classes/ForgotPasswordDto.html",[14,0.009,18,0.129,19,0.143,20,0.101,28,1.762,89,0.143,90,0.15,91,0.007,92,0.008,93,0.007,100,0.202,104,0.442,108,0.325,140,1.333,276,5.549,296,3.564,554,4.713,555,0.958,557,5.022,881,6.976]],["title/injectables/GenerateRentalDurationEnumUtil.html",[94,0.204,882,2.789]],["body/injectables/GenerateRentalDurationEnumUtil.html",[14,0.009,18,0.072,19,0.08,20,0.057,22,0.495,23,0.729,31,0.535,89,0.08,90,0.084,91,0.004,92,0.005,93,0.004,94,0.249,95,0.75,100,0.113,104,0.357,106,1.155,107,1.103,109,1.155,141,1.755,161,1.296,168,1.266,246,1.914,292,1.519,311,2.146,316,2.052,318,1.168,360,1.266,382,1.9,403,1.431,415,2.342,416,2.055,422,3.418,426,2.171,427,2.171,428,1.719,429,2.233,602,2.517,604,2.6,618,1.914,621,2.199,723,1.81,818,3.818,834,2.176,836,2.6,882,3.418,883,5.594,884,3.912,885,3.328,886,4.78,887,4.82,888,5.414,889,5.414,890,3.595,891,5.414,892,5.414,893,5.414,894,7.235,895,3.769,896,2.647,897,5.58,898,5.414,899,3.769,900,4.363,901,5.414,902,5.414,903,6.152,904,6.338,905,5.652,906,3.038,907,3.328,908,4.051,909,3.769,910,3.769,911,3.769,912,4.363,913,3.769,914,3.769,915,3.769,916,3.769,917,2.821,918,3.769,919,3.769,920,3.328,921,1.872,922,3.769,923,6.335,924,4.45,925,3.769,926,3.027,927,6.335,928,6.335,929,3.328,930,5.414,931,2.38,932,3.328,933,6.335,934,3.769]],["title/injectables/GeoUrlApiPipe.html",[94,0.204,935,2.789]],["body/injectables/GeoUrlApiPipe.html",[12,2.903,14,0.009,18,0.059,19,0.065,20,0.046,22,0.82,23,0.707,31,0.432,50,2.999,51,5.025,79,4.084,89,0.065,90,0.068,91,0.003,92,0.004,93,0.003,94,0.213,95,0.606,100,0.091,102,0.967,104,0.411,106,1.332,107,1.272,108,0.271,109,1.332,138,1.567,139,1.804,140,1.417,141,1.399,161,1.495,168,1.308,171,1.758,231,1.836,246,1.943,269,1.759,292,1.506,311,2.081,316,1.9,318,1.733,357,2.022,360,1.57,372,1.936,373,1.908,379,1.718,382,2.773,390,3.927,403,1.156,415,2.308,416,1.156,426,1.221,427,1.221,428,0.967,429,1.256,433,3.101,471,1.836,490,2.92,531,2.085,532,2.221,535,2.814,618,1.683,619,1.666,621,1.469,622,3.808,665,4.131,701,2.903,723,1.463,728,2.563,809,2.467,822,4.194,863,3.072,935,2.92,936,5.928,937,2.69,938,2.982,939,4.715,940,3.461,941,3.461,942,3.728,943,2.221,944,4.625,945,4.084,946,5.513,947,2.92,948,3.461,949,2.787,950,4.084,951,6.244,952,5.513,953,2.69,954,4.079,955,3.046,956,4.625,957,3.046,958,4.084,959,4.625,960,3.461,961,4.625,962,4.385,963,4.084,964,5.159,965,5.159,966,3.046,967,4.625,968,6.244,969,3.046,970,2.14,971,2.69,972,2.023,973,2.69,974,1.513,975,2.28,976,2.28,977,2.455,978,1.513,979,2.455,980,3.046,981,3.046,982,3.046,983,3.046,984,3.046,985,4.084,986,5.032,987,2.69,988,3.046,989,2.69,990,3.046,991,3.046]],["title/injectables/GeoUrlApiUtil.html",[94,0.204,954,2.55]],["body/injectables/GeoUrlApiUtil.html",[14,0.009,18,0.064,19,0.071,20,0.05,22,0.771,23,0.619,31,0.469,50,3.123,51,5.698,89,0.071,90,0.074,91,0.003,92,0.005,93,0.003,94,0.227,95,0.657,100,0.099,104,0.324,106,1.049,107,1.001,109,1.049,140,1.361,141,1.224,148,2.497,161,1.177,168,1.521,171,1.959,246,1.827,282,1.906,292,1.294,311,2.456,316,1.869,318,1.524,357,3.039,360,1.15,373,2.867,403,1.254,415,2.17,416,1.866,426,1.971,427,1.971,428,1.561,429,2.027,523,1.906,535,2.215,622,3.796,665,3.748,681,2.32,700,2.724,728,2.724,822,4.298,851,2.472,912,4.731,940,3.679,941,5.93,952,4.34,954,2.837,963,4.34,964,5.665,965,5.566,973,2.917,977,2.662,978,4.006,979,2.662,986,4.731,992,5.184,993,2.917,994,4.916,995,4.916,996,6.503,997,4.916,998,4.34,999,4.34,1000,4.916,1001,4.916,1002,4.916,1003,4.916,1004,4.916,1005,2.662,1006,3.962,1007,3.303,1008,4.916,1009,4.916,1010,4.916,1011,4.916,1012,4.916,1013,3.303,1014,3.962,1015,5.184,1016,3.679,1017,3.679,1018,2.662,1019,3.303,1020,4.916,1021,2.917,1022,3.303,1023,3.303,1024,3.303,1025,1.641,1026,3.303,1027,3.303,1028,3.303,1029,3.303,1030,3.303,1031,3.303]],["title/injectables/GivenNoticePipe.html",[94,0.204,1032,2.55]],["body/injectables/GivenNoticePipe.html",[14,0.009,18,0.063,19,0.07,20,0.049,22,0.85,23,0.682,31,0.464,77,4.297,88,2.704,89,0.07,90,0.073,91,0.003,92,0.005,93,0.003,94,0.225,95,0.651,100,0.098,104,0.385,106,1.245,107,1.189,108,0.158,109,1.245,141,1.217,148,0.966,161,1.657,168,1.365,171,1.549,246,1.938,269,0.921,292,1.497,311,1.809,316,1.861,318,1.512,360,1.619,372,1.683,379,1.342,382,1.712,403,1.241,415,2.684,416,1.241,421,2.747,422,3.08,426,1.311,427,1.311,428,1.853,429,1.349,433,2.423,523,1.887,528,1.628,531,2.199,532,1.571,535,1.474,538,2.423,540,1.311,602,3.376,604,3.487,618,2.115,622,1.43,623,1.571,661,1.474,701,1.521,809,1.744,817,3.875,818,4.375,836,4.014,884,2.602,894,6.827,897,6.369,906,2.635,926,2.133,943,1.571,960,3.651,972,2.172,974,2.898,978,2.898,1025,2.898,1032,2.816,1033,5.713,1034,2.887,1035,4.879,1036,4.879,1037,3.651,1038,3.517,1039,5.18,1040,3.932,1041,4.879,1042,4.308,1043,4.879,1044,4.879,1045,4.879,1046,4.879,1047,4.879,1048,4.879,1049,5.836,1050,5.836,1051,4.879,1052,3.27,1053,4.749,1054,3.08,1055,4.099,1056,3.27,1057,4.099,1058,4.879,1059,3.27,1060,4.024,1061,4.308,1062,4.308,1063,4.879,1064,4.879,1065,4.879,1066,2.887,1067,3.27,1068,3.27,1069,3.27,1070,3.27,1071,3.27,1072,3.27,1073,2.887,1074,3.27,1075,3.27,1076,3.27,1077,4.879,1078,3.27,1079,3.27,1080,3.27,1081,3.27,1082,2.447,1083,2.635,1084,2.635,1085,3.932,1086,3.651]],["title/classes/GivenNoticeSearchRentalDto.html",[90,0.099,1057,3.103]],["body/classes/GivenNoticeSearchRentalDto.html",[14,0.009,18,0.099,19,0.11,20,0.077,22,0.674,23,0.541,28,1.348,89,0.11,90,0.115,91,0.005,92,0.007,93,0.005,100,0.154,104,0.553,108,0.406,140,1.33,148,2.33,292,1.331,433,3.323,555,0.811,618,2.141,619,2.409,622,3.254,623,3.575,661,3.354,817,5.431,818,3.093,978,4.242,1032,4.552,1038,5.147,1053,5.163,1055,4.699,1057,4.699,1083,5.998,1084,5.998,1087,7.541,1088,4.137,1089,4.699,1090,6.69,1091,5.391,1092,4.223,1093,5.133,1094,5.133,1095,5.133,1096,5.133,1097,5.133,1098,5.133]],["title/classes/HttpErrorFilter.html",[90,0.099,212,3.306]],["body/classes/HttpErrorFilter.html",[14,0.009,18,0.083,19,0.092,20,0.065,22,0.569,23,0.629,28,1.137,31,0.615,64,5.112,88,3.308,89,0.092,90,0.097,91,0.004,92,0.006,93,0.004,100,0.13,104,0.285,106,0.924,107,0.882,108,0.21,109,0.924,161,1.429,168,1.013,171,1.635,212,4.467,225,3.49,282,4.607,311,1.85,316,2.076,371,4.192,426,2.739,528,1.445,540,2.393,621,1.896,697,3.768,723,2.08,743,4.81,808,3.823,810,6.501,812,5.933,813,6.819,815,7.049,817,2.876,818,2.609,821,5.27,823,5.27,825,3.24,826,4.81,1099,5.27,1100,3.823,1101,7.362,1102,5.27,1103,5.27,1104,5.969,1105,8.18,1106,5.969,1107,7.362,1108,5.969,1109,6.831,1110,5.969,1111,5.969,1112,5.969,1113,5.969,1114,5.969,1115,5.969,1116,5.969,1117,5.969,1118,6.831,1119,5.969,1120,5.969,1121,4.33,1122,3.24,1123,4.33,1124,3.24,1125,4.33,1126,4.33,1127,3.823,1128,4.81,1129,4.33,1130,4.33,1131,4.33,1132,4.33,1133,4.33,1134,3.823,1135,4.33,1136,4.33,1137,3.24,1138,4.33,1139,4.33,1140,4.33,1141,4.33,1142,4.33,1143,4.33,1144,4.33,1145,4.33]],["title/classes/ImageDto.html",[90,0.099,1146,3.103]],["body/classes/ImageDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,28,1.712,50,3.984,89,0.139,90,0.146,91,0.006,92,0.008,93,0.006,100,0.196,104,0.512,108,0.376,140,1.449,384,3.612,555,0.942,595,3.352,1146,5.454,1147,5.755,1148,6.207,1149,6.518,1150,6.518]],["title/interfaces/ImageInterface.html",[866,1.512,1151,2.934]],["body/interfaces/ImageInterface.html",[14,0.009,18,0.11,19,0.122,20,0.086,50,3.938,89,0.122,91,0.006,92,0.007,93,0.006,100,0.171,108,0.429,140,1.575,357,3.585,555,0.868,579,5.176,583,4.941,866,1.95,867,2.831,1151,4.751,1152,5.033,1153,6.608,1154,5.445,1155,6.608,1156,5.759]],["title/classes/ImageQueryResultsDto.html",[90,0.099,1157,3.306]],["body/classes/ImageQueryResultsDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,28,1.707,89,0.139,90,0.146,91,0.006,92,0.008,93,0.006,100,0.195,104,0.511,108,0.376,148,2.29,417,4.261,555,0.94,724,4.781,1157,5.801,1158,7.315,1159,5.739,1160,7.315,1161,6.499,1162,6.499]],["title/interfaces/ImageUploadInterface.html",[866,1.512,1163,3.306]],["body/interfaces/ImageUploadInterface.html",[14,0.009,18,0.12,19,0.133,20,0.114,89,0.133,91,0.006,92,0.007,93,0.006,100,0.187,107,1.54,108,0.394,140,1.528,298,5.618,357,3.698,555,0.917,583,5.222,866,2.132,867,3.095,1163,5.656,1164,5.502,1165,5.502,1166,6.232,1167,6.232]],["title/controllers/ImagesController.html",[157,2.356,196,3.103]],["body/controllers/ImagesController.html",[12,1.7,14,0.009,18,0.043,19,0.048,20,0.069,22,0.696,23,0.691,31,0.321,89,0.048,90,0.051,91,0.002,92,0.004,93,0.002,100,0.068,102,0.717,104,0.465,106,1.505,107,1.437,108,0.223,109,1.505,139,1.426,141,1.471,157,2.458,159,1.205,161,0.875,164,4.955,167,3.905,168,1.65,169,1.69,170,1.586,171,1.491,173,1.426,174,1.82,175,1.69,179,1.69,183,3.236,196,2.568,231,1.361,246,2.149,261,1.69,281,4.467,282,2.66,292,1.588,294,2.111,298,2.428,299,1.122,311,2.186,318,2.186,373,2.568,379,1.714,384,2.554,390,1.586,415,1.352,416,1.388,417,2.37,419,4.982,426,1.466,427,1.466,433,1.816,503,1.994,528,1.22,579,1.426,580,3.941,595,4.327,618,2.098,626,2.825,724,5.095,725,5.307,728,3.634,738,5.144,741,4.66,750,5.654,943,2.544,948,2.737,1054,1.426,1146,5.09,1168,1.994,1169,2.947,1170,2.947,1171,2.947,1172,3.657,1173,3.657,1174,3.657,1175,3.657,1176,3.229,1177,3.657,1178,3.229,1179,3.657,1180,3.657,1181,2.258,1182,5.499,1183,2.258,1184,2.258,1185,2.258,1186,2.258,1187,2.258,1188,2.258,1189,6.029,1190,2.258,1191,2.258,1192,2.258,1193,2.258,1194,2.258,1195,2.737,1196,2.258,1197,2.258,1198,3.657,1199,2.258,1200,5.297,1201,2.258,1202,3.964,1203,2.258,1204,2.258,1205,3.06,1206,1.994,1207,1.5,1208,1.994,1209,2.258,1210,2.737,1211,3.657,1212,3.657,1213,2.258,1214,2.258,1215,3.657,1216,5.297,1217,3.657,1218,3.657,1219,3.657,1220,3.657,1221,2.258,1222,2.258,1223,2.258,1224,2.258,1225,2.258,1226,2.258,1227,3.657,1228,2.258,1229,2.258,1230,2.258,1231,2.258,1232,2.258,1233,2.258,1234,3.657,1235,2.258]],["title/modules/ImagesModule.html",[0,2.054,189,3.103]],["body/modules/ImagesModule.html",[0,3.17,1,4.805,2,2.391,3,2.49,4,2.723,5,2.723,6,2.49,7,4.108,8,4.108,12,3.708,14,0.009,15,3.758,16,2.142,17,2.391,18,0.083,19,0.092,20,0.065,23,0.925,31,0.612,35,3.758,89,0.092,90,0.097,91,0.004,92,0.006,93,0.004,102,1.37,107,0.879,159,3.175,189,6.404,196,4.788,202,3.228,203,2.391,230,3.228,231,2.6,454,2.723,563,5.295,565,3.03,567,2.6,569,4.805,578,3.228,709,5.034,713,5.295,724,2.49,926,2.603,1154,2.865,1156,3.03,1205,5.786,1206,3.809,1236,3.809,1237,3.809,1238,3.809,1239,3.809,1240,5.295,1241,5.295,1242,4.314,1243,3.476,1244,4.314,1245,4.798,1246,4.314,1247,3.809,1248,5.257,1249,3.809,1250,3.809,1251,3.809,1252,3.809,1253,3.809,1254,3.476,1255,2.865,1256,5.953]],["title/injectables/ImagesService.html",[94,0.204,1205,2.934]],["body/injectables/ImagesService.html",[12,1.884,14,0.009,18,0.028,19,0.032,20,0.061,22,0.708,23,0.741,31,0.21,50,0.712,55,1.369,75,1.547,88,1.423,89,0.032,90,0.033,91,0.001,92,0.002,93,0.001,94,0.118,95,0.295,100,0.045,102,0.815,104,0.376,106,1.149,107,1.161,108,0.072,109,0.316,139,2.101,140,0.909,141,1.374,167,1.826,171,1.201,183,1.041,203,0.821,231,0.893,246,1.35,269,0.723,281,2.761,282,2.338,292,1.188,294,2.338,311,2.383,316,1.772,318,2.217,357,2.003,360,1.174,372,1.554,373,1.671,379,2.197,380,3.577,382,0.52,384,3.552,390,2.386,403,0.563,415,2.107,416,1.905,417,2.356,419,3.598,422,0.935,426,2.012,427,2.643,428,1.455,429,1.889,433,2.012,436,1.921,438,0.984,454,2.558,460,2.069,490,1.621,491,1.705,509,1.32,528,1.991,555,0.311,563,3.577,565,1.803,567,3.246,569,3.246,571,2.16,573,2.069,576,2.892,578,1.109,579,4.516,580,2.644,582,1.308,583,3.738,595,3.833,618,1.763,619,0.925,621,1.594,626,1.812,650,2.427,713,3.577,723,0.712,724,4.86,725,4.357,728,2.539,736,2.267,738,4.436,741,5.055,742,2.267,743,2.069,750,3.032,751,2.267,755,2.069,756,2.267,757,2.267,771,2.069,822,2.245,874,1.308,878,1.921,926,1.771,943,2.41,945,2.267,948,3.032,1014,2.069,1039,1.109,1073,3.577,1124,1.921,1137,1.921,1146,1.803,1148,1.921,1151,0.984,1154,5.231,1156,5.349,1157,1.109,1160,3.577,1169,2.069,1170,2.069,1171,2.069,1176,2.999,1178,2.999,1205,1.705,1207,0.984,1208,1.308,1210,3.428,1240,3.577,1241,3.577,1247,1.308,1248,2.267,1249,1.308,1250,1.308,1251,1.308,1252,1.308,1253,1.308,1257,1.308,1258,2.567,1259,1.705,1260,3.577,1261,4.581,1262,4.045,1263,2.567,1264,2.567,1265,2.567,1266,2.567,1267,1.705,1268,2.567,1269,3.397,1270,3.397,1271,4.581,1272,4.756,1273,1.482,1274,1.482,1275,2.567,1276,1.482,1277,2.567,1278,2.567,1279,4.052,1280,4.052,1281,2.567,1282,2.567,1283,2.567,1284,2.567,1285,1.482,1286,2.567,1287,2.539,1288,1.482,1289,2.267,1290,2.567,1291,1.705,1292,2.567,1293,2.567,1294,2.567,1295,1.482,1296,2.738,1297,3.397,1298,1.482,1299,5.386,1300,1.803,1301,2.567,1302,1.482,1303,1.482,1304,3.577,1305,2.567,1306,2.567,1307,1.705,1308,2.567,1309,1.041,1310,1.308,1311,0.855,1312,1.803,1313,1.308,1314,1.308,1315,1.482,1316,1.482,1317,1.482,1318,1.482,1319,6.592,1320,1.482,1321,1.482,1322,1.482,1323,1.482,1324,2.567,1325,4.052,1326,2.567,1327,4.045,1328,0.79,1329,1.482,1330,1.482,1331,1.482,1332,1.482,1333,3.397,1334,1.482,1335,1.041,1336,2.267,1337,1.482,1338,1.308,1339,1.482,1340,1.482,1341,1.482,1342,1.482,1343,1.194,1344,2.999,1345,1.482,1346,1.482,1347,2.567,1348,1.482,1349,1.482,1350,1.482,1351,1.482,1352,1.482,1353,1.482]],["title/injectables/JoiValidationPipe.html",[94,0.204,1354,3.103]],["body/injectables/JoiValidationPipe.html",[14,0.009,18,0.103,19,0.114,20,0.08,22,0.703,23,0.724,29,5.538,31,0.76,38,6.068,77,4.564,88,3.809,89,0.114,90,0.17,91,0.005,92,0.007,93,0.005,94,0.317,95,1.065,100,0.161,102,1.699,104,0.453,106,1.466,107,1.4,108,0.333,109,1.466,138,2.752,139,2.087,141,1.115,161,1.645,168,1.252,316,1.438,360,1.252,372,2.311,421,2.917,428,1.699,490,4.338,531,3.097,532,3.301,538,3.413,540,2.145,551,4.724,723,2.57,845,4.724,938,3.666,1255,5.801,1354,4.827,1355,6.704,1356,4.724,1357,6.872,1358,6.872,1359,6.872,1360,5.351,1361,5.351,1362,5.351,1363,5.351,1364,4.724,1365,5.351,1366,5.351]],["title/injectables/JwtAuthGuard.html",[94,0.204,173,2.789]],["body/injectables/JwtAuthGuard.html",[14,0.009,18,0.129,19,0.144,20,0.101,23,0.834,31,0.955,89,0.144,90,0.151,91,0.007,92,0.008,93,0.007,94,0.365,95,1.339,173,4.996,350,4.47,1367,5.943,1368,5.424,1369,5.943,1370,5.037,1371,6.73]],["title/interfaces/JwtPayloadInterface.html",[576,2.789,866,1.512]],["body/interfaces/JwtPayloadInterface.html",[14,0.009,18,0.123,19,0.136,20,0.096,89,0.136,91,0.006,92,0.007,93,0.006,100,0.192,108,0.399,140,1.534,296,3.621,385,4.387,555,0.931,576,4.844,577,4.781,866,2.186,867,3.173,878,6.384,1372,5.642]],["title/injectables/JwtStrategy.html",[94,0.204,344,3.103]],["body/injectables/JwtStrategy.html",[14,0.009,18,0.104,19,0.116,20,0.082,23,0.877,31,0.77,67,4.606,75,3.271,89,0.116,90,0.122,91,0.005,92,0.007,93,0.005,94,0.32,95,1.08,100,0.163,102,2.427,104,0.457,106,1.158,107,1.105,108,0.263,109,1.158,141,1.446,161,1.66,168,1.27,171,1.66,246,1.916,296,2.304,299,2.695,317,3.812,344,4.871,350,3.604,351,4.061,352,4.792,367,4.792,376,4.061,385,2.791,421,2.944,438,3.604,589,4.792,852,4.792,878,4.061,1370,4.061,1373,4.792,1374,5.427,1375,6.935,1376,5.427,1377,4.792,1378,5.427,1379,6.124,1380,4.792,1381,5.427,1382,5.427,1383,5.427,1384,5.427,1385,5.427,1386,5.427,1387,5.427,1388,5.427,1389,5.427,1390,5.427,1391,5.427,1392,5.427]],["title/classes/LocCreateRentalDto.html",[90,0.099,970,3.103]],["body/classes/LocCreateRentalDto.html",[14,0.009,18,0.103,19,0.115,20,0.081,22,0.706,23,0.566,28,1.412,50,3.311,89,0.115,90,0.12,91,0.005,92,0.007,93,0.005,100,0.161,104,0.501,108,0.369,140,1.354,148,2.371,269,1.942,292,1.372,295,4.841,360,1.613,372,2.195,379,1.897,382,3.03,402,4.841,555,0.836,615,3.776,618,1.908,619,2.482,622,3.775,643,4.023,665,3.545,701,3.538,728,3.82,939,5.344,962,4.841,970,4.841,974,2.67,986,6.132,1393,7.086,1394,6.006,1395,6.086,1396,6.893,1397,4.352,1398,4.332,1399,4.332]],["title/injectables/LocalAuthGuard.html",[94,0.204,305,3.306]],["body/injectables/LocalAuthGuard.html",[14,0.009,18,0.129,19,0.144,20,0.101,23,0.834,31,0.955,89,0.144,90,0.151,91,0.007,92,0.008,93,0.007,94,0.365,95,1.339,305,5.922,350,4.47,1368,5.424,1369,5.943,1370,5.037,1400,5.943,1401,6.73]],["title/injectables/LocalStrategy.html",[94,0.204,345,3.103]],["body/injectables/LocalStrategy.html",[14,0.009,18,0.098,19,0.109,20,0.077,23,0.828,31,0.722,89,0.109,90,0.114,91,0.005,92,0.006,93,0.005,94,0.306,95,1.012,100,0.153,102,1.615,104,0.438,106,1.419,107,1.355,108,0.322,109,1.419,138,2.616,140,1.411,141,1.06,161,1.592,168,1.19,171,1.218,246,1.858,272,3.542,296,3.145,308,5.041,309,4.099,316,1.367,318,1.577,345,4.671,350,3.378,360,1.556,373,2.098,376,5.545,377,4.099,379,2.244,381,4.492,382,1.785,385,2.616,403,2.525,421,3.145,428,2.112,433,2.526,535,2.293,590,3.065,621,1.615,1300,3.573,1370,3.807,1377,4.492,1379,6.543,1380,4.492,1402,4.492,1403,5.087,1404,5.087,1405,6.651,1406,5.087,1407,5.087,1408,5.087,1409,5.873,1410,5.087,1411,5.087,1412,3.573,1413,5.36,1414,5.087]],["title/guards/LoggedOutGaurd.html",[176,2.662,1415,3.306]],["body/guards/LoggedOutGaurd.html",[14,0.009,17,3.859,18,0.086,19,0.096,20,0.068,23,0.788,31,0.638,58,3.362,64,3.362,67,3.689,85,2.708,89,0.096,90,0.101,91,0.004,92,0.006,93,0.006,94,0.282,100,0.135,102,1.427,104,0.459,106,1.485,107,1.418,108,0.337,109,1.485,138,2.311,139,1.752,141,1.276,161,1.466,167,2.025,168,1.432,171,1.873,176,3.689,246,1.746,265,3.362,297,3.362,299,2.231,316,2.01,318,1.393,357,3.044,360,1.051,379,1.236,389,6.041,403,2.839,415,2.574,428,1.427,483,3.362,484,3.967,491,2.984,509,4.024,528,1.499,535,2.025,540,1.801,634,3.865,851,3.362,859,3.967,860,3.967,862,3.967,863,4.065,938,3.265,1128,4.934,1300,3.156,1415,3.362,1416,4.493,1417,6.602,1418,3.967,1419,7.824,1420,6.122,1421,4.493,1422,4.493,1423,4.493,1424,6.602,1425,4.493,1426,6.148,1427,6.122,1428,4.493,1429,3.621,1430,4.493,1431,3.967,1432,4.493,1433,4.493,1434,4.493,1435,4.493,1436,4.493,1437,4.493,1438,6.148,1439,3.967,1440,3.967,1441,4.493,1442,3.967,1443,4.493]],["title/injectables/LoggingInterceptor.html",[94,0.204,217,3.306]],["body/injectables/LoggingInterceptor.html",[14,0.009,18,0.085,19,0.094,20,0.066,22,0.578,23,0.781,31,0.624,89,0.094,90,0.098,91,0.007,92,0.006,93,0.004,94,0.278,95,0.875,100,0.132,104,0.29,106,0.938,107,0.896,108,0.213,109,0.938,141,0.917,161,1.444,167,1.982,168,1.029,217,4.514,246,1.512,316,1.992,379,2.039,483,4.514,531,2.719,540,1.763,590,4.834,621,2.466,723,2.897,817,2.92,818,2.65,822,3.343,824,3.291,825,3.291,835,3.883,836,2.112,838,3.883,949,3.635,1025,2.996,1089,4.237,1127,5.326,1128,3.544,1137,4.514,1296,4.861,1409,6.08,1424,6.543,1426,6.543,1429,3.544,1442,3.883,1444,5.326,1445,3.883,1446,6.032,1447,6.032,1448,6.032,1449,6.032,1450,6.886,1451,6.032,1452,5.326,1453,6.032,1454,6.032,1455,5.326,1456,6.032,1457,6.032,1458,6.032,1459,6.032,1460,4.514,1461,6.032,1462,6.032,1463,6.032,1464,5.326,1465,6.032,1466,6.032,1467,6.032,1468,6.032,1469,6.032,1470,4.836,1471,7.41,1472,4.397,1473,6.032,1474,4.397,1475,4.397,1476,4.397,1477,4.397,1478,4.397,1479,4.397,1480,4.397,1481,4.397,1482,4.397,1483,4.397,1484,3.883,1485,2.92,1486,4.397,1487,4.397,1488,4.397]],["title/injectables/LoginDto.html",[94,0.204,1489,3.56]],["body/injectables/LoginDto.html",[14,0.009,18,0.124,19,0.138,20,0.097,23,0.681,31,0.917,89,0.138,90,0.145,91,0.006,92,0.008,93,0.006,94,0.356,95,1.286,100,0.194,104,0.509,108,0.374,140,1.445,272,3.725,385,4.25,555,0.937,1489,6.226,1490,5.706,1491,6.462,1492,6.462]],["title/classes/LoginUserDto.html",[90,0.099,1493,3.56]],["body/classes/LoginUserDto.html",[14,0.009,18,0.125,19,0.139,20,0.098,28,1.712,89,0.139,90,0.146,91,0.006,92,0.008,93,0.006,100,0.196,104,0.512,108,0.376,140,1.449,385,4.266,400,6.207,555,0.942,705,4.328,1493,6.258,1494,7.324,1495,6.518,1496,6.518]],["title/interfaces/MailOptionsInterface.html",[789,3.306,866,1.512]],["body/interfaces/MailOptionsInterface.html",[14,0.009,18,0.12,19,0.133,20,0.094,89,0.133,91,0.006,92,0.007,93,0.006,100,0.187,108,0.42,140,1.564,555,0.917,789,5.656,793,6.817,795,7.469,797,7.469,866,2.132,867,3.095,1497,5.502]],["title/injectables/MapNewRentalPipe.html",[94,0.204,1397,2.789]],["body/injectables/MapNewRentalPipe.html",[14,0.009,18,0.093,19,0.103,20,0.073,22,0.846,23,0.762,31,0.688,89,0.103,90,0.109,91,0.005,92,0.006,93,0.005,94,0.297,95,0.965,98,4.281,100,0.146,104,0.319,106,1.034,107,0.987,108,0.312,109,1.034,141,1.011,161,1.542,168,1.134,171,1.542,246,1.814,269,2.325,292,1.535,311,1.503,316,1.303,360,1.693,372,1.859,382,2.818,416,1.84,426,1.944,427,1.944,428,1.54,429,1.999,531,3.476,532,3.095,538,3.2,540,1.944,613,5.211,616,3.883,618,1.615,619,2.32,620,5.689,621,2.046,622,2.12,623,2.328,624,3.06,625,2.798,626,2.586,627,2.687,628,3.405,629,3.628,630,3.405,631,3.06,665,2.493,701,3.586,970,5.417,971,4.281,972,4.279,1082,3.628,1397,4.068,1498,5.689,1499,4.281,1500,4.848,1501,5.689,1502,3.907,1503,4.848,1504,4.848,1505,4.848,1506,4.848,1507,4.848,1508,4.848,1509,4.848,1510,3.907,1511,4.848,1512,4.848,1513,4.848]],["title/injectables/MulterUploadUtil.html",[94,0.204,1240,2.934]],["body/injectables/MulterUploadUtil.html",[14,0.009,18,0.11,19,0.122,20,0.108,23,0.6,31,0.809,89,0.122,90,0.128,91,0.006,92,0.007,93,0.006,94,0.33,95,1.134,100,0.171,104,0.376,141,1.491,167,2.569,246,1.429,281,4.311,318,1.767,360,1.333,372,1.644,379,1.568,403,2.164,416,2.164,426,2.285,427,3.288,428,1.81,429,2.351,454,3.598,555,0.868,566,4.593,571,2.285,579,4.516,580,4.732,590,3.435,595,2.931,650,3.224,724,3.29,755,4.593,1154,4.751,1240,4.751,1272,5.033,1327,5.033,1336,5.033,1514,6.317,1515,5.7,1516,5.7,1517,5.7,1518,5.033,1519,5.7,1520,5.7]],["title/injectables/PositiveNumber.html",[94,0.204,1521,3.306]],["body/injectables/PositiveNumber.html",[14,0.009,18,0.118,19,0.131,20,0.092,22,0.803,23,0.644,31,0.868,75,3.685,85,3.685,89,0.131,90,0.137,91,0.006,92,0.007,93,0.006,94,0.344,95,1.217,100,0.184,104,0.403,141,1.557,148,2.383,269,1.722,372,1.764,421,3.425,494,5.591,555,0.906,571,2.452,926,2.673,1521,5.591,1522,6.597,1523,5.399,1524,6.597,1525,6.114,1526,6.114]],["title/classes/PricingDto.html",[90,0.099,1527,2.934]],["body/classes/PricingDto.html",[14,0.009,18,0.116,19,0.129,20,0.091,22,0.793,28,1.584,89,0.129,90,0.135,91,0.006,92,0.007,93,0.006,100,0.181,104,0.529,108,0.405,140,1.25,148,2.471,292,1.201,528,2.791,555,0.899,618,1.512,619,2.173,621,1.916,627,3.344,636,3.218,661,3.615,662,5.064,663,3.809,664,3.809,689,3.308,764,3.636,1527,4.921,1528,5.327,1529,6.033,1530,6.033,1531,6.033,1532,6.033]],["title/injectables/PricingPipe.html",[94,0.204,1533,2.934]],["body/injectables/PricingPipe.html",[14,0.009,18,0.068,19,0.076,20,0.054,22,0.805,23,0.547,31,0.505,89,0.076,90,0.08,91,0.003,92,0.005,93,0.003,94,0.239,95,0.708,100,0.107,104,0.404,106,1.308,107,1.249,108,0.172,109,0.759,140,0.6,141,1.082,148,1.051,161,1.613,168,0.832,171,1.791,246,1.797,269,2.312,292,1.576,311,1.9,316,1.648,318,1.609,360,1.434,372,2.159,373,2.141,379,1.854,415,2.766,416,1.35,421,2.861,426,1.426,427,1.426,428,1.947,429,1.467,477,3.037,479,2.362,509,2.67,528,2.045,531,2.34,532,2.493,535,2.34,538,2.578,540,1.426,555,0.63,571,2.081,598,2.662,616,3.128,618,1.301,627,3.735,661,3.482,662,4.524,663,2.245,664,2.245,681,4.733,689,2.528,701,3.134,926,2.27,938,2.769,1025,3.347,1412,2.498,1527,5.586,1533,3.447,1534,3.141,1535,5.191,1536,4.724,1537,7.167,1538,7.167,1539,3.557,1540,5.191,1541,3.557,1542,5.431,1543,3.646,1544,3.557,1545,6.739,1546,4.584,1547,5.191,1548,5.191,1549,3.447,1550,2.866,1551,3.557,1552,3.557,1553,5.413,1554,2.662,1555,3.557,1556,6.328,1557,3.557,1558,5.413,1559,3.557,1560,3.557,1561,4.584,1562,3.557,1563,3.557]],["title/classes/ProcessRentalTimeDto.html",[90,0.099,908,3.306]],["body/classes/ProcessRentalTimeDto.html",[14,0.009,18,0.115,19,0.127,20,0.09,22,0.784,28,1.568,89,0.127,90,0.134,91,0.006,92,0.007,93,0.006,100,0.179,104,0.526,108,0.387,148,2.575,292,1.188,555,0.893,618,2.09,621,1.896,884,3.184,886,5.271,887,3.769,896,4.193,903,6.717,904,6.717,905,5.854,908,5.51,943,2.867,974,2.965,1089,4.193,1287,3.308,1564,7.36,1565,5.271,1566,5.969,1567,5.969,1568,3.769,1569,5.969,1570,5.969,1571,5.969,1572,5.969]],["title/injectables/ProcessSaveDataUtil.html",[94,0.204,1241,2.934]],["body/injectables/ProcessSaveDataUtil.html",[14,0.009,18,0.081,19,0.09,20,0.088,22,0.555,23,0.806,31,0.6,50,2.819,89,0.09,90,0.095,91,0.004,92,0.006,93,0.004,94,0.27,95,0.841,100,0.127,104,0.278,106,0.901,107,0.861,141,1.406,203,2.342,246,1.059,292,1.168,311,2.258,316,1.958,357,2.566,360,1.577,372,1.219,379,1.615,382,2.06,384,4.038,403,1.604,428,1.342,436,5.452,454,4.599,471,3.537,528,1.958,555,0.712,571,1.694,579,5.312,583,3.537,595,4.465,618,1.471,626,3.13,650,1.904,728,2.342,741,3.162,875,3.405,926,1.847,938,3.13,943,2.819,1151,4.478,1153,4.73,1154,5.396,1155,4.73,1156,5.707,1202,5.452,1210,5.929,1241,3.897,1289,5.182,1300,2.968,1307,3.897,1309,2.968,1310,3.731,1311,2.439,1312,2.968,1313,3.731,1314,3.731,1328,2.254,1573,5.182,1574,3.731,1575,6.759,1576,4.225,1577,5.182,1578,5.869,1579,4.225,1580,4.225,1581,4.225,1582,4.225,1583,4.225,1584,4.225,1585,4.225,1586,4.225,1587,4.225,1588,4.225,1589,4.225,1590,4.225,1591,4.225]],["title/injectables/ProcessUnavailabilityPipe.html",[94,0.204,1592,2.789]],["body/injectables/ProcessUnavailabilityPipe.html",[14,0.009,18,0.043,19,0.048,20,0.034,22,0.693,23,0.654,27,3.213,31,0.319,55,2.815,89,0.048,90,0.05,91,0.002,92,0.004,93,0.002,94,0.168,95,0.447,100,0.067,104,0.302,106,0.979,107,0.935,108,0.109,109,0.479,141,1.295,161,0.871,168,0.525,171,1.631,246,1.454,269,1.919,292,1.356,311,1.636,316,2.028,318,1.636,371,4.074,372,2.031,373,2.177,379,1.709,382,1.852,383,2.298,403,2.004,417,3.364,421,1.545,422,2.298,447,2.766,461,2.556,471,2.193,477,2.379,490,2.298,528,1.761,531,2.068,532,1.078,538,1.807,540,0.9,555,0.441,571,1.459,599,4.362,602,3.665,603,2.897,604,3.554,605,4.243,607,1.872,612,1.872,618,1.323,621,1.156,650,1.64,679,3.95,685,2.976,687,3.094,689,2.177,700,2.544,723,1.078,728,2.017,809,1.941,836,2.983,875,1.809,921,1.807,926,2.308,938,1.941,974,1.807,1005,1.809,1025,1.115,1054,1.417,1062,3.213,1260,1.982,1267,2.417,1291,3.852,1335,2.556,1470,2.556,1549,2.417,1568,3.921,1575,4.661,1592,2.298,1593,4.661,1594,1.577,1595,2.417,1596,3.213,1597,3.639,1598,5.278,1599,3.639,1600,3.639,1601,2.933,1602,4.648,1603,6.211,1604,4.589,1605,5.278,1606,4.594,1607,2.245,1608,3.639,1609,3.639,1610,3.213,1611,3.639,1612,2.933,1613,7.399,1614,2.245,1615,3.639,1616,3.639,1617,3.639,1618,3.639,1619,3.639,1620,3.639,1621,3.639,1622,2.933,1623,2.417,1624,2.245,1625,3.213,1626,1.982,1627,2.417,1628,2.933,1629,1.577,1630,2.245,1631,4.052,1632,2.245,1633,3.707,1634,2.245,1635,2.245,1636,3.046,1637,4.341,1638,2.245,1639,4.341,1640,2.245,1641,1.982,1642,5.278,1643,5.278,1644,3.639,1645,2.245,1646,1.982,1647,2.245,1648,5.278,1649,3.639,1650,2.245,1651,1.296,1652,1.417,1653,1.982,1654,3.639,1655,3.348,1656,3.639,1657,4.589,1658,4.052,1659,4.589,1660,4.589,1661,4.589,1662,4.589,1663,2.245,1664,3.348,1665,2.245,1666,6.812,1667,5.801,1668,2.245,1669,2.245,1670,3.639,1671,3.213,1672,3.639,1673,3.639,1674,3.639,1675,2.245,1676,1.982,1677,2.245,1678,2.245,1679,2.245,1680,2.245,1681,2.933,1682,2.245,1683,2.933,1684,2.245,1685,2.245]],["title/interfaces/ProcessedSaveDataInterface.html",[866,1.512,1312,3.103]],["body/interfaces/ProcessedSaveDataInterface.html",[14,0.009,18,0.124,19,0.138,20,0.097,23,0.679,89,0.138,91,0.006,92,0.008,93,0.006,100,0.194,108,0.374,436,6.402,454,4.068,555,0.935,595,4.4,866,2.205,867,3.2,1151,5.96,1312,5.417,1686,5.193,1687,5.193,1688,6.444]],["title/classes/ProcessedUnavailabilityDto.html",[90,0.099,1627,2.934]],["body/classes/ProcessedUnavailabilityDto.html",[14,0.009,18,0.1,19,0.111,20,0.078,22,0.68,23,0.709,28,1.36,89,0.111,90,0.116,91,0.005,92,0.007,93,0.005,100,0.156,104,0.493,108,0.384,171,1.611,269,2.311,292,1.339,360,1.574,382,2.362,528,2.494,555,0.816,616,4.056,619,2.423,621,2.137,636,2.763,685,3.108,921,3.93,1089,4.727,1287,4.386,1335,4.727,1394,5.036,1536,4.248,1623,3.44,1627,4.469,1629,6.012,1631,5.942,1633,5.25,1655,2.989,1664,2.989,1681,6.024,1683,6.024,1689,6.378,1690,2.989,1691,6.73,1692,5.036,1693,6.73,1694,6.73,1695,5.942,1696,4.574,1697,3.876,1698,4.574]],["title/classes/ProcessedUnavailabilityQueryDto.html",[90,0.099,1633,3.103]],["body/classes/ProcessedUnavailabilityQueryDto.html",[14,0.009,18,0.104,19,0.115,20,0.081,22,0.708,28,1.415,89,0.115,90,0.121,91,0.005,92,0.007,93,0.005,100,0.162,104,0.569,108,0.419,140,1.433,148,2.584,292,1.072,433,2.676,555,0.837,599,4.849,601,4.032,602,3.542,604,3.659,605,3.918,606,4.343,607,2.771,608,4.758,609,4.758,610,4.343,611,4.343,619,1.941,685,3.234,687,4.063,689,3.142,700,4.222,1287,2.987,1633,4.849,1636,4.396,1689,7.05,1692,4.032,1699,5.389,1700,5.389,1701,5.389,1702,5.389,1703,5.389,1704,5.389,1705,4.758]],["title/interfaces/ProcessedUploadDataInterface.html",[866,1.512,1706,3.56]],["body/interfaces/ProcessedUploadDataInterface.html",[14,0.009,18,0.119,19,0.133,20,0.093,23,0.655,89,0.133,91,0.006,92,0.007,93,0.006,100,0.187,108,0.366,311,2.619,528,2.937,555,0.915,580,3.587,595,3.196,750,6.324,866,2.126,867,3.086,1163,6.667,1686,5.008,1687,5.008,1706,6.081,1707,6.215]],["title/classes/RawCoordinatesDto.html",[90,0.099,1017,3.306]],["body/classes/RawCoordinatesDto.html",[14,0.009,18,0.12,19,0.133,20,0.094,22,0.821,28,1.641,51,4.15,89,0.133,90,0.14,91,0.006,92,0.007,93,0.006,100,0.188,104,0.499,108,0.367,148,2.501,168,1.462,292,1.244,373,2.577,555,0.918,619,2.727,622,2.732,665,3.214,941,4.676,942,5.036,954,3.606,998,7.193,999,7.193,1015,5.518,1017,5.666,1708,6.565,1709,5.036,1710,5.036,1711,5.518,1712,5.518]],["title/classes/RawCreateRentalDto.html",[90,0.099,939,3.103]],["body/classes/RawCreateRentalDto.html",[14,0.009,18,0.076,19,0.084,20,0.059,22,0.736,28,1.038,50,3.398,89,0.084,90,0.089,91,0.004,92,0.005,93,0.004,100,0.119,104,0.537,108,0.419,140,1.495,148,2.556,269,1.578,292,0.787,295,2.777,360,0.925,373,1.63,379,1.541,382,2.949,402,2.777,434,2.777,447,3.375,450,3.186,479,2.625,523,2.282,528,2.17,531,1.782,555,0.679,595,2.033,603,2.496,613,2.496,616,2.382,618,2.169,619,1.424,621,1.255,623,3.398,624,4.467,626,3.774,627,3.921,628,5.246,630,4.969,631,4.467,634,3.536,636,3.984,644,2.777,645,2.777,646,2.777,647,2.777,648,2.777,649,2.777,650,1.782,651,2.777,652,2.496,653,2.777,654,2.777,655,2.958,656,2.958,657,2.958,658,2.958,659,2.958,660,2.958,661,1.782,662,2.496,663,3.536,664,2.496,701,1.838,884,2.109,931,2.496,935,2.496,939,3.934,943,1.899,949,3.375,962,2.777,1025,1.963,1038,2.382,1088,3.186,1091,3.186,1195,4.191,1259,2.625,1335,3.934,1455,3.491,1460,2.958,1542,3.186,1708,6.679,1713,3.953,1714,3.953,1715,3.953,1716,3.953,1717,3.186,1718,3.953,1719,3.953,1720,3.186,1721,3.491,1722,3.953,1723,3.953,1724,3.953,1725,4.945,1726,5.601,1727,3.953,1728,3.953,1729,3.953,1730,3.186,1731,3.953,1732,2.958,1733,3.953,1734,3.953,1735,3.953,1736,3.953,1737,3.953,1738,3.953,1739,3.953,1740,3.953,1741,3.491,1742,3.953]],["title/classes/RawScheduleUnavailabilityDto.html",[90,0.099,1743,3.306]],["body/classes/RawScheduleUnavailabilityDto.html",[14,0.009,18,0.117,19,0.129,20,0.091,22,0.797,23,0.639,28,1.593,89,0.129,90,0.136,91,0.006,92,0.007,93,0.006,100,0.182,104,0.4,108,0.294,171,1.78,269,2.094,292,1.48,295,5.222,402,5.222,555,0.902,607,4.135,612,3.119,618,1.864,619,2.677,685,3.179,809,3.966,921,4.163,960,5.564,1690,3.501,1743,5.564,1744,6.565,1745,4.48,1746,4.539]],["title/classes/RawSearchRentalDto.html",[90,0.099,1055,3.103]],["body/classes/RawSearchRentalDto.html",[14,0.009,18,0.11,19,0.122,20,0.086,22,0.753,28,1.504,89,0.122,90,0.128,91,0.006,92,0.007,93,0.006,100,0.172,104,0.557,108,0.41,140,1.386,148,2.12,292,1.14,555,0.87,602,2.664,604,2.751,615,4.023,619,2.063,622,3.591,623,3.945,632,4.617,641,5.058,643,4.287,661,3.702,836,2.751,978,4.349,1032,3.306,1055,5.04,1083,6.315,1084,6.315,1398,4.617,1399,4.617,1485,5.455,1747,7.621,1748,5.729]],["title/classes/RemoveUnavailabilityDto.html",[90,0.099,1749,2.934]],["body/classes/RemoveUnavailabilityDto.html",[14,0.009,18,0.121,19,0.135,20,0.095,22,0.83,28,1.659,55,3.37,89,0.135,90,0.141,91,0.006,92,0.007,93,0.006,100,0.19,104,0.502,108,0.369,140,1.434,292,1.257,471,3.808,555,0.924,619,2.275,621,2.007,685,2.336,687,4.366,689,3.376,1395,5.579,1501,5.579,1690,3.647,1746,4.728,1749,5.062,1750,7.227,1751,6.318,1752,6.318,1753,5.579]],["title/controllers/RentalController.html",[157,2.356,195,3.103]],["body/controllers/RentalController.html",[12,1.069,13,2.343,14,0.009,18,0.044,19,0.049,20,0.035,22,0.302,23,0.909,31,0.326,33,1.386,50,2.571,89,0.049,90,0.104,91,0.002,92,0.004,93,0.002,100,0.069,102,0.73,104,0.435,106,1.409,107,1.346,108,0.32,109,1.409,139,0.897,141,1.48,157,2.488,159,1.227,161,0.888,164,4.64,167,1.036,168,1.545,170,2.606,195,2.606,231,1.386,242,2.343,246,2.091,261,1.721,269,1.508,281,1.386,294,2.142,298,1.527,311,0.713,318,2.047,360,1.374,382,1.879,415,0.85,416,0.873,417,1.183,419,2.343,426,0.922,427,0.922,428,0.73,429,0.948,475,2.464,477,1.672,580,2.142,612,1.908,613,3.379,618,2.136,621,1.178,624,1.452,626,1.979,627,2.057,652,2.343,661,2.102,666,2.945,668,1.452,670,3.555,683,1.853,685,2.991,686,2.99,761,4.17,764,4.491,765,3.9,822,2.057,826,1.853,882,2.343,884,1.227,921,1.843,935,2.343,938,1.979,943,2.571,947,2.343,954,2.692,962,3.276,972,2.464,975,1.721,976,1.721,978,1.843,1032,2.692,1092,1.452,1134,3.276,1195,2.777,1354,1.615,1397,2.343,1502,1.853,1527,4.17,1533,3.098,1550,1.853,1592,2.343,1623,2.464,1627,3.555,1628,1.853,1717,2.99,1720,2.99,1745,2.811,1749,3.555,1754,2.031,1755,3.711,1756,3.276,1757,3.711,1758,3.276,1759,2.606,1760,3.711,1761,4.727,1762,3.276,1763,3.276,1764,3.276,1765,3.276,1766,3.276,1767,3.276,1768,2.031,1769,2.3,1770,3.711,1771,2.3,1772,2.3,1773,2.3,1774,5.353,1775,2.3,1776,3.098,1777,2.3,1778,2.3,1779,2.3,1780,2.3,1781,2.031,1782,3.711,1783,4.665,1784,3.098,1785,2.3,1786,4.125,1787,3.276,1788,2.031,1789,3.711,1790,2.3,1791,2.3,1792,2.3,1793,3.276,1794,2.3,1795,3.964,1796,2.3,1797,2.3,1798,2.3,1799,2.3,1800,2.99,1801,3.276,1802,2.031,1803,3.276,1804,2.3,1805,2.031,1806,3.098,1807,2.031,1808,2.031,1809,2.031,1810,2.031,1811,2.031,1812,2.031,1813,2.031,1814,1.853,1815,2.031,1816,3.276,1817,2.031,1818,2.031,1819,1.853,1820,1.853,1821,1.853,1822,1.452,1823,2.031,1824,2.031,1825,2.031,1826,2.031,1827,1.853,1828,2.3,1829,2.031,1830,4.119,1831,2.031,1832,1.853,1833,1.853,1834,2.031,1835,4.727,1836,2.236,1837,2.031,1838,2.031,1839,2.031,1840,1.853,1841,1.853,1842,2.3,1843,6.912,1844,2.3,1845,2.3,1846,2.3,1847,2.3,1848,2.3,1849,2.3,1850,2.3,1851,2.3,1852,2.3,1853,2.3,1854,2.3,1855,2.3,1856,2.3,1857,2.3,1858,2.3,1859,2.3,1860,2.3,1861,2.3,1862,2.3,1863,2.3,1864,1.853,1865,2.3,1866,2.3]],["title/injectables/RentalDurationPipe.html",[94,0.204,1092,2.789]],["body/injectables/RentalDurationPipe.html",[14,0.009,18,0.088,19,0.097,20,0.069,22,0.813,23,0.793,31,0.648,89,0.097,90,0.102,91,0.004,92,0.006,93,0.004,94,0.285,95,0.909,100,0.137,102,1.45,104,0.408,106,1.32,107,1.261,108,0.3,109,1.32,138,2.348,141,0.952,161,1.481,168,1.068,171,1.481,246,1.76,269,1.743,292,1.498,311,1.415,316,1.227,318,1.415,360,1.068,372,1.785,382,2.642,416,1.733,417,3.871,426,1.83,427,1.83,428,1.45,429,1.883,531,2.789,532,2.972,535,2.789,538,3.074,540,1.83,618,2.116,622,1.996,623,2.193,661,2.057,809,3.301,882,5.121,884,3.745,887,4.432,890,4.11,896,3.206,920,4.031,938,3.301,947,3.907,974,3.487,978,2.267,1018,3.679,1038,2.751,1053,2.882,1057,5.697,1066,4.031,1082,3.416,1085,3.679,1086,3.416,1092,3.907,1622,4.987,1623,4.11,1801,5.464,1819,3.679,1820,3.679,1867,6.199,1868,4.031,1869,4.565,1870,4.565,1871,7.021,1872,4.565,1873,6.189,1874,4.031,1875,4.565,1876,4.565,1877,4.565,1878,4.565,1879,4.031]],["title/interfaces/RentalInterface.html",[866,1.512,1880,3.103]],["body/interfaces/RentalInterface.html",[14,0.009,18,0.087,19,0.096,20,0.068,22,0.805,89,0.096,91,0.004,92,0.006,93,0.004,100,0.135,108,0.444,140,1.55,148,2.572,292,0.896,523,2.598,528,2.045,555,0.743,571,2.795,618,1.129,622,3.272,623,3.594,624,4.724,625,4.319,626,3.992,627,4.147,628,5.256,629,5.6,630,5.256,631,4.724,634,4.4,636,4.601,644,3.162,645,3.162,646,3.162,647,3.162,648,3.162,649,3.162,650,2.763,651,3.162,652,2.842,653,3.162,654,3.162,655,3.369,656,3.369,657,3.369,658,3.369,659,3.369,660,3.369,661,2.029,662,2.842,663,2.842,664,2.842,665,2.315,866,2.097,867,2.236,1880,4.305,1881,3.975,1882,3.975]],["title/modules/RentalModule.html",[0,2.054,190,3.103]],["body/modules/RentalModule.html",[0,3.533,2,1.576,3,1.641,4,1.795,5,1.795,6,1.641,7,3.229,8,3.229,12,3.199,13,2.77,14,0.009,15,2.77,16,1.412,17,1.576,18,0.055,19,0.061,20,0.043,22,0.577,23,0.924,31,0.404,32,2.914,33,1.714,35,2.77,55,3.213,89,0.061,90,0.064,91,0.003,92,0.004,93,0.003,95,0.873,97,3.537,99,3.875,102,0.903,104,0.353,106,0.607,107,0.894,108,0.138,109,0.607,159,2.341,161,0.681,168,0.665,171,1.051,190,6.358,195,3.763,202,2.128,203,1.576,207,3.875,292,1.199,294,2.533,311,0.881,360,0.665,379,1.208,477,1.282,540,1.14,618,1.1,621,1.913,625,1.641,650,1.978,666,4.343,668,1.795,685,1.981,709,4.343,764,1.714,765,2.914,822,2.432,882,4.343,884,1.517,926,1.919,935,4.343,943,2.108,954,3.97,975,2.128,976,2.128,1032,3.97,1092,4.343,1122,2.128,1243,2.292,1254,2.292,1255,3.558,1267,2.914,1397,4.343,1533,4.568,1592,4.343,1705,3.875,1745,4.145,1758,6.074,1759,1.998,1776,4.568,1784,4.568,1786,1.998,1806,5.323,1807,2.511,1808,2.511,1809,2.511,1810,2.511,1811,2.511,1817,2.511,1818,2.511,1819,2.292,1820,2.292,1822,4.343,1823,2.511,1824,2.511,1825,2.511,1826,2.511,1829,2.511,1830,4.731,1831,2.511,1834,2.511,1835,5.319,1836,4.145,1837,2.511,1838,2.511,1839,2.511,1883,2.511,1884,2.511,1885,2.844,1886,2.511,1887,2.844,1888,3.537,1889,4.388,1890,6.879,1891,3.284,1892,4.388,1893,4.388,1894,6.024,1895,2.511,1896,3.875,1897,5.319,1898,2.844,1899,4.388,1900,4.388,1901,4.731,1902,4.388,1903,4.388,1904,4.388,1905,4.388,1906,2.844,1907,3.537,1908,2.844,1909,3.537,1910,2.844,1911,3.537,1912,2.844,1913,2.511,1914,2.511,1915,2.844,1916,2.511,1917,2.844,1918,2.844,1919,2.844,1920,2.844,1921,2.844,1922,2.844,1923,2.844]],["title/injectables/RentalService.html",[94,0.204,1806,2.934]],["body/injectables/RentalService.html",[14,0.009,18,0.031,19,0.035,20,0.024,22,0.692,23,0.733,31,0.23,45,1.21,50,1.329,55,2.292,85,2.589,89,0.035,90,0.036,91,0.002,92,0.003,93,0.002,94,0.128,95,0.322,100,0.049,102,0.879,104,0.424,106,1.371,107,1.309,108,0.312,109,1.514,139,1.079,141,1.292,161,0.663,168,1.389,171,0.663,203,0.896,242,2.713,246,2.01,249,1.136,269,2.067,292,1.533,311,1.745,316,2.07,318,2.2,360,1.783,371,1.136,372,0.466,373,1.141,382,1.508,415,2.195,416,2.254,417,3.579,421,1.175,426,2.381,427,2.381,428,2.16,429,2.449,434,1.944,447,1.668,469,3.463,471,2.187,477,2.987,479,1.838,490,1.747,520,2.444,523,1.597,528,1.434,555,0.336,571,0.648,603,1.747,612,1.423,613,2.713,618,2.086,619,0.582,621,0.879,623,1.743,625,2.094,627,2.011,631,1.021,650,2.537,652,1.747,661,2.537,662,2.291,663,2.291,664,2.291,665,1.866,668,2.713,670,2.854,683,1.303,685,2.751,686,1.303,687,0.862,689,0.667,697,1.747,723,0.777,761,3.498,764,3.174,765,2.854,836,2.53,863,2.41,884,3.167,917,1.21,921,1.375,926,1.879,943,2.978,946,3.794,947,2.291,949,3.174,950,2.444,958,2.444,962,1.944,972,1.838,978,1.802,1014,1.303,1038,1.668,1039,2.071,1040,2.23,1054,1.021,1060,1.534,1102,2.444,1148,2.071,1207,1.074,1300,3.018,1307,1.074,1309,1.136,1311,2.094,1328,1.476,1502,1.303,1527,2.854,1550,1.303,1553,3.204,1556,1.428,1558,1.428,1561,1.428,1568,3.748,1577,2.444,1601,2.23,1602,2.071,1612,2.23,1623,1.074,1627,3.208,1628,1.303,1637,2.071,1639,1.21,1651,2.094,1652,2.713,1655,0.933,1664,1.597,1681,1.303,1683,2.23,1717,2.23,1720,2.23,1721,2.444,1732,2.071,1749,2.854,1761,2.444,1762,2.444,1763,2.444,1764,2.444,1765,2.444,1766,2.444,1767,3.794,1768,2.444,1781,2.444,1786,3.018,1787,2.444,1788,2.444,1793,2.444,1795,4.561,1802,2.444,1806,1.838,1821,1.303,1832,1.303,1833,1.303,1841,1.303,1880,1.136,1924,1.428,1925,2.768,1926,3.204,1927,3.629,1928,2.444,1929,1.428,1930,1.617,1931,2.444,1932,1.617,1933,2.768,1934,2.768,1935,2.768,1936,2.444,1937,1.617,1938,2.768,1939,2.768,1940,2.768,1941,1.617,1942,2.768,1943,2.768,1944,1.617,1945,1.617,1946,2.768,1947,1.617,1948,2.768,1949,2.768,1950,2.768,1951,1.617,1952,1.617,1953,2.768,1954,2.768,1955,1.617,1956,2.444,1957,4.297,1958,1.428,1959,1.21,1960,1.136,1961,1.428,1962,1.428,1963,1.428,1964,1.617,1965,1.428,1966,1.617,1967,1.617,1968,1.617,1969,2.768,1970,2.768,1971,1.617,1972,1.617,1973,1.617,1974,1.617,1975,1.617,1976,1.617,1977,2.768,1978,1.617,1979,1.617,1980,1.617,1981,2.23,1982,1.617,1983,1.617,1984,1.617,1985,1.617,1986,1.617,1987,1.617,1988,1.617,1989,1.617,1990,1.428,1991,2.444,1992,1.428,1993,1.428,1994,1.428,1995,1.428,1996,1.428,1997,1.428,1998,1.428,1999,1.428,2000,1.428,2001,1.428,2002,1.428,2003,3.204,2004,1.428,2005,1.428,2006,3.204,2007,1.428,2008,1.617,2009,2.768,2010,1.617,2011,1.617,2012,1.617,2013,1.617,2014,1.617,2015,1.617,2016,1.617,2017,1.617,2018,1.428]],["title/classes/RequestCoordinatesDto.html",[90,0.099,890,2.934]],["body/classes/RequestCoordinatesDto.html",[14,0.009,18,0.111,19,0.124,20,0.087,22,0.76,28,1.52,89,0.124,90,0.13,91,0.006,92,0.007,93,0.007,100,0.174,104,0.559,108,0.411,140,1.391,148,2.556,269,1.63,292,1.152,433,2.874,555,0.876,619,2.084,622,3.442,623,3.781,661,3.548,887,4.97,890,4.796,896,4.064,974,2.874,1032,3.34,1053,5.205,1091,4.664,1394,4.331,1709,4.664,1711,5.11,1712,5.11,1822,3.653,2019,7.64,2020,5.787,2021,5.787,2022,5.787]],["title/injectables/RequestCoordinatesPipe.html",[94,0.204,1822,2.789]],["body/injectables/RequestCoordinatesPipe.html",[14,0.009,18,0.085,19,0.094,20,0.066,22,0.795,23,0.782,31,0.627,51,2.931,89,0.094,90,0.099,91,0.004,92,0.006,93,0.004,94,0.279,95,0.878,100,0.133,102,1.402,104,0.399,106,1.29,107,1.232,108,0.334,109,1.29,138,2.27,139,1.722,141,0.92,161,1.448,168,1.033,171,1.777,246,1.73,269,1.704,292,1.477,311,1.368,316,1.855,318,1.368,360,1.033,372,1.745,382,2.123,416,1.676,426,1.77,427,1.77,428,1.402,429,1.821,433,3.004,531,2.726,532,2.905,538,3.004,540,1.77,621,1.921,622,1.93,623,2.12,625,3.982,661,1.989,665,2.27,723,2.12,809,3.959,822,2.447,887,2.787,890,4.929,900,4.874,940,4.526,941,4.526,942,4.874,943,2.905,953,3.898,954,4.635,964,4.248,965,4.248,972,2.931,974,3.004,975,3.303,976,3.303,977,3.557,978,3.427,979,3.557,985,3.898,987,3.898,989,3.898,1018,3.557,1053,2.787,1082,4.526,1085,3.557,1086,3.303,1510,3.557,1622,4.874,1623,4.017,1732,4.526,1795,5.069,1821,3.557,1822,3.818,1874,3.898,1879,3.898,2023,6.092,2024,3.898,2025,4.414,2026,4.414,2027,6.048,2028,6.048,2029,6.048,2030,4.414]],["title/classes/ResetPasswordDto.html",[90,0.099,289,3.103]],["body/classes/ResetPasswordDto.html",[14,0.009,18,0.118,19,0.131,20,0.092,28,1.614,89,0.131,90,0.138,91,0.006,92,0.007,93,0.006,100,0.185,104,0.533,108,0.392,139,3.526,140,1.481,171,1.472,289,5.265,298,4.082,554,4.318,555,0.909,556,5.428,557,4.6,2031,7.435,2032,8.088,2033,8.088,2034,6.052,2035,6.147]],["title/injectables/ResetPasswordTokenDto.html",[94,0.204,2036,3.306]],["body/injectables/ResetPasswordTokenDto.html",[14,0.009,16,3.844,18,0.125,19,0.138,20,0.097,23,0.683,31,0.92,89,0.138,90,0.145,91,0.006,92,0.008,93,0.006,94,0.357,95,1.29,100,0.195,104,0.427,108,0.314,140,1.306,272,3.488,379,2.129,443,6.668,555,0.938,880,6.237,2036,5.791,2037,5.722,2038,6.481]],["title/injectables/S3Provider.html",[94,0.204,569,2.662]],["body/injectables/S3Provider.html",[12,3.855,14,0.009,18,0.113,19,0.125,20,0.088,23,0.835,31,0.834,63,3.903,89,0.125,90,0.132,91,0.006,92,0.007,93,0.006,94,0.336,95,1.17,100,0.177,102,1.866,104,0.481,106,1.254,107,1.197,108,0.285,109,1.254,138,3.022,139,2.292,141,1.225,360,1.375,372,1.695,390,5.121,555,0.884,567,4.394,569,4.394,571,2.356,1916,5.189,2039,5.189,2040,7.928,2041,5.877,2042,5.877,2043,5.877,2044,5.189,2045,5.877,2046,5.877,2047,5.877,2048,5.877]],["title/classes/SearchRentalDto.html",[90,0.099,1795,2.789]],["body/classes/SearchRentalDto.html",[14,0.009,18,0.106,19,0.118,20,0.083,22,0.723,28,1.446,89,0.118,90,0.123,91,0.005,92,0.007,93,0.005,100,0.165,104,0.563,108,0.426,140,1.366,148,2.595,171,1.318,292,1.096,433,2.735,555,0.849,615,3.867,616,3.318,618,1.38,619,1.983,621,1.749,622,3.364,623,3.696,625,4.673,632,4.437,636,2.937,643,4.12,661,3.468,665,2.832,887,5.112,960,4.12,974,2.735,978,2.735,1053,5.112,1398,4.437,1399,4.437,1510,4.437,1732,4.12,1795,4.419,2049,7.665,2050,4.862,2051,5.506,2052,5.506,2053,5.506]],["title/injectables/SortUnavailabilityPipe.html",[94,0.204,1745,2.662]],["body/injectables/SortUnavailabilityPipe.html",[14,0.009,18,0.051,19,0.057,20,0.04,22,0.879,23,0.665,31,0.378,87,1.991,89,0.057,90,0.06,91,0.003,92,0.004,93,0.003,94,0.192,95,0.53,100,0.08,104,0.416,106,1.346,107,1.285,108,0.129,109,0.568,141,1.687,148,0.786,161,1.391,168,0.622,171,1.602,246,1.678,269,1.971,292,1.545,311,1.956,316,1.88,318,1.592,360,1.202,372,2.147,403,2.396,415,2.869,416,1.01,421,2.679,426,1.067,427,1.067,428,1.631,429,1.097,433,1.321,475,2.767,528,1.714,531,1.878,532,2.001,535,1.878,538,2.07,540,1.067,555,0.505,571,2.33,605,4.282,607,2.989,612,2.641,618,1.288,685,2.677,697,1.68,701,2.388,723,1.278,728,3.709,809,2.74,834,2.405,836,2.001,851,1.991,864,2.349,884,2.223,917,1.991,921,3.134,924,1.869,926,2.759,938,2.223,1054,2.631,1060,3.221,1267,2.767,1291,3.411,1307,1.767,1485,2.767,1594,1.869,1601,3.358,1636,3.642,1646,3.679,1651,3.863,1652,4.225,1655,2.405,1658,2.349,1664,2.405,1743,4.349,1745,2.511,1981,4.139,2054,5.91,2055,7.762,2056,3.358,2057,4.167,2058,4.167,2059,3.679,2060,4.167,2061,6.31,2062,6.31,2063,6.31,2064,2.661,2065,3.607,2066,2.661,2067,5.349,2068,5.136,2069,2.661,2070,5.136,2071,2.661,2072,4.167,2073,6.693,2074,4.167,2075,2.661,2076,5.132,2077,3.358,2078,6.177,2079,2.144,2080,2.661,2081,3.844,2082,2.661,2083,2.349,2084,2.349,2085,2.661,2086,2.661,2087,2.661,2088,2.661,2089,2.661,2090,2.661,2091,2.661,2092,5.136,2093,2.661,2094,2.349,2095,4.167,2096,2.661,2097,2.661,2098,4.167,2099,2.661,2100,2.661,2101,2.661,2102,5.136,2103,5.136,2104,4.167,2105,2.661,2106,2.661,2107,2.661,2108,3.679,2109,3.679,2110,2.661,2111,2.661,2112,2.661,2113,1.991,2114,2.661]],["title/interfaces/SortedUnavailabilityDto.html",[866,1.512,2081,3.306]],["body/interfaces/SortedUnavailabilityDto.html",[14,0.009,18,0.107,19,0.118,20,0.083,22,0.729,23,0.584,89,0.118,91,0.005,92,0.007,93,0.005,100,0.167,108,0.341,171,1.683,292,1.399,528,2.576,555,0.853,605,3.616,607,4.472,612,2.853,619,2.532,685,3.001,701,3.27,824,5.262,866,1.898,867,2.755,931,4.439,949,4.238,1060,3.897,1652,4.439,1690,3.201,1836,4.238,2056,5.667,2067,4.939,2077,6.543,2081,5.262,2108,7.169,2109,7.169,2115,4.898,2116,5.667,2117,7.032,2118,5.262,2119,5.262,2120,6.209,2121,6.209]],["title/injectables/TestRentalService.html",[94,0.204,2122,3.56]],["body/injectables/TestRentalService.html",[14,0.009,18,0.086,19,0.096,20,0.068,22,0.59,23,0.788,31,0.638,45,4.581,64,4.581,89,0.096,90,0.101,91,0.004,92,0.006,93,0.004,94,0.282,95,0.894,97,4.934,100,0.135,102,1.944,104,0.459,106,1.306,107,1.247,108,0.297,109,1.485,139,1.752,141,1.276,161,1.466,168,1.432,203,2.49,246,2.024,316,1.208,371,3.156,415,2.574,417,3.148,528,2.043,618,1.746,625,2.593,650,3.37,661,2.759,665,2.311,771,4.934,863,2.984,947,2.836,978,2.231,1309,3.156,1311,2.593,1637,4.581,1639,3.362,1880,3.156,1926,3.967,1928,5.405,1929,3.967,1931,6.602,1936,5.405,1958,3.967,1962,3.967,1990,3.967,1991,5.405,1992,3.967,1993,3.967,1994,3.967,1995,3.967,1996,3.967,1997,3.967,1998,3.967,1999,3.967,2000,3.967,2001,3.967,2002,3.967,2003,5.405,2004,3.967,2005,3.967,2006,6.148,2007,3.967,2122,4.934,2123,6.602,2124,3.967,2125,6.122,2126,6.122,2127,7.477,2128,4.493,2129,4.493,2130,4.493,2131,4.493,2132,4.493]],["title/interfaces/TransporterInterface.html",[791,3.306,866,1.512]],["body/interfaces/TransporterInterface.html",[14,0.009,18,0.112,19,0.124,20,0.088,47,6.662,75,3.514,89,0.124,91,0.006,92,0.007,93,0.006,100,0.175,108,0.434,140,1.463,148,2.334,262,6.662,379,1.605,400,4.364,555,0.88,634,4.987,636,4.409,791,5.43,812,6.662,866,1.995,867,2.896,2133,5.149,2134,8.503,2135,8.503,2136,5.832,2137,5.832]],["title/classes/TypeOfValue.html",[90,0.099,2138,3.306]],["body/classes/TypeOfValue.html",[14,0.009,18,0.119,19,0.132,20,0.093,22,0.81,28,1.619,75,3.715,85,3.715,89,0.132,90,0.138,91,0.006,92,0.007,93,0.006,100,0.185,104,0.406,108,0.299,140,1.04,141,1.565,372,2.492,421,3.437,494,4.613,528,2.505,555,0.911,571,2.471,1103,5.443,1554,4.613,2138,5.619,2139,6.63,2140,5.443,2141,7.15,2142,6.164]],["title/classes/UnavailabilityDto.html",[90,0.099,607,2.272]],["body/classes/UnavailabilityDto.html",[14,0.009,18,0.103,19,0.115,20,0.081,22,0.706,28,1.412,89,0.115,90,0.12,91,0.005,92,0.007,93,0.005,100,0.161,104,0.56,108,0.411,140,1.354,148,2.583,292,1.07,379,1.479,422,3.394,447,4.154,555,0.836,602,3.538,603,4.352,604,3.654,605,4.497,607,3.545,618,1.348,689,3.138,700,4.217,834,4.392,836,3.654,921,3.423,949,3.24,1259,3.57,1296,4.332,1328,3.677,1602,4.023,1636,4.392,2143,4.747,2144,5.376,2145,5.376,2146,5.376,2147,5.376,2148,5.376,2149,5.376,2150,5.376,2151,5.376,2152,5.376,2153,4.578,2154,5.158,2155,4.332,2156,4.023]],["title/classes/UnavailabilityInterface.html",[90,0.099,1960,3.103]],["body/classes/UnavailabilityInterface.html",[14,0.009,18,0.107,19,0.119,20,0.084,22,0.732,28,1.464,89,0.119,90,0.125,91,0.005,92,0.007,93,0.005,100,0.167,104,0.565,108,0.415,140,1.372,148,2.602,292,1.109,447,4.251,555,0.855,602,3.598,603,4.453,604,3.717,605,4.183,650,2.512,685,2.06,689,3.191,700,4.289,834,3.217,836,3.388,866,1.907,949,3.359,1328,3.762,1636,4.466,1960,4.954,2153,4.684,2154,5.278,2155,4.492,2156,4.171,2157,4.922,2158,5.574,2159,5.574,2160,5.574,2161,5.574,2162,5.574,2163,5.574]],["title/classes/UnavailabilityQueryDto.html",[90,0.099,1629,3.103]],["body/classes/UnavailabilityQueryDto.html",[14,0.009,18,0.091,19,0.102,20,0.072,22,0.625,28,1.249,55,2.537,89,0.102,90,0.106,91,0.005,92,0.006,93,0.005,100,0.143,104,0.504,108,0.418,140,1.073,148,2.615,171,1.139,269,1.34,292,0.947,380,5.083,509,3.272,555,0.771,601,3.559,602,3.71,604,3.831,605,3.687,606,3.833,610,3.833,611,3.833,618,2,636,4.255,679,3.559,685,3.249,689,2.956,921,2.362,924,3.341,926,2.08,974,2.362,1037,3.559,1060,4.242,1287,2.636,1460,3.559,1568,5.036,1595,5.298,1596,6.758,1629,4.468,1636,4.137,1637,5.97,1639,5.97,1641,4.2,1651,2.745,1710,3.833,2164,7.044,2165,4.756,2166,4.756,2167,4.2,2168,4.756]],["title/classes/UpdateUnavailabilityDataDto.html",[90,0.099,670,2.934]],["body/classes/UpdateUnavailabilityDataDto.html",[14,0.009,18,0.11,19,0.122,20,0.086,22,0.753,28,1.504,89,0.122,90,0.128,91,0.006,92,0.007,93,0.006,100,0.172,104,0.473,108,0.41,140,1.322,148,2.426,242,4.53,269,1.614,292,1.14,373,2.363,434,4.023,477,3.234,491,3.804,555,0.87,602,3.337,604,3.447,618,1.436,619,2.063,621,1.819,636,4.18,666,3.616,668,4.947,670,4.766,671,4.617,685,3.037,687,3.055,689,2.363,697,4.947,700,3.175,1311,3.306,2169,6.315,2170,5.058,2171,5.729,2172,5.729]],["title/classes/UpdateUnavailabilityDto.html",[90,0.099,677,3.306]],["body/classes/UpdateUnavailabilityDto.html",[14,0.009,18,0.109,19,0.121,20,0.085,22,0.743,28,1.486,89,0.121,90,0.127,91,0.006,92,0.007,93,0.006,100,0.17,104,0.555,108,0.408,140,1.451,148,2.416,171,1.354,269,1.594,292,1.126,477,2.55,552,4.559,555,0.863,619,2.037,621,1.797,671,4.559,677,5.328,685,2.091,687,4.156,689,3.213,691,6.279,693,6.279,695,6.279,701,2.631,1259,3.757,1287,3.135,1536,3.571,1549,3.757,1568,3.571,1595,3.757,1690,3.265,1692,4.233,1697,4.233,1698,4.995,1746,4.233,2169,6.933,2173,5.657,2174,5.657,2175,5.657,2176,5.657,2177,4.559,2178,4.559]],["title/injectables/UpdateUserDto.html",[94,0.204,2179,3.103]],["body/injectables/UpdateUserDto.html",[14,0.009,18,0.122,19,0.135,20,0.095,23,0.668,31,0.899,89,0.135,90,0.142,91,0.006,92,0.007,93,0.006,94,0.352,95,1.261,100,0.19,104,0.503,108,0.37,109,1.815,140,1.435,296,3.478,385,4.214,555,0.926,705,4.208,706,5.595,708,4.741,2179,5.362,2180,7.236]],["title/controllers/UserController.html",[157,2.356,194,3.103]],["body/controllers/UserController.html",[14,0.009,18,0.068,19,0.075,20,0.053,22,0.802,23,0.885,31,0.502,89,0.075,90,0.079,91,0.003,92,0.005,93,0.003,100,0.106,104,0.443,106,1.433,107,1.369,108,0.326,109,1.433,138,1.818,139,1.379,141,1.401,157,2.756,159,1.885,161,1.237,164,4.719,167,3.786,168,1.572,169,2.645,170,2.483,171,1.846,173,2.231,174,2.849,175,2.645,176,2.13,177,3.121,178,2.645,179,4.571,180,4.922,194,3.629,246,2.106,261,2.645,269,1.721,296,2.193,297,2.645,298,2.347,299,1.756,311,2.216,318,1.893,324,4.563,360,1.209,379,2.479,382,1.814,387,3.856,405,4.462,407,4.719,419,3.262,477,3.222,529,3.867,533,4.242,539,2.645,580,2.04,724,2.04,725,3.629,738,4.049,759,4.719,1182,3.121,1189,3.121,1338,3.121,1354,2.483,1413,4.164,1803,3.121,1805,3.121,1812,3.121,1813,3.121,1815,3.121,1816,3.121,1840,2.849,1843,5.393,1864,2.849,2179,4.719,2181,3.121,2182,5.167,2183,5.167,2184,4.563,2185,5.167,2186,3.535,2187,3.535,2188,3.535,2189,3.535,2190,3.535,2191,3.535,2192,3.535,2193,3.535,2194,3.535,2195,3.535,2196,3.535,2197,3.535,2198,3.535,2199,3.535,2200,3.535,2201,5.167,2202,3.121,2203,3.121,2204,3.535,2205,2.849,2206,3.121,2207,3.535,2208,3.535,2209,3.535,2210,3.535,2211,3.535,2212,3.535,2213,3.535,2214,3.535,2215,3.535,2216,3.535,2217,3.535,2218,3.535]],["title/interfaces/UserInterface.html",[412,2.934,866,1.512]],["body/interfaces/UserInterface.html",[14,0.009,18,0.116,19,0.129,20,0.091,22,0.795,89,0.129,91,0.006,92,0.007,93,0.006,100,0.182,108,0.416,140,1.545,272,3.774,296,3.554,379,1.664,385,4.306,412,4.929,555,0.9,866,2.54,867,3.004,1485,5.333,2034,6.266,2219,5.341,2220,7.394]],["title/modules/UserModule.html",[0,2.054,191,2.934]],["body/modules/UserModule.html",[0,3.173,1,4.808,2,2.395,3,2.494,4,2.728,5,2.728,6,2.494,7,4.112,8,4.112,14,0.009,15,3.763,16,2.146,17,2.395,18,0.083,19,0.092,20,0.065,23,0.931,31,0.613,35,3.763,89,0.092,90,0.097,91,0.004,92,0.006,93,0.004,102,1.373,104,0.285,106,0.922,107,1.214,108,0.209,109,0.922,159,3.18,161,1.035,168,1.011,191,5.95,194,4.793,202,3.234,203,2.395,230,3.234,233,5.499,234,3.483,308,2.605,341,4.808,342,4.808,343,4.808,356,3.234,357,1.89,358,3.234,360,1.011,361,3.234,364,3.234,379,1.189,387,5.457,389,4.461,414,3.483,709,5.037,1122,3.234,1243,3.483,1254,3.483,1255,2.87,1287,2.395,1895,3.816,1896,5.264,1897,6.495,1901,5.264,1913,3.816,1914,3.816,2206,3.816,2221,3.816,2222,3.816,2223,4.322,2224,3.816,2225,4.322,2226,4.322,2227,4.804,2228,4.322,2229,4.322,2230,3.234,2231,4.322,2232,3.483,2233,4.322,2234,3.816,2235,4.322,2236,4.322,2237,4.322,2238,4.322]],["title/interfaces/UserPropertyInterface.html",[408,3.306,866,1.512]],["body/interfaces/UserPropertyInterface.html",[14,0.009,18,0.12,19,0.133,20,0.094,89,0.133,91,0.006,92,0.007,93,0.006,100,0.187,108,0.41,140,1.55,272,3.812,296,3.591,385,4.35,408,5.656,555,0.917,866,2.132,867,3.095,1148,6.33,2239,5.502,2240,5.502]],["title/injectables/UserService.html",[94,0.204,387,2.789]],["body/injectables/UserService.html",[14,0.009,16,1.894,18,0.046,19,0.051,20,0.036,22,0.627,23,0.841,31,0.338,67,2.298,85,2.298,89,0.051,90,0.053,91,0.002,92,0.004,93,0.002,94,0.176,95,0.473,100,0.071,102,1.211,104,0.459,106,1.485,107,1.418,108,0.337,109,1.485,139,2.33,141,1.623,161,0.913,167,3.137,168,1.567,171,1.763,203,1.319,242,1.502,246,2.06,265,1.78,266,3.073,269,2.023,272,2.151,281,1.434,296,2.955,299,1.182,311,1.852,316,1.98,318,2.446,322,1.78,341,4.036,342,4.036,343,4.036,356,1.78,357,1.667,358,1.78,360,1.68,361,1.78,364,1.78,373,0.981,379,2.407,380,1.58,382,1.675,387,2.407,389,5.012,405,3.625,407,3.834,412,1.58,414,1.917,415,2.878,416,2.268,417,1.224,419,3.446,423,2.101,424,1.917,425,2.101,426,1.914,427,1.914,428,1.897,429,2.464,438,1.58,443,3.846,451,2.854,453,2.101,455,2.101,469,1.917,470,3.367,471,2.298,473,2.101,475,1.58,477,3.137,496,4.82,508,2.854,528,1.272,533,3.446,539,1.78,576,2.407,577,1.78,650,2.46,668,3.013,697,1.502,725,3.352,727,2.101,738,2.298,759,3.834,1025,1.182,1309,1.671,1311,1.373,1413,3.073,1518,3.367,1840,1.917,1965,2.101,2034,3.572,2036,4.085,2179,4.889,2184,3.367,2202,2.101,2203,3.367,2234,2.101,2241,2.101,2242,3.814,2243,3.814,2244,3.814,2245,3.814,2246,3.814,2247,3.814,2248,2.379,2249,2.379,2250,2.854,2251,3.814,2252,2.379,2253,3.814,2254,2.379,2255,2.854,2256,3.814,2257,2.379,2258,3.814,2259,2.379,2260,3.814,2261,2.379,2262,3.814,2263,2.379,2264,3.814,2265,2.379,2266,2.101,2267,2.379,2268,1.917,2269,2.379,2270,2.379,2271,2.379,2272,3.814,2273,2.379,2274,3.814,2275,3.814,2276,2.379,2277,2.379,2278,2.379,2279,2.379,2280,3.814,2281,2.379,2282,2.379,2283,3.814,2284,2.379,2285,2.101,2286,2.379,2287,2.379,2288,2.379,2289,2.379,2290,4.773,2291,2.379,2292,2.379,2293,2.379]],["title/injectables/ValidateEditDetailsPipe.html",[94,0.204,1776,2.934]],["body/injectables/ValidateEditDetailsPipe.html",[14,0.009,18,0.058,19,0.065,20,0.046,22,0.732,23,0.656,31,0.43,89,0.065,90,0.068,91,0.003,92,0.004,93,0.003,94,0.212,95,0.602,100,0.091,102,1.768,104,0.441,106,0.982,107,0.937,108,0.27,109,0.646,140,1.436,141,0.631,148,2.369,161,1.102,168,0.708,171,1.852,246,1.56,269,1.296,292,1.403,311,1.426,316,0.813,318,0.938,360,1.992,372,2.439,384,1.677,403,1.149,415,2.059,421,3.111,422,1.91,428,2.664,433,3.09,477,2.51,509,1.556,531,2.074,532,2.21,535,2.074,538,2.286,540,1.213,555,0.558,571,1.213,618,1.678,621,1.461,689,1.248,690,2.264,701,2.14,761,4.682,764,4.754,765,4.445,809,2.455,1025,2.286,1054,1.91,1086,4.167,1291,2.009,1328,1.614,1412,3.232,1521,5.484,1524,5.91,1536,2.905,1542,2.439,1543,3.232,1546,4.063,1549,3.056,1776,3.056,1832,2.439,1833,2.439,2084,2.672,2138,5.484,2294,5.275,2295,2.672,2296,6.694,2297,4.602,2298,6.694,2299,4.602,2300,3.026,2301,3.026,2302,3.026,2303,3.026,2304,3.026,2305,3.026,2306,3.026,2307,3.026,2308,3.026,2309,4.602,2310,3.026,2311,3.026,2312,3.026,2313,3.026,2314,3.026,2315,3.026,2316,3.026,2317,6.668,2318,3.026,2319,3.026,2320,3.026,2321,3.026,2322,3.026,2323,3.026,2324,3.026,2325,3.026,2326,3.026,2327,3.026,2328,3.026,2329,3.026,2330,3.026,2331,3.026,2332,3.026,2333,3.026,2334,3.026,2335,3.026,2336,3.026,2337,3.026,2338,3.026,2339,3.026,2340,3.026,2341,3.026,2342,3.026,2343,3.026,2344,3.026,2345,3.026,2346,3.026,2347,3.026,2348,3.026,2349,3.026,2350,3.026,2351,3.026,2352,3.026,2353,3.026,2354,3.026,2355,3.026,2356,3.026]],["title/injectables/ValidateEmailMiddleware.html",[94,0.204,2230,3.306]],["body/injectables/ValidateEmailMiddleware.html",[14,0.009,18,0.087,19,0.096,20,0.068,22,0.591,23,0.871,31,0.639,55,3.27,89,0.096,90,0.101,91,0.004,92,0.006,93,0.004,94,0.282,95,0.896,100,0.135,102,1.947,104,0.493,106,1.487,107,1.42,108,0.363,109,1.487,139,1.756,161,1.467,167,2.029,168,1.434,171,1.791,246,2.025,249,3.162,281,4.201,282,4.319,296,2.602,299,2.236,316,1.21,318,1.9,360,1.053,372,1.299,379,2.059,382,1.58,407,3.162,412,2.99,415,2.766,421,2.602,431,4.587,509,2.315,533,4.724,535,2.763,539,3.369,540,1.805,555,0.743,590,4.201,650,3.373,1060,3.397,1207,2.99,1311,2.598,1470,5.256,2230,4.587,2250,3.369,2266,3.975,2357,6.913,2358,3.975,2359,6.185,2360,5.413,2361,4.502,2362,6.13,2363,5.413,2364,4.502,2365,6.13,2366,4.502,2367,5.413,2368,4.502,2369,4.502,2370,4.502,2371,4.502,2372,4.502,2373,4.502,2374,4.502,2375,3.975,2376,4.502,2377,3.975,2378,4.502,2379,4.502]],["title/injectables/ValidateEmailUtil.html",[94,0.204,2359,3.306]],["body/injectables/ValidateEmailUtil.html",[14,0.009,18,0.117,19,0.13,20,0.091,23,0.641,31,0.863,89,0.13,90,0.136,91,0.006,92,0.007,93,0.006,94,0.343,95,1.21,100,0.183,102,2.556,104,0.491,106,1.297,107,1.239,109,1.297,141,1.268,161,1.783,168,1.423,296,2.581,322,4.551,360,1.423,379,1.673,428,1.931,509,3.128,900,4.901,1122,4.551,1328,3.244,1595,4.039,2359,5.573,2360,6.576,2380,7.108,2381,5.37,2382,6.081,2383,7.447,2384,6.081,2385,6.081,2386,6.081,2387,6.081,2388,6.081]],["title/injectables/ValidateRemoveUnavailabilityPipe.html",[94,0.204,1784,2.934]],["body/injectables/ValidateRemoveUnavailabilityPipe.html",[14,0.009,18,0.087,19,0.097,20,0.068,22,0.919,23,0.648,31,0.643,89,0.097,90,0.101,91,0.004,92,0.006,93,0.004,94,0.284,95,0.901,100,0.136,104,0.406,106,1.313,107,1.254,108,0.219,109,0.966,140,1.266,141,0.944,161,1.473,168,1.059,171,2.067,292,1.61,311,1.908,360,1.44,372,2.388,384,3.411,415,2.585,421,3.184,428,1.955,509,3.165,531,2.774,532,2.956,535,2.774,538,3.057,540,1.816,555,0.746,571,1.816,612,2.329,618,1.967,621,1.955,685,2.9,687,3.283,688,3.65,689,2.538,690,3.389,701,3.488,809,4.316,1025,3.057,1412,4.323,1543,4.323,1554,4.606,1594,3.181,1749,5.21,1784,4.087,1786,5.814,1841,3.65,2294,5.232,2317,5.435,2389,6.155,2390,6.927,2391,4.529,2392,4.529,2393,4.529,2394,4.529]],["title/classes/ValidateScheduleUnavailabilityDto.html",[90,0.099,2065,3.103]],["body/classes/ValidateScheduleUnavailabilityDto.html",[14,0.009,18,0.101,19,0.112,20,0.079,22,0.688,23,0.552,28,1.376,89,0.112,90,0.117,91,0.005,92,0.007,93,0.005,100,0.157,104,0.447,108,0.329,171,1.623,292,1.349,528,2.262,555,0.822,602,3.153,605,4.088,607,4.234,612,2.695,618,1.7,619,2.442,685,2.938,701,3.153,921,4.089,931,4.28,947,4.28,974,3.367,1060,3.758,1089,4.762,1394,5.074,1651,3.913,1652,4.28,1655,4.338,1664,4.338,1690,3.024,1697,3.921,1745,4.086,1836,4.086,2056,5.464,2065,4.762,2067,4.762,2077,5.464,2116,5.464,2118,5.074,2119,5.074,2120,5.987,2121,5.987,2177,4.222,2395,6.637,2396,6.78,2397,6.78,2398,6.78,2399,6.78]],["title/injectables/ValidateUnavailabilityPipe.html",[94,0.204,1836,2.662]],["body/injectables/ValidateUnavailabilityPipe.html",[14,0.009,18,0.028,19,0.031,20,0.022,22,0.651,23,0.561,31,0.206,55,1.344,75,0.874,85,0.874,87,2.501,88,3.276,89,0.031,90,0.032,91,0.001,92,0.002,93,0.001,94,0.116,95,0.289,100,0.136,104,0.372,106,1.136,107,1.085,108,0.07,109,0.309,141,1.282,148,0.744,161,0.956,168,0.339,171,1.35,246,1.482,269,1.397,292,1.414,311,1.97,316,1.708,318,1.905,360,1.734,372,1.773,379,0.694,382,1.173,383,2.854,384,1.397,402,1.77,403,1.516,415,2.828,416,0.551,421,3.303,426,0.582,427,0.582,428,2.257,429,0.598,461,1.77,471,1.519,475,4.083,491,4.083,492,1.281,494,1.886,497,2.225,509,2.739,524,2.031,528,0.841,531,1.136,532,1.21,535,2.038,538,1.252,540,0.582,555,0.306,571,2.136,602,2.102,604,3.559,605,4.39,607,3.363,612,1.296,616,3.21,617,1.169,618,1.414,621,1.877,634,0.916,681,1.77,685,2.974,689,1.378,700,3.276,701,0.674,723,0.697,728,2.748,809,2.411,817,4.978,818,2.406,825,1.085,834,3.255,836,3.053,865,3.992,897,1.169,905,3.483,906,3.218,912,1.169,917,1.886,921,2.245,926,1.746,1005,2.031,1025,2.245,1037,1.886,1038,1.519,1039,1.085,1054,1.591,1060,4,1124,1.886,1207,0.963,1262,2.031,1267,2.652,1287,1.397,1291,3.746,1307,3.293,1328,1.783,1452,4.378,1470,3.483,1484,1.281,1485,1.674,1594,1.019,1595,1.674,1602,2.988,1606,2.804,1612,2.693,1626,1.281,1636,3.412,1651,2.609,1652,2.854,1653,2.951,1655,4.588,1664,4.165,1671,1.281,1676,1.281,1730,2.031,1836,1.519,1981,1.169,2050,2.225,2059,2.225,2065,2.804,2067,1.77,2076,3.992,2078,2.951,2079,1.169,2083,1.281,2094,2.225,2113,1.886,2116,2.031,2119,1.886,2153,1.674,2154,1.085,2294,4.424,2400,4.521,2401,3.342,2402,4.521,2403,4.521,2404,4.521,2405,4.521,2406,3.993,2407,1.45,2408,2.52,2409,1.45,2410,1.45,2411,7.107,2412,4.958,2413,2.52,2414,1.45,2415,2.52,2416,2.52,2417,2.52,2418,4.521,2419,1.45,2420,2.52,2421,3.993,2422,2.52,2423,2.52,2424,2.52,2425,5.326,2426,1.45,2427,4.958,2428,3.992,2429,1.45,2430,2.52,2431,2.693,2432,2.52,2433,2.225,2434,2.52,2435,2.52,2436,1.45,2437,1.45,2438,1.45,2439,1.45,2440,1.281,2441,1.45,2442,2.031,2443,1.45,2444,2.52,2445,3.993,2446,1.45,2447,1.45,2448,1.45,2449,1.45,2450,1.45,2451,1.45,2452,1.45,2453,1.45,2454,3.342,2455,1.45,2456,1.45,2457,1.45,2458,1.281,2459,2.52,2460,1.45,2461,1.45,2462,1.45,2463,3.993,2464,1.45,2465,1.45,2466,3.342,2467,1.45,2468,1.45,2469,1.45,2470,1.45,2471,3.342,2472,1.45,2473,1.45,2474,1.45,2475,1.45,2476,1.45,2477,1.45,2478,1.45,2479,1.45,2480,1.45,2481,1.45,2482,1.45,2483,1.45,2484,2.52,2485,3.342,2486,3.342,2487,1.45,2488,1.45,2489,1.45,2490,2.52,2491,1.281,2492,2.52,2493,2.52,2494,1.45,2495,1.45,2496,1.45,2497,1.45,2498,2.52,2499,2.52,2500,2.52,2501,1.45,2502,1.45,2503,1.45,2504,1.45,2505,1.45,2506,1.45,2507,2.52,2508,2.52,2509,1.45,2510,1.45,2511,2.52,2512,1.45,2513,1.45,2514,1.45,2515,1.45,2516,1.45,2517,2.52]],["title/classes/ValidateUpdateUnavailabilityDto.html",[90,0.099,675,3.103]],["body/classes/ValidateUpdateUnavailabilityDto.html",[14,0.009,18,0.1,19,0.111,20,0.078,22,0.682,28,1.363,89,0.111,90,0.116,91,0.005,92,0.007,93,0.005,100,0.156,104,0.564,108,0.425,140,1.419,148,2.564,269,1.462,292,1.033,379,1.429,417,2.67,421,2.204,477,3.955,524,4.184,528,2.249,555,0.817,618,1.302,636,3.595,675,4.734,685,1.919,687,3.992,689,3.086,691,6.031,693,6.031,695,6.031,1259,3.448,1262,4.184,1287,2.877,1568,3.277,1655,4.319,1664,4.319,1690,2.996,1696,4.584,1746,3.885,1753,4.584,2178,4.184,2518,7.665,2519,5.192,2520,5.192,2521,5.192,2522,5.951,2523,5.951]],["title/injectables/ValidateUpdateUnavailabilityMiddleware.html",[94,0.204,1759,3.103]],["body/injectables/ValidateUpdateUnavailabilityMiddleware.html",[14,0.009,18,0.039,19,0.044,20,0.031,22,0.727,23,0.627,31,0.292,45,1.537,55,3.51,77,1.364,87,2.533,88,1.876,89,0.044,90,0.046,91,0.002,92,0.003,93,0.004,94,0.156,95,0.409,100,0.062,102,1.075,104,0.365,106,1.181,107,1.127,108,0.164,109,0.722,139,0.801,140,1.005,141,0.9,148,2.473,161,1.198,167,1.525,168,0.481,171,1.87,246,1.388,249,1.443,269,1.774,281,3.016,282,3.437,292,1.357,299,1.02,311,1.952,316,0.91,318,1.551,360,1.804,372,1.816,373,2.064,380,2.248,384,1.138,403,0.78,415,2.521,421,2.981,428,2.45,461,2.377,477,3.683,491,2.248,528,1.44,535,2.256,540,0.824,555,0.41,571,1.731,590,2.04,602,3.06,604,3.16,605,2.574,612,1.056,618,1.255,621,1.891,650,2.256,675,2.377,684,1.814,685,3.11,687,1.805,688,2.727,689,0.847,690,2.533,692,5.259,694,5.259,696,2.988,700,1.138,701,1.574,723,0.987,834,2.889,836,3.16,905,2.377,926,2.604,938,2.952,974,1.02,1025,2.486,1040,2.727,1060,2.774,1202,2.533,1207,1.364,1311,1.186,1412,5.056,1440,2.988,1470,4.789,1536,3.16,1543,2.377,1549,2.248,1554,5.387,1568,3.975,1595,2.866,1636,3.798,1651,1.186,1652,1.297,1655,2.491,1664,2.889,1756,2.988,1759,2.377,1959,1.537,1960,1.443,1961,1.814,1963,1.814,2018,1.814,2067,1.443,2113,1.537,2141,4.887,2153,3.324,2156,1.537,2285,2.988,2363,2.988,2367,2.988,2375,3.811,2377,1.814,2390,4.419,2428,4.419,2458,2.988,2522,2.988,2523,2.988,2524,5.259,2525,1.814,2526,4.316,2527,5.005,2528,6.297,2529,5.535,2530,2.054,2531,2.054,2532,2.054,2533,3.384,2534,3.384,2535,2.054,2536,4.316,2537,8.173,2538,3.384,2539,2.054,2540,2.054,2541,2.054,2542,3.384,2543,3.384,2544,2.054,2545,5.005,2546,5.005,2547,5.005,2548,5.005,2549,3.384,2550,3.384,2551,2.054,2552,3.384,2553,3.384,2554,5.005,2555,3.384,2556,3.384,2557,3.384,2558,3.384,2559,2.054,2560,2.054,2561,2.054,2562,2.054,2563,2.054,2564,2.054]],["title/classes/ValidatedUnavailabilityDto.html",[90,0.099,1606,3.103]],["body/classes/ValidatedUnavailabilityDto.html",[14,0.009,18,0.106,19,0.117,20,0.083,22,0.722,23,0.579,28,1.442,89,0.117,90,0.123,91,0.005,92,0.007,93,0.005,100,0.165,104,0.507,108,0.373,140,1.179,269,1.969,292,1.391,382,2.453,383,5.273,528,2.332,555,0.847,607,4.462,616,4.212,619,2.913,621,2.569,824,5.23,974,3.471,1025,3.471,1287,3.873,1431,6.171,1536,4.412,1592,4.412,1606,4.908,1655,4.436,1664,4.436,1690,3.17,1695,7.143,1697,4.11,2079,4.427,2177,4.427,2178,4.427,2440,6.171,2565,7.143]],["title/classes/VerifyNewPasswordDto.html",[90,0.099,2566,3.306]],["body/classes/VerifyNewPasswordDto.html",[14,0.009,18,0.124,19,0.138,20,0.097,28,1.697,89,0.138,90,0.145,91,0.006,92,0.008,93,0.006,100,0.194,104,0.509,108,0.374,140,1.445,360,1.933,424,6.66,465,6.184,554,4.539,555,0.937,557,4.836,2566,5.781,2567,7.297,2568,6.462]],["title/injectables/VerifyNewPasswordUtil.html",[94,0.204,342,2.662]],["body/injectables/VerifyNewPasswordUtil.html",[14,0.009,18,0.083,19,0.092,20,0.065,22,0.568,23,0.775,31,0.613,55,3.18,89,0.092,90,0.097,91,0.004,92,0.006,93,0.004,94,0.275,95,0.86,100,0.13,104,0.45,106,1.456,107,1.39,108,0.331,109,1.456,141,1.422,161,1.427,168,1.596,246,2,269,2.174,272,3.956,301,3.483,311,1.848,316,1.834,318,1.848,342,3.592,360,2.022,379,1.64,380,4.885,403,3.029,411,4.461,416,1.641,428,2.167,461,4.793,463,6.025,466,3.816,468,3.816,474,4.804,475,2.87,509,4.103,522,3.234,558,5.505,1439,3.816,2255,4.461,2268,5.928,2566,6.118,2569,3.816,2570,5.961,2571,5.961,2572,5.961,2573,5.961,2574,5.961,2575,4.322,2576,6.824,2577,5.961,2578,4.322,2579,5.961,2580,4.322,2581,4.322,2582,4.322,2583,4.322,2584,5.961,2585,5.961,2586,5.961,2587,4.322,2588,4.322,2589,4.322,2590,4.322]],["title/coverage.html",[2591,5.343]],["body/coverage.html",[6,1.071,12,0.863,14,0.009,16,0.922,20,0.028,90,0.192,91,0.002,92,0.003,93,0.002,94,0.406,96,1.639,108,0.09,157,2.792,158,1.389,160,1.639,173,1.172,176,1.118,192,1.304,194,1.304,195,1.304,196,1.304,197,1.304,212,1.389,215,1.389,217,1.389,255,1.639,260,1.639,270,1.304,272,1.402,276,1.304,289,1.304,305,1.389,308,1.118,340,1.233,341,1.118,342,1.118,343,1.118,344,1.304,345,1.304,351,1.389,357,1.36,360,1.099,372,0.535,375,1.639,379,0.856,382,1.092,383,1.172,387,1.172,405,1.233,408,1.389,412,1.233,417,0.955,454,1.964,477,1.402,529,1.389,530,1.639,533,1.172,553,1.639,554,3.301,558,1.389,559,1.639,560,1.639,563,1.233,564,1.639,565,1.304,566,2.507,567,1.118,569,1.118,576,1.172,577,1.389,580,1.071,590,1.118,598,2.328,599,1.304,600,1.639,601,3.005,607,0.955,613,1.172,614,1.639,615,3.301,618,1.42,622,0.811,666,1.172,667,1.639,668,1.172,669,1.639,670,1.233,675,1.304,677,1.389,685,1.15,704,1.639,705,3.476,711,1.496,713,1.233,714,1.639,715,1.639,738,1.118,759,1.304,760,1.639,761,1.233,762,1.639,763,1.639,764,1.118,770,1.639,789,1.389,791,1.389,800,1.639,822,1.724,849,1.639,850,1.639,856,1.389,866,2.438,868,1.639,869,1.639,870,1.639,871,1.639,880,2.507,881,1.639,882,1.172,883,1.639,884,0.99,885,1.639,890,1.233,908,1.389,921,1.545,935,1.172,936,1.639,937,1.639,939,1.304,943,0.891,954,1.071,964,1.304,965,1.304,970,1.304,978,1.545,992,1.639,993,1.639,1006,1.496,1016,1.389,1017,1.389,1032,1.071,1033,1.639,1034,1.639,1038,1.118,1055,1.304,1057,1.304,1087,1.639,1088,2.507,1092,1.172,1099,1.639,1100,1.639,1146,1.304,1147,1.639,1151,1.233,1152,1.639,1157,1.389,1158,1.639,1159,1.639,1163,1.389,1164,1.639,1165,1.639,1168,1.639,1205,1.233,1240,1.233,1241,1.233,1245,1.496,1255,3.121,1257,1.639,1312,1.304,1328,4.784,1354,1.304,1355,1.639,1356,1.639,1367,1.639,1368,2.507,1372,1.639,1373,1.639,1393,1.639,1397,1.172,1400,1.639,1402,1.639,1415,1.389,1417,1.639,1418,1.639,1444,1.639,1445,1.639,1489,1.496,1490,1.639,1493,1.496,1494,1.639,1497,1.639,1498,1.639,1499,1.639,1514,1.639,1521,1.389,1522,1.639,1523,1.639,1527,1.233,1528,1.639,1533,1.233,1534,1.639,1564,1.639,1565,1.639,1573,1.639,1574,1.639,1592,1.172,1593,1.639,1594,3.301,1606,1.304,1627,1.233,1629,1.304,1633,1.304,1686,2.507,1687,2.507,1689,2.507,1690,3.642,1706,1.496,1708,2.507,1709,2.507,1743,1.389,1744,1.639,1745,1.118,1747,1.639,1749,1.233,1750,1.639,1754,1.639,1759,1.304,1776,1.233,1784,1.233,1786,1.304,1795,1.172,1806,1.233,1814,1.496,1822,1.172,1827,1.496,1836,1.118,1867,1.639,1868,1.639,1880,1.304,1881,1.639,1891,1.389,1907,1.496,1909,1.496,1911,1.496,1924,1.639,1959,1.389,1960,1.304,2019,1.639,2023,1.639,2024,1.639,2031,1.639,2036,1.389,2037,1.639,2039,1.639,2049,1.639,2054,1.639,2065,1.304,2081,1.389,2115,1.639,2118,3.517,2122,1.496,2123,1.639,2124,1.639,2133,1.639,2138,1.389,2139,1.639,2140,1.639,2143,1.639,2157,1.639,2164,1.639,2169,2.507,2170,1.639,2179,1.304,2180,1.639,2181,1.639,2205,1.496,2219,1.639,2227,1.496,2230,1.389,2232,1.496,2239,1.639,2240,1.639,2241,1.639,2250,1.389,2268,1.496,2294,3.005,2295,1.639,2357,1.639,2358,1.639,2359,1.389,2380,1.639,2381,1.639,2395,1.639,2431,1.496,2442,1.496,2518,1.639,2524,1.639,2525,1.639,2565,1.639,2566,1.389,2567,1.639,2569,1.639,2591,1.639,2592,1.856,2593,1.856,2594,6.016,2595,1.639,2596,8.395,2597,7.796,2598,6.016,2599,3.111,2600,3.111,2601,7.616,2602,5.663,2603,8.229,2604,1.856,2605,1.856,2606,1.856,2607,6.016,2608,6.016,2609,1.856,2610,1.856,2611,5.001,2612,1.639,2613,6.775,2614,6.561,2615,1.639,2616,1.639,2617,1.639,2618,1.639,2619,2.747,2620,1.639,2621,4.699,2622,4.016,2623,1.856,2624,1.856,2625,2.747,2626,4.699,2627,3.111,2628,1.639,2629,1.856,2630,3.111,2631,6.016,2632,6.016,2633,1.639,2634,1.856,2635,4.149,2636,4.699,2637,4.149,2638,4.699,2639,2.507,2640,3.111,2641,4.699,2642,3.111,2643,3.111,2644,1.856,2645,3.111,2646,1.856,2647,1.856,2648,4.016,2649,1.856,2650,1.856,2651,3.546,2652,1.639,2653,2.747,2654,2.747,2655,1.639,2656,3.546,2657,1.639,2658,1.856,2659,1.856,2660,1.639,2661,1.639,2662,2.747,2663,1.639,2664,4.621,2665,1.856,2666,1.856]],["title/dependencies.html",[3,3.07,2667,3.678]],["body/dependencies.html",[3,2.989,14,0.009,31,0.735,33,3.121,58,3.876,63,3.44,67,3.121,91,0.005,92,0.007,93,0.005,203,2.871,205,4.574,206,4.574,211,4.574,222,4.574,223,4.574,299,2.572,317,3.638,348,4.174,350,3.44,376,5.594,377,4.174,411,3.876,565,4.727,567,3.121,785,5.942,787,4.574,788,4.574,818,3.121,1016,3.876,1311,2.989,1364,4.574,1429,4.174,2044,4.574,2668,5.18,2669,7.475,2670,5.18,2671,6.73,2672,5.18,2673,5.18,2674,5.18,2675,5.18,2676,5.18,2677,5.18,2678,6.73,2679,6.73,2680,5.18,2681,5.18,2682,5.18,2683,5.18,2684,5.18,2685,6.73,2686,6.73,2687,5.18,2688,5.18,2689,5.18,2690,5.18,2691,5.18,2692,5.18,2693,5.18,2694,5.18,2695,5.18,2696,5.18,2697,5.18,2698,5.18,2699,5.18,2700,5.18,2701,5.18,2702,5.18,2703,5.18,2704,5.18,2705,5.18,2706,5.18,2707,5.18,2708,5.18,2709,4.574,2710,5.18,2711,5.18,2712,5.18,2713,5.18,2714,4.574,2715,5.18]],["title/miscellaneous/enumerations.html",[2716,2.217,2717,4.697]],["body/miscellaneous/enumerations.html",[14,0.008,91,0.006,92,0.008,93,0.006,100,0.199,292,1.32,618,1.663,834,3.828,836,3.185,884,3.537,896,4.658,903,5.345,904,5.345,905,5.511,907,6.928,924,5.869,926,3.653,929,5.856,931,4.187,932,5.856,1464,5.856,1610,5.856,1888,5.345,2716,3.997,2717,5.856,2718,5.856,2719,6.632]],["title/miscellaneous/functions.html",[2255,3.981,2716,2.217]],["body/miscellaneous/functions.html",[6,4.95,14,0.008,91,0.007,92,0.008,93,0.007,100,0.212,2255,5.287,2628,6.239,2716,4.258,2720,7.065]],["title/index.html",[100,0.11,2721,3.248,2722,3.248]],["body/index.html",[14,0.007,17,2.734,18,0.095,20,0.074,23,0.52,25,5.755,50,3.13,51,3.275,59,4.355,63,3.275,91,0.005,92,0.006,93,0.005,269,1.389,294,2.847,379,1.793,382,1.731,416,2.474,419,3.114,450,3.975,477,2.223,509,2.537,522,3.691,552,3.975,567,2.972,580,2.847,583,2.972,584,5.127,585,5.454,595,2.537,618,2.024,622,2.156,624,4.114,626,2.631,627,2.734,679,3.691,685,1.823,724,2.847,738,2.972,764,2.972,765,3.275,921,2.45,940,3.691,943,3.13,947,3.114,978,2.45,1037,3.691,1042,4.355,1061,4.355,1124,3.691,1169,3.975,1170,3.975,1171,3.975,1195,3.691,1202,3.691,1267,4.328,1304,4.355,1335,3.464,1343,3.975,1549,4.328,1625,4.355,1692,3.691,1730,6.258,1800,5.252,1864,3.975,1888,3.975,1891,3.691,2709,4.355,2714,4.355,2723,7.765,2724,4.932,2725,4.932,2726,4.932,2727,4.932,2728,4.932,2729,4.932,2730,4.932,2731,4.932,2732,6.517,2733,6.517,2734,4.932,2735,4.932,2736,4.932,2737,4.932,2738,4.932,2739,4.932,2740,4.932,2741,4.932,2742,4.932,2743,4.932,2744,4.932,2745,4.932,2746,4.932,2747,4.932,2748,6.517,2749,4.932,2750,4.932,2751,4.932,2752,4.932,2753,4.932,2754,4.932,2755,4.932,2756,4.932,2757,4.932,2758,4.932,2759,4.932,2760,4.932,2761,4.932,2762,4.932,2763,4.932,2764,4.932,2765,5.882,2766,4.932,2767,4.932,2768,4.355,2769,6.517,2770,4.932,2771,4.932,2772,4.932,2773,4.932]],["title/license.html",[2721,3.248,2722,3.248,2765,2.964]],["body/license.html",[14,0.007,17,3.097,91,0.005,92,0.007,93,0.005,299,2.775,490,3.527,493,4.934,535,3.184,793,4.503,1038,4.257,1210,4.181,1460,4.181,1710,4.503,1891,4.181,2119,4.181,2765,4.503,2768,4.934,2774,7.747,2775,5.588,2776,5.588,2777,5.588,2778,7.065,2779,5.588,2780,5.588,2781,5.588,2782,5.588,2783,5.588,2784,5.588,2785,7.065,2786,8.893,2787,5.588,2788,7.747,2789,5.588,2790,7.065,2791,5.588,2792,5.588,2793,5.588,2794,5.588,2795,5.588,2796,5.588,2797,5.588,2798,5.588,2799,5.588,2800,7.065,2801,5.588,2802,5.588,2803,5.588,2804,5.588,2805,7.065,2806,5.588,2807,5.588,2808,5.588,2809,5.588,2810,5.588,2811,5.588,2812,5.588,2813,5.588,2814,5.588,2815,5.588,2816,5.588,2817,5.588,2818,5.588,2819,5.588,2820,5.588,2821,5.588,2822,5.588,2823,5.588,2824,5.588,2825,5.588,2826,5.588,2827,5.588,2828,5.588,2829,5.588,2830,4.934,2831,5.588,2832,4.934,2833,5.588]],["title/modules.html",[2,3.354]],["body/modules.html",[1,3.928,2,3.612,14,0.008,91,0.006,92,0.008,93,0.006,184,4.877,188,4.578,189,4.578,190,4.578,191,4.328,709,4.115,1800,5.253,2834,8.901,2835,8.901,2836,8.901,2837,8.995,2838,6.518]],["title/overview.html",[2839,5.343]],["body/overview.html",[0,1.525,1,4.852,2,1.818,3,1.893,4,2.07,5,2.07,6,1.893,7,1.976,8,1.976,9,2.896,10,2.896,11,2.896,12,3.744,13,4.091,14,0.009,15,3.087,16,1.629,17,1.818,28,0.861,91,0.003,92,0.005,93,0.003,95,0.653,159,1.749,176,3.905,184,6.454,185,2.896,186,2.896,187,2.896,188,6.31,189,6.201,190,6.419,191,5.728,192,4.106,308,4.537,336,2.896,337,2.896,339,2.896,340,5,341,4.663,342,4.663,343,3.905,344,4.106,345,4.106,387,4.753,563,3.882,569,3.523,666,3.69,709,4.375,713,3.882,867,1.629,882,3.69,926,1.434,931,2.07,935,3.69,954,3.374,1032,3.374,1092,3.69,1205,5,1236,2.896,1237,2.896,1238,2.896,1239,2.896,1240,3.882,1241,3.882,1397,3.69,1415,2.454,1533,3.882,1592,3.69,1745,3.523,1776,3.882,1784,3.882,1806,5,1822,3.69,1836,3.523,1883,2.896,1884,2.896,1886,2.896,2221,2.896,2222,2.896,2224,2.896,2639,2.643,2839,2.896,2840,2.896,2841,3.279,2842,3.279]],["title/miscellaneous/typealiases.html",[2716,2.217,2843,5.319]],["body/miscellaneous/typealiases.html",[14,0.009,91,0.006,92,0.007,93,0.006,100,0.183,108,0.296,479,4.049,598,4.563,863,4.049,924,4.283,926,2.666,931,3.85,1328,3.252,1651,3.519,2118,4.563,2153,4.049,2167,5.384,2491,6.586,2633,5.384,2635,5.384,2637,5.384,2639,4.914,2716,3.675,2840,5.384,2844,6.098,2845,6.098,2846,7.459,2847,6.098,2848,6.098,2849,6.098,2850,6.098,2851,6.098,2852,6.098,2853,6.098,2854,6.098,2855,6.098,2856,6.098]],["title/miscellaneous/variables.html",[83,4.287,2716,2.217]],["body/miscellaneous/variables.html",[13,2.677,14,0.009,20,0.03,22,0.436,23,0.211,24,3.418,29,2.672,32,1.33,39,5.965,42,1.769,50,0.962,53,6.768,63,1.33,70,1.615,77,1.33,82,1.615,83,1.615,85,1.207,91,0.002,92,0.003,93,0.002,100,0.148,108,0.413,140,1.483,141,0.691,148,2.293,171,0.48,245,3.745,246,0.502,249,2.979,269,0.564,272,1.494,274,1.615,292,0.844,296,1.407,316,0.539,318,0.621,322,1.499,351,2.481,357,1.854,360,1.457,366,2.927,372,2.459,373,1.749,379,1.356,383,2.677,385,1.705,403,0.761,421,1.8,431,1.499,447,2.97,523,1.913,528,2.557,571,3.442,579,1.265,583,1.207,584,1.407,585,1.407,595,1.03,602,0.932,603,3.112,604,0.962,605,1.705,618,1.475,619,0.721,622,2.572,623,2.037,624,2.093,625,2.448,626,1.768,627,1.837,628,2.328,629,2.481,630,2.328,631,2.093,634,1.265,644,2.328,645,2.328,646,3.462,647,3.462,648,4.575,649,2.979,650,1.494,651,2.328,652,2.093,653,2.328,654,2.328,655,2.481,656,2.481,657,2.481,658,2.481,659,2.481,660,2.481,661,1.911,662,2.093,663,2.093,664,2.093,665,2.181,672,1.769,681,1.407,685,0.741,687,1.069,689,1.367,700,1.11,711,2.672,724,1.156,738,3.291,822,1.11,834,1.156,836,1.592,887,1.265,938,1.069,943,2.367,948,3.173,949,1.207,964,2.979,965,2.979,1006,2.672,1016,2.481,1021,1.769,1025,1.646,1053,1.265,1060,1.837,1137,1.499,1153,1.615,1154,1.33,1155,1.615,1156,1.407,1245,2.672,1255,5.018,1259,2.816,1291,1.33,1307,3.273,1328,2.629,1343,1.615,1344,2.927,1438,1.769,1485,1.33,1536,2.093,1543,2.328,1636,1.156,1651,2.845,1725,1.769,1741,4.352,1795,1.265,1814,2.672,1827,2.672,1882,1.769,1907,2.672,1909,3.418,1911,2.672,1956,1.769,1959,3.173,2034,1.499,2113,1.499,2153,3.273,2154,2.481,2155,1.615,2156,1.499,2205,2.672,2220,1.769,2227,3.418,2232,2.672,2250,3.173,2431,2.672,2433,1.769,2442,3.418,2595,1.769,2611,1.769,2612,4.821,2615,1.769,2616,2.927,2617,1.769,2618,1.769,2619,4.352,2620,1.769,2625,1.769,2651,1.769,2652,4.352,2653,1.769,2654,3.745,2655,1.769,2656,5.195,2657,1.769,2660,1.769,2661,2.927,2662,1.769,2663,1.769,2664,5.195,2716,1.207,2718,5.195,2830,1.769,2832,4.352,2857,3.315,2858,2.003,2859,3.315,2860,2.003,2861,4.241,2862,4.241,2863,3.315,2864,2.003,2865,2.003,2866,2.003,2867,2.003,2868,2.003,2869,2.003,2870,2.003,2871,2.003,2872,2.003,2873,2.003,2874,2.003,2875,2.003,2876,2.003,2877,2.003,2878,7.297,2879,5.46,2880,7.141,2881,4.241,2882,4.929,2883,2.003,2884,2.003,2885,2.003,2886,2.003,2887,2.003,2888,2.003,2889,2.003,2890,3.315,2891,3.315,2892,2.003,2893,2.003,2894,4.929,2895,2.003,2896,2.003,2897,2.003,2898,4.241,2899,4.241,2900,2.003,2901,2.003,2902,2.003,2903,2.003,2904,2.003,2905,3.315,2906,3.315,2907,2.003,2908,2.003,2909,2.003,2910,4.929,2911,2.003,2912,2.003,2913,2.003,2914,2.003,2915,2.003,2916,2.003,2917,2.003,2918,2.003,2919,2.003,2920,2.003,2921,2.003]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1328,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.1.12",{"_index":2710,"title":{},"body":{"dependencies.html":{}}}],["0.19.2",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2670,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2705,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2603,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2594,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2601,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2602,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2604,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2622,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2624,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":926,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["1.0.0",{"_index":2707,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2692,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":2702,"title":{},"body":{"dependencies.html":{}}}],["1.22.0",{"_index":2699,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2690,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2598,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2630,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2614,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2608,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2632,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2621,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2638,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2636,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"miscellaneous/typealiases.html":{}}}],["10/10",{"_index":2623,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2597,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2633,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["11.13.4",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2639,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["12875",{"_index":1996,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["13",{"_index":2849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["14",{"_index":2635,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["15",{"_index":2850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["16",{"_index":2637,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["17",{"_index":2851,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["17.1.0",{"_index":2668,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["19",{"_index":2853,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1].doy",{"_index":2497,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["1st",{"_index":2445,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["2",{"_index":1651,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":2689,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":2712,"title":{},"body":{"dependencies.html":{}}}],["2.635.0",{"_index":2682,"title":{},"body":{"dependencies.html":{}}}],["2.7.4",{"_index":2704,"title":{},"body":{"dependencies.html":{}}}],["2.9.0",{"_index":2701,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2644,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2118,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["2020",{"_index":2119,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"license.html":{}}}],["2021",{"_index":2121,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["21",{"_index":2854,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["22",{"_index":2855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["23",{"_index":2856,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["24",{"_index":2153,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":2631,"title":{},"body":{"coverage.html":{}}}],["2dsphere",{"_index":1919,"title":{},"body":{"modules/RentalModule.html":{}}}],["2lwg7lqlny41.magb5z6sww.dcq0vx7b",{"_index":1281,"title":{},"body":{"injectables/ImagesService.html":{}}}],["2nd",{"_index":2500,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["3",{"_index":924,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["3.0.0",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2687,"title":{},"body":{"dependencies.html":{}}}],["3.7.2",{"_index":2715,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2610,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["302",{"_index":2216,"title":{},"body":{"controllers/UserController.html":{}}}],["302)@post('delete",{"_index":2192,"title":{},"body":{"controllers/UserController.html":{}}}],["33",{"_index":2607,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2842,"title":{},"body":{"overview.html":{}}}],["3600000",{"_index":1071,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["4",{"_index":2167,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{},"miscellaneous/typealiases.html":{}}}],["4.0.0",{"_index":2706,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2696,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":2841,"title":{},"body":{"overview.html":{}}}],["4ol_yacp0lkuu9pn2j2iu_uy5ldrkwodyjlqe2zo6ia",{"_index":2869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":931,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["5.0.0",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["5.9.1",{"_index":2700,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":2600,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2613,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":802,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["6",{"_index":2848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["6.0.0",{"_index":2669,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":2672,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2713,"title":{},"body":{"dependencies.html":{}}}],["6.4.16",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2627,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1347,"title":{},"body":{"injectables/ImagesService.html":{}}}],["66",{"_index":2626,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2840,"title":{},"body":{"overview.html":{},"miscellaneous/typealiases.html":{}}}],["7.0.0",{"_index":2671,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":2606,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2609,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":863,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"miscellaneous/typealiases.html":{}}}],["8.2.0",{"_index":2694,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":2698,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2629,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2599,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2605,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":598,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["90",{"_index":2658,"title":{},"body":{"coverage.html":{}}}],["9706+forestdale+ct+riverview+33578",{"_index":2868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":1148,"title":{},"body":{"classes/ImageDto.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"interfaces/UserPropertyInterface.html":{}}}],["a.doy",{"_index":2102,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["a.map((item",{"_index":2919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":84,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["above",{"_index":2804,"title":{},"body":{"license.html":{}}}],["accepts",{"_index":1357,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["access",{"_index":64,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/TestRentalService.html":{}}}],["access_key_id",{"_index":65,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["accessing",{"_index":968,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["accesskeyid",{"_index":2045,"title":{},"body":{"injectables/S3Provider.html":{}}}],["accessors",{"_index":101,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["accidentally",{"_index":1599,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["account",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["acl",{"_index":587,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["action",{"_index":2827,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2543,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["actually",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["ad",{"_index":1396,"title":{},"body":{"classes/LocCreateRentalDto.html":{}}}],["add",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{},"classes/HttpErrorFilter.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["added",{"_index":1091,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RequestCoordinatesDto.html":{}}}],["address",{"_index":622,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["address.replace(/\\s+/g",{"_index":1023,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["addunavailabilityid",{"_index":1604,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["advance",{"_index":1721,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{}}}],["again",{"_index":2590,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["against",{"_index":1359,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["age=${this.appconfig.jwt_exp_time",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["aggregator",{"_index":2165,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["ahead",{"_index":1609,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["aliases",{"_index":2844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":79,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GeoUrlApiPipe.html":{}}}],["allowed",{"_index":1041,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["allowing",{"_index":1619,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["allowunkown",{"_index":74,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["already",{"_index":1595,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["alternative",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["amount",{"_index":1946,"title":{},"body":{"injectables/RentalService.html":{}}}],["and/or",{"_index":2798,"title":{},"body":{"license.html":{}}}],["another",{"_index":1063,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["api",{"_index":51,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"index.html":{}}}],["api**](https://developer.here.com/documentation/geocoding",{"_index":977,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["api.pipe",{"_index":1809,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["api.pipe.ts",{"_index":937,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"coverage.html":{}}}],["api.pipe.ts:12",{"_index":955,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:19",{"_index":957,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:31",{"_index":966,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.pipe.ts:46",{"_index":969,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["api.util",{"_index":976,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["api.util.ts",{"_index":993,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{}}}],["api.util.ts:25",{"_index":1013,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["api.util.ts:43",{"_index":1007,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["api/dev_guide/index.html",{"_index":979,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["apikey",{"_index":965,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apikey):promise",{"_index":1022,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["app",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["app.controller",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["app_filter",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["appconfigservice",{"_index":12,"title":{"injectables/AppConfigService.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigservice(new",{"_index":1846,"title":{},"body":{"controllers/RentalController.html":{}}}],["appconfigservice.remote_db",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":158,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1730,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["applied",{"_index":1760,"title":{},"body":{"controllers/RentalController.html":{}}}],["applies",{"_index":1894,"title":{},"body":{"modules/RentalModule.html":{}}}],["apply",{"_index":2375,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["apply(validateemailmiddleware",{"_index":2237,"title":{},"body":{"modules/UserModule.html":{}}}],["apply(validateupdateunavailabilitymiddleware",{"_index":1922,"title":{},"body":{"modules/RentalModule.html":{}}}],["applying",{"_index":1904,"title":{},"body":{"modules/RentalModule.html":{}}}],["appmodule",{"_index":184,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1125,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["appservice",{"_index":192,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":2737,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1306,"title":{},"body":{"injectables/ImagesService.html":{}}}],["argumenthost",{"_index":1129,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["arguments",{"_index":1126,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["argumentshost",{"_index":813,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["arising",{"_index":2831,"title":{},"body":{"license.html":{}}}],["array",{"_index":1307,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["array's",{"_index":2058,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["array('upload",{"_index":597,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["arrays",{"_index":1646,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["ascending",{"_index":2060,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["aspect",{"_index":1461,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["assign",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["associate",{"_index":1308,"title":{},"body":{"injectables/ImagesService.html":{}}}],["associated",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["async",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["atlas",{"_index":2743,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1290,"title":{},"body":{"injectables/ImagesService.html":{}}}],["attached",{"_index":1933,"title":{},"body":{"injectables/RentalService.html":{}}}],["auth",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailService.html":{},"interfaces/TransporterInterface.html":{}}}],["auth.guard",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":1368,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":1410,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/controller/auth.controller",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/gaurds/jwt",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["auth/gaurds/logged",{"_index":177,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["auth/interface/jwt",{"_index":874,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"injectables/ImagesService.html":{}}}],["auth/util/extract",{"_index":2234,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["auth/util/verify",{"_index":2235,"title":{},"body":{"modules/UserModule.html":{}}}],["authcontroller",{"_index":197,"title":{"controllers/AuthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication=${token",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":1369,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1371,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1401,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":188,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":68,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/ExtractKeyValueUtil.html":{}}}],["authorized",{"_index":2734,"title":{},"body":{"index.html":{}}}],["authors",{"_index":2820,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":308,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1718,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["available",{"_index":1800,"title":{},"body":{"controllers/RentalController.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":63,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/S3Provider.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["aws_s3_bucket_profile",{"_index":72,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["aws_s3_bucket_rentals",{"_index":71,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["axios",{"_index":1016,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["axios.default.get",{"_index":1021,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":2078,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["b).count('hours",{"_index":2452,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["b.doy",{"_index":2103,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["back",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{}}}],["badrequestexception",{"_index":1363,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":1366,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["base",{"_index":912,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.end",{"_index":2489,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.length('days",{"_index":916,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.length('months",{"_index":914,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.length('weeks",{"_index":915,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["base.rentalid",{"_index":2483,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.start",{"_index":2488,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.title",{"_index":2499,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["base.year",{"_index":2493,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["basic",{"_index":1455,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{}}}],["bcrypt",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"dependencies.html":{}}}],["bcrypt.compare(data.newpassword",{"_index":2584,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["bcrypt.compare(value.password",{"_index":546,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["bcrypt.hash(data.newpassword",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.resetpass",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(value.password",{"_index":544,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["bcrypthashpipe",{"_index":529,"title":{"injectables/BcryptHashPipe.html":{}},"body":{"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["bcrypthashpipe())@usepipes(new",{"_index":2187,"title":{},"body":{"controllers/UserController.html":{}}}],["before",{"_index":1025,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":1065,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["begins",{"_index":1074,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["behavior",{"_index":1456,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["belong",{"_index":1261,"title":{},"body":{"injectables/ImagesService.html":{}}}],["belongs",{"_index":1301,"title":{},"body":{"injectables/ImagesService.html":{}}}],["below",{"_index":2113,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["bike",{"_index":1714,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["bind",{"_index":1451,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["block",{"_index":1602,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["blocks",{"_index":1601,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["body",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"classes/ResetPasswordDto.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":634,"title":{},"body":{"classes/CreateRentalDto.html":{},"guards/LoggedOutGaurd.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"interfaces/TransporterInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":1230,"title":{},"body":{"controllers/ImagesController.html":{}}}],["break",{"_index":2156,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":2837,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2834,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":583,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":1167,"title":{},"body":{"interfaces/ImageUploadInterface.html":{}}}],["c",{"_index":2775,"title":{},"body":{"license.html":{}}}],["cachce",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["cache",{"_index":2685,"title":{},"body":{"dependencies.html":{}}}],["cache_ttl",{"_index":62,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["calculate",{"_index":2536,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["calculaterange",{"_index":2528,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["calculating",{"_index":1467,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calendar",{"_index":2746,"title":{},"body":{"index.html":{}}}],["called",{"_index":2420,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["callhandler",{"_index":1471,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calls",{"_index":1409,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{}}}],["canactivate",{"_index":1419,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["canactivate(context",{"_index":1423,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["canales",{"_index":2763,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":1447,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["car",{"_index":585,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["car/wiki",{"_index":2773,"title":{},"body":{"index.html":{}}}],["case",{"_index":842,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["catch(err",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/EmailService.html":{},"injectables/UserService.html":{}}}],["catch(error",{"_index":811,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch(exception",{"_index":1120,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["catch(httpexception",{"_index":1123,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["catches",{"_index":801,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catching",{"_index":1115,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["category",{"_index":579,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"interfaces/ImageInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["cause",{"_index":2416,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["cb",{"_index":591,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["cb(null",{"_index":592,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["change",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["changepassword",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changepassword(@req",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(data",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(req",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":270,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["charge",{"_index":2782,"title":{},"body":{"license.html":{}}}],["check",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["check.length",{"_index":2386,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["checkdeadlist",{"_index":1420,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["checkdeadlist(req",{"_index":1427,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["checkforoverlap",{"_index":1927,"title":{},"body":{"injectables/RentalService.html":{}}}],["checkleapyear",{"_index":2400,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["checkout",{"_index":1892,"title":{},"body":{"modules/RentalModule.html":{}}}],["checkpasswordtypodto",{"_index":558,"title":{"classes/CheckPasswordTypoDto.html":{}},"body":{"classes/CheckPasswordTypoDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["checks",{"_index":1615,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["checktypos",{"_index":2571,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["checktypos(data",{"_index":2574,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["christmas",{"_index":2155,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["ciphers",{"_index":2137,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["city",{"_index":1725,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"miscellaneous/variables.html":{}}}],["citympg",{"_index":646,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":2823,"title":{},"body":{"license.html":{}}}],["class",{"_index":90,"title":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["classes",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/LoginUserDto.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"overview.html":{}}}],["client",{"_index":809,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["client/build",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster",{"_index":2744,"title":{},"body":{"index.html":{}}}],["cluster_appconfigmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appconfigmodule_exports",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appconfigmodule_providers",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_imagesmodule",{"_index":1236,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_exports",{"_index":1239,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_imports",{"_index":1237,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_providers",{"_index":1238,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_rentalmodule",{"_index":1883,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_rentalmodule_exports",{"_index":1886,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_rentalmodule_imports",{"_index":1885,"title":{},"body":{"modules/RentalModule.html":{}}}],["cluster_rentalmodule_providers",{"_index":1884,"title":{},"body":{"modules/RentalModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2221,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2222,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2223,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2224,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collection",{"_index":2753,"title":{},"body":{"index.html":{}}}],["color",{"_index":652,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["combine",{"_index":1974,"title":{},"body":{"injectables/RentalService.html":{}}}],["comes",{"_index":1942,"title":{},"body":{"injectables/RentalService.html":{}}}],["common",{"_index":1547,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["common/const",{"_index":1207,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["common/filters/error.filters",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["common/filters/http",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interceptors/logging",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["common/pipes/joi",{"_index":1812,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["common/routes",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["common/util/positive",{"_index":2303,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["common/util/to",{"_index":2441,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["common/util/typeof",{"_index":2304,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["community",{"_index":1731,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["compare",{"_index":2458,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["complete",{"_index":996,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["completely",{"_index":1457,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["conataining",{"_index":2434,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["conditions",{"_index":1460,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{},"classes/UnavailabilityQueryDto.html":{},"license.html":{}}}],["config/configuration.module",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/UserModule.html":{}}}],["config/configuration.service",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{}}}],["configmodule",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/RentalModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":36,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configservice",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configuration.service",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["configure",{"_index":1895,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["configure(consumer",{"_index":1896,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["confirm",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PositiveNumber.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["confirm_password",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmpass",{"_index":2032,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["confirmpassword",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{}}}],["congruence",{"_index":2427,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["connection",{"_index":2832,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["connection.model('unavailability",{"_index":2920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":2921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('change",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('create",{"_index":2272,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('delete",{"_index":727,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/UserService.html":{}}}],["console.log('find",{"_index":2275,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('hello",{"_index":1387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('location",{"_index":1024,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log('redirect",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('update",{"_index":2281,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('verified",{"_index":547,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["console.log('you",{"_index":1441,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(`delete",{"_index":752,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(`deleting",{"_index":744,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(`geocoding",{"_index":1019,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log(`here",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`i",{"_index":541,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["console.log(`logged",{"_index":1435,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(`response",{"_index":2873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(await",{"_index":2282,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(check",{"_index":1436,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(data",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["console.log(document",{"_index":2273,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(err",{"_index":755,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["console.log(images[0].location",{"_index":729,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(item.location",{"_index":746,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(json.stringify(request.data",{"_index":2874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].address",{"_index":2877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].position",{"_index":2875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(request.data.items[0].title",{"_index":2876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(key",{"_index":733,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(location",{"_index":1026,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["console.log(params",{"_index":753,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["console.log(payload",{"_index":1389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log(rawauth",{"_index":1433,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["console.log(res",{"_index":2288,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(update",{"_index":2293,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(user",{"_index":1518,"title":{},"body":{"injectables/MulterUploadUtil.html":{},"injectables/UserService.html":{}}}],["console.log(user._doc",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":102,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["constructor(appconfig",{"_index":2041,"title":{},"body":{"injectables/S3Provider.html":{}}}],["constructor(authservice",{"_index":1403,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":103,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(generateduration",{"_index":1869,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["constructor(geourlapiutil",{"_index":953,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["constructor(imagesmodel",{"_index":1273,"title":{},"body":{"injectables/ImagesService.html":{}}}],["constructor(private",{"_index":138,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"controllers/UserController.html":{}}}],["constructor(redisservice",{"_index":1421,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["constructor(rentalmodel",{"_index":1929,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["constructor(s3provider",{"_index":568,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{}}}],["constructor(schema",{"_index":1360,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["constructor(unavailability",{"_index":2530,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["constructor(user",{"_index":2361,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["constructor(usermodel",{"_index":2248,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":1901,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["consumes",{"_index":1889,"title":{},"body":{"modules/RentalModule.html":{}}}],["contains",{"_index":1394,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["content",{"_index":1112,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context",{"_index":1128,"title":{},"body":{"classes/HttpErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.getclass().name}.${context.gethandler().name",{"_index":1488,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context.getrequest",{"_index":1131,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context.getresponse",{"_index":1132,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["context.switchtohttp().getrequest",{"_index":1442,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["continue",{"_index":1440,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["contract",{"_index":2828,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":2759,"title":{},"body":{"index.html":{}}}],["control",{"_index":1105,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["controller",{"_index":157,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('images",{"_index":1209,"title":{},"body":{"controllers/ImagesController.html":{}}}],["controller('rental",{"_index":1842,"title":{},"body":{"controllers/RentalController.html":{}}}],["controller('user",{"_index":2207,"title":{},"body":{"controllers/UserController.html":{}}}],["controller/auth.controller",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/images.controller",{"_index":1244,"title":{},"body":{"modules/ImagesModule.html":{}}}],["controller/rental.controller",{"_index":1906,"title":{},"body":{"modules/RentalModule.html":{}}}],["controller/user.controller",{"_index":2229,"title":{},"body":{"modules/UserModule.html":{}}}],["controllers",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers:[authcontroller",{"_index":374,"title":{},"body":{"modules/AuthModule.html":{}}}],["convert",{"_index":958,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["converttodatetime",{"_index":2401,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["cookie",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["coordinates",{"_index":665,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCoordinatesDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["coordinates.dto",{"_index":1018,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["coordinates.dto.ts",{"_index":1709,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{},"coverage.html":{}}}],["coordinates.dto.ts:10",{"_index":2021,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:6",{"_index":1711,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:7",{"_index":1712,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:8",{"_index":2020,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.dto.ts:9",{"_index":2022,"title":{},"body":{"classes/RequestCoordinatesDto.html":{}}}],["coordinates.pipe",{"_index":1824,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["coordinates.pipe.ts",{"_index":2024,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["coordinates.pipe.ts:10",{"_index":2025,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["coordinates.pipe.ts:17",{"_index":2026,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["coords",{"_index":986,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/LocCreateRentalDto.html":{}}}],["copies",{"_index":2800,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2785,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2774,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1008,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["count",{"_index":1160,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{}}}],["coupled",{"_index":2727,"title":{},"body":{"index.html":{}}}],["course",{"_index":1062,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["coverage",{"_index":2591,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"index.html":{}}}],["createaddress",{"_index":951,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["createaddress(value",{"_index":956,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["created",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{}}}],["creategivennotice",{"_index":1049,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["creategivennotice(starttime",{"_index":1051,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["createmailoptions",{"_index":773,"title":{},"body":{"injectables/EmailService.html":{}}}],["createmailoptions(email",{"_index":776,"title":{},"body":{"injectables/EmailService.html":{}}}],["createmulteruploadutil",{"_index":563,"title":{"injectables/CreateMulterUploadUtil.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["createprofile",{"_index":2182,"title":{},"body":{"controllers/UserController.html":{}}}],["createprofile(@body",{"_index":2210,"title":{},"body":{"controllers/UserController.html":{}}}],["createprofile(user",{"_index":2186,"title":{},"body":{"controllers/UserController.html":{}}}],["createquery",{"_index":1605,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquery1",{"_index":1669,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquery2",{"_index":1675,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["createquerydto",{"_index":599,"title":{"classes/CreateQueryDto.html":{}},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["createrental",{"_index":1762,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["createrental(@body",{"_index":1847,"title":{},"body":{"controllers/RentalController.html":{}}}],["createrental(rental",{"_index":1768,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["createrentaldto",{"_index":613,"title":{"classes/CreateRentalDto.html":{}},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["createrentalquery",{"_index":1928,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["createrentalquery(rental",{"_index":1936,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["createrentalvalidationschema",{"_index":1814,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":1035,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["createupdatedata",{"_index":673,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["createupdaterdtopipe",{"_index":666,"title":{"injectables/CreateUpdaterDtoPipe.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{},"overview.html":{}}}],["createuser",{"_index":2242,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(user",{"_index":2251,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":533,"title":{"injectables/CreateUserDto.html":{}},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["createuserupdate",{"_index":2243,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserupdate(data",{"_index":2253,"title":{},"body":{"injectables/UserService.html":{}}}],["createuservalidation",{"_index":2205,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":1625,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"index.html":{}}}],["credentials",{"_index":1413,"title":{},"body":{"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cross",{"_index":2072,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["crossover",{"_index":2418,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["crypto",{"_index":2691,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"controllers/RentalController.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["currentdatetime",{"_index":2455,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["currently",{"_index":1956,"title":{},"body":{"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["currenttime",{"_index":1036,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["custom",{"_index":807,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["damages",{"_index":2824,"title":{},"body":{"license.html":{}}}],["data",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.confirmpass",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.confirmpassword",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["data.discounts.monthly",{"_index":1558,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.discounts.weekly",{"_index":1561,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.dto",{"_index":686,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["data.dto.ts",{"_index":2170,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{}}}],["data.dto.ts:10",{"_index":2172,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{}}}],["data.dto.ts:6",{"_index":2171,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{}}}],["data.email",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["data.features",{"_index":1972,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.filter",{"_index":1984,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.interface",{"_index":1314,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["data.interface.ts",{"_index":1687,"title":{},"body":{"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"coverage.html":{}}}],["data.newpassword",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["data.oldpassword",{"_index":2585,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["data.password",{"_index":2286,"title":{},"body":{"injectables/UserService.html":{}}}],["data.price",{"_index":1556,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.rentalid",{"_index":1553,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/RentalService.html":{}}}],["data.resetpass",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.resetpasswordtoken",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.specs",{"_index":1971,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.token",{"_index":2276,"title":{},"body":{"injectables/UserService.html":{}}}],["data.unavailabilityid",{"_index":1987,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.updater",{"_index":1985,"title":{},"body":{"injectables/RentalService.html":{}}}],["data.username",{"_index":2290,"title":{},"body":{"injectables/UserService.html":{}}}],["data.util",{"_index":1253,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["data.util.ts",{"_index":1574,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{}}}],["data.util.ts:18",{"_index":1576,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["database",{"_index":55,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RemoveUnavailabilityDto.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["database/database.module",{"_index":1243,"title":{},"body":{"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["database/providers/unavailability",{"_index":1912,"title":{},"body":{"modules/RentalModule.html":{}}}],["database/providers/user",{"_index":2233,"title":{},"body":{"modules/UserModule.html":{}}}],["database_connection",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconnection",{"_index":2612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":709,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseprovider",{"_index":711,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":1485,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"classes/RawSearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/UserInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["date(value.rentalendtime).toisostring",{"_index":1079,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["date(value.rentalstarttime).toisostring",{"_index":1078,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["date.now",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{}}}],["date.now().tostring",{"_index":1650,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dates",{"_index":1047,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["datetime",{"_index":817,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.fromiso",{"_index":1077,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["datetime.fromobject",{"_index":2444,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.isinleapyear",{"_index":2410,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.isinleapyear()*](https://moment.github.io/luxon/docs/class/src/datetime.js~datetime.html#instance",{"_index":2476,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetime.local",{"_index":825,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["datetimes",{"_index":1076,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["day",{"_index":834,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["days",{"_index":905,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["db",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["dead",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["deal",{"_index":2787,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2833,"title":{},"body":{"license.html":{}}}],["december",{"_index":2117,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{}}}],["decemeber",{"_index":2399,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":571,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":46,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["default_price",{"_index":1882,"title":{},"body":{"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":104,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["defining",{"_index":1903,"title":{},"body":{"modules/RentalModule.html":{}}}],["delete",{"_index":725,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteallimages",{"_index":1269,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleteallprofileimages",{"_index":1172,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallprofileimages(@req",{"_index":1235,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallprofileimages(req",{"_index":1181,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages",{"_index":1173,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages(@query",{"_index":1233,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleteallrentalimages(params",{"_index":1184,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleted",{"_index":1989,"title":{},"body":{"injectables/RentalService.html":{}}}],["deleteimages",{"_index":1270,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleteprofile",{"_index":2183,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprofile(@body",{"_index":2217,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteprofile(data",{"_index":2190,"title":{},"body":{"controllers/UserController.html":{}}}],["deleterentalimages",{"_index":1174,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleterentalimages(@body",{"_index":1231,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deleterentalimages(images",{"_index":1186,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deletes3image",{"_index":717,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["deletes3images",{"_index":718,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["deletes3imagesutil",{"_index":713,"title":{"injectables/DeleteS3ImagesUtil.html":{}},"body":{"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["deleteuser",{"_index":2244,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(data",{"_index":2256,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserdto",{"_index":759,"title":{"injectables/DeleteUserDto.html":{}},"body":{"injectables/DeleteUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["delte",{"_index":1751,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{}}}],["demonstration",{"_index":2724,"title":{},"body":{"index.html":{}}}],["demonstrative",{"_index":2732,"title":{},"body":{"index.html":{}}}],["deny",{"_index":1437,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1459,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["deployed",{"_index":2757,"title":{},"body":{"index.html":{}}}],["description",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["detail",{"_index":2308,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["detailed",{"_index":2770,"title":{},"body":{"index.html":{}}}],["details",{"_index":765,"title":{},"body":{"classes/EditDetailsDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"index.html":{}}}],["details')@usepipes(new",{"_index":1775,"title":{},"body":{"controllers/RentalController.html":{}}}],["details.dto",{"_index":1833,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["details.dto.ts",{"_index":763,"title":{},"body":{"classes/EditDetailsDto.html":{},"coverage.html":{}}}],["details.dto.ts:23",{"_index":767,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.dto.ts:7",{"_index":768,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.dto.ts:8",{"_index":769,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["details.pipe",{"_index":1831,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["details.pipe.ts",{"_index":2295,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["details.pipe.ts:12",{"_index":2301,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:13",{"_index":2299,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:23",{"_index":2302,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["details.pipe.ts:99",{"_index":2300,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["developer",{"_index":2738,"title":{},"body":{"index.html":{}}}],["device",{"_index":2741,"title":{},"body":{"index.html":{}}}],["digits",{"_index":1432,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["direct",{"_index":1143,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["discount",{"_index":1723,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["discounts",{"_index":662,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["dispatching",{"_index":1465,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["distilldto",{"_index":674,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["distribute",{"_index":2796,"title":{},"body":{"license.html":{}}}],["diy",{"_index":2463,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["doc",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RentalService.html":{},"injectables/UserService.html":{}}}],["doc.email",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["docs",{"_index":2526,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["document",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["document.password",{"_index":2271,"title":{},"body":{"injectables/UserService.html":{}}}],["document.save",{"_index":1965,"title":{},"body":{"injectables/RentalService.html":{},"injectables/UserService.html":{}}}],["documentation",{"_index":1891,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documents",{"_index":1577,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{}}}],["don't",{"_index":78,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["dotenv",{"_index":2693,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1343,"title":{},"body":{"injectables/ImagesService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["downloading",{"_index":2751,"title":{},"body":{"index.html":{}}}],["doy",{"_index":1636,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["dt",{"_index":2459,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto",{"_index":974,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["dto.pipe",{"_index":1839,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["dto.pipe.ts",{"_index":669,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"coverage.html":{}}}],["dto.pipe.ts:15",{"_index":680,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.pipe.ts:30",{"_index":678,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.pipe.ts:58",{"_index":676,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["dto.ts",{"_index":1088,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":1097,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:11",{"_index":1096,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:12",{"_index":1094,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:13",{"_index":1095,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:16",{"_index":1740,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:32",{"_index":1738,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:37",{"_index":1733,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:38",{"_index":1739,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:43",{"_index":1737,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:50",{"_index":1735,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:55",{"_index":1736,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:56",{"_index":1734,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["dto.ts:8",{"_index":1093,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto.ts:9",{"_index":1098,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["dto/change",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/check",{"_index":2582,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["dto/create",{"_index":539,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["dto/createrental/create",{"_index":1502,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/createrental/loc",{"_index":971,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/MapNewRentalPipe.html":{}}}],["dto/createrental/raw",{"_index":973,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["dto/delete",{"_index":2202,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/details/edit",{"_index":1832,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["dto/find",{"_index":2203,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/forgot",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/image",{"_index":1315,"title":{},"body":{"injectables/ImagesService.html":{}}}],["dto/image.dto",{"_index":1208,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["dto/pricing/pricing.dto",{"_index":1550,"title":{},"body":{"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/reset",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/searchrental/given",{"_index":1066,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{}}}],["dto/searchrental/process",{"_index":909,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["dto/searchrental/raw",{"_index":1067,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["dto/searchrental/request",{"_index":1874,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["dto/searchrental/search",{"_index":1821,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["dto/unavailability/remove/remove",{"_index":1841,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/create",{"_index":1632,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/processed",{"_index":1628,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/unavailability/schedule/raw",{"_index":2080,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/sorted",{"_index":2082,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/unavailability",{"_index":1630,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["dto/unavailability/schedule/validate",{"_index":2083,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto/unavailability/unavailability.dto",{"_index":2079,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["dto/unavailability/update/update",{"_index":683,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["dto/unavailability/update/validate",{"_index":684,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["dto/unavailability/validated",{"_index":1626,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["dto/update",{"_index":1840,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/verify",{"_index":2581,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["duration",{"_index":884,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["duration.pipe",{"_index":1818,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["duration.pipe.ts",{"_index":1868,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["duration.pipe.ts:19",{"_index":1872,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["duration.pipe.ts:9",{"_index":1870,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["e.g",{"_index":949,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":1291,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1610,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["east",{"_index":1003,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["ed",{"_index":2523,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["edit",{"_index":764,"title":{},"body":{"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{},"index.html":{}}}],["editdetails",{"_index":1763,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["editdetails(@body",{"_index":1856,"title":{},"body":{"controllers/RentalController.html":{}}}],["editdetails(data",{"_index":1940,"title":{},"body":{"injectables/RentalService.html":{}}}],["editdetails(editdetailsdto",{"_index":1773,"title":{},"body":{"controllers/RentalController.html":{}}}],["editdetailsdto",{"_index":761,"title":{"classes/EditDetailsDto.html":{}},"body":{"classes/EditDetailsDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["editdetailsdto):promise",{"_index":2355,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["editpricing",{"_index":1764,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["editpricing(@body",{"_index":1854,"title":{},"body":{"controllers/RentalController.html":{}}}],["editpricing(data",{"_index":1943,"title":{},"body":{"injectables/RentalService.html":{}}}],["editpricing(pricingdto",{"_index":1778,"title":{},"body":{"controllers/RentalController.html":{}}}],["efficient",{"_index":1266,"title":{},"body":{"injectables/ImagesService.html":{}}}],["electric",{"_index":2880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":2091,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["email",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"miscellaneous/variables.html":{}}}],["email.middleware",{"_index":2231,"title":{},"body":{"modules/UserModule.html":{}}}],["email.middleware.ts",{"_index":2358,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["email.middleware.ts:14",{"_index":2362,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.middleware.ts:22",{"_index":2366,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.middleware.ts:27",{"_index":2364,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.util",{"_index":2369,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["email.util.ts",{"_index":2381,"title":{},"body":{"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["email.util.ts:4",{"_index":2382,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["email.util.ts:7",{"_index":2384,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["email/email.service",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["emailservice",{"_index":340,"title":{"injectables/EmailService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["enclose",{"_index":2166,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["enclosed",{"_index":1641,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["end",{"_index":602,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1323,"title":{},"body":{"injectables/ImagesService.html":{}}}],["endtime",{"_index":894,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{}}}],["endtime):promise",{"_index":911,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["endtime.diff(starttime).toobject().milliseconds",{"_index":1075,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["enforce",{"_index":76,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["enter",{"_index":2589,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["entered",{"_index":2576,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["enters",{"_index":2424,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["entire",{"_index":1620,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["enum",{"_index":896,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"miscellaneous/enumerations.html":{}}}],["enum**](https://www.typescriptlang.org/docs/handbook/enums.html",{"_index":920,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalDurationPipe.html":{}}}],["enum.util",{"_index":1820,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{}}}],["enum.util.ts",{"_index":885,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"coverage.html":{}}}],["enum.util.ts:16",{"_index":899,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["enum.util.ts:36",{"_index":895,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["enumerations",{"_index":2717,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":888,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["env",{"_index":82,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":2754,"title":{},"body":{"index.html":{}}}],["equal",{"_index":2465,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["err",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["err.message",{"_index":1220,"title":{},"body":{"controllers/ImagesController.html":{}}}],["err.stack",{"_index":736,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["error",{"_index":88,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('a",{"_index":2387,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["error('bcrypt",{"_index":549,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["error('cannot",{"_index":864,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["error('citympg",{"_index":2321,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('color",{"_index":2343,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('description",{"_index":2334,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('discounts",{"_index":1559,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["error('error",{"_index":2586,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["error('failed",{"_index":1591,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["error('features",{"_index":2354,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('fuel",{"_index":2328,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('gasgrade",{"_index":2331,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('hwympg",{"_index":2325,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('invalid",{"_index":1412,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('minimum",{"_index":2555,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["error('model",{"_index":2337,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('no",{"_index":1969,"title":{},"body":{"injectables/RentalService.html":{}}}],["error('numdoors",{"_index":2351,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('numofseats",{"_index":2347,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('odometer",{"_index":2313,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('request",{"_index":2484,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('start",{"_index":2487,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('style",{"_index":2340,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('the",{"_index":2471,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('there",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["error('this",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RentalService.html":{}}}],["error('transmission",{"_index":2316,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["error('years",{"_index":2086,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["error('you",{"_index":1439,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["error(err",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["error.filter",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["error.filter.ts",{"_index":1100,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["error.filter.ts:23",{"_index":1121,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["error.getstatus",{"_index":828,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.message",{"_index":830,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.name",{"_index":831,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["error.stack",{"_index":840,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["errorfilter",{"_index":215,"title":{"classes/ErrorFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorFilter.html":{},"coverage.html":{}}}],["errorresponse",{"_index":1135,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["etag",{"_index":1153,"title":{},"body":{"interfaces/ImageInterface.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["etc",{"_index":1720,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["even",{"_index":2423,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["event",{"_index":2819,"title":{},"body":{"license.html":{}}}],["events",{"_index":1466,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exact",{"_index":1110,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exactly",{"_index":2074,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["example",{"_index":1005,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["examplebucket",{"_index":1278,"title":{},"body":{"injectables/ImagesService.html":{}}}],["exception",{"_index":1101,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.getstatus",{"_index":1133,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.message",{"_index":1139,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exception.message.error",{"_index":1138,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["exceptional",{"_index":1481,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exceptionfilter",{"_index":810,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["exceptions",{"_index":1107,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["execution",{"_index":1127,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["executioncontext",{"_index":1424,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["exist",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["existing",{"_index":1787,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["exists",{"_index":2388,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["expected",{"_index":2141,"title":{},"body":{"classes/TypeOfValue.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["expiration",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires",{"_index":1346,"title":{},"body":{"injectables/ImagesService.html":{}}}],["expiresin",{"_index":369,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":89,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"controllers/ImagesController.html":{},"injectables/JwtStrategy.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"dependencies.html":{},"license.html":{}}}],["extend",{"_index":1454,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["extending",{"_index":1953,"title":{},"body":{"injectables/RentalService.html":{}}}],["extends",{"_index":1370,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extra",{"_index":1452,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["extract",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/UserService.html":{}}}],["extract(req",{"_index":854,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{}}}],["extractjwt",{"_index":1378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors([(request",{"_index":1383,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractkeyvalueutil",{"_index":341,"title":{"injectables/ExtractKeyValueUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["extractkeyvalueutilinterface",{"_index":856,"title":{"interfaces/ExtractKeyValueUtilInterface.html":{}},"body":{"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"coverage.html":{}}}],["extractuserutil",{"_index":343,"title":{"injectables/ExtractUserUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ExtractUserUtil.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["failed",{"_index":551,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/JoiValidationPipe.html":{}}}],["false",{"_index":75,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PositiveNumber.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["far",{"_index":1608,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["features",{"_index":623,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":967,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["fieldname",{"_index":1211,"title":{},"body":{"controllers/ImagesController.html":{}}}],["fields",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file(s",{"_index":1289,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["file.originalname",{"_index":593,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["filename",{"_index":1292,"title":{},"body":{"injectables/ImagesService.html":{}}}],["files",{"_index":1210,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"license.html":{}}}],["files.length",{"_index":1578,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["files.map(item",{"_index":1585,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["files[0",{"_index":1579,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["fileuploadandsave",{"_index":1271,"title":{},"body":{"injectables/ImagesService.html":{}}}],["filter",{"_index":697,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{}}}],["filter(val",{"_index":2106,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["filters",{"_index":1102,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/RentalService.html":{}}}],["finad",{"_index":1198,"title":{},"body":{"controllers/ImagesController.html":{}}}],["final",{"_index":616,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/SearchRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["find",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["findprofileimage",{"_index":1175,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimage(@req",{"_index":1228,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimage(req",{"_index":1188,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimages",{"_index":1176,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["findprofileimages(@req",{"_index":1226,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findprofileimages(req",{"_index":1191,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage",{"_index":1177,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage(@query",{"_index":1224,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimage(params",{"_index":1193,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimages",{"_index":1178,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["findrentalimages(@query",{"_index":1222,"title":{},"body":{"controllers/ImagesController.html":{}}}],["findrentalimages(params",{"_index":1196,"title":{},"body":{"controllers/ImagesController.html":{}}}],["finduser",{"_index":2184,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finduser(@body",{"_index":2214,"title":{},"body":{"controllers/UserController.html":{}}}],["finduser(data",{"_index":2258,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser(user",{"_index":2194,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyresetpasswordtoken",{"_index":2245,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyresetpasswordtoken(data",{"_index":2260,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserdto",{"_index":405,"title":{"injectables/FindUserDto.html":{}},"body":{"injectables/AuthService.html":{},"injectables/FindUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findvehicleimage",{"_index":1322,"title":{},"body":{"injectables/ImagesService.html":{}}}],["fine",{"_index":2756,"title":{},"body":{"index.html":{}}}],["finish",{"_index":2027,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["first",{"_index":87,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["fitness",{"_index":2815,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1319,"title":{},"body":{"injectables/ImagesService.html":{}}}],["flow",{"_index":1111,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["folder",{"_index":1166,"title":{},"body":{"interfaces/ImageUploadInterface.html":{}}}],["following",{"_index":1710,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/UnavailabilityQueryDto.html":{},"license.html":{}}}],["forgot",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(data",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassworddto",{"_index":276,"title":{"classes/ForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["forgotten",{"_index":794,"title":{},"body":{"injectables/EmailService.html":{}}}],["form",{"_index":960,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/SearchRentalDto.html":{}}}],["format",{"_index":617,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["forroutes('v1/rental",{"_index":1923,"title":{},"body":{"modules/RentalModule.html":{}}}],["forroutes('v1/user",{"_index":2238,"title":{},"body":{"modules/UserModule.html":{}}}],["found",{"_index":1300,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{}}}],["framework",{"_index":2731,"title":{},"body":{"index.html":{}}}],["free",{"_index":2781,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1044,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["fromdatetimes",{"_index":902,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["front",{"_index":1598,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["frontend",{"_index":1061,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"index.html":{}}}],["fuel",{"_index":648,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":1104,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["function",{"_index":590,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["function(err",{"_index":1284,"title":{},"body":{"injectables/ImagesService.html":{}}}],["function):promise",{"_index":2559,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["functionality",{"_index":99,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/RentalModule.html":{}}}],["functions",{"_index":2255,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2803,"title":{},"body":{"license.html":{}}}],["future",{"_index":2146,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["gas",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gasgrade",{"_index":649,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["gaurds/jwt",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["gaurds/local",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["gaurds/logged",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["general",{"_index":40,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["generate",{"_index":886,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{}}}],["generateduration",{"_index":1871,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["generaterentaldurationenum",{"_index":891,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["generaterentaldurationenum(starttime",{"_index":893,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["generaterentaldurationenumutil",{"_index":882,"title":{"injectables/GenerateRentalDurationEnumUtil.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["generaterentaldurationenumutil.processrentaltime",{"_index":1566,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["generator",{"_index":594,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["geo",{"_index":49,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["geo_api_key",{"_index":52,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["geo_url",{"_index":54,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["geocoder",{"_index":2739,"title":{},"body":{"index.html":{}}}],["geocoding",{"_index":941,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["geocoordinate",{"_index":2740,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":1732,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{}}}],["geolocation",{"_index":1934,"title":{},"body":{"injectables/RentalService.html":{}}}],["geometry",{"_index":1997,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["geospatial",{"_index":1935,"title":{},"body":{"injectables/RentalService.html":{}}}],["geospatially",{"_index":944,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["geourl",{"_index":964,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geourlapipipe",{"_index":935,"title":{"injectables/GeoUrlApiPipe.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["geourlapipipe(new",{"_index":1845,"title":{},"body":{"controllers/RentalController.html":{}}}],["geourlapiutil",{"_index":954,"title":{"injectables/GeoUrlApiUtil.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["geourlapiutil.getcoordinates",{"_index":2029,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["geourl}?q=${address}&apikey=${apikey",{"_index":2872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geourl}?q=${location}&apikey=${apikey",{"_index":1020,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["get('find",{"_index":1189,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["get('profile",{"_index":181,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@usepipes(new",{"_index":1796,"title":{},"body":{"controllers/RentalController.html":{}}}],["getaccess_key_id",{"_index":132,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getaws_s3_bucket_profile",{"_index":136,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getaws_s3_bucket_rentals",{"_index":134,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getcache_ttl",{"_index":128,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getcoordinates",{"_index":952,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["getcoordinates(address",{"_index":963,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{}}}],["getgeo_api_key",{"_index":110,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getgeo_url",{"_index":112,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["gethello",{"_index":256,"title":{},"body":{"injectables/AppService.html":{}}}],["getjwt_exp_time",{"_index":120,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getlocal_db",{"_index":116,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getport",{"_index":122,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getprofile",{"_index":162,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":182,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":163,"title":{},"body":{"controllers/AppController.html":{}}}],["getredis_host",{"_index":124,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getredis_port",{"_index":126,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getremote_db",{"_index":114,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["gets3",{"_index":2040,"title":{},"body":{"injectables/S3Provider.html":{}}}],["getsecret_access_key",{"_index":130,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getsecret_key",{"_index":118,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getsingedurl",{"_index":1345,"title":{},"body":{"injectables/ImagesService.html":{}}}],["getter",{"_index":98,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/MapNewRentalPipe.html":{}}}],["getting",{"_index":2721,"title":{"index.html":{},"license.html":{}},"body":{}}],["give",{"_index":1103,"title":{},"body":{"classes/HttpErrorFilter.html":{},"classes/TypeOfValue.html":{}}}],["given",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["givennotice",{"_index":1053,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["givennoticepipe",{"_index":1032,"title":{"injectables/GivenNoticePipe.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/RequestCoordinatesDto.html":{},"coverage.html":{},"overview.html":{}}}],["givennoticesearchrentaldto",{"_index":1057,"title":{"classes/GivenNoticeSearchRentalDto.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["gmail",{"_index":781,"title":{},"body":{"injectables/EmailService.html":{}}}],["grab",{"_index":851,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiUtil.html":{},"guards/LoggedOutGaurd.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["graceful",{"_index":1480,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["grade",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":2780,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1117,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["graph",{"_index":2838,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":1560,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["grocery",{"_index":1504,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["groupings",{"_index":2056,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["gte",{"_index":1639,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["guard",{"_index":1415,"title":{"guards/LoggedOutGaurd.html":{}},"body":{"guards/LoggedOutGaurd.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1416,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["handle",{"_index":1755,"title":{},"body":{"controllers/RentalController.html":{}}}],["handler",{"_index":1536,"title":{},"body":{"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["hapi/joi",{"_index":1364,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"dependencies.html":{}}}],["happyface.jpg",{"_index":1279,"title":{},"body":{"injectables/ImagesService.html":{}}}],["hash",{"_index":536,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["hashing",{"_index":550,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["header",{"_index":852,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/JwtStrategy.html":{}}}],["heated",{"_index":1716,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["hello",{"_index":258,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":2695,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":940,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"index.html":{}}}],["hereby",{"_index":2779,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1728,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["highway",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":2821,"title":{},"body":{"license.html":{}}}],["host",{"_index":812,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"interfaces/TransporterInterface.html":{}}}],["host.switchtohttp",{"_index":1130,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["host.switchtohttp().getrequest",{"_index":820,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["host.switchtohttp().getresponse",{"_index":819,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["hour",{"_index":1039,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["html",{"_index":797,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["http_code",{"_index":1136,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["httpcode",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["httpcode(200",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200)@useguards(localauthguard)@post('login",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["httperrorfilter",{"_index":212,"title":{"classes/HttpErrorFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["httpexception",{"_index":815,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["httponly",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://geocode.search.hereapi.com/v1/geocode",{"_index":2871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/pioneer18/rent",{"_index":2772,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":816,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["httpstatus.bad_request",{"_index":843,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":829,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["hwympg",{"_index":647,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["hybrid",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hybrid','electric').required",{"_index":2884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":1569,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["id",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["identified",{"_index":1621,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["identifier",{"_index":2592,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1617,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ids",{"_index":742,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["ids.push(item._id",{"_index":749,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["if(check.length",{"_index":2385,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["ignoreexpiration",{"_index":1385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":595,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["image(s",{"_index":1338,"title":{},"body":{"injectables/ImagesService.html":{},"controllers/UserController.html":{}}}],["image._id",{"_index":1229,"title":{},"body":{"controllers/ImagesController.html":{}}}],["image.interface",{"_index":1688,"title":{},"body":{"interfaces/ProcessedSaveDataInterface.html":{}}}],["imagedto",{"_index":1146,"title":{"classes/ImageDto.html":{}},"body":{"classes/ImageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["imageinterface",{"_index":1151,"title":{"interfaces/ImageInterface.html":{}},"body":{"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"coverage.html":{}}}],["imagequeryresultsdto",{"_index":1157,"title":{"classes/ImageQueryResultsDto.html":{}},"body":{"classes/ImageQueryResultsDto.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["images",{"_index":724,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"controllers/UserController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["images.length",{"_index":1325,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images.map(item",{"_index":745,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.service.saveimages",{"_index":1294,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images.util",{"_index":1250,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["images.util.ts",{"_index":715,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"coverage.html":{}}}],["images.util.ts:10",{"_index":722,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:12",{"_index":720,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:40",{"_index":721,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images.util.ts:8",{"_index":719,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images/controller",{"_index":1865,"title":{},"body":{"controllers/RentalController.html":{}}}],["images/controller/images.controller",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["images/images.module",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["images[0]._id",{"_index":1331,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images[0].location.match(/\\/rentals",{"_index":726,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images[0].location.split(/\\/profile",{"_index":739,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["images[0].location.split(/\\/rentals",{"_index":731,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["imageschema",{"_index":1245,"title":{},"body":{"modules/ImagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imageschema.index",{"_index":1256,"title":{},"body":{"modules/ImagesModule.html":{}}}],["imagescontroller",{"_index":196,"title":{"controllers/ImagesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"coverage.html":{}}}],["imagesmodel",{"_index":1275,"title":{},"body":{"injectables/ImagesService.html":{}}}],["imagesmodule",{"_index":189,"title":{"modules/ImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagesservice",{"_index":1205,"title":{"injectables/ImagesService.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["imageuploadinterface",{"_index":1163,"title":{"interfaces/ImageUploadInterface.html":{}},"body":{"interfaces/ImageUploadInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"coverage.html":{}}}],["img_id",{"_index":1299,"title":{},"body":{"injectables/ImagesService.html":{}}}],["implements",{"_index":540,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["implied",{"_index":2811,"title":{},"body":{"license.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":2510,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["included",{"_index":2806,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2050,"title":{},"body":{"classes/SearchRentalDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["including",{"_index":2790,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":938,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":2588,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["index",{"_index":100,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":2443,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["indexes.ts",{"_index":2616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":1705,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{},"modules/RentalModule.html":{}}}],["individual",{"_index":2435,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["information",{"_index":1395,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{}}}],["inisde",{"_index":2430,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["initial",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["inject",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["inject(unavailabilitymodel",{"_index":1963,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["inject(usermodel",{"_index":2370,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["injectable",{"_index":94,"title":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["injectables",{"_index":95,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"overview.html":{}}}],["injectmodel",{"_index":1309,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{}}}],["injectmodel('images",{"_index":1317,"title":{},"body":{"injectables/ImagesService.html":{}}}],["injectmodel('rental",{"_index":1962,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["injectmodel('user",{"_index":2269,"title":{},"body":{"injectables/UserService.html":{}}}],["inputed",{"_index":961,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["insert",{"_index":1975,"title":{},"body":{"injectables/RentalService.html":{}}}],["inside",{"_index":1388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["installation",{"_index":2747,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1116,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["instanceof",{"_index":827,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["instantiated",{"_index":1358,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["instead",{"_index":1408,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["interaction",{"_index":1463,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept",{"_index":1468,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":1469,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interception",{"_index":1462,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptor",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.ts",{"_index":1445,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:22",{"_index":1472,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptors",{"_index":1446,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":866,"title":{"interfaces/ExtractKeyValueUtilInterface.html":{},"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserPropertyInterface.html":{}},"body":{"interfaces/ExtractKeyValueUtilInterface.html":{},"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserPropertyInterface.html":{},"coverage.html":{}}}],["interface/extract",{"_index":857,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["interface/image.interface",{"_index":1310,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["interface/mailoptions.interface",{"_index":790,"title":{},"body":{"injectables/EmailService.html":{}}}],["interface/processed",{"_index":1313,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["interface/schemainterface/rental/rental.interface",{"_index":1958,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["interface/schemainterface/unavailability/unavailability.interface",{"_index":1961,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["interface/transporter.interface",{"_index":792,"title":{},"body":{"injectables/EmailService.html":{}}}],["interface/user",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["interface/user.interface",{"_index":2266,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["interfaces",{"_index":867,"title":{},"body":{"interfaces/ExtractKeyValueUtilInterface.html":{},"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/MailOptionsInterface.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"interfaces/RentalInterface.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserPropertyInterface.html":{},"overview.html":{}}}],["interfacing",{"_index":1902,"title":{},"body":{"modules/RentalModule.html":{}}}],["internal_server_errors",{"_index":803,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["interval",{"_index":906,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["interval**](https://moment.github.io/luxon/docs/manual/tour.html#intervals",{"_index":1069,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["interval.fromdatetimes(a",{"_index":2451,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["interval.fromdatetimes(https://moment.github.io/luxon/docs/class/src/interval.js~interval.html#static",{"_index":901,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["interval.fromdatetimes(starttime",{"_index":913,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["invalid",{"_index":2494,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["isinleapyear",{"_index":2477,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["isnan(notice",{"_index":2453,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["it's",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["item",{"_index":2442,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.bucket",{"_index":1586,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.end",{"_index":2486,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.etag",{"_index":1588,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.key",{"_index":1587,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.location",{"_index":1590,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.location.split(/\\/profile",{"_index":758,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["item.location.split(/\\/rentals",{"_index":747,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["item.rentalid",{"_index":2482,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.size",{"_index":1589,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["item.start",{"_index":2485,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.title",{"_index":2498,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["item.year",{"_index":2492,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["items(joi.number",{"_index":2891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iyear",{"_index":2092,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["j",{"_index":2777,"title":{},"body":{"license.html":{}}}],["january",{"_index":2120,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["javacript",{"_index":1046,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["jean",{"_index":2762,"title":{},"body":{"index.html":{}}}],["joi",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/JoiValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["joi.array().items(joi.string",{"_index":2890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.array().items(joi.string()).allow(null",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.boolean().required",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number",{"_index":2882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().allow(null",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":48,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.number().required",{"_index":2878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":39,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":42,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":53,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().valid('gas",{"_index":2883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('regular",{"_index":2885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.valid('n/a",{"_index":2889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.valid(null",{"_index":2881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["joivalidationpipe",{"_index":1354,"title":{"injectables/JoiValidationPipe.html":{}},"body":{"injectables/JoiValidationPipe.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["joivalidationpipe())@post('create",{"_index":2188,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe())@usepipes(new",{"_index":1770,"title":{},"body":{"controllers/RentalController.html":{}}}],["joivalidationpipe(createrentalvalidationschema",{"_index":1844,"title":{},"body":{"controllers/RentalController.html":{}}}],["joivalidationpipe(createuservalidation",{"_index":2208,"title":{},"body":{"controllers/UserController.html":{}}}],["joivalidationpipe(searchrentalvalidationschema",{"_index":1849,"title":{},"body":{"controllers/RentalController.html":{}}}],["jonathan",{"_index":1170,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"index.html":{}}}],["json",{"_index":1144,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["json(`failed",{"_index":1219,"title":{},"body":{"controllers/ImagesController.html":{}}}],["json.stringify(errorresponse",{"_index":1141,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["jsonwebtoken",{"_index":2697,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":67,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/JwtStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["jwt_exp_time",{"_index":70,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":173,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwt_exp_time}s",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants.secret",{"_index":367,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1382,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":365,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayloadinterface",{"_index":576,"title":{"interfaces/JwtPayloadInterface.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/ImagesService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["jwtservice",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":344,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/ProcessSaveDataUtil.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["key/value",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["keys",{"_index":81,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["kind",{"_index":2810,"title":{},"body":{"license.html":{}}}],["know",{"_index":2454,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["larger",{"_index":2556,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["last",{"_index":1431,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["lat",{"_index":998,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["latitude",{"_index":2000,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["launches",{"_index":2750,"title":{},"body":{"index.html":{}}}],["layer",{"_index":1108,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["leap",{"_index":2411,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["leapyear",{"_index":2422,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length(2",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["less",{"_index":1073,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{}}}],["level",{"_index":1064,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["liability",{"_index":2825,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2822,"title":{},"body":{"license.html":{}}}],["license",{"_index":2765,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":2766,"title":{},"body":{"index.html":{}}}],["licenseplate",{"_index":656,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":2791,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2812,"title":{},"body":{"license.html":{}}}],["link",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["links",{"_index":2742,"title":{},"body":{"index.html":{}}}],["list",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{}}}],["listed",{"_index":624,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["listing",{"_index":962,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["literal",{"_index":636,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"classes/SearchRentalDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["lng",{"_index":999,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["load",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["loc",{"_index":625,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["locaion",{"_index":1873,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["local",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local_db",{"_index":57,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["localauthguard",{"_index":305,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":345,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["locate",{"_index":1334,"title":{},"body":{"injectables/ImagesService.html":{}}}],["location",{"_index":50,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loccreaterentaldto",{"_index":970,"title":{"classes/LocCreateRentalDto.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["log",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorFilter.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["logged",{"_index":1438,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"miscellaneous/variables.html":{}}}],["loggedoutgaurd",{"_index":176,"title":{"guards/LoggedOutGaurd.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":723,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["logger.error",{"_index":1140,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["logger.error(err",{"_index":847,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["logger.error(error",{"_index":845,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/JoiValidationPipe.html":{}}}],["logger.log",{"_index":1484,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log('the",{"_index":2472,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(`geourl",{"_index":984,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["logger.log(`months",{"_index":919,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["logger.log(`test1",{"_index":2012,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(`test2",{"_index":2014,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(`the",{"_index":917,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(`this",{"_index":2475,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(base",{"_index":918,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["logger.log(currentdatetime",{"_index":2456,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(data",{"_index":737,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["logger.log(err",{"_index":735,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["logger.log(log",{"_index":848,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["logger.log(merged",{"_index":1979,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(ordered",{"_index":2114,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["logger.log(start",{"_index":2450,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logger.log(test1",{"_index":2013,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(test2",{"_index":2015,"title":{},"body":{"injectables/RentalService.html":{}}}],["logger.log(url",{"_index":1353,"title":{},"body":{"injectables/ImagesService.html":{}}}],["logger.log(y1final",{"_index":2473,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["logging",{"_index":1109,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["logginginterceptor",{"_index":217,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["logic",{"_index":1453,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logically",{"_index":2415,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["login",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/UserService.html":{}}}],["login(@request",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":1489,"title":{"injectables/LoginDto.html":{}},"body":{"injectables/LoginDto.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":1493,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["logout",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["logout(@request",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logoutuser",{"_index":2246,"title":{},"body":{"injectables/UserService.html":{}}}],["logoutuser(req",{"_index":2262,"title":{},"body":{"injectables/UserService.html":{}}}],["logs",{"_index":804,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["longitude",{"_index":2002,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["look",{"_index":2771,"title":{},"body":{"index.html":{}}}],["loosely",{"_index":2726,"title":{},"body":{"index.html":{}}}],["love",{"_index":542,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["lte",{"_index":1637,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["luxon",{"_index":818,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"dependencies.html":{}}}],["luxon**](https://moment.github.io/luxon",{"_index":1068,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["ly",{"_index":2425,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["mail",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailoptions",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["mailoptionsinterface",{"_index":789,"title":{"interfaces/MailOptionsInterface.html":{}},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"coverage.html":{}}}],["make",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["makerequest",{"_index":1006,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["makerequest(location",{"_index":1012,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["makes",{"_index":1263,"title":{},"body":{"injectables/ImagesService.html":{}}}],["manager",{"_index":2686,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":1757,"title":{},"body":{"controllers/RentalController.html":{}}}],["map",{"_index":681,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["mapnewrentalpipe",{"_index":1397,"title":{"injectables/MapNewRentalPipe.html":{}},"body":{"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["mapnewrentalpipe())@usepipes(new",{"_index":1771,"title":{},"body":{"controllers/RentalController.html":{}}}],["mapped",{"_index":2173,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["mappricingdto",{"_index":1537,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["mapview",{"_index":1000,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["match",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["matches",{"_index":2285,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["matching",{"_index":92,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.sign(data",{"_index":1526,"title":{},"body":{"injectables/PositiveNumber.html":{}}}],["math.sign(data.discounts.monthly",{"_index":1557,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["math.sign(data.price",{"_index":1555,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["mathch",{"_index":2587,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["max",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["maxcount",{"_index":1212,"title":{},"body":{"controllers/ImagesController.html":{}}}],["maxdistance",{"_index":1995,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["maximum",{"_index":2554,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["maxium",{"_index":1939,"title":{},"body":{"injectables/RentalService.html":{}}}],["merchantability",{"_index":2814,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2794,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1977,"title":{},"body":{"injectables/RentalService.html":{}}}],["message",{"_index":808,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["metadata",{"_index":2709,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["method",{"_index":621,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["methods",{"_index":161,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["metric",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mid",{"_index":2886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middleware",{"_index":1758,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["middleware/validate",{"_index":1914,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["middlewareconsumer",{"_index":1897,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mile",{"_index":950,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["mileage",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miles",{"_index":1926,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["military",{"_index":2154,"title":{},"body":{"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":603,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":1040,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["minprice",{"_index":1551,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["miscellaneous",{"_index":2716,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":865,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["mit",{"_index":2768,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":650,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["model.insertmany(packet",{"_index":1320,"title":{},"body":{"injectables/ImagesService.html":{}}}],["model.provider",{"_index":1913,"title":{},"body":{"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["model.provider.ts",{"_index":2619,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["model.save(image",{"_index":1321,"title":{},"body":{"injectables/ImagesService.html":{}}}],["modern",{"_index":1043,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["modified",{"_index":1699,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["modify",{"_index":2793,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":1948,"title":{},"body":{"injectables/RentalService.html":{}}}],["mongodb",{"_index":679,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{},"index.html":{}}}],["mongoose",{"_index":1311,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"dependencies.html":{}}}],["mongoose.connect(configservice.get('remote_db",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.objectid",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1254,"title":{},"body":{"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":1917,"title":{},"body":{"modules/RentalModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":929,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["monthly",{"_index":664,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["months",{"_index":903,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"miscellaneous/enumerations.html":{}}}],["more",{"_index":1267,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"modules/RentalModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["mpge",{"_index":1741,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"miscellaneous/variables.html":{}}}],["mtime",{"_index":2491,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/typealiases.html":{}}}],["multer",{"_index":565,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"dependencies.html":{}}}],["multers3",{"_index":575,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["multerupload",{"_index":1336,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["multerupload(req",{"_index":1516,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["multeruploadutil",{"_index":1240,"title":{"injectables/MulterUploadUtil.html":{}},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"coverage.html":{},"overview.html":{}}}],["multiple",{"_index":741,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{}}}],["n/a",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n/a').required",{"_index":2888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":107,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["near",{"_index":947,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"index.html":{}}}],["necessary",{"_index":1501,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"classes/RemoveUnavailabilityDto.html":{}}}],["need",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["needs",{"_index":672,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"miscellaneous/variables.html":{}}}],["negative",{"_index":1545,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["nest",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestinterceptor",{"_index":1473,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs",{"_index":2730,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":2367,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["nestmodule",{"_index":1905,"title":{},"body":{"modules/RentalModule.html":{}}}],["never",{"_index":2749,"title":{},"body":{"index.html":{}}}],["new",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateRentalDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_password",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["newend",{"_index":693,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["newpassword",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["newstart",{"_index":691,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["newtitle",{"_index":695,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["next",{"_index":1470,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["next.handle().pipe",{"_index":1478,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nice",{"_index":833,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["node_env",{"_index":41,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["nodemailer",{"_index":785,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":780,"title":{},"body":{"injectables/EmailService.html":{}}}],["noninfringement",{"_index":2818,"title":{},"body":{"license.html":{}}}],["north",{"_index":1004,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["note",{"_index":1124,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["notice",{"_index":1038,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"license.html":{}}}],["notice.pipe",{"_index":1826,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["notice.pipe.ts",{"_index":1034,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"coverage.html":{}}}],["notice.pipe.ts:20",{"_index":1052,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["notice.pipe.ts:36",{"_index":1059,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["notice.pipe.ts:51",{"_index":1056,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["now",{"_index":824,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["now.hour",{"_index":1486,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now.hour}:${now.minute",{"_index":837,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["now.minute",{"_index":1487,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now.month}/${now.day",{"_index":835,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["now.second",{"_index":838,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["null",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"injectables/UserService.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":148,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageQueryResultsDto.html":{},"classes/LocCreateRentalDto.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["number.ts",{"_index":1523,"title":{},"body":{"injectables/PositiveNumber.html":{},"coverage.html":{}}}],["number.ts:8",{"_index":1525,"title":{},"body":{"injectables/PositiveNumber.html":{}}}],["numdoors",{"_index":654,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["numofseats",{"_index":653,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":2652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":743,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{}}}],["objects.push",{"_index":748,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["observable",{"_index":1426,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{}}}],["obtaining",{"_index":2784,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2397,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["occurred",{"_index":756,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["odometer",{"_index":644,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["offset",{"_index":1644,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["oldpassword",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["once",{"_index":2745,"title":{},"body":{"index.html":{}}}],["one",{"_index":1054,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["onto",{"_index":2534,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["option",{"_index":1213,"title":{},"body":{"controllers/ImagesController.html":{}}}],["optional",{"_index":109,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["options",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ImagesController.html":{}}}],["order",{"_index":2068,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["ordered",{"_index":1981,"title":{},"body":{"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["orderyears",{"_index":2061,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["ordinal",{"_index":2447,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["original",{"_index":552,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"index.html":{}}}],["originalname",{"_index":1344,"title":{},"body":{"injectables/ImagesService.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":2830,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"guards/LoggedOutGaurd.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["out.guard",{"_index":178,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{}}}],["out.guard.ts",{"_index":1418,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"coverage.html":{}}}],["out.guard.ts:11",{"_index":1428,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["out.guard.ts:28",{"_index":1425,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["out.guard.ts:7",{"_index":1422,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["outside",{"_index":1645,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["over",{"_index":1106,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["overlap",{"_index":1596,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["overlapping",{"_index":1600,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["overlaps",{"_index":1957,"title":{},"body":{"injectables/RentalService.html":{}}}],["override",{"_index":1458,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["overview",{"_index":2839,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2667,"title":{"dependencies.html":{}},"body":{}}],["packet",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{}}}],["packet._id",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["packet.email",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["packet.username",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["page",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["pairs",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["parameter",{"_index":2005,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["parameters",{"_index":106,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["params",{"_index":750,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"interfaces/ProcessedUploadDataInterface.html":{}}}],["params.rental_id",{"_index":1216,"title":{},"body":{"controllers/ImagesController.html":{}}}],["parseint(process.env.min_price",{"_index":1552,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["parser",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["parses",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["particular",{"_index":2816,"title":{},"body":{"license.html":{}}}],["pass",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/LoginUserDto.html":{},"interfaces/TransporterInterface.html":{}}}],["passed",{"_index":619,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/GeoUrlApiPipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"classes/SearchRentalDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["passing",{"_index":1543,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["passowrd",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["passport",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1377,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1380,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/EmailService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["password.dto.ts",{"_index":554,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:2",{"_index":2568,"title":{},"body":{"classes/VerifyNewPasswordDto.html":{}}}],["password.dto.ts:3",{"_index":557,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["password.dto.ts:4",{"_index":556,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:5",{"_index":2035,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.util",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["password.util.ts",{"_index":2569,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["password.util.ts:15",{"_index":2580,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["password.util.ts:21",{"_index":2578,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["password.util.ts:31",{"_index":2575,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["past",{"_index":2438,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["path",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/HttpErrorFilter.html":{}}}],["payload",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["payload.email",{"_index":1392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":1390,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":1372,"title":{},"body":{"interfaces/JwtPayloadInterface.html":{},"coverage.html":{}}}],["payload.username",{"_index":1391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pc",{"_index":2752,"title":{},"body":{"index.html":{}}}],["period",{"_index":1793,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["permission",{"_index":2778,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2801,"title":{},"body":{"license.html":{}}}],["person",{"_index":2783,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2802,"title":{},"body":{"license.html":{}}}],["photo",{"_index":1297,"title":{},"body":{"injectables/ImagesService.html":{}}}],["photos",{"_index":626,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["photos/${user.email}/${category",{"_index":586,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["photos/{user_email}/{category",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pilot",{"_index":1719,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["pipe",{"_index":2440,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["pipes/bcrypt.pipe",{"_index":2204,"title":{},"body":{"controllers/UserController.html":{}}}],["pipes/create",{"_index":1838,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/geo",{"_index":1808,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/given",{"_index":1825,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/map",{"_index":1810,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/pricing.pipe",{"_index":1829,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/process",{"_index":1837,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/rental",{"_index":1817,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/request",{"_index":1823,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/sort",{"_index":1834,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipes/validate",{"_index":1830,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["pipetransform",{"_index":538,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["place",{"_index":2089,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["platform",{"_index":1119,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["please",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["point",{"_index":1510,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{}}}],["port",{"_index":47,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"interfaces/TransporterInterface.html":{}}}],["portions",{"_index":2808,"title":{},"body":{"license.html":{}}}],["position",{"_index":997,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["positive",{"_index":1524,"title":{},"body":{"injectables/PositiveNumber.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["positivenumber",{"_index":1521,"title":{"injectables/PositiveNumber.html":{}},"body":{"injectables/PositiveNumber.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["post",{"_index":170,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["post('change",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create",{"_index":2209,"title":{},"body":{"controllers/UserController.html":{}}}],["post('delete",{"_index":1182,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["post('edit",{"_index":1774,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('forgot",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('remove",{"_index":1782,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('reset",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('schedule",{"_index":1789,"title":{},"body":{"controllers/RentalController.html":{}}}],["post('update",{"_index":1803,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["post('upload",{"_index":1200,"title":{},"body":{"controllers/ImagesController.html":{}}}],["post()@usepipes(new",{"_index":1769,"title":{},"body":{"controllers/RentalController.html":{}}}],["postman",{"_index":2748,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":1042,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"index.html":{}}}],["prefix",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":2887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepare",{"_index":1540,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["present",{"_index":2527,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["presigned",{"_index":1342,"title":{},"body":{"injectables/ImagesService.html":{}}}],["prevent",{"_index":1597,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["previous",{"_index":2439,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["price",{"_index":661,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"miscellaneous/variables.html":{}}}],["price')@usepipes(new",{"_index":1779,"title":{},"body":{"controllers/RentalController.html":{}}}],["pricing",{"_index":627,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pricingdto",{"_index":1527,"title":{"classes/PricingDto.html":{}},"body":{"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["pricingpipe",{"_index":1533,"title":{"injectables/PricingPipe.html":{}},"body":{"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["procesed",{"_index":1691,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["process",{"_index":1575,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["process.env",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.geo_api_key",{"_index":989,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["process.env.geo_url",{"_index":985,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["process.env.jwt_exp_time",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":844,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["process.env.private_key",{"_index":2917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.secret_key",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":1623,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["processed.data",{"_index":1976,"title":{},"body":{"injectables/RentalService.html":{}}}],["processedsavedatainterface",{"_index":1312,"title":{"interfaces/ProcessedSaveDataInterface.html":{}},"body":{"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"coverage.html":{}}}],["processedunavailabilitydto",{"_index":1627,"title":{"classes/ProcessedUnavailabilityDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"coverage.html":{}}}],["processedunavailabilityquerydto",{"_index":1633,"title":{"classes/ProcessedUnavailabilityQueryDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["processedunavailabilityquerydto[]s",{"_index":1694,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["processedunavailabilityquerydtos",{"_index":1693,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{}}}],["processeduploaddatainterface",{"_index":1706,"title":{"interfaces/ProcessedUploadDataInterface.html":{}},"body":{"interfaces/ProcessedUploadDataInterface.html":{},"coverage.html":{}}}],["processing",{"_index":1090,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{}}}],["processrentaltime",{"_index":892,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["processrentaltime(starttime",{"_index":898,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["processrentaltimedto",{"_index":908,"title":{"classes/ProcessRentalTimeDto.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["processsavedatautil",{"_index":1241,"title":{"injectables/ProcessSaveDataUtil.html":{}},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{},"overview.html":{}}}],["processunavailabilitypipe",{"_index":1592,"title":{"injectables/ProcessUnavailabilityPipe.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"overview.html":{}}}],["processunavailabilitypipe())@usepipes(new",{"_index":1790,"title":{},"body":{"controllers/RentalController.html":{}}}],["production",{"_index":44,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ErrorFilter.html":{}}}],["profile",{"_index":738,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":2723,"title":{},"body":{"index.html":{}}}],["promise",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1348,"title":{},"body":{"injectables/ImagesService.html":{}}}],["properties",{"_index":555,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"injectables/ImagesService.html":{},"interfaces/JwtPayloadInterface.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{}}}],["property",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["property.interface",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["property.interface.ts",{"_index":2240,"title":{},"body":{"interfaces/UserPropertyInterface.html":{},"coverage.html":{}}}],["propery",{"_index":889,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["protected",{"_index":1603,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["provide",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"license.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/database.provider",{"_index":712,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["providers/s3.provider",{"_index":578,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["provides",{"_index":97,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/RentalModule.html":{},"injectables/TestRentalService.html":{}}}],["public",{"_index":588,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractKeyValueUtil.html":{}}}],["publish",{"_index":2795,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2817,"title":{},"body":{"license.html":{}}}],["pw",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["py1",{"_index":1666,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["py2",{"_index":1667,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["queried",{"_index":945,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/ImagesService.html":{}}}],["queries",{"_index":1260,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["query",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"classes/ImageQueryResultsDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/UserService.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["query.dto",{"_index":1631,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{}}}],["query.dto.ts",{"_index":601,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:10",{"_index":611,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:11",{"_index":610,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:12",{"_index":606,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:13",{"_index":2168,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{}}}],["query.dto.ts:6",{"_index":1702,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:7",{"_index":1701,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:8",{"_index":609,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.dto.ts:9",{"_index":608,"title":{},"body":{"classes/CreateQueryDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["query.features",{"_index":2007,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["query.pricing",{"_index":2004,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["quick",{"_index":1704,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["quiet",{"_index":751,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["rack",{"_index":1715,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["radius",{"_index":946,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RentalService.html":{}}}],["range",{"_index":2537,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["range**](https://www.mathsisfun.com/data/range.html",{"_index":2544,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rate",{"_index":1722,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["raw",{"_index":701,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rawauth",{"_index":859,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["rawauth.slice",{"_index":862,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["rawauth.slice(15",{"_index":861,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["rawcoordinates",{"_index":1028,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinates.lat",{"_index":1030,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinates.lng",{"_index":1031,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["rawcoordinatesdto",{"_index":1017,"title":{"classes/RawCoordinatesDto.html":{}},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{},"coverage.html":{}}}],["rawcreaterentaldto",{"_index":939,"title":{"classes/RawCreateRentalDto.html":{}},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["rawcreaterentaldto):promise",{"_index":988,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["rawscheduleunavailabilitydto",{"_index":1743,"title":{"classes/RawScheduleUnavailabilityDto.html":{}},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{}}}],["rawsearchrentaldto",{"_index":1055,"title":{"classes/RawSearchRentalDto.html":{}},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"coverage.html":{}}}],["react",{"_index":2764,"title":{},"body":{"index.html":{}}}],["read",{"_index":589,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/JwtStrategy.html":{}}}],["readonly",{"_index":139,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"guards/LoggedOutGaurd.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/S3Provider.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["ready",{"_index":1700,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["redirect",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"controllers/UserController.html":{}}}],["redirect('http://localhost:3000/auth/login",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["redirecting",{"_index":2279,"title":{},"body":{"injectables/UserService.html":{}}}],["redis",{"_index":58,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"dependencies.html":{}}}],["redis/redis.module",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["redis/service/redis.service",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["redis_host",{"_index":60,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["redis_port",{"_index":61,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["redismodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["redisservice",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"guards/LoggedOutGaurd.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["reducing",{"_index":1954,"title":{},"body":{"injectables/RentalService.html":{}}}],["reference",{"_index":2176,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["references",{"_index":1727,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["reflect",{"_index":2708,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":628,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["reject",{"_index":1349,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reject(err",{"_index":1351,"title":{},"body":{"injectables/ImagesService.html":{}}}],["related",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["remote_db",{"_index":56,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["remove",{"_index":1786,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{}}}],["remove.deletedcount",{"_index":1988,"title":{},"body":{"injectables/RentalService.html":{}}}],["removeunavailability",{"_index":1765,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["removeunavailability(@body",{"_index":1862,"title":{},"body":{"controllers/RentalController.html":{}}}],["removeunavailability(data",{"_index":1781,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["removeunavailabilitydto",{"_index":1749,"title":{"classes/RemoveUnavailabilityDto.html":{}},"body":{"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{}}}],["removeunavailabilitydto):removeunavailabilitydto",{"_index":2393,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["rent",{"_index":584,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rentacar",{"_index":2776,"title":{},"body":{"license.html":{}}}],["rentacar.team2020@gmail.com",{"_index":782,"title":{},"body":{"injectables/EmailService.html":{}}}],["rental",{"_index":618,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/EditDetailsDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rental's",{"_index":1549,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"index.html":{}}}],["rental.controller.updateunavaialability",{"_index":1900,"title":{},"body":{"modules/RentalModule.html":{}}}],["rental.controller.updateunavailability",{"_index":2533,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["rental.dto",{"_index":972,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/MapNewRentalPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["rental.dto.ts",{"_index":615,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{}}}],["rental.dto.ts:10",{"_index":1398,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:11",{"_index":2053,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:15",{"_index":2052,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:23",{"_index":640,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:28",{"_index":633,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:29",{"_index":642,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:34",{"_index":639,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:41",{"_index":637,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:45",{"_index":638,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:46",{"_index":635,"title":{},"body":{"classes/CreateRentalDto.html":{}}}],["rental.dto.ts:6",{"_index":641,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rental.dto.ts:7",{"_index":632,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:8",{"_index":643,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.dto.ts:9",{"_index":1399,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/SearchRentalDto.html":{}}}],["rental.features",{"_index":2006,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.givennotice",{"_index":1994,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.coordinates[0",{"_index":1999,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.coordinates[1",{"_index":2001,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.loc.type",{"_index":1998,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.pipe",{"_index":1811,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["rental.pipe.ts",{"_index":1499,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["rental.pipe.ts:13",{"_index":1500,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["rental.price",{"_index":2003,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.pricerange",{"_index":2132,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.rentalduration",{"_index":1991,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rental.service.createrental",{"_index":620,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{}}}],["rental.service.editdetails",{"_index":766,"title":{},"body":{"classes/EditDetailsDto.html":{}}}],["rental.service.editpricing",{"_index":1529,"title":{},"body":{"classes/PricingDto.html":{}}}],["rental.service.removeunavailability",{"_index":1752,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{}}}],["rental.service.scheduleunavailability",{"_index":1695,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["rental.service.searchrentals",{"_index":2051,"title":{},"body":{"classes/SearchRentalDto.html":{}}}],["rental.service.ts",{"_index":2124,"title":{},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["rental.service.ts:10",{"_index":2128,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.ts:15",{"_index":2130,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.ts:19",{"_index":2129,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["rental.service.updateunavailability",{"_index":671,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{}}}],["rental/controller/rental.controller",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["rental/rental.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["rental_id",{"_index":1154,"title":{},"body":{"interfaces/ImageInterface.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["rentalcontroller",{"_index":195,"title":{"controllers/RentalController.html":{}},"body":{"modules/AppModule.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"coverage.html":{}}}],["rentaldescription",{"_index":629,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["rentalduration",{"_index":887,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"miscellaneous/variables.html":{}}}],["rentaldurationpipe",{"_index":1092,"title":{"injectables/RentalDurationPipe.html":{}},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"coverage.html":{},"overview.html":{}}}],["rentaldurationpipe())@usepipes(new",{"_index":1798,"title":{},"body":{"controllers/RentalController.html":{}}}],["rentaldurationpipe(new",{"_index":1851,"title":{},"body":{"controllers/RentalController.html":{}}}],["rentaldurations",{"_index":907,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["rentaldurations.any",{"_index":925,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['1",{"_index":928,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['3",{"_index":927,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentaldurations['5",{"_index":934,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["rentalendtime",{"_index":1084,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rentalid",{"_index":689,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["rentalinterface",{"_index":1880,"title":{"interfaces/RentalInterface.html":{}},"body":{"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"coverage.html":{}}}],["rentalmodel",{"_index":1931,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["rentalmodule",{"_index":190,"title":{"modules/RentalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RentalModule.html":{},"modules.html":{},"overview.html":{}}}],["rentals",{"_index":943,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rentals.length",{"_index":1968,"title":{},"body":{"injectables/RentalService.html":{}}}],["rentalschema",{"_index":1907,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rentalschema.index",{"_index":1918,"title":{},"body":{"modules/RentalModule.html":{}}}],["rentalschemavalidation",{"_index":2297,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["rentalservice",{"_index":1806,"title":{"injectables/RentalService.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"coverage.html":{},"overview.html":{}}}],["rentalstarttime",{"_index":1083,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{}}}],["rentaltitle",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rentmaxduration",{"_index":660,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["rentminduration",{"_index":659,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":1009,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["report",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["represent",{"_index":1567,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["req",{"_index":167,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req,@body",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.body.y2",{"_index":2563,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.headers.cookie",{"_index":860,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"guards/LoggedOutGaurd.html":{}}}],["req.method",{"_index":1476,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.originalurl",{"_index":2377,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["req.url",{"_index":1477,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.user",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ExtractUserUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["req.user._doc.password",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":171,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":821,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["request.url",{"_index":823,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{}}}],["request/response",{"_index":1449,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request?.cookies?.authentication",{"_index":1384,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["requestcoordinatesdto",{"_index":890,"title":{"classes/RequestCoordinatesDto.html":{}},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RentalDurationPipe.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["requestcoordinatespipe",{"_index":1822,"title":{"injectables/RequestCoordinatesPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["requestcoordinatespipe())@usepipes(new",{"_index":1797,"title":{},"body":{"controllers/RentalController.html":{}}}],["requestcoordinatespipe(new",{"_index":1850,"title":{},"body":{"controllers/RentalController.html":{}}}],["requested",{"_index":1060,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateEmailMiddleware.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["requesting",{"_index":1262,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["requests",{"_index":1756,"title":{},"body":{"controllers/RentalController.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["require(\"@hapi/joi",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["require('axios",{"_index":2870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1259,"title":{},"body":{"injectables/ImagesService.html":{},"classes/RawCreateRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"miscellaneous/variables.html":{}}}],["requirednotice",{"_index":658,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["requires",{"_index":2136,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["res",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"controllers/RentalController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["res.deletedcount",{"_index":2289,"title":{},"body":{"injectables/UserService.html":{}}}],["res.send(req.user._doc",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.setheader('set",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(201).json(req.files[0].location",{"_index":1520,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["res.status(404).json(`failed",{"_index":1517,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["res.status(500).json(`failed",{"_index":1341,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"injectables/ResetPasswordTokenDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["resetpass",{"_index":2033,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["resetpassword",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(data",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassworddto",{"_index":289,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resetpasswordexpires",{"_index":2220,"title":{},"body":{"interfaces/UserInterface.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordtoken",{"_index":2034,"title":{},"body":{"classes/ResetPasswordDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordtokendto",{"_index":2036,"title":{"injectables/ResetPasswordTokenDto.html":{}},"body":{"injectables/ResetPasswordTokenDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["resetplease",{"_index":798,"title":{},"body":{"injectables/EmailService.html":{}}}],["resets",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetting",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["resettoken",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(url",{"_index":1352,"title":{},"body":{"injectables/ImagesService.html":{}}}],["response",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DeleteS3ImagesUtil.html":{},"classes/ErrorFilter.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["response.data.items[0",{"_index":995,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["response.data.items[0].position",{"_index":1029,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["response.status(status).json(err",{"_index":846,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["response.status(status).json(errorresponse",{"_index":1145,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["responses",{"_index":1134,"title":{},"body":{"classes/HttpErrorFilter.html":{},"controllers/RentalController.html":{}}}],["responsible",{"_index":1114,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["respose",{"_index":994,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["restriction",{"_index":2789,"title":{},"body":{"license.html":{}}}],["result",{"_index":91,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":93,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.dto",{"_index":1316,"title":{},"body":{"injectables/ImagesService.html":{}}}],["results.dto.ts",{"_index":1159,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"coverage.html":{}}}],["results.dto.ts:2",{"_index":1161,"title":{},"body":{"classes/ImageQueryResultsDto.html":{}}}],["results.dto.ts:3",{"_index":1162,"title":{},"body":{"classes/ImageQueryResultsDto.html":{}}}],["retnals",{"_index":1748,"title":{},"body":{"classes/RawSearchRentalDto.html":{}}}],["retrieve",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["return",{"_index":141,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"classes/TypeOfValue.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1089,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"injectables/LoggingInterceptor.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["returning",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returnrentalmodel",{"_index":2127,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["returns",{"_index":168,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/HttpErrorFilter.html":{},"controllers/ImagesController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCoordinatesDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/TestRentalService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["reutrns",{"_index":806,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["reveals",{"_index":805,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["rights",{"_index":2792,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":2711,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":2376,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["router",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routermodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroutes(routes",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/RentalModule.html":{}}}],["run",{"_index":2755,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1429,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1475,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["s3",{"_index":567,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["s3.deleteobjects(params",{"_index":1283,"title":{},"body":{"injectables/ImagesService.html":{}}}],["s3.getsignedurl('getobject",{"_index":1350,"title":{},"body":{"injectables/ImagesService.html":{}}}],["s3provider",{"_index":569,"title":{"injectables/S3Provider.html":{}},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/S3Provider.html":{},"coverage.html":{},"overview.html":{}}}],["salt",{"_index":537,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["same",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["save",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"coverage.html":{}}}],["saved",{"_index":1202,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"index.html":{}}}],["saveimages",{"_index":1272,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["saveimages(req.files",{"_index":1519,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["saves",{"_index":1305,"title":{},"body":{"injectables/ImagesService.html":{}}}],["scalable",{"_index":2725,"title":{},"body":{"index.html":{}}}],["schedling",{"_index":1616,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["schedule",{"_index":921,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"index.html":{}}}],["schedule.days",{"_index":933,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["schedule.months",{"_index":923,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["schedule.weeks",{"_index":930,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["scheduled",{"_index":1568,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["scheduleunavailability",{"_index":1766,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["scheduleunavailability(@body",{"_index":1858,"title":{},"body":{"controllers/RentalController.html":{}}}],["scheduleunavailability(processed",{"_index":1788,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["scheduling",{"_index":630,"title":{},"body":{"classes/CreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["scheduling.rentmaxduration",{"_index":1992,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["scheduling.rentminduration",{"_index":1990,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["scheduling.requirednotice",{"_index":1993,"title":{},"body":{"injectables/RentalService.html":{},"injectables/TestRentalService.html":{}}}],["schema",{"_index":1255,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/JoiValidationPipe.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":2654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema/images.schema",{"_index":1246,"title":{},"body":{"modules/ImagesModule.html":{}}}],["schema/rental.schema",{"_index":1908,"title":{},"body":{"modules/RentalModule.html":{}}}],["schema/unavailability",{"_index":1910,"title":{},"body":{"modules/RentalModule.html":{}}}],["schema/validation/create",{"_index":1815,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["schema/validation/search",{"_index":1828,"title":{},"body":{"controllers/RentalController.html":{}}}],["sd",{"_index":2522,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["sdk",{"_index":2044,"title":{},"body":{"injectables/S3Provider.html":{},"dependencies.html":{}}}],["search",{"_index":978,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/TestRentalService.html":{},"coverage.html":{},"index.html":{}}}],["searching",{"_index":942,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"classes/RawCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["searchrental",{"_index":1767,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["searchrental(@query",{"_index":1852,"title":{},"body":{"controllers/RentalController.html":{}}}],["searchrental(rental",{"_index":1950,"title":{},"body":{"injectables/RentalService.html":{}}}],["searchrental(searchrentaldto",{"_index":1794,"title":{},"body":{"controllers/RentalController.html":{}}}],["searchrentaldto",{"_index":1795,"title":{"classes/SearchRentalDto.html":{}},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchrentalvalidationschema",{"_index":1827,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchs",{"_index":1938,"title":{},"body":{"injectables/RentalService.html":{}}}],["seats",{"_index":1717,"title":{},"body":{"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["second",{"_index":2428,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["secret",{"_index":366,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secret_access_key",{"_index":66,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["secret_key",{"_index":69,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{}}}],["secretaccesskey",{"_index":2047,"title":{},"body":{"injectables/S3Provider.html":{}}}],["secretorkey",{"_index":1386,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrets",{"_index":2661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["secure",{"_index":1268,"title":{},"body":{"injectables/ImagesService.html":{}}}],["secureconnection",{"_index":2134,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["security",{"_index":1258,"title":{},"body":{"injectables/ImagesService.html":{}}}],["see",{"_index":1864,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["select",{"_index":796,"title":{},"body":{"injectables/EmailService.html":{}}}],["selected",{"_index":948,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"miscellaneous/variables.html":{}}}],["selective",{"_index":1265,"title":{},"body":{"injectables/ImagesService.html":{}}}],["sell",{"_index":2799,"title":{},"body":{"license.html":{}}}],["sells",{"_index":1171,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"index.html":{}}}],["semi",{"_index":1622,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["send",{"_index":1014,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"injectables/ImagesService.html":{},"injectables/RentalService.html":{}}}],["sending",{"_index":1535,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["sendmail",{"_index":774,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendmail(mailoptions",{"_index":778,"title":{},"body":{"injectables/EmailService.html":{}}}],["sends",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["sense",{"_index":1548,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["sent",{"_index":1113,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["separate",{"_index":2070,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sequential",{"_index":2076,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["series",{"_index":1618,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["server",{"_index":59,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["serves",{"_index":2174,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["servestaticmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":771,"title":{},"body":{"injectables/EmailService.html":{},"injectables/ImagesService.html":{},"injectables/TestRentalService.html":{}}}],["service/auth.service",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["service/images.service",{"_index":1206,"title":{},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{}}}],["service/rental.service",{"_index":1807,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["service/user.service",{"_index":2206,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["set",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{}}}],["several",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":2805,"title":{},"body":{"license.html":{}}}],["share",{"_index":2490,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["show",{"_index":1729,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["side",{"_index":2729,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":368,"title":{},"body":{"modules/AuthModule.html":{}}}],["simpler",{"_index":682,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["simplified",{"_index":2175,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{}}}],["single",{"_index":728,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["size",{"_index":1155,"title":{},"body":{"interfaces/ImageInterface.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["slightly",{"_index":1264,"title":{},"body":{"injectables/ImagesService.html":{}}}],["smaller",{"_index":2760,"title":{},"body":{"index.html":{}}}],["smtp",{"_index":787,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["smtptransport",{"_index":786,"title":{},"body":{"injectables/EmailService.html":{}}}],["software",{"_index":2786,"title":{},"body":{"license.html":{}}}],["soon",{"_index":2758,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":1072,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["sort",{"_index":2055,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sort((a",{"_index":2107,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted",{"_index":2067,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["sorted.ya",{"_index":2088,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted.ya[0].year",{"_index":2090,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sorted.yb",{"_index":2087,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["sortedunavailabilitydto",{"_index":2081,"title":{"interfaces/SortedUnavailabilityDto.html":{}},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"coverage.html":{}}}],["sortunavailabilitypipe",{"_index":1745,"title":{"injectables/SortUnavailabilityPipe.html":{}},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{},"overview.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["south",{"_index":1002,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["spaces",{"_index":1010,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["spans",{"_index":2116,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["spec",{"_index":2296,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["specific",{"_index":1296,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"classes/UnavailabilityDto.html":{}}}],["specifications",{"_index":1713,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["specified",{"_index":1801,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{}}}],["specs",{"_index":631,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":730,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["src/.../const.ts",{"_index":2718,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../constant.ts",{"_index":2860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":2857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.provider.ts",{"_index":2858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.schema.ts",{"_index":2859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../military",{"_index":2845,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../rental.schema.ts",{"_index":2861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../search",{"_index":2864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../secrets.ts",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../to",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unavailability",{"_index":2862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":166,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":255,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":257,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/constant.ts",{"_index":2595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controller/auth.controller.ts",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controller/auth.controller.ts:23",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:37",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:47",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:55",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:64",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/dto/change",{"_index":553,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/check",{"_index":559,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"coverage.html":{}}}],["src/auth/dto/forgot",{"_index":881,"title":{},"body":{"classes/ForgotPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/login",{"_index":1494,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/reset",{"_index":2031,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/verify",{"_index":2567,"title":{},"body":{"classes/VerifyNewPasswordDto.html":{},"coverage.html":{}}}],["src/auth/gaurds/jwt",{"_index":1367,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/gaurds/local",{"_index":1400,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/gaurds/logged",{"_index":1417,"title":{},"body":{"guards/LoggedOutGaurd.html":{},"coverage.html":{}}}],["src/auth/interface/extract",{"_index":868,"title":{},"body":{"interfaces/ExtractKeyValueUtilInterface.html":{},"coverage.html":{}}}],["src/auth/interface/jwt",{"_index":577,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/auth/interface/user",{"_index":2239,"title":{},"body":{"interfaces/UserPropertyInterface.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts:132",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:157",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:25",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:42",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:60",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:80",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:99",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":1373,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:21",{"_index":1376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":1374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":1402,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:10",{"_index":1404,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:17",{"_index":1406,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/util/extract",{"_index":849,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"coverage.html":{}}}],["src/auth/util/verify",{"_index":2268,"title":{},"body":{"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["src/common/const.ts",{"_index":2611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/error.filters.ts",{"_index":800,"title":{},"body":{"classes/ErrorFilter.html":{},"coverage.html":{}}}],["src/common/filters/error.filters.ts:16",{"_index":814,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["src/common/filters/http",{"_index":1099,"title":{},"body":{"classes/HttpErrorFilter.html":{},"coverage.html":{}}}],["src/common/interceptors/logging",{"_index":1444,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/pipes/joi",{"_index":1355,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/common/util/positive",{"_index":1522,"title":{},"body":{"injectables/PositiveNumber.html":{},"coverage.html":{}}}],["src/common/util/to",{"_index":2615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/util/typeof",{"_index":2139,"title":{},"body":{"classes/TypeOfValue.html":{},"coverage.html":{}}}],["src/config/configuration.module.ts",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["src/config/configuration.service",{"_index":1916,"title":{},"body":{"modules/RentalModule.html":{},"injectables/S3Provider.html":{}}}],["src/config/configuration.service.ts",{"_index":96,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["src/config/configuration.service.ts:11",{"_index":111,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:14",{"_index":113,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:17",{"_index":115,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:20",{"_index":117,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:23",{"_index":119,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:26",{"_index":121,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:29",{"_index":123,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:32",{"_index":125,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:35",{"_index":127,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:38",{"_index":129,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:41",{"_index":131,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:44",{"_index":133,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:47",{"_index":135,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:50",{"_index":137,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/config/configuration.service.ts:8",{"_index":105,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/database/database.module.ts",{"_index":710,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/providers/database.provider.ts",{"_index":2617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/unavailability",{"_index":2618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/providers/user",{"_index":2620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/email/email.service.ts",{"_index":770,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/email/email.service.ts:10",{"_index":775,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:15",{"_index":784,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:26",{"_index":777,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:37",{"_index":779,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/interface/mailoptions.interface.ts",{"_index":1497,"title":{},"body":{"interfaces/MailOptionsInterface.html":{},"coverage.html":{}}}],["src/email/interface/transporter.interface.ts",{"_index":2133,"title":{},"body":{"interfaces/TransporterInterface.html":{},"coverage.html":{}}}],["src/images/controller/images.controller.ts",{"_index":1168,"title":{},"body":{"controllers/ImagesController.html":{},"coverage.html":{}}}],["src/images/controller/images.controller.ts:108",{"_index":1185,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:117",{"_index":1183,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:27",{"_index":1204,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:43",{"_index":1201,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:59",{"_index":1197,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:69",{"_index":1194,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:79",{"_index":1192,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:89",{"_index":1190,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/controller/images.controller.ts:99",{"_index":1187,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/dto/image",{"_index":1158,"title":{},"body":{"classes/ImageQueryResultsDto.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts",{"_index":1147,"title":{},"body":{"classes/ImageDto.html":{},"coverage.html":{}}}],["src/images/dto/image.dto.ts:2",{"_index":1149,"title":{},"body":{"classes/ImageDto.html":{}}}],["src/images/dto/image.dto.ts:3",{"_index":1150,"title":{},"body":{"classes/ImageDto.html":{}}}],["src/images/images.module.ts",{"_index":1242,"title":{},"body":{"modules/ImagesModule.html":{}}}],["src/images/interface/image",{"_index":1164,"title":{},"body":{"interfaces/ImageUploadInterface.html":{},"coverage.html":{}}}],["src/images/interface/image.interface.ts",{"_index":1152,"title":{},"body":{"interfaces/ImageInterface.html":{},"coverage.html":{}}}],["src/images/interface/processed",{"_index":1686,"title":{},"body":{"interfaces/ProcessedSaveDataInterface.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"coverage.html":{}}}],["src/images/providers/s3.provider.ts",{"_index":2039,"title":{},"body":{"injectables/S3Provider.html":{},"coverage.html":{}}}],["src/images/providers/s3.provider.ts:10",{"_index":2043,"title":{},"body":{"injectables/S3Provider.html":{}}}],["src/images/providers/s3.provider.ts:6",{"_index":2042,"title":{},"body":{"injectables/S3Provider.html":{}}}],["src/images/schema/images.schema.ts",{"_index":2625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/images/service/images.service.ts",{"_index":1257,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/images/service/images.service.ts:110",{"_index":1285,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:155",{"_index":1276,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:175",{"_index":1288,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:23",{"_index":1274,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:34",{"_index":1302,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:44",{"_index":1303,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:66",{"_index":1298,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/service/images.service.ts:89",{"_index":1295,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/util/create",{"_index":564,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"coverage.html":{}}}],["src/images/util/delete",{"_index":714,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"coverage.html":{}}}],["src/images/util/multer",{"_index":1514,"title":{},"body":{"injectables/MulterUploadUtil.html":{},"coverage.html":{}}}],["src/images/util/process",{"_index":1573,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2628,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/redis/service/redis.service",{"_index":1430,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["src/rental/alias/military",{"_index":2847,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/rental/const.ts",{"_index":2719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/rental/controller/rental.controller.ts",{"_index":1754,"title":{},"body":{"controllers/RentalController.html":{},"coverage.html":{}}}],["src/rental/controller/rental.controller.ts:107",{"_index":1804,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:117",{"_index":1785,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:48",{"_index":1772,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:65",{"_index":1799,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:75",{"_index":1780,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:85",{"_index":1777,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/controller/rental.controller.ts:97",{"_index":1792,"title":{},"body":{"controllers/RentalController.html":{}}}],["src/rental/dto/createrental/create",{"_index":614,"title":{},"body":{"classes/CreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/createrental/loc",{"_index":1393,"title":{},"body":{"classes/LocCreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/createrental/raw",{"_index":1708,"title":{},"body":{"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/details/edit",{"_index":762,"title":{},"body":{"classes/EditDetailsDto.html":{},"coverage.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts",{"_index":1528,"title":{},"body":{"classes/PricingDto.html":{},"coverage.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:6",{"_index":1532,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:7",{"_index":1531,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/pricing/pricing.dto.ts:8",{"_index":1530,"title":{},"body":{"classes/PricingDto.html":{}}}],["src/rental/dto/searchrental/given",{"_index":1087,"title":{},"body":{"classes/GivenNoticeSearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/process",{"_index":1564,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/raw",{"_index":1747,"title":{},"body":{"classes/RawSearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/request",{"_index":2019,"title":{},"body":{"classes/RequestCoordinatesDto.html":{},"coverage.html":{}}}],["src/rental/dto/searchrental/search",{"_index":2049,"title":{},"body":{"classes/SearchRentalDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/remove/remove",{"_index":1750,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/create",{"_index":600,"title":{},"body":{"classes/CreateQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/processed",{"_index":1689,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/raw",{"_index":1744,"title":{},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/sorted",{"_index":2115,"title":{},"body":{"interfaces/SortedUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/unavailability",{"_index":2164,"title":{},"body":{"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/schedule/validate",{"_index":2395,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts",{"_index":2143,"title":{},"body":{"classes/UnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:10",{"_index":2148,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:11",{"_index":2151,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:6",{"_index":2149,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:7",{"_index":2152,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:8",{"_index":2147,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/unavailability.dto.ts:9",{"_index":2150,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["src/rental/dto/unavailability/update/update",{"_index":2169,"title":{},"body":{"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/update/validate",{"_index":2518,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/dto/unavailability/validated",{"_index":2565,"title":{},"body":{"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["src/rental/interface/schemainterface/rental/rental.interface.ts",{"_index":1881,"title":{},"body":{"interfaces/RentalInterface.html":{},"coverage.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts",{"_index":2157,"title":{},"body":{"classes/UnavailabilityInterface.html":{},"coverage.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:10",{"_index":2162,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:5",{"_index":2160,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:6",{"_index":2163,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:7",{"_index":2158,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:8",{"_index":2161,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/interface/schemainterface/unavailability/unavailability.interface.ts:9",{"_index":2159,"title":{},"body":{"classes/UnavailabilityInterface.html":{}}}],["src/rental/middleware/validate",{"_index":2524,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["src/rental/pipes/create",{"_index":667,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/geo",{"_index":936,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/given",{"_index":1033,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"coverage.html":{}}}],["src/rental/pipes/map",{"_index":1498,"title":{},"body":{"injectables/MapNewRentalPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/pricing.pipe.ts",{"_index":1534,"title":{},"body":{"injectables/PricingPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/pricing.pipe.ts:14",{"_index":1544,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/pricing.pipe.ts:35",{"_index":1541,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/pricing.pipe.ts:51",{"_index":1539,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["src/rental/pipes/process",{"_index":1593,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/rental",{"_index":1867,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/request",{"_index":2023,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/sort",{"_index":2054,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/pipes/validate",{"_index":2294,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["src/rental/rental.module.ts",{"_index":1887,"title":{},"body":{"modules/RentalModule.html":{}}}],["src/rental/rental.module.ts:71",{"_index":1898,"title":{},"body":{"modules/RentalModule.html":{}}}],["src/rental/schema/rental.schema.ts",{"_index":2651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/unavailability",{"_index":2653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/validation/create",{"_index":2655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/schema/validation/search",{"_index":2657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/rental/service/rental.service.ts",{"_index":1924,"title":{},"body":{"injectables/RentalService.html":{},"coverage.html":{}}}],["src/rental/service/rental.service.ts:113",{"_index":1947,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:134",{"_index":1952,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:151",{"_index":1945,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:178",{"_index":1937,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:19",{"_index":1930,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:216",{"_index":1955,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:31",{"_index":1932,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:44",{"_index":1951,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:65",{"_index":1944,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/rental.service.ts:92",{"_index":1941,"title":{},"body":{"injectables/RentalService.html":{}}}],["src/rental/service/test",{"_index":2123,"title":{},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["src/rental/utils/generate",{"_index":883,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"coverage.html":{}}}],["src/rental/utils/geo",{"_index":992,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"coverage.html":{}}}],["src/secrets/secrets.ts",{"_index":2660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/controller/user.controller.ts",{"_index":2181,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/controller/user.controller.ts:25",{"_index":2189,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:38",{"_index":2200,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:53",{"_index":2196,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:66",{"_index":2193,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/dto/create",{"_index":704,"title":{},"body":{"injectables/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/delete",{"_index":760,"title":{},"body":{"injectables/DeleteUserDto.html":{},"coverage.html":{}}}],["src/user/dto/find",{"_index":880,"title":{},"body":{"injectables/FindUserDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts",{"_index":1490,"title":{},"body":{"injectables/LoginDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts:5",{"_index":1492,"title":{},"body":{"injectables/LoginDto.html":{}}}],["src/user/dto/login.dto.ts:6",{"_index":1491,"title":{},"body":{"injectables/LoginDto.html":{}}}],["src/user/dto/update",{"_index":2180,"title":{},"body":{"injectables/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/interface/user.interface.ts",{"_index":2219,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/middleware/validate",{"_index":2357,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["src/user/pipes/bcrypt.pipe.ts",{"_index":530,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"coverage.html":{}}}],["src/user/pipes/bcrypt.pipe.ts:12",{"_index":534,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["src/user/schema/user.schema.ts",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/schema/validation/create",{"_index":2663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/service/user.service.ts",{"_index":2241,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/service/user.service.ts:102",{"_index":2257,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:126",{"_index":2254,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:135",{"_index":2263,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:18",{"_index":2249,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:31",{"_index":2252,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:48",{"_index":2259,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:63",{"_index":2261,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:77",{"_index":2265,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.module.ts",{"_index":2225,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.module.ts:33",{"_index":2226,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/util/extract",{"_index":870,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"coverage.html":{}}}],["src/user/util/validate",{"_index":2380,"title":{},"body":{"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["stack",{"_index":839,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["start",{"_index":604,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2722,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2469,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["starttime",{"_index":897,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["starttime.diffnow().toobject().milliseconds",{"_index":1070,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["state",{"_index":657,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2593,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":826,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/HttpErrorFilter.html":{},"controllers/RentalController.html":{}}}],["status(500",{"_index":1218,"title":{},"body":{"controllers/ImagesController.html":{}}}],["steet",{"_index":1724,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["stop",{"_index":86,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["storage",{"_index":581,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["store",{"_index":2688,"title":{},"body":{"dependencies.html":{}}}],["stores",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["storing",{"_index":1464,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["strategies/jwt.strategy",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1379,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["stream",{"_index":1450,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["street",{"_index":1742,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["string",{"_index":140,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"interfaces/ImageUploadInterface.html":{},"injectables/ImagesService.html":{},"interfaces/JwtPayloadInterface.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/RentalInterface.html":{},"classes/RequestCoordinatesDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"classes/SearchRentalDto.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":651,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":793,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{},"license.html":{}}}],["sublicense",{"_index":2797,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LocCreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{}}}],["substantial",{"_index":2807,"title":{},"body":{"license.html":{}}}],["success",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["successful",{"_index":757,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["such",{"_index":2398,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["sumamry",{"_index":1286,"title":{},"body":{"injectables/ImagesService.html":{}}}],["summary",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"classes/EditDetailsDto.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":1381,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super({usernamefield",{"_index":1407,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["support",{"_index":2835,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2836,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":841,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["symbols",{"_index":1011,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["t",{"_index":2918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":1893,"title":{},"body":{"modules/RentalModule.html":{}}}],["table",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2665,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":596,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["take",{"_index":1142,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["tap",{"_index":1474,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tap(err",{"_index":1483,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["teehee",{"_index":832,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["temp",{"_index":875,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{}}}],["temp.bucket",{"_index":1580,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.email",{"_index":877,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["temp.etag",{"_index":1582,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.key",{"_index":1581,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.location",{"_index":1584,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.size",{"_index":1583,"title":{},"body":{"injectables/ProcessSaveDataUtil.html":{}}}],["temp.userid",{"_index":879,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["temp.username",{"_index":876,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["temp1",{"_index":2545,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["temp2",{"_index":2546,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["termination",{"_index":1482,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":45,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/RentalService.html":{},"injectables/TestRentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["test.length",{"_index":2018,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["test1",{"_index":2008,"title":{},"body":{"injectables/RentalService.html":{}}}],["test1.length",{"_index":2016,"title":{},"body":{"injectables/RentalService.html":{}}}],["test2",{"_index":2010,"title":{},"body":{"injectables/RentalService.html":{}}}],["test2.length",{"_index":2017,"title":{},"body":{"injectables/RentalService.html":{}}}],["testable",{"_index":2728,"title":{},"body":{"index.html":{}}}],["testfile.ts",{"_index":2664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["testing",{"_index":2126,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["testrentalservice",{"_index":2122,"title":{"injectables/TestRentalService.html":{}},"body":{"injectables/TestRentalService.html":{},"coverage.html":{}}}],["text",{"_index":795,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/MailOptionsInterface.html":{}}}],["they'll",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.addunavailabilityid(value",{"_index":1668,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.appconfig.access_key_id",{"_index":2046,"title":{},"body":{"injectables/S3Provider.html":{}}}],["this.appconfig.secret_access_key",{"_index":2048,"title":{},"body":{"injectables/S3Provider.html":{}}}],["this.authservice.changepassword(data",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.forgotpassword(data",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.user",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(req",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.resetpassword(data",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":1411,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.calculaterange(req.body.y1",{"_index":2562,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.checkdeadlist(request",{"_index":1443,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["this.checkforoverlap(processed",{"_index":1973,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.checkleapyear(start",{"_index":2513,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.configservice.get('app.access_key_id",{"_index":154,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.aws_s3_bucket_profile",{"_index":156,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.aws_s3_bucket_rentals",{"_index":155,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.cache_ttl",{"_index":152,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.geo_api_key",{"_index":142,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.geo_url",{"_index":143,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.jwt_exp_time",{"_index":147,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.local_db",{"_index":145,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.port",{"_index":149,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.redis_host",{"_index":150,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.redis_port",{"_index":151,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.remote_db",{"_index":144,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.secret_access_key",{"_index":153,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.configservice.get('app.secret_key",{"_index":146,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.converttodatetime(value.y1[0",{"_index":2457,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.converttodatetime(y1final)).daysinyear",{"_index":2464,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.createaddress(value",{"_index":990,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.creategivennotice(starttime",{"_index":1081,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["this.createmulteruploadutil.create(req",{"_index":1337,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.createquery(createquery",{"_index":1685,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createquery(createquery1",{"_index":1682,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createquery(createquery2",{"_index":1684,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["this.createrentalquery(rental",{"_index":1966,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.createupdatedata(raw",{"_index":703,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["this.createuserupdate(data",{"_index":2278,"title":{},"body":{"injectables/UserService.html":{}}}],["this.deletes3imagesutil.deletes3image(images",{"_index":1329,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.deletes3imagesutil.deletes3images(images",{"_index":1332,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.distilldto(value",{"_index":702,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["this.emailservice.createmailoptions(user.email",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.emailservice.sendmail(mailoptions",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.extractkeyvalueutil.extract(req",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.extractuserutil.extract(req",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.finduser({email",{"_index":2284,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateduration",{"_index":1875,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["this.generateduration.generaterentaldurationenum",{"_index":1876,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["this.geourlapiutil.getcoordinates",{"_index":987,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["this.getcoordinates",{"_index":959,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.getcoordinates(address",{"_index":991,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["this.imagesmodel",{"_index":1339,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.deletemany",{"_index":1333,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.deleteone",{"_index":1330,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.find",{"_index":1324,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesmodel.findbyid(img_id",{"_index":1326,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesservice.deleteallimages(req.user",{"_index":1234,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.deleteimages(images",{"_index":1232,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.fileuploadandsave(req",{"_index":1215,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findprofileimages(req.user",{"_index":1227,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findrentalimages(null",{"_index":1223,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.findrentalimages(params._id",{"_index":1225,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.saveimages",{"_index":1217,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.jwtservice.sign(payload",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logoutuser(req",{"_index":2280,"title":{},"body":{"injectables/UserService.html":{}}}],["this.makerequest",{"_index":1027,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["this.mappricingdto(value",{"_index":1563,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["this.multeruploadutil.upload(req",{"_index":1340,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.orderyears(sorted",{"_index":2112,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.positivenumber",{"_index":2305,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.citympg",{"_index":2320,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.hwympg",{"_index":2324,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.numdoors",{"_index":2350,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.numofseats",{"_index":2346,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.positivenumber.validate(value.specs.odometer",{"_index":2312,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.processrentaltime(starttime",{"_index":922,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["this.processsavedatautil.process(files",{"_index":1318,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.redisservice.get(key",{"_index":1434,"title":{},"body":{"guards/LoggedOutGaurd.html":{}}}],["this.redisservice.set(key",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.rentalmodel",{"_index":2131,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["this.rentalmodel(rental",{"_index":1964,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalmodel.find(query",{"_index":1967,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalmodel.findoneandupdate(filter",{"_index":1970,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.rentalservice.createrental(rental",{"_index":1848,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.editdetails(editdetailsdto",{"_index":1857,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.editpricing(pricingdto",{"_index":1855,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.removeunavailability(data",{"_index":1863,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.scheduleunavailability(processed",{"_index":1859,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.searchrental(searchrentaldto",{"_index":1853,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.rentalservice.updateunavailability(data",{"_index":1861,"title":{},"body":{"controllers/RentalController.html":{}}}],["this.s3",{"_index":582,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/ImagesService.html":{}}}],["this.s3.deleteobject",{"_index":734,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["this.s3.deleteobjects(params",{"_index":754,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["this.s3provider.gets3",{"_index":573,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/ImagesService.html":{}}}],["this.schema.validate(value",{"_index":1365,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["this.sort(value",{"_index":2111,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":799,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.typeofvalue",{"_index":2306,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.rentalid",{"_index":2307,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.citympg",{"_index":2319,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.color",{"_index":2342,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.description",{"_index":2333,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.fuel",{"_index":2327,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.gasgrade",{"_index":2330,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.hwympg",{"_index":2323,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.model",{"_index":2336,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.numdoors",{"_index":2349,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.numofseats",{"_index":2345,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.odometer",{"_index":2311,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.style",{"_index":2339,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(value.specs.transmission",{"_index":2315,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.typeofvalue.validate(x",{"_index":2353,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.unavailability.deletemany",{"_index":1986,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.find",{"_index":2551,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.unavailability.find(y1query",{"_index":2009,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.find(y2query",{"_index":2011,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.insertmany(merged",{"_index":1980,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.insertmany(y1",{"_index":1982,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.unavailability.updatemany",{"_index":1983,"title":{},"body":{"injectables/RentalService.html":{}}}],["this.user.find({email",{"_index":2372,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.usermodel(user",{"_index":2270,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":2274,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findoneandupdate(filter",{"_index":2283,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(user",{"_index":2211,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(data",{"_index":2218,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduser(query",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduser(user",{"_index":2215,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduser({email",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduserbyresetpasswordtoken({token",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(update",{"_index":2213,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validate2years(tyearb",{"_index":2100,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["this.validatecrossover(value.y1",{"_index":2514,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatecrossyearcongruence(value.y1[0",{"_index":2515,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatedetails(value",{"_index":2356,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["this.validatedto(req.body",{"_index":2561,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.validatedto(value",{"_index":2394,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["this.validateeachunavailability(value.y1",{"_index":2511,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validateeachunavailability(value.y2",{"_index":2512,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validateemail(req.body",{"_index":2379,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateemailutil",{"_index":2371,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateemailutil.validateemail(check",{"_index":2374,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["this.validateexpectedunavailability(req.body",{"_index":2564,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["this.validateminnotice(currentdatetime",{"_index":2460,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validatepricingdto(value",{"_index":1562,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["this.validaterelevance(value",{"_index":2509,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["this.validaterequestedtime(starttime",{"_index":1080,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["this.verifynewpasswordutil.checktypos",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.checktypos({newpassword",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.verifymatch({newpassword",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.verifynewpasswordutil.verifynew",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifynewpasswordutil.verifynew({newpassword",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["time",{"_index":836,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawSearchRentalDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["time.alias.ts",{"_index":2846,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["time.dto",{"_index":910,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{}}}],["time.dto.ts",{"_index":1565,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{},"coverage.html":{}}}],["time.dto.ts:6",{"_index":1571,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["time.dto.ts:7",{"_index":1572,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["time.dto.ts:8",{"_index":1570,"title":{},"body":{"classes/ProcessRentalTimeDto.html":{}}}],["times",{"_index":1048,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["timestamp",{"_index":1137,"title":{},"body":{"classes/HttpErrorFilter.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":700,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["tls",{"_index":2135,"title":{},"body":{"interfaces/TransporterInterface.html":{}}}],["toggle",{"_index":1866,"title":{},"body":{"controllers/RentalController.html":{}}}],["toitemindexes",{"_index":2431,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toitemindexes(unavailability",{"_index":2481,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["token",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/UserService.html":{}}}],["token.dto",{"_index":2267,"title":{},"body":{"injectables/UserService.html":{}}}],["token.dto.ts",{"_index":2037,"title":{},"body":{"injectables/ResetPasswordTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:5",{"_index":2038,"title":{},"body":{"injectables/ResetPasswordTokenDto.html":{}}}],["tokens",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokyo",{"_index":1503,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["tort",{"_index":2829,"title":{},"body":{"license.html":{}}}],["total",{"_index":2474,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["track",{"_index":1611,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["transform",{"_index":531,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["transform(value",{"_index":532,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["transformation",{"_index":1647,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["transforming",{"_index":2028,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["transmission",{"_index":645,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/EditDetailsDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["transport",{"_index":788,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["transporter",{"_index":772,"title":{},"body":{"injectables/EmailService.html":{}}}],["transporterinterface",{"_index":791,"title":{"interfaces/TransporterInterface.html":{}},"body":{"injectables/EmailService.html":{},"interfaces/TransporterInterface.html":{},"coverage.html":{}}}],["tree",{"_index":2540,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["true",{"_index":85,"title":{},"body":{"modules/AppConfigModule.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PositiveNumber.html":{},"injectables/RentalService.html":{},"classes/TypeOfValue.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/EmailService.html":{},"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/UserService.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/VerifyNewPasswordUtil.html":{},"index.html":{}}}],["tuples",{"_index":2433,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{},"miscellaneous/variables.html":{}}}],["turrendas",{"_index":2761,"title":{},"body":{"index.html":{}}}],["twice",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["two",{"_index":2077,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["ty1",{"_index":1648,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty1.push",{"_index":1656,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty2",{"_index":1649,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["ty2.push",{"_index":1665,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["tyearb",{"_index":2095,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["tyearb.length",{"_index":2099,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["tyearb.sort((a",{"_index":2101,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["type",{"_index":108,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckPasswordTypoDto.html":{},"injectables/CreateMulterUploadUtil.html":{},"classes/CreateQueryDto.html":{},"classes/CreateRentalDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/CreateUserDto.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/DeleteUserDto.html":{},"classes/EditDetailsDto.html":{},"injectables/EmailService.html":{},"classes/ErrorFilter.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/ExtractUserUtil.html":{},"injectables/FindUserDto.html":{},"classes/ForgotPasswordDto.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"classes/GivenNoticeSearchRentalDto.html":{},"classes/HttpErrorFilter.html":{},"classes/ImageDto.html":{},"interfaces/ImageInterface.html":{},"classes/ImageQueryResultsDto.html":{},"interfaces/ImageUploadInterface.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"interfaces/MailOptionsInterface.html":{},"injectables/MapNewRentalPipe.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/ProcessRentalTimeDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"interfaces/ProcessedSaveDataInterface.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"classes/RawCoordinatesDto.html":{},"classes/RawCreateRentalDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RawSearchRentalDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"interfaces/RentalInterface.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/RequestCoordinatesDto.html":{},"injectables/RequestCoordinatesPipe.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResetPasswordTokenDto.html":{},"injectables/S3Provider.html":{},"classes/SearchRentalDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/TestRentalService.html":{},"interfaces/TransporterInterface.html":{},"classes/TypeOfValue.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"interfaces/UserPropertyInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{},"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2843,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1554,"title":{},"body":{"injectables/PricingPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["typeofvalue",{"_index":2138,"title":{"classes/TypeOfValue.html":{}},"body":{"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{}}}],["types/bcrypt",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2714,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typo.dto",{"_index":2583,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["typo.dto.ts",{"_index":560,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{},"coverage.html":{}}}],["typo.dto.ts:2",{"_index":562,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typo.dto.ts:3",{"_index":561,"title":{},"body":{"classes/CheckPasswordTypoDto.html":{}}}],["typos",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["u1",{"_index":2412,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.doy",{"_index":2448,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.isinleapyear",{"_index":2479,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.start",{"_index":2449,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["u1.year",{"_index":2446,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unathi",{"_index":543,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["unathi2020",{"_index":783,"title":{},"body":{"injectables/EmailService.html":{}}}],["unauthorizedexception('invalid",{"_index":1414,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unavailability",{"_index":685,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unavailability')@usepipes(new",{"_index":1783,"title":{},"body":{"controllers/RentalController.html":{}}}],["unavailability's",{"_index":2413,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.dto",{"_index":612,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.dto.ts",{"_index":1690,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["unavailability.dto.ts:10",{"_index":1697,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.dto.ts:11",{"_index":1698,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:12",{"_index":1696,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:16",{"_index":2520,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:17",{"_index":2519,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:18",{"_index":2521,"title":{},"body":{"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:6",{"_index":1753,"title":{},"body":{"classes/RemoveUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:7",{"_index":1746,"title":{},"body":{"classes/RawScheduleUnavailabilityDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{}}}],["unavailability.dto.ts:8",{"_index":2178,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.dto.ts:9",{"_index":2177,"title":{},"body":{"classes/UpdateUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["unavailability.middleware",{"_index":1915,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailability.middleware.ts",{"_index":2525,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["unavailability.middleware.ts:11",{"_index":2531,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:144",{"_index":2532,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:22",{"_index":2535,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:47",{"_index":2541,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.middleware.ts:69",{"_index":2539,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["unavailability.pipe",{"_index":1835,"title":{},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{}}}],["unavailability.pipe.ts",{"_index":1594,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["unavailability.pipe.ts:12",{"_index":2392,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:121",{"_index":1607,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:122",{"_index":2409,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:133",{"_index":2429,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:16",{"_index":2071,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:184",{"_index":2426,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:19",{"_index":1624,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:210",{"_index":2407,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:24",{"_index":2391,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:28",{"_index":2414,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:30",{"_index":2075,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:40",{"_index":2066,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:47",{"_index":2436,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:57",{"_index":1614,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:58",{"_index":2069,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:60",{"_index":2437,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:79",{"_index":2419,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability.pipe.ts:85",{"_index":2064,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["unavailability[0",{"_index":2480,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability[index",{"_index":2496,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability[index].doy",{"_index":2495,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailability_model",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unavailabilitydto",{"_index":607,"title":{"classes/UnavailabilityDto.html":{}},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RawScheduleUnavailabilityDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["unavailabilitydtos",{"_index":2059,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavailabilityid",{"_index":687,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/RemoveUnavailabilityDto.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityinterface",{"_index":1960,"title":{"classes/UnavailabilityInterface.html":{}},"body":{"injectables/RentalService.html":{},"classes/UnavailabilityInterface.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["unavailabilitymodel",{"_index":1959,"title":{},"body":{"injectables/RentalService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityprovider",{"_index":1911,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityquerydto",{"_index":1629,"title":{"classes/UnavailabilityQueryDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/UnavailabilityQueryDto.html":{},"coverage.html":{}}}],["unavailabilityschema",{"_index":1909,"title":{},"body":{"modules/RentalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavailabilityschema.index({rentalid",{"_index":1920,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailabilityschema.index({unavailabilityid",{"_index":1921,"title":{},"body":{"modules/RentalModule.html":{}}}],["unavailable",{"_index":1612,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["unavilable",{"_index":2144,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["undefined",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailUtil.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2767,"title":{},"body":{"index.html":{}}}],["underlying",{"_index":1118,"title":{},"body":{"classes/HttpErrorFilter.html":{}}}],["unique",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/ValidateEmailMiddleware.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":2125,"title":{},"body":{"injectables/TestRentalService.html":{}}}],["unknown",{"_index":80,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["unschedule",{"_index":2389,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["unvalidated",{"_index":2408,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["up",{"_index":2145,"title":{},"body":{"classes/UnavailabilityDto.html":{}}}],["update",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEditDetailsPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"index.html":{}}}],["update.email",{"_index":2292,"title":{},"body":{"injectables/UserService.html":{}}}],["update.username",{"_index":2291,"title":{},"body":{"injectables/UserService.html":{}}}],["updated",{"_index":2542,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["updateprofile",{"_index":2185,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile(@body",{"_index":2212,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile(update",{"_index":2197,"title":{},"body":{"controllers/UserController.html":{}}}],["updater",{"_index":668,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updater1",{"_index":698,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["updater2",{"_index":699,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{}}}],["updates",{"_index":2201,"title":{},"body":{"controllers/UserController.html":{}}}],["updateunavailability",{"_index":1761,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["updateunavailability(@body",{"_index":1860,"title":{},"body":{"controllers/RentalController.html":{}}}],["updateunavailability(data",{"_index":1802,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalService.html":{}}}],["updateunavailabilitydatadto",{"_index":670,"title":{"classes/UpdateUnavailabilityDataDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"controllers/RentalController.html":{},"injectables/RentalService.html":{},"classes/UpdateUnavailabilityDataDto.html":{},"coverage.html":{}}}],["updateunavailabilitydto",{"_index":677,"title":{"classes/UpdateUnavailabilityDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/UpdateUnavailabilityDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":2247,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(data",{"_index":2264,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto",{"_index":2179,"title":{"injectables/UpdateUserDto.html":{}},"body":{"injectables/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":1703,"title":{},"body":{"classes/ProcessedUnavailabilityQueryDto.html":{}}}],["upload",{"_index":580,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{},"interfaces/ProcessedUploadDataInterface.html":{},"controllers/RentalController.html":{},"controllers/UserController.html":{},"coverage.html":{},"index.html":{}}}],["upload.interface",{"_index":1707,"title":{},"body":{"interfaces/ProcessedUploadDataInterface.html":{}}}],["upload.interface.ts",{"_index":1165,"title":{},"body":{"interfaces/ImageUploadInterface.html":{},"coverage.html":{}}}],["upload.util",{"_index":1248,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["upload.util.ts",{"_index":566,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{},"injectables/MulterUploadUtil.html":{},"coverage.html":{}}}],["upload.util.ts:10",{"_index":574,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["upload.util.ts:12",{"_index":572,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["upload.util.ts:6",{"_index":1515,"title":{},"body":{"injectables/MulterUploadUtil.html":{}}}],["upload.util.ts:8",{"_index":570,"title":{},"body":{"injectables/CreateMulterUploadUtil.html":{}}}],["uploaded",{"_index":1304,"title":{},"body":{"injectables/ImagesService.html":{},"index.html":{}}}],["uploadprofileimage",{"_index":1179,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadprofileimage(@req",{"_index":1221,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadprofileimage(req",{"_index":1199,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages",{"_index":1180,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages(@req",{"_index":1214,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadrentalimages(req",{"_index":1203,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploads",{"_index":1293,"title":{},"body":{"injectables/ImagesService.html":{}}}],["upon",{"_index":1479,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["uri",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":822,"title":{},"body":{"classes/ErrorFilter.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/ImagesService.html":{},"injectables/LoggingInterceptor.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":535,"title":{},"body":{"injectables/BcryptHashPipe.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GeoUrlApiUtil.html":{},"injectables/GivenNoticePipe.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/PricingPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"license.html":{}}}],["use(req",{"_index":2363,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["useclass",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1287,"title":{},"body":{"injectables/ImagesService.html":{},"classes/ProcessRentalTimeDto.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"modules/UserModule.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["usefactory",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@redirect('http://localhost:3000/auth/login')@post('logout",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@get('find",{"_index":2195,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@get('profile",{"_index":165,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@post('change",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@post('update",{"_index":2198,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@useguards(loggedoutgaurd)@redirect('http://localhost:3000/auth/login",{"_index":2191,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(loggedoutgaurd",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":1805,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":1843,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractUserUtil.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LocCreateRentalDto.html":{},"injectables/LocalStrategy.html":{},"guards/LoggedOutGaurd.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/RawCreateRentalDto.html":{},"modules/RentalModule.html":{},"injectables/ResetPasswordTokenDto.html":{},"interfaces/TransporterInterface.html":{},"classes/UnavailabilityDto.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user')@redirect('http://localhost:3000/auth/login",{"_index":2199,"title":{},"body":{"controllers/UserController.html":{}}}],["user's",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/EmailService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"index.html":{}}}],["user._doc",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{}}}],["user.dto.ts",{"_index":705,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:2",{"_index":1496,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:3",{"_index":1495,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:5",{"_index":708,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/DeleteUserDto.html":{},"injectables/FindUserDto.html":{},"injectables/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":706,"title":{},"body":{"injectables/CreateUserDto.html":{},"injectables/UpdateUserDto.html":{}}}],["user.dto.ts:7",{"_index":707,"title":{},"body":{"injectables/CreateUserDto.html":{}}}],["user.email",{"_index":2277,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email}/profile/${split[1",{"_index":740,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user.email}/rentals/${split[1",{"_index":732,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user.password",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.remove",{"_index":2287,"title":{},"body":{"injectables/UserService.html":{}}}],["user.resetpasswordexpires",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.resetpasswordtoken",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.save",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.setexpirationdate",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.setresettoken",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":1327,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MulterUploadUtil.html":{}}}],["user.util",{"_index":364,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.util.ts",{"_index":871,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"coverage.html":{}}}],["user.util.ts:6",{"_index":872,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["user.util.ts:9",{"_index":873,"title":{},"body":{"injectables/ExtractUserUtil.html":{}}}],["user/controller/user.controller",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["user/dto/find",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/interface/user.interface",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/schema/user.schema",{"_index":2228,"title":{},"body":{"modules/UserModule.html":{}}}],["user/service/user.service",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.module",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/util/extract",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user_email/category",{"_index":716,"title":{},"body":{"injectables/DeleteS3ImagesUtil.html":{}}}],["user_id",{"_index":1156,"title":{},"body":{"interfaces/ImageInterface.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProcessSaveDataUtil.html":{},"miscellaneous/variables.html":{}}}],["user_model",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":194,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":878,"title":{},"body":{"injectables/ExtractUserUtil.html":{},"injectables/ImagesService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{}}}],["userinterface",{"_index":412,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["usermodel",{"_index":2250,"title":{},"body":{"injectables/UserService.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodule",{"_index":191,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUserDto.html":{},"injectables/ExtractUserUtil.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginDto.html":{},"classes/LoginUserDto.html":{},"injectables/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserPropertyInterface.html":{},"miscellaneous/variables.html":{}}}],["userpropertyinterface",{"_index":408,"title":{"interfaces/UserPropertyInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserPropertyInterface.html":{},"coverage.html":{}}}],["userprovider",{"_index":2232,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":2735,"title":{},"body":{"index.html":{}}}],["userschema",{"_index":2227,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":387,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,...userprovider",{"_index":2236,"title":{},"body":{"modules/UserModule.html":{}}}],["uses",{"_index":1037,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"index.html":{}}}],["using",{"_index":900,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ValidateEmailUtil.html":{}}}],["usually",{"_index":2396,"title":{},"body":{"classes/ValidateScheduleUnavailabilityDto.html":{}}}],["util",{"_index":2432,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["util.interface",{"_index":858,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["util.interface.ts",{"_index":869,"title":{},"body":{"interfaces/ExtractKeyValueUtilInterface.html":{},"coverage.html":{}}}],["util/create",{"_index":1247,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/delete",{"_index":1249,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/extract",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["util/multer",{"_index":1251,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/process",{"_index":1252,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["util/validate",{"_index":2368,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["util/verify",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["utils/generate",{"_index":1819,"title":{},"body":{"controllers/RentalController.html":{},"injectables/RentalDurationPipe.html":{},"modules/RentalModule.html":{}}}],["utils/geo",{"_index":975,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{},"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["uuid",{"_index":1613,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["v1/rental/update",{"_index":2560,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["v1/user/create",{"_index":2378,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["v7",{"_index":1015,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{},"classes/RawCoordinatesDto.html":{}}}],["val",{"_index":2097,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["val.year",{"_index":2098,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["valid",{"_index":2317,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{}}}],["valid('development",{"_index":43,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validate",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["validate(email",{"_index":1405,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate2years",{"_index":2062,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["validatecrossover",{"_index":2402,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validatecrossyearcongruence",{"_index":2403,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validated",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatedetails",{"_index":2298,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["validatedto",{"_index":2390,"title":{},"body":{"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["validatedunavailabilitydto",{"_index":1606,"title":{"classes/ValidatedUnavailabilityDto.html":{}},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidatedUnavailabilityDto.html":{},"coverage.html":{}}}],["validateeachunavailability",{"_index":2404,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateeditdetailspipe",{"_index":1776,"title":{"injectables/ValidateEditDetailsPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateEditDetailsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validateemail",{"_index":2360,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{}}}],["validateemail(check",{"_index":2383,"title":{},"body":{"injectables/ValidateEmailUtil.html":{}}}],["validateemail(value",{"_index":2365,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["validateemailmiddleware",{"_index":2230,"title":{"injectables/ValidateEmailMiddleware.html":{}},"body":{"modules/UserModule.html":{},"injectables/ValidateEmailMiddleware.html":{},"coverage.html":{}}}],["validateemailutil",{"_index":2359,"title":{"injectables/ValidateEmailUtil.html":{}},"body":{"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateEmailUtil.html":{},"coverage.html":{}}}],["validateexpectedunavailability",{"_index":2529,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["validateminnotice",{"_index":2405,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validatepricingdto",{"_index":1538,"title":{},"body":{"injectables/PricingPipe.html":{}}}],["validaterelevance",{"_index":2406,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateremoveunavailabilitypipe",{"_index":1784,"title":{"injectables/ValidateRemoveUnavailabilityPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validaterequestedtime",{"_index":1050,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["validaterequestedtime(starttime",{"_index":1058,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["validates",{"_index":1899,"title":{},"body":{"modules/RentalModule.html":{}}}],["validatescheduleunavailabilitydto",{"_index":2065,"title":{"classes/ValidateScheduleUnavailabilityDto.html":{}},"body":{"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{}}}],["validatesequential",{"_index":2063,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["validateunavailability",{"_index":2417,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["validateunavailabilitypipe",{"_index":1836,"title":{"injectables/ValidateUnavailabilityPipe.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"coverage.html":{},"overview.html":{}}}],["validateunavailabilitypipe())@usepipes(new",{"_index":1791,"title":{},"body":{"controllers/RentalController.html":{}}}],["validateupdateunavailability",{"_index":1890,"title":{},"body":{"modules/RentalModule.html":{}}}],["validateupdateunavailabilitydto",{"_index":675,"title":{"classes/ValidateUpdateUnavailabilityDto.html":{}},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["validateupdateunavailabilitymiddleware",{"_index":1759,"title":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}},"body":{"controllers/RentalController.html":{},"modules/RentalModule.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{}}}],["validateuser",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validateuser(email",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":77,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AuthService.html":{},"injectables/GivenNoticePipe.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["validation.pipe",{"_index":1813,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["validation.pipe.ts",{"_index":1356,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:14",{"_index":1361,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation.pipe.ts:17",{"_index":1362,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation.schema",{"_index":1816,"title":{},"body":{"controllers/RentalController.html":{},"controllers/UserController.html":{}}}],["validation.schema.ts",{"_index":2656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":73,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validationschema",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/JoiValidationPipe.html":{}}}],["value",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptHashPipe.html":{},"injectables/CreateMulterUploadUtil.html":{},"injectables/CreateUpdaterDtoPipe.html":{},"injectables/DeleteS3ImagesUtil.html":{},"injectables/EmailService.html":{},"injectables/ExtractKeyValueUtil.html":{},"interfaces/ExtractKeyValueUtilInterface.html":{},"injectables/GeoUrlApiPipe.html":{},"injectables/GivenNoticePipe.html":{},"injectables/ImagesService.html":{},"injectables/JoiValidationPipe.html":{},"classes/LocCreateRentalDto.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/MulterUploadUtil.html":{},"injectables/PositiveNumber.html":{},"injectables/PricingPipe.html":{},"injectables/ProcessSaveDataUtil.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RentalService.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/S3Provider.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/TypeOfValue.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateEmailMiddleware.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value.address",{"_index":1082,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/MapNewRentalPipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.coords",{"_index":1511,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.email",{"_index":2373,"title":{},"body":{"injectables/ValidateEmailMiddleware.html":{}}}],["value.features",{"_index":1086,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["value.features.length",{"_index":2352,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.givennotice",{"_index":1879,"title":{},"body":{"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.location.city",{"_index":982,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.location.street",{"_index":981,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.location.zip",{"_index":983,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["value.newend",{"_index":694,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.newstart",{"_index":692,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.newtitle",{"_index":696,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.password",{"_index":548,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["value.price",{"_index":1085,"title":{},"body":{"injectables/GivenNoticePipe.html":{},"injectables/RentalDurationPipe.html":{},"injectables/RequestCoordinatesPipe.html":{}}}],["value.rentalduration",{"_index":2030,"title":{},"body":{"injectables/RequestCoordinatesPipe.html":{}}}],["value.rentalendtime",{"_index":1878,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["value.rentalid",{"_index":690,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.rentalstarttime",{"_index":1877,"title":{},"body":{"injectables/RentalDurationPipe.html":{}}}],["value.specs",{"_index":2309,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.citympg",{"_index":2318,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.color",{"_index":2341,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.description",{"_index":2332,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.fuel",{"_index":2326,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.gasgrade",{"_index":2329,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.hwympg",{"_index":2322,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.model",{"_index":2335,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.numdoors",{"_index":2348,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.numofseats",{"_index":2344,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.odometer",{"_index":2310,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.style",{"_index":2338,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.specs.transmission",{"_index":2314,"title":{},"body":{"injectables/ValidateEditDetailsPipe.html":{}}}],["value.ts",{"_index":2140,"title":{},"body":{"classes/TypeOfValue.html":{},"coverage.html":{}}}],["value.ts:5",{"_index":2142,"title":{},"body":{"classes/TypeOfValue.html":{}}}],["value.unavailability",{"_index":2105,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability.filter",{"_index":2096,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability.sort((a",{"_index":2110,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailability[0].year",{"_index":2093,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["value.unavailabilityid",{"_index":688,"title":{},"body":{"injectables/CreateUpdaterDtoPipe.html":{},"injectables/ValidateRemoveUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.util",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["value.util.ts",{"_index":850,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{},"coverage.html":{}}}],["value.util.ts:12",{"_index":855,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["value.util.ts:9",{"_index":853,"title":{},"body":{"injectables/ExtractKeyValueUtil.html":{}}}],["value.value.features",{"_index":1507,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.listed",{"_index":1513,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.photos",{"_index":1512,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.pricing",{"_index":1509,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.registration",{"_index":1506,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.scheduling",{"_index":1508,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.value.specs",{"_index":1505,"title":{},"body":{"injectables/MapNewRentalPipe.html":{}}}],["value.y1",{"_index":2517,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["value.y1.ed",{"_index":2553,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y1.map(x",{"_index":1654,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["value.y1.sd",{"_index":2552,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2",{"_index":1653,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["value.y2.ed",{"_index":2558,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2.map(x",{"_index":1663,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["value.y2.sd",{"_index":2557,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["value.y2[0",{"_index":2516,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["values",{"_index":1542,"title":{},"body":{"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["var",{"_index":1277,"title":{},"body":{"injectables/ImagesService.html":{}}}],["variable",{"_index":2596,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":83,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["vehicle",{"_index":1195,"title":{},"body":{"controllers/ImagesController.html":{},"classes/RawCreateRentalDto.html":{},"controllers/RentalController.html":{},"index.html":{}}}],["vehicle.address",{"_index":980,"title":{},"body":{"injectables/GeoUrlApiPipe.html":{}}}],["vehicles",{"_index":2736,"title":{},"body":{"index.html":{}}}],["verification",{"_index":2570,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verified",{"_index":545,"title":{},"body":{"injectables/BcryptHashPipe.html":{}}}],["verifies",{"_index":2421,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["verify",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"classes/UnavailabilityQueryDto.html":{},"injectables/UserService.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"injectables/VerifyNewPasswordUtil.html":{}}}],["verifymatch",{"_index":2572,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifymatch(data",{"_index":2577,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynew",{"_index":2573,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynew(data",{"_index":2579,"title":{},"body":{"injectables/VerifyNewPasswordUtil.html":{}}}],["verifynewpassworddto",{"_index":2566,"title":{"classes/VerifyNewPasswordDto.html":{}},"body":{"classes/VerifyNewPasswordDto.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{}}}],["verifynewpasswordutil",{"_index":342,"title":{"injectables/VerifyNewPasswordUtil.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/VerifyNewPasswordUtil.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":1692,"title":{},"body":{"classes/ProcessedUnavailabilityDto.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"classes/UpdateUnavailabilityDto.html":{},"index.html":{}}}],["versionid",{"_index":1280,"title":{},"body":{"injectables/ImagesService.html":{}}}],["vin",{"_index":655,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"miscellaneous/variables.html":{}}}],["violate",{"_index":1546,"title":{},"body":{"injectables/PricingPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["void",{"_index":1122,"title":{},"body":{"classes/HttpErrorFilter.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"injectables/ValidateEmailUtil.html":{}}}],["warranties",{"_index":2813,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2809,"title":{},"body":{"license.html":{}}}],["web",{"_index":2733,"title":{},"body":{"index.html":{}}}],["wed",{"_index":1949,"title":{},"body":{"injectables/RentalService.html":{}}}],["week",{"_index":932,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"miscellaneous/enumerations.html":{}}}],["weekly",{"_index":663,"title":{},"body":{"classes/CreateRentalDto.html":{},"classes/PricingDto.html":{},"injectables/PricingPipe.html":{},"classes/RawCreateRentalDto.html":{},"interfaces/RentalInterface.html":{},"injectables/RentalService.html":{},"miscellaneous/variables.html":{}}}],["weeks",{"_index":904,"title":{},"body":{"injectables/GenerateRentalDurationEnumUtil.html":{},"classes/ProcessRentalTimeDto.html":{},"miscellaneous/enumerations.html":{}}}],["well",{"_index":1335,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"classes/RawCreateRentalDto.html":{},"index.html":{}}}],["west",{"_index":1001,"title":{},"body":{"injectables/GeoUrlApiUtil.html":{}}}],["when('fuel",{"_index":2879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":2826,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":2769,"title":{},"body":{"index.html":{}}}],["within",{"_index":1925,"title":{},"body":{"injectables/RentalService.html":{}}}],["without",{"_index":2788,"title":{},"body":{"license.html":{}}}],["working",{"_index":1888,"title":{},"body":{"modules/RentalModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["world",{"_index":259,"title":{},"body":{"injectables/AppService.html":{}}}],["wrapper",{"_index":1045,"title":{},"body":{"injectables/GivenNoticePipe.html":{}}}],["wraps",{"_index":1448,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["written",{"_index":1169,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"index.html":{}}}],["x",{"_index":2084,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateEditDetailsPipe.html":{}}}],["x.doy",{"_index":1659,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.end",{"_index":1661,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.rentalid",{"_index":1657,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.start",{"_index":1660,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.title",{"_index":1662,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["x.year",{"_index":1658,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/SortUnavailabilityPipe.html":{}}}],["y1",{"_index":1655,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["y1's",{"_index":2461,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.concat(y2",{"_index":1978,"title":{},"body":{"injectables/RentalService.html":{}}}],["y1.ed",{"_index":2548,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y1.end",{"_index":2505,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.rentalid",{"_index":2501,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.sd",{"_index":2547,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y1.start",{"_index":2503,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1.title",{"_index":2507,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1[0",{"_index":1670,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].end",{"_index":1674,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].start",{"_index":1673,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[0].year",{"_index":1672,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y1[y1.length",{"_index":1671,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final",{"_index":2462,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.doy",{"_index":2466,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.doy}/${y1final.year",{"_index":2468,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1final.year",{"_index":2467,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y1query",{"_index":1681,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{}}}],["y2",{"_index":1664,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"classes/ValidateUpdateUnavailabilityDto.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"classes/ValidatedUnavailabilityDto.html":{}}}],["y2.ed",{"_index":2550,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y2.end",{"_index":2506,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.rentalid",{"_index":2502,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.sd",{"_index":2549,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["y2.start",{"_index":2504,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2.title",{"_index":2508,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0",{"_index":1676,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0].doy",{"_index":2470,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["y2[0].end",{"_index":1680,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[0].start",{"_index":1679,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[0].year",{"_index":1678,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2[y2.length",{"_index":1677,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["y2query",{"_index":1683,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityDto.html":{},"injectables/RentalService.html":{}}}],["ya",{"_index":2108,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{}}}],["yaer",{"_index":2538,"title":{},"body":{"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["yb",{"_index":2109,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{}}}],["year",{"_index":605,"title":{},"body":{"classes/CreateQueryDto.html":{},"injectables/ProcessUnavailabilityPipe.html":{},"classes/ProcessedUnavailabilityQueryDto.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/UnavailabilityDto.html":{},"classes/UnavailabilityInterface.html":{},"classes/UnavailabilityQueryDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{},"miscellaneous/variables.html":{}}}],["year's",{"_index":2057,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["year(s",{"_index":2094,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{},"injectables/ValidateUnavailabilityPipe.html":{}}}],["year**](https://www.timeanddate.com/date/leapyear.html",{"_index":2478,"title":{},"body":{"injectables/ValidateUnavailabilityPipe.html":{}}}],["year.end",{"_index":1643,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.max.doy",{"_index":1638,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.min.doy",{"_index":1640,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.min.rentalid",{"_index":1634,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.start",{"_index":1642,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["year.year",{"_index":1635,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{}}}],["yeara",{"_index":2104,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["yearb",{"_index":2073,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["yearb[0].year",{"_index":2085,"title":{},"body":{"injectables/SortUnavailabilityPipe.html":{}}}],["years",{"_index":1652,"title":{},"body":{"injectables/ProcessUnavailabilityPipe.html":{},"injectables/RentalService.html":{},"injectables/SortUnavailabilityPipe.html":{},"interfaces/SortedUnavailabilityDto.html":{},"classes/ValidateScheduleUnavailabilityDto.html":{},"injectables/ValidateUnavailabilityPipe.html":{},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{}}}],["yoz3hb.zhcs_tkvemior7qyyyaazskvd",{"_index":1282,"title":{},"body":{"injectables/ImagesService.html":{}}}],["zip",{"_index":1726,"title":{},"body":{"classes/RawCreateRentalDto.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/RentalModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_providers\n\n\n\ncluster_AppConfigModule_exports\n\n\n\n\nAppConfigService \n\nAppConfigService \n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nAppConfigService  -->\n\nAppConfigModule->AppConfigService \n\n\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAppConfigModule -->\n\nAppConfigService->AppConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/configuration.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Import and provide app configuration related classes\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import Joi = require(\"@hapi/joi\");\nimport { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport configuration from \"./configuration\";\nimport { AppConfigService } from \"./configuration.service\";\n/**\n * Import and provide app configuration related classes\n */\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            load: [configuration],\n            validationSchema: Joi.object({\n                // GENERAL\n                NODE_ENV: Joi.string()\n                  .valid('development', 'production', 'test')\n                  .default('development'),\n                PORT: Joi.number().default(3000),\n                // GEO LOCATION API\n                GEO_API_KEY: Joi.string().required(),\n                GEO_URL: Joi.string().required(),\n                // DATABASE\n                REMOTE_DB: Joi.string(),\n                LOCAL_DB: Joi.string(),\n                // REDIS SERVER\n                REDIS_HOST: Joi.string().required(),\n                REDIS_PORT: Joi.string().required(),\n                CACHE_TTL: Joi.string().required(),\n                // AWS API ACCESS\n                ACCESS_KEY_ID: Joi.string().required(),\n                SECRET_ACCESS_KEY: Joi.string().required(),\n                // JWT AUTHORIZATION\n                SECRET_KEY: Joi.string().required(),\n                JWT_EXP_TIME: Joi.string().required(),\n                AWS_S3_BUCKET_RENTALS: Joi.string().required(),\n                AWS_S3_BUCKET_PROFILE: Joi.string().required(),\n            }),\n            validationOptions: {\n                allowUnkown: false, // enforce validation, don't allow unknown keys in the env variables\n                abortEarly: true, // stop validation on first error\n            }\n        })\n    ],\n    providers: [ConfigService, AppConfigService],\n    exports: [ConfigService, AppConfigService]\n})\nexport class AppConfigModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/configuration.service.ts\n        \n\n            \n                Description\n            \n            \n                This class provides the configservice 'getter' functionality\n\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    geo_api_key\n                                \n                                \n                                    geo_url\n                                \n                                \n                                    remote_db\n                                \n                                \n                                    local_db\n                                \n                                \n                                    secret_key\n                                \n                                \n                                    jwt_exp_time\n                                \n                                \n                                    port\n                                \n                                \n                                    redis_host\n                                \n                                \n                                    redis_port\n                                \n                                \n                                    cache_ttl\n                                \n                                \n                                    secret_access_key\n                                \n                                \n                                    access_key_id\n                                \n                                \n                                    aws_s3_bucket_rentals\n                                \n                                \n                                    aws_s3_bucket_profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/configuration.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        geo_api_key\n                    \n                \n\n                \n                    \n                        getgeo_api_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:11\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        geo_url\n                    \n                \n\n                \n                    \n                        getgeo_url()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        remote_db\n                    \n                \n\n                \n                    \n                        getremote_db()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        local_db\n                    \n                \n\n                \n                    \n                        getlocal_db()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secret_key\n                    \n                \n\n                \n                    \n                        getsecret_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jwt_exp_time\n                    \n                \n\n                \n                    \n                        getjwt_exp_time()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:26\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        port\n                    \n                \n\n                \n                    \n                        getport()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        redis_host\n                    \n                \n\n                \n                    \n                        getredis_host()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        redis_port\n                    \n                \n\n                \n                    \n                        getredis_port()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        cache_ttl\n                    \n                \n\n                \n                    \n                        getcache_ttl()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:38\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secret_access_key\n                    \n                \n\n                \n                    \n                        getsecret_access_key()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:41\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        access_key_id\n                    \n                \n\n                \n                    \n                        getaccess_key_id()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        aws_s3_bucket_rentals\n                    \n                \n\n                \n                    \n                        getaws_s3_bucket_rentals()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        aws_s3_bucket_profile\n                    \n                \n\n                \n                    \n                        getaws_s3_bucket_profile()\n                    \n                \n                            \n                                \n                                    Defined in src/config/configuration.service.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\n/**\n * This class provides the configservice 'getter' functionality\n */\n@Injectable()\nexport class AppConfigService {\n    constructor(private readonly configService: ConfigService) {}\n\n    get geo_api_key(): string {\n        return this.configService.get('app.geo_api_key');\n    }\n    get geo_url(): string {\n        return this.configService.get('app.geo_url');\n    }\n    get remote_db(): string {\n        return this.configService.get('app.remote_db');\n    }\n    get local_db(): string {\n        return this.configService.get('app.local_db');\n    }\n    get secret_key(): string {\n        return this.configService.get('app.secret_key');\n    }\n    get jwt_exp_time(): string {\n        return this.configService.get('app.jwt_exp_time');\n    }\n    get port(): number { \n        return this.configService.get('app.port');\n    }\n    get redis_host(): string { \n        return this.configService.get('app.redis_host');\n    }\n    get redis_port(): string { \n        return this.configService.get('app.redis_port');\n    }\n    get cache_ttl(): string { \n        return this.configService.get('app.cache_ttl');\n    }\n   get secret_access_key(): string {\n       return this.configService.get('app.secret_access_key');\n   }\n   get access_key_id(): string {\n       return this.configService.get('app.access_key_id');\n   }\n   get aws_s3_bucket_rentals(): string {\n       return this.configService.get('app.aws_s3_bucket_rentals');\n   }\n   get aws_s3_bucket_profile(): string {\n       return this.configService.get('app.aws_s3_bucket_profile');\n   }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Post, Request, Req, HttpCode } from '@nestjs/common';\nimport { JwtAuthGuard } from './auth/gaurds/jwt-auth.guard';\nimport { LoggedOutGaurd } from './auth/gaurds/logged-out.guard';\n\n@Controller()\nexport class AppController {\n  // constructor() {}\n\n  @UseGuards(JwtAuthGuard)\n  @UseGuards(LoggedOutGaurd)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\nAppModule -->\n\nAppModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nRentalModule\n\nRentalModule\n\nAppModule -->\n\nRentalModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UserController\n                        \n                        \n                            RentalController\n                        \n                        \n                            ImagesController\n                        \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            AppModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ImagesModule\n                        \n                        \n                            RentalModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RentalModule } from './rental/rental.module';\nimport { UserModule } from './user/user.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RouterModule } from 'nest-router';\nimport { routes } from './common/routes';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { HttpErrorFilter } from './common/filters/http-error.filter';\nimport { ErrorFilter } from './common/filters/error.filters';\nimport { LoggingInterceptor } from './common/interceptors/logging-interceptor';\nimport { ImagesModule } from './images/images.module';\n// import { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { AuthModule } from './auth/auth.module';\nimport { UserController } from './user/controller/user.controller';\nimport { RentalController } from './rental/controller/rental.controller';\nimport { ImagesController } from './images/controller/images.controller';\nimport { AppConfigModule } from './config/configuration.module';\nimport { AppConfigService } from './config/configuration.service';\nimport { AuthController } from './auth/controller/auth.controller';\nimport { RedisModule } from './redis/redis.module';\n\n@Module({\n  imports: [\n    AppModule,\n    RentalModule,\n    AuthModule,\n    UserModule,\n    ImagesModule,\n    RouterModule.forRoutes(routes),\n    // parses the .env file, assign key/value pairs to process.env, stores results in configService\n    // can set alternative .env file path\n    AppConfigModule,\n    RedisModule,\n    MongooseModule.forRootAsync({\n      imports: [AppConfigModule],\n      useFactory: async (appConfigService: AppConfigService) => ({\n        uri: appConfigService.remote_db,\n      }),\n      inject: [AppConfigService],\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '../client/build'),\n    }),\n  ],\n  controllers: [AppController, UserController, RentalController, ImagesController, AuthController],\n  providers: [\n    AppService,\n    { provide: APP_FILTER, useClass: HttpErrorFilter },\n    { provide: APP_INTERCEPTOR, useClass: LoggingInterceptor },\n    { provide: APP_FILTER, useClass: ErrorFilter },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(req, data: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Post('change-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:47\n                \n            \n\n\n            \n                \n                    Change Password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(data: ForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:55\n                \n            \n\n\n            \n                \n                    Forgot Password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:23\n                \n            \n\n\n            \n                \n                    Login\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Redirect('http://localhost:3000/auth/login')@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:37\n                \n            \n\n\n            \n                \n                    Logout\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(data: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:64\n                \n            \n\n\n            \n                \n                    Reset Password\nsummary: resets the user's password with the data submitted from the email redirect\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, HttpCode, Post, UseGuards, Request, Body, Req, Redirect, Res } from \"@nestjs/common\";\nimport { Response } from \"express\";\nimport { ChangePasswordDto } from \"../dto/change-password.dto\";\nimport { ForgotPasswordDto } from \"../dto/forgot-password.dto\";\nimport { ResetPasswordDto } from \"../dto/reset-password.dto\";\nimport { JwtAuthGuard } from \"../gaurds/jwt-auth.guard\";\nimport { LocalAuthGuard } from \"../gaurds/local-auth.guard\";\nimport { LoggedOutGaurd } from \"../gaurds/logged-out.guard\";\nimport { AuthService } from \"../service/auth.service\";\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) { }\n\n    /**\n     * Login\n     * @param email\n     * @param password \n     */\n    @HttpCode(200)\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Request() req, @Res() res: Response) {\n        const cookie = await this.authService.login(req.user);\n        res.setHeader('Set-Cookie', cookie);\n        req.user._doc.password = undefined;\n        return res.send(req.user._doc);\n    }\n\n    /**\n     * Logout\n     * @param req\n     */\n    @UseGuards(JwtAuthGuard)\n    @Redirect('http://localhost:3000/auth/login')\n    @Post('logout')\n    async logout(@Request() req) {\n        return await this.authService.logout(req);\n    }\n\n    /**\n     * Change Password\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Post('change-password')\n    async changePassword(@Req() req,@Body() data: ChangePasswordDto) {\n        return this.authService.changePassword(data, req)\n    }\n\n    /**\n     * Forgot Password\n     */\n    @Post('forgot-password')\n    async forgotPassword(@Body() data: ForgotPasswordDto) {\n        return this.authService.forgotPassword(data)\n    }\n\n    /**\n     * Reset Password\n     * **summary**: resets the user's password with the data submitted from the email redirect\n     */\n    @Post('reset-password')\n    async resetPassword(@Body() data: ResetPasswordDto) {\n        return await this.authService.resetPassword(data)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAppConfigModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nAuthModule->EmailService \n\n\n\n\n\nExtractKeyValueUtil \n\nExtractKeyValueUtil \n\nExtractKeyValueUtil  -->\n\nAuthModule->ExtractKeyValueUtil \n\n\n\n\n\nLoggedOutGaurd \n\nLoggedOutGaurd \n\nLoggedOutGaurd  -->\n\nAuthModule->LoggedOutGaurd \n\n\n\n\n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil  -->\n\nAuthModule->VerifyNewPasswordUtil \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAuthModule -->\n\nAppConfigService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nAuthModule -->\n\nExtractKeyValueUtil->AuthModule\n\n\n\n\n\nExtractUserUtil\n\nExtractUserUtil\n\nAuthModule -->\n\nExtractUserUtil->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nAuthModule -->\n\nVerifyNewPasswordUtil->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            ExtractUserUtil\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            EmailService\n                        \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            LoggedOutGaurd\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserModule } from '../user/user.module';\nimport { AuthService } from './service/auth.service';\nimport { jwtConstants } from './constant';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { AuthController } from './controller/auth.controller';\nimport { RedisModule } from '../redis/redis.module';\nimport { LoggedOutGaurd } from './gaurds/logged-out.guard';\nimport { ExtractKeyValueUtil } from './util/extract-key-value.util';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { VerifyNewPasswordUtil } from './util/verify-new-password.util';\nimport { EmailService } from '../email/email.service';\nimport { AppConfigService } from '../config/configuration.service';\nimport { ExtractUserUtil } from '../user/util/extract-user.util';\n\n@Module({\n  imports: [\n    AppConfigModule,\n    ConfigModule,\n    UserModule,\n    PassportModule,\n    RedisModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: {expiresIn: `${jwtConstants.jwt_exp_time}s`}, // add this expiresIn value to the `jwtConstants` object\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy, LoggedOutGaurd, ExtractKeyValueUtil, VerifyNewPasswordUtil, EmailService, AppConfigService, ExtractUserUtil],\n  exports: [AuthService, LoggedOutGaurd, ExtractKeyValueUtil, VerifyNewPasswordUtil, EmailService],\n  controllers:[AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/service/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Passport Local\nRetrieve a user and verify their password with ValidateUser()\nCreate a JWT from the validated user's id and username\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, redisService: RedisService, extractKeyValueUtil: ExtractKeyValueUtil, verifyNewPasswordUtil: VerifyNewPasswordUtil, emailService: EmailService, appConfig: AppConfigService, extractUserUtil: ExtractUserUtil)\n                    \n                \n                        \n                            \n                                Defined in src/auth/service/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractKeyValueUtil\n                                                  \n                                                        \n                                                                        ExtractKeyValueUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyNewPasswordUtil\n                                                  \n                                                        \n                                                                        VerifyNewPasswordUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractUserUtil\n                                                  \n                                                        \n                                                                        ExtractUserUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(data: ChangePasswordDto, req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:99\n                \n            \n\n\n            \n                \n                    Change Password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(data: ForgotPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:132\n                \n            \n\n\n            \n                \n                    Forgot Password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ForgotPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:60\n                \n            \n\n\n            \n                \n                    Login (Assign a JWT)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:80\n                \n            \n\n\n            \n                \n                    Logout\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(data: ResetPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:157\n                \n            \n\n\n            \n                \n                    Reset Password \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:42\n                \n            \n\n\n            \n                \n                    Initial User Validation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../../user/service/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { FindUserDto } from '../../user/dto/find-user.dto';\nimport { UserPropertyInterface } from '../interface/user-property.interface';\nimport * as bcrypt from 'bcrypt';\nimport { UserInterface } from '../../user/interface/user.interface';\nimport { Request } from 'express';\nimport { RedisService } from '../../redis/service/redis.service';\nimport { ExtractKeyValueUtil } from '../util/extract-key-value.util';\nimport { ChangePasswordDto } from '../dto/change-password.dto';\nimport { VerifyNewPasswordUtil } from '../util/verify-new-password.util';\nimport { ForgotPasswordDto } from '../dto/forgot-password.dto';\nimport { EmailService } from '../../email/email.service';\nimport { ResetPasswordDto } from '../dto/reset-password.dto';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { ExtractUserUtil } from '../../user/util/extract-user.util';\n\n/**\n * Passport Local\n * Retrieve a user and verify their password with ValidateUser()\n * Create a JWT from the validated user's id and username\n */\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly userService: UserService,\n        private readonly jwtService: JwtService,\n        private readonly redisService: RedisService,\n        private readonly extractKeyValueUtil: ExtractKeyValueUtil,\n        private readonly verifyNewPasswordUtil: VerifyNewPasswordUtil,\n        private readonly emailService: EmailService,\n        private readonly appConfig: AppConfigService,\n        private readonly extractUserUtil: ExtractUserUtil\n    ) { }\n\n    /**\n     * Initial User Validation\n     * @param email \n     * @param pass \n     */\n    async validateUser(email: string, pass: string): Promise {\n        try {\n            const query: FindUserDto = { email: email };\n            const user: UserInterface = await this.userService.findUser(query); // find user in db by username\n            // validate the given password\n            await this.verifyNewPasswordUtil.verifyMatch({newPassword: pass, oldPassword: user.password});\n            const { password, ...result } = user;\n            return result;\n        } catch (err) {\n            throw new Error(err);\n            // catch and report the unique email error\n        }\n    }\n\n    /**\n     * Login (Assign a JWT)\n     * @param user \n     */\n    async login(user: any) {\n        console.log(`here is the user property created by Passport`)\n        console.log(user._doc)\n        const packet: UserPropertyInterface = user._doc;\n        // create the JWT payload\n        const payload = {\n            username: packet.username,\n            email: packet.email,\n            sub: packet._id,\n        };\n        // create JWT and return as a Cookie string\n        const token = await this.jwtService.sign(payload);\n        return `Authentication=${token}; HttpOnly; Path=/; Max-Age=${this.appConfig.jwt_exp_time}`;\n    }\n\n    /**\n     * Logout\n     * @param user user property from the request object\n     * **summary**: set the user's JWT in the redis 'dead-list'\n     */\n    async logout(req: Request) {\n        try {\n            // extract the jwt and the cachce key\n            const { key, jwt } = await this.extractKeyValueUtil.extract(req);\n            // save jwt to redis dead-list with key\n            await this.redisService.set(key, jwt);\n            // return success or error\n            return { key: key, value: jwt };\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * Change Password\n     * @param new_password\n     * @param confirm_password\n     * @param req\n     */\n    async changePassword(data: ChangePasswordDto, req: Request) {\n        try {\n            console.log('Change Password Data:')\n            console.log(data);\n            // verify user submitted same pw twice\n            await this.verifyNewPasswordUtil.checkTypos({ newPassword: data.newPassword, confirmPassword: data.confirmPassword });\n            // extract the user\n            const doc = await this.extractUserUtil.extract(req)\n            // extract the jwt and key\n            const { jwt, key } = await this.extractKeyValueUtil.extract(req);\n            // find user document\n            const user = await this.userService.findUser({email: doc.email});\n            // verify new password does not match current password\n            await this.verifyNewPasswordUtil.verifyNew({ newPassword: data.newPassword, oldPassword: user.password });\n            // update the user's password\n            user.password = await bcrypt.hash(data.newPassword, 10);\n            user.save();\n            // logout the user, they'll need to log back in\n            await this.redisService.set(key, jwt);\n            // redirect to login page \n            console.log('redirect to login page...');\n            return;\n        } catch (err) {\n            throw new Error(err);\n        };\n    }\n\n\n    /**\n     * Forgot Password\n     * @param email the email for resetting the password\n     * **summary**: sends user a reset password link to the provided email, if it's an account associated email\n     */\n    async forgotPassword(data: ForgotPasswordDto) {\n        try {\n            // query user and confirm they exist\n            const user = await this.userService.findUser({email: data.email});\n            if (!user) { throw new Error('There is no User registered with the provided email')}\n            // set the reset-token and it's expiration on the user document\n            user.setResetToken();\n            user.setExpirationDate();\n            user.save();\n            // create mail options\n            const mailOptions = await this.emailService.createMailOptions(user.email);\n            const result = await this.emailService.sendMail(mailOptions);\n            return user.resetPasswordToken;\n        } catch(err) { \n            throw new Error(err);\n        }\n    }\n\n    /**\n     * Reset Password \n     * @param email\n     * @param newPassword\n     * @param confirmPassword\n     * **summary**: resets the password from a submitted forgot-password email\n     */\n    async resetPassword(data: ResetPasswordDto) {\n        // check new password for typos\n        await this.verifyNewPasswordUtil.checkTypos({newPassword: data.confirmPass, confirmPassword: data.resetPass});\n        // query user by resetToken\n        const user = await this.userService.findUserByResetPasswordToken({token: data.resetPasswordToken});\n        // check reset token has not expired\n        if (Date.now() >= user.resetPasswordExpires) { throw new Error('This passowrd reset request has expired, please make a new request.')}\n        // verify new password is actually new\n        await this.verifyNewPasswordUtil.verifyNew({newPassword: data.resetPass, oldPassword: user.password})\n        // update user password\n        user.password = await bcrypt.hash(data.resetPass, 10);\n        // reset the 'reset tokens' to null\n        user.resetPasswordToken = null;\n        user.resetPasswordExpires = null;\n        // save the user\n        await user.save();\n        // redirect to login\n        return;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptHashPipe.html":{"url":"injectables/BcryptHashPipe.html","title":"injectable - BcryptHashPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BcryptHashPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/pipes/bcrypt.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/pipes/bcrypt.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Use bcrypt to hash and salt the user's password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from \"@nestjs/common\";\nimport { CreateUserDto } from \"../dto/create-user.dto\";\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class BcryptHashPipe implements PipeTransform {\n\n    /**\n     * Use bcrypt to hash and salt the user's password\n     * @param value new user info\n     */\n    async transform(value: CreateUserDto) {\n        try {\n            console.log(`I Love Unathi!`);\n            const hash = await bcrypt.hash(value.password, 10);\n            const verified = await bcrypt.compare(value.password, hash);\n            if (verified) {\n                console.log('verified :)')\n                value.password = hash;\n                return value;\n            }\n            throw new Error('Bcrypt hashing failed, hash did not match the original')\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/change-password.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/change-password.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ChangePasswordDto {\n\treadonly newPassword: string;\n\treadonly confirmPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckPasswordTypoDto.html":{"url":"classes/CheckPasswordTypoDto.html","title":"class - CheckPasswordTypoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckPasswordTypoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/check-password-typo.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/check-password-typo.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/check-password-typo.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CheckPasswordTypoDto {\n    newPassword: string;\n    confirmPassword: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMulterUploadUtil.html":{"url":"injectables/CreateMulterUploadUtil.html","title":"injectable - CreateMulterUploadUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMulterUploadUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/create-multer-upload.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3Provider: S3Provider)\n                    \n                \n                        \n                            \n                                Defined in src/images/util/create-multer-upload.util.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/create-multer-upload.util.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/create-multer-upload.util.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport * as multer from 'multer';\nimport * as multerS3 from 'multer-s3';\nimport { JwtPayloadInterface } from \"src/auth/interface/jwt-payload\";\nimport { S3Provider } from \"../providers/s3.provider\";\n\n@Injectable()\nexport class CreateMulterUploadUtil {\n    constructor(private readonly s3Provider: S3Provider) { }\n    private s3 = this.s3Provider.getS3();\n\n    create = async (req, category) => {\n        try {\n            // create a multer upload\n            const user: JwtPayloadInterface = req.user;\n            return multer({\n                storage: multerS3({\n                    s3: this.s3,\n                    bucket: `rent-a-car-photos/${user.email}/${category}`,\n                    acl: 'public-read',\n                    key: function (request, file, cb) {\n                        cb(null, `${Date.now()}-${file.originalname}`); // unique id generator for file (image tag)\n                    },\n                }),\n            }).array('upload', 9);\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQueryDto.html":{"url":"classes/CreateQueryDto.html","title":"class - CreateQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/create-query.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                start\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/create-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n\nexport class CreateQueryDto {\n    min: UnavailabilityDto;\n    max: UnavailabilityDto;\n    year: number;\n    start: number;\n    end: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRentalDto.html":{"url":"classes/CreateRentalDto.html","title":"class - CreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/create-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the final format for a new rental to be created\n\npassed to the rental.service.createRental method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                listed\n                            \n                            \n                                loc\n                            \n                            \n                                photos\n                            \n                            \n                                pricing\n                            \n                            \n                                registration\n                            \n                            \n                                rentalDescription\n                            \n                            \n                                scheduling\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pricing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/create-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRentalDto {\n  rentalDescription: string;\n  address: string;\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: string[];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: number;\n    discounts: {\n      weekly: number;\n      monthly: number;\n    };\n  };\n  loc: {\n    type: string;\n    coordinates: [number, number];\n  };\n  photos: string[];\n  listed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUpdaterDtoPipe.html":{"url":"injectables/CreateUpdaterDtoPipe.html","title":"injectable - CreateUpdaterDtoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUpdaterDtoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/create-updater-dto.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create the data the request UpdateUnavailabilityDataDto the rental.service.updateUnavailability() method needs\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUpdateData\n                            \n                            \n                                    Private\n                                distillDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidateUpdateUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:58\n                \n            \n\n\n            \n                \n                    summary: use the private methods to return a UpdateUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidateUpdateUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a validated UpdateUnavailabilityDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createUpdateData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:30\n                            \n                        \n\n                \n                    \n                        summary: create a MongoDB update object from the UpdateUnavailabilityDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                UpdateUnavailabilityDto\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            distillDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/create-updater-dto.pipe.ts:15\n                            \n                        \n\n                \n                    \n                        summary: map the ValidateUpdateUnavailabilityDto to a simpler UpdateUnavailabilityDto format\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                ValidateUpdateUnavailabilityDto\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { UpdateUnavailabilityDto } from '../dto/unavailability/update/update-unavailability.dto';\nimport { ValidateUpdateUnavailabilityDto } from '../dto/unavailability/update/validate-update-unavailability.dto';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto';\n/**\n * **summary**: create the data the request UpdateUnavailabilityDataDto the rental.service.updateUnavailability() method needs\n */\n@Injectable()\nexport class CreateUpdaterDtoPipe implements PipeTransform> {\n\n    /**\n     * **summary**: map the ValidateUpdateUnavailabilityDto to a simpler UpdateUnavailabilityDto format\n     * @param value ValidateUpdateUnavailabilityDto\n     */\n    private distillDto = async (value: ValidateUpdateUnavailabilityDto) => {\n        const data: UpdateUnavailabilityDto = {\n            unavailabilityId: value.unavailabilityId,\n            rentalId: value.rentalId,\n            newStart: value.newStart,\n            newEnd: value.newEnd,\n            newTitle: value.newTitle,\n        };\n        return data;\n    }\n\n    /**\n     * **summary**: create a MongoDB update object from the UpdateUnavailabilityDto\n     * @param value UpdateUnavailabilityDto\n     */\n    private createUpdateData = async (value: UpdateUnavailabilityDto) => {\n        const filter = {\n            rentalId: value.rentalId,\n            unavailabilityId: value.unavailabilityId,\n        };\n        if (value.newTitle === null) {\n          const updater1 = {\n              $set: {\n                start: value.newStart,\n                end: value.newEnd,\n              },\n          };\n          return {filter, updater: updater1};\n        }\n        const updater2 = {\n            $set: {\n                start: value.newStart,\n                end: value.newEnd,\n                title: value.newTitle,\n            },\n        };\n        return { filter, updater: updater2};\n    }\n\n    /**\n     * **summary**: use the private methods to return a UpdateUnavailabilityDto\n     * @param value a validated UpdateUnavailabilityDto\n     */\n    async transform(value: ValidateUpdateUnavailabilityDto): Promise {\n        // return an UpdateUnavailabilityDto\n        const raw =  await this.distillDto(value);\n        const data = await this.createUpdateData(raw);\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserDto.html":{"url":"injectables/CreateUserDto.html","title":"injectable - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class CreateUserDto {\n    username: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProvider } from './providers/database.provider';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [ConfigModule],\n  providers: [...databaseProvider],\n  exports: [...databaseProvider],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteS3ImagesUtil.html":{"url":"injectables/DeleteS3ImagesUtil.html","title":"injectable - DeleteS3ImagesUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteS3ImagesUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/delete-s3-images.util.ts\n        \n\n            \n                Description\n            \n            \n                Bucket Name: 'rent-a-car-photos`\n\nKey: user_email/category\n\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteS3Image\n                            \n                            \n                                deleteS3Images\n                            \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3Provider: S3Provider)\n                    \n                \n                        \n                            \n                                Defined in src/images/util/delete-s3-images.util.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteS3Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteS3Images\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/delete-s3-images.util.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from \"@nestjs/common\";\nimport { S3Provider } from \"../providers/s3.provider\";\n/**\n * Bucket Name: 'rent-a-car-photos`\n * Key: user_email/category\n */\n@Injectable()\nexport class DeleteS3ImagesUtil {\n    constructor(private readonly s3Provider: S3Provider) { }\n    private s3 = this.s3Provider.getS3();\n\n    deleteS3Image = async (images, user): Promise => {\n        // delete rental image from s3 bucket\n        const bucket = `rent-a-car-photos`;\n        if (images[0].location.match(/\\/rentals\\//)) {\n            console.log('Delete Single Image Location')\n            console.log(images[0].location);\n            const split = images[0].location.split(/\\/rentals\\//);\n            const key = `${user.email}/rentals/${split[1]}`;\n            console.log('Delete single Image Key')\n            console.log(key)\n            await this.s3.deleteObject({ Bucket: bucket, Key: key }, function (err, data) {\n                if (err) { Logger.log(err, err.stack) }\n                Logger.log(data);\n            });\n        }\n        // delete profile image from s3 bucket\n        console.log('Delete a single Profile Image Location')\n        console.log(images[0].location);\n        const split = images[0].location.split(/\\/profile\\//);\n        console.log('Delete Single Bucket Image Key');\n        const key = `${user.email}/profile/${split[1]}`;\n        await this.s3.deleteObject({ Bucket: bucket, Key: key }, function (err, data) {\n            if (err) { Logger.log(err, err.stack) }\n            Logger.log(data);\n        });\n        return;\n    }\n\n    deleteS3Images = async (images, user): Promise => {\n        // multiple images\n        const ids: string[] = [];\n        const objects = [];\n        const bucket = `rent-a-car-photos`;\n        // delete multiple aws rental images\n        if (images[0].location.match(/\\/rentals\\//)) {\n            console.log(`Deleting multiple Rental Images`)\n            images.map(item => {\n                console.log(item.location);\n                const split = item.location.split(/\\/rentals\\//);\n                const key = `${user.email}/rentals/${split[1]}`;\n                objects.push({ Key: key })\n                ids.push(item._id);\n            });\n            const params = {\n                Bucket: bucket,\n                Delete: {\n                    Objects: objects,\n                    Quiet: false\n                }\n            }\n            console.log(`Delete Multiple Rental Images params`);\n            console.log(params);\n            await this.s3.deleteObjects(params, function (err, data) {\n                if (err) console.log(err, err.stack); // an error occurred\n                console.log(data);           // successful response\n            })\n            return ids;\n        }\n        // delete multiple aws profile images\n        console.log('Delete Multiple AWS Profile Images')\n        images.map(item => {\n            console.log(item.location);\n            const split = item.location.split(/\\/profile\\//);\n            const key = `${user.email}/profile/${split[1]}`;\n            objects.push({ Key: key })\n            ids.push(item._id);\n        });\n        const params = {\n            Bucket: bucket,\n            Delete: {\n                Objects: objects,\n                Quiet: false\n            }\n        }\n        console.log(`Delete Multiple Profile Images params`);\n        console.log(params);\n        await this.s3.deleteObjects(params, function (err, data) {\n            if (err) console.log(err, err.stack); // an error occurred\n            console.log(data);           // successful response\n        })\n\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserDto.html":{"url":"injectables/DeleteUserDto.html","title":"injectable - DeleteUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/delete-user.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/delete-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class DeleteUserDto {\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditDetailsDto.html":{"url":"classes/EditDetailsDto.html","title":"class - EditDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/details/edit-details.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: edit the details of a rental\n\npassed to the rental.service.editDetails method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                features\n                            \n                            \n                                rentalId\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/details/edit-details.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EditDetailsDto {\n  rentalId: string;\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  features: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n            \n                Description\n            \n            \n                Email Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMailOptions\n                            \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createMailOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMailOptions(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user's email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : nodemailer.createTransport( {\n        service: 'gmail', \n        auth: {\n            user: 'rentacar.team2020@gmail.com',\n            pass: 'Unathi2020!'\n        }\n    })\n                        \n                    \n                        \n                            \n                                    Defined in src/email/email.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as smtpTransport from 'nodemailer-smtp-transport';\nimport { MailOptionsInterface } from './interface/mailoptions.interface';\nimport { TransporterInterface } from './interface/transporter.interface';\n/**\n * Email Service\n */\n@Injectable()\nexport class EmailService {\n    constructor() {}\n\n\n\n    private transporter = nodemailer.createTransport( {\n        service: 'gmail', \n        auth: {\n            user: 'rentacar.team2020@gmail.com',\n            pass: 'Unathi2020!'\n        }\n    })\n\n    /**\n     * @param email user's email\n     */\n    async createMailOptions (email: string): Promise {\n        const mailOptions: MailOptionsInterface = {\n            from: 'rentacar.team2020@gmail.com',\n            to: email,\n            subject: 'Reset Forgotten Email Password for Rent-A-Car',\n            text: 'Please select the reset email link to reset your password',\n            html: 'Rent-A-Car Password Resetplease select the reset email link to reset your passowrd'\n        }\n        return mailOptions;\n    }\n\n    async sendMail(mailOptions): Promise {\n        try{\n            this.transporter.sendMail(mailOptions);\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorFilter.html":{"url":"classes/ErrorFilter.html","title":"class - ErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/error.filters.ts\n        \n\n            \n                Description\n            \n            \n                Error Filter catches all 500 INTERNAL_SERVER_ERRORs\nIt logs the Error, reveals the Error object, and reutrns a custom err message to the client\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: Error, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/error.filters.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  HttpException,\n  ArgumentsHost,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { DateTime } from 'luxon';\n/**\n * Error Filter catches all 500 INTERNAL_SERVER_ERRORs\n * It logs the Error, reveals the Error object, and reutrns a custom err message to the client\n */\n@Catch()\nexport class ErrorFilter implements ExceptionFilter {\n  catch(error: Error, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    const request = host.switchToHttp().getRequest();\n    const method = request.method;\n    const url = request.url;\n    const now = DateTime.local();\n\n    const status =\n      error instanceof HttpException\n        ? error.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const err = {\n      message: error.message,\n      name: error.name,\n      teehee: `have a nice day :)`,\n    };\n    const log = {\n      method: `${method}`,\n      url: `${url}`,\n      DateTime: `${now.month}/${now.day} Time: ${now.hour}:${now.minute}:${\n        now.second\n      }`,\n      stack: `${error.stack}`,\n    };\n\n    switch (status) {\n      case HttpStatus.INTERNAL_SERVER_ERROR:\n      case HttpStatus.BAD_REQUEST:\n        if (process.env.NODE_ENV === 'production') {\n          Logger.error(error);\n          return response.status(status).json(err);\n        } else {\n          Logger.error(err);\n          Logger.log(log);\n          return response.status(status).json(err);\n        }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExtractKeyValueUtil.html":{"url":"injectables/ExtractKeyValueUtil.html","title":"injectable - ExtractKeyValueUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExtractKeyValueUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/util/extract-key-value.util.ts\n        \n\n            \n                Description\n            \n            \n                Grab the JWT from the Authorization header (should be cookie)\nExtract the key and the JWT\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                extract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/util/extract-key-value.util.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            extract\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extract(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/extract-key-value.util.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { ExtractKeyValueUtilInterface } from \"../interface/extract-key-value-util.interface\";\n/**\n * Grab the JWT from the Authorization header (should be cookie)\n * Extract the key and the JWT\n */\n@Injectable()\nexport class ExtractKeyValueUtil {\n    constructor() {}\n    \n    public async extract(req: Request): Promise {\n        if (req){\n            const rawAuth: string = req.headers.cookie\n            return {\n                jwt: await rawAuth.slice(15), // JWT\n                key: await rawAuth.slice(-8), // KEY\n            }\n        }\n        throw new Error('Cannot extract JWT and KEY from missing Request Object');\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractKeyValueUtilInterface.html":{"url":"interfaces/ExtractKeyValueUtilInterface.html","title":"interface - ExtractKeyValueUtilInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtractKeyValueUtilInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/extract-key-value-util.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwt\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ExtractKeyValueUtilInterface {\n    jwt: string;\n    key: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExtractUserUtil.html":{"url":"injectables/ExtractUserUtil.html","title":"injectable - ExtractUserUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExtractUserUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/util/extract-user.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                extract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/user/util/extract-user.util.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            extract\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extract(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/util/extract-user.util.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { JwtPayloadInterface } from \"../../auth/interface/jwt-payload\";\n\n@Injectable()\nexport class ExtractUserUtil {\n    constructor() {}\n\n    async extract(req: Request): Promise {\n        const temp: any = req.user;\n        const user: JwtPayloadInterface = {\n            username: temp.username,\n            email: temp.email,\n            userId: temp.userId\n        }\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUserDto.html":{"url":"injectables/FindUserDto.html","title":"injectable - FindUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FindUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/find-user.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/find-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class FindUserDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordDto.html":{"url":"classes/ForgotPasswordDto.html","title":"class - ForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/forgot-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/forgot-password.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ForgotPasswordDto {\n\temail: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateRentalDurationEnumUtil.html":{"url":"injectables/GenerateRentalDurationEnumUtil.html","title":"injectable - GenerateRentalDurationEnumUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GenerateRentalDurationEnumUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/utils/generate-rental-duration-enum.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: generate RentalDuration Enums for the rentalDuration propery of the RequestCoordinatesDto\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateRentalDurationEnum\n                            \n                            \n                                    Private\n                                    Async\n                                processRentalTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateRentalDurationEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRentalDurationEnum(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/generate-rental-duration-enum.util.ts:36\n                \n            \n\n\n            \n                \n                    summary: create a RentalDuration Enum from the given start and end time \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            processRentalTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processRentalTime(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/generate-rental-duration-enum.util.ts:16\n                \n            \n\n\n            \n                \n                    summary: using the [Luxon Interval.fromDateTimes(https://moment.github.io/luxon/docs/class/src/interval.js~Interval.html#static-method-fromDateTimes)] method return the \nduration of the rental in months, weeks, and days\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Interval } from 'luxon';\nimport { RentalDurations } from '../const';\nimport { ProcessRentalTimeDto } from '../dto/searchRental/process-rental-time.dto';\n/**\n * summary: generate RentalDuration Enums for the rentalDuration propery of the RequestCoordinatesDto\n */\n@Injectable()\nexport class GenerateRentalDurationEnumUtil {\n  /**\n   * **summary**: using the [**Luxon Interval.fromDateTimes(https://moment.github.io/luxon/docs/class/src/interval.js~Interval.html#static-method-fromDateTimes)**] method return the \n   * duration of the rental in months, weeks, and days\n   * @param startTime \n   * @param endTime \n   */\n  private async processRentalTime(startTime, endTime):Promise {\n    try {\n      const base = Interval.fromDateTimes(startTime, endTime);\n      const months = base.length('months');\n      const weeks = base.length('weeks');\n      const days = base.length('days');\n      Logger.log(`The Base`);\n      Logger.log(base);\n      Logger.log(`months: ${months}, weeks: ${weeks}, days: ${days}`);\n      return { months, weeks, days };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: create a RentalDuration [**Enum**](https://www.typescriptlang.org/docs/handbook/enums.html) from the given start and end time \n   * @param startTime \n   * @param endTime \n   */\n  async generateRentalDurationEnum(startTime, endTime) {\n    try {\n      const schedule: ProcessRentalTimeDto = await this.processRentalTime(startTime, endTime);\n      if (schedule.months > 3) {\n        return RentalDurations.Any;\n      }\n      if (schedule.months  1) {\n        return RentalDurations['3 Months'];\n      }\n      if (schedule.months  3) {\n        return RentalDurations['1 Month'];\n      }\n      if (schedule.weeks  1) {\n        return RentalDurations['3 Weeks'];\n      }\n      if (schedule.weeks  5) {\n        return RentalDurations['1 Week'];\n      }\n      if (schedule.days  3) {\n        return RentalDurations['5 Days'];\n      }\n      if (schedule.days  1) {\n        return RentalDurations['3 Days'];\n      }\n      if (schedule.days === 1) {\n        return RentalDurations['1 Day'];\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoUrlApiPipe.html":{"url":"injectables/GeoUrlApiPipe.html","title":"injectable - GeoUrlApiPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoUrlApiPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/geo-url-api.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create an address from the incoming RawCreateRentalDto and then use the HERE Geocoding & Searching API\nto get the coordinates of the address. The coordinates allow Rentals to be geospatially queried in a radius near a user or selected location; e.g. 8 mile radius\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createAddress\n                            \n                            \n                                    Async\n                                getCoordinates\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geoUrlApiUtil: GeoUrlApiUtil, appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/geo-url-api.pipe.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geoUrlApiUtil\n                                                  \n                                                        \n                                                                        GeoUrlApiUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAddress(value)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:19\n                \n            \n\n\n            \n                \n                    summary: convert the location property object into a single address property string; will be passed to this.getCoordinates method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw form data inputed by user to create a new Rental listing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoordinates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoordinates(address: string, geoUrl: string, apiKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:31\n                \n            \n\n\n            \n                \n                    summary: request coordinates for the provided address\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the address to fetch coordinates for from the API\n\n                                    \n                                \n                                \n                                    geoUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url for accessing the API\n\n                                    \n                                \n                                \n                                    apiKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key for accessing the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawCreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/geo-url-api.pipe.ts:46\n                \n            \n\n\n            \n                \n                    summary: use the createAddress() and getCoordinates() methods to return the request data with coordinates and an address string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawCreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw request from a client to create a new Rental listing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { LocCreateRentalDto } from '../dto/createRental/loc-create-rental.dto';\nimport { RawCreateRentalDto } from '../dto/createRental/raw-create-rental-dto';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\n\n/**\n * **summary**: create an address from the incoming RawCreateRentalDto and then use the [**HERE Geocoding & Searching API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html)\n * to get the coordinates of the address. The coordinates allow Rentals to be geospatially queried in a radius near a user or selected location; e.g. 8 mile radius\n */\n@Injectable()\nexport class GeoUrlApiPipe {\n  constructor(private readonly geoUrlApiUtil: GeoUrlApiUtil, private readonly appConfig: AppConfigService) {}\n\n  /**\n   * **summary**: convert the location property object into a single address property string; will be passed to this.getCoordinates method\n   * @param value the raw form data inputed by user to create a new Rental listing\n   */\n  private async createAddress(value) {\n    // create address string from incoming vehicle.address document\n    const address: string = `${value.location.street} ${value.location.city} ${value.location.zip}`;\n    return address;\n  }\n\n  /**\n   * **summary**: request coordinates for the provided address\n   * @param address the address to fetch coordinates for from the API\n   * @param geoUrl the url for accessing the API\n   * @param apiKey the key for accessing the API\n   */\n  async getCoordinates(address: string, geoUrl: string, apiKey: string,\n  ) {\n    Logger.log(`geoUrl: ${process.env.GEO_URL}`);\n    const coords = await this.geoUrlApiUtil.getCoordinates(\n      address,\n      geoUrl,\n     apiKey\n    );\n    return coords;\n  }\n\n  /**\n   * **summary**: use the createAddress() and getCoordinates() methods to return the request data with coordinates and an address string\n   * @param value the raw request from a client to create a new Rental listing\n   */\n  async transform(value: RawCreateRentalDto):Promise {\n    const apiKey = process.env.GEO_API_KEY;\n    const geoUrl = process.env.GEO_URL;\n    try {\n      // create the address\n      const address = await this.createAddress(value);\n      // request the coordinates from the API\n      const coords = await this.getCoordinates(address, geoUrl, apiKey);\n      return { value, coords, address };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeoUrlApiUtil.html":{"url":"injectables/GeoUrlApiUtil.html","title":"injectable - GeoUrlApiUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeoUrlApiUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/utils/geo-url-api.util.ts\n        \n\n            \n                Description\n            \n            \n                summary: use Geocoding & Search API to get coordinates for an address\n\n[Respose Object] = response.data.items[0]\n.title: the complete address as a string\n.address the complete address as an object\n.position: {lat: number, lng: number}\n.mapView: {west: -number, south: number, east: -number, north: number}\n\n\n\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoordinates\n                            \n                            \n                                    Private\n                                    Async\n                                makeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCoordinates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoordinates(address, geoUrl, apiKey)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/geo-url-api.util.ts:43\n                \n            \n\n\n            \n                \n                    summary: returns an address as a single string, and the corresponding coordinates\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        replace the spaces in the address with + symbols for the api request\n\n                                    \n                                \n                                \n                                    geoUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the url for the api\n\n                                    \n                                \n                                \n                                    apiKey\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key for the api\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            makeRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRequest(location, geoUrl, apiKey)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/utils/geo-url-api.util.ts:25\n                \n            \n\n\n            \n                \n                    Send Geocoding & Search API request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    location\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the address string\n\n                                    \n                                \n                                \n                                    geoUrl\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the base HERE geocoding and search v7 api url\n\n                                    \n                                \n                                \n                                    apiKey\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the api key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as axios from 'axios';\nimport { RawCoordinatesDto } from '../dto/createRental/raw-coordinates.dto';\n\n/**\n * **summary**: use [**Geocoding & Search API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html) to get coordinates for an address\n * - [Respose Object] = response.data.items[0]\n *  - .title: the complete address as a string\n *  - .address the complete address as an object\n *  - .position: {lat: number, lng: number}\n *  - .mapView: {west: -number, south: number, east: -number, north: number}\n * @param {string} address the address to request coordinates for\n * @param {string} geoUrl base url of the Geocoding and Search geocoding request\n * @param {string} apiKey Geocoding and Search v7 API Key\n * \n */\n@Injectable()\nexport class GeoUrlApiUtil {\n  /**\n   * Send Geocoding & Search API request\n   * @param location the address string\n   * @param geoUrl the base HERE geocoding and search v7 api url\n   * @param apiKey the api key\n   */\n  private async makeRequest(location, geoUrl, apiKey) {\n    try {\n      console.log(`Geocoding & Search API Request: ${geoUrl}?q=${location}&apiKey=${apiKey}`)\n      const request: any = await axios.default.get(\n        `${geoUrl}?q=${location}&apiKey=${apiKey}`,\n      );\n      return request;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: returns an address as a single string, and the corresponding coordinates\n   * @param address replace the spaces in the address with + symbols for the api request\n   * @param geoUrl the url for the api\n   * @param apiKey the key for the api\n   */\n  async getCoordinates(address, geoUrl, apiKey):Promise {\n    try {\n      const location: string = address.replace(/\\s+/g, '+');\n      // make the API request\n      console.log('location before the request')\n      console.log(location);\n      const response: any = await this.makeRequest(\n        location,\n        geoUrl,\n        apiKey\n      );\n      // grab the coordinates\n      const rawCoordinates: RawCoordinatesDto =\n        response.data.items[0].position;\n      // map the coords object to return\n      const coords: [number, number] = [\n        rawCoordinates.lat,\n        rawCoordinates.lng,\n      ];\n      return coords;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GivenNoticePipe.html":{"url":"injectables/GivenNoticePipe.html","title":"injectable - GivenNoticePipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GivenNoticePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/given-notice.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: creates a Luxon Interval from the startTime and currentTime\nand then uses Luxon methods to validate the Given Notice is at least 1 hour in duration; this is the minimum allowed for any user\n\nLuxon is \"a powerful, modern, and friendly wrapper for Javacript dates and times\"\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createGivenNotice\n                            \n                            \n                                    Async\n                                transform\n                            \n                            \n                                    Private\n                                    Async\n                                validateRequestedTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createGivenNotice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGivenNotice(startTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:20\n                \n            \n\n\n            \n                \n                    summary: create the givenNotice property value, it must be at least one hour\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request start time of the rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawSearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:51\n                \n            \n\n\n            \n                \n                    summary: use the validateRequestedTime and createGivenNotice methods to return a GivenNoticeSearchRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawSearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request data to search for rentals\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateRequestedTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequestedTime(startTime, endTime)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/given-notice.pipe.ts:36\n                \n            \n\n\n            \n                \n                    summary: validate that the rental start time is not before the requested rental end time. The frontend of course has validation for this on the form,\nthis is just another level of validation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested time for the Rental to begin\n\n                                    \n                                \n                                \n                                    endTime\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested time for the Rental to end\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { GivenNoticeSearchRentalDto } from '../dto/searchRental/given-notice-search-rental-dto';\nimport { RawSearchRentalDto } from '../dto/searchRental/raw-search-rental.dto';\nimport { DateTime } from 'luxon';\n/**\n * **summary**: creates a [**Luxon**](https://moment.github.io/luxon/) [**Interval**](https://moment.github.io/luxon/docs/manual/tour.html#intervals) from the startTime and currentTime\n * and then uses Luxon methods to validate the Given Notice is at least 1 hour in duration; this is the minimum allowed for any user\n * - Luxon is \"a powerful, modern, and friendly wrapper for Javacript dates and times\"\n */\n@Injectable()\nexport class GivenNoticePipe implements PipeTransform {\n\n  /**\n   * **summary**: create the **givenNotice** property value, it must be at least one hour\n   * @param startTime the request start time of the rental\n   */\n  private async createGivenNotice(startTime) {\n    const givenNotice: number = startTime.diffNow().toObject().milliseconds;\n    if (givenNotice >= 3600000) {\n      return givenNotice;\n    }\n    throw new Error(\n      'Sorry, you cannot request a rental less than an hour before it begins',\n    );\n  }\n\n  /**\n   * **summary**: validate that the rental start time is not before the requested rental end time. The frontend of course has validation for this on the form,\n   * this is just another level of validation.\n   * @param startTime the requested time for the Rental to begin\n   * @param endTime the requested time for the Rental to end\n   */\n  private async validateRequestedTime(startTime, endTime) {\n    if (startTime > endTime) {\n      throw new Error(\n        'The rental start time cannot be after the rental end time',\n      );\n    }\n    if (endTime.diff(startTime).toObject().milliseconds  {\n    try {\n      // make start and end time into DateTimes\n      const startTime: DateTime = DateTime.fromISO(\n        new Date(value.rentalStartTime).toISOString(),\n      );\n      const endTime: DateTime = DateTime.fromISO(\n        new Date(value.rentalEndTime).toISOString(),\n      );\n      await this.validateRequestedTime(startTime, endTime);\n      const givenNotice = await this.createGivenNotice(startTime);\n      const dto: GivenNoticeSearchRentalDto = {\n        address: value.address,\n        rentalStartTime: startTime,\n        rentalEndTime: endTime,\n        price: value.price ? value.price : null,\n        features: value.features ? value.features : null,\n        givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GivenNoticeSearchRentalDto.html":{"url":"classes/GivenNoticeSearchRentalDto.html","title":"class - GivenNoticeSearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GivenNoticeSearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/given-notice-search-rental-dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the GivenNoticePipe after processing a RawSearchRentalDto\n\nThe GivenNoticePipe added the 'givenNotice' property\npassed to the RentalDurationPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                price\n                            \n                            \n                                rentalEndTime\n                            \n                            \n                                rentalStartTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalEndTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalStartTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/given-notice-search-rental-dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DateTime } from 'luxon';\n/**\n * **summary**: returned by the GivenNoticePipe after processing a RawSearchRentalDto\n * - The GivenNoticePipe added the 'givenNotice' property\n * - passed to the RentalDurationPipe\n */\nexport class GivenNoticeSearchRentalDto {\n  address: string;\n  rentalStartTime: DateTime;\n  rentalEndTime: DateTime;\n  price: number;\n  features: string[];\n  givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpErrorFilter.html":{"url":"classes/HttpErrorFilter.html","title":"class - HttpErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-error.filter.ts\n        \n\n            \n                Description\n            \n            \n                Exception filters give full control over the exceptions layer\nAdd Logging\nControl exact flow of control and the content of the response sent\nThis filter is responsible for catching exceptions which are an instance of the HttpException\nGrants us access to the underlying platform 'Request' & 'Response' objects\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/http-error.filter.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  ArgumentsHost,\n  Logger,\n} from '@nestjs/common';\nimport { DateTime } from 'luxon';\n\n/**\n * Exception filters give full control over the exceptions layer\n * Add Logging\n * Control exact flow of control and the content of the response sent\n * This filter is responsible for catching exceptions which are an instance of the HttpException\n * Grants us access to the underlying platform 'Request' & 'Response' objects\n */\n@Catch(HttpException)\nexport class HttpErrorFilter implements ExceptionFilter {\n  /**\n   * @param {} exception\n   * @param {ArgumentsHost} host\n   */\n  catch(exception: HttpException, host: ArgumentsHost) {\n    // note: access the appropriate underlying arguments for any execution context with ArgumentHost\n    const context = host.switchToHttp();\n    const request = context.getRequest();\n    const response = context.getResponse();\n    const status = exception.getStatus();\n\n    /**\n     * error responses\n     */\n    const errorResponse = {\n      http_code: status,\n      timestamp: DateTime.local(),\n      path: request.url,\n      method: request.method,\n      message: exception.message.error || exception.message || null,\n    };\n\n    /**\n     * error logging\n     */\n    Logger.error(\n      `${request.method} ${request.url}`,\n      JSON.stringify(errorResponse),\n      'ExceptionFilter',\n    );\n\n    /**\n     * take direct control of the response with the json method\n     */\n    response.status(status).json(errorResponse);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageDto.html":{"url":"classes/ImageDto.html","title":"class - ImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageDto {\n    _id: string; // id of an Image\n    location: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageInterface.html":{"url":"interfaces/ImageInterface.html","title":"interface - ImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/image.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucket\n                                \n                                \n                                        category\n                                \n                                \n                                        etag\n                                \n                                \n                                        key\n                                \n                                \n                                        location\n                                \n                                \n                                        rental_id\n                                \n                                \n                                        size\n                                \n                                \n                                        user_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rental_id\n                                    \n                                \n                                \n                                    \n                                        rental_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageInterface{\n    user_id: string;\n    rental_id: string;\n    bucket: string;\n    key: string;\n    etag: string;\n    category: string;\n    size: string;\n    location: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageQueryResultsDto.html":{"url":"classes/ImageQueryResultsDto.html","title":"class - ImageQueryResultsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageQueryResultsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/image-query-results.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                images\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-query-results.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/images/dto/image-query-results.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageQueryResultsDto {\n    count: number;\n    images: any;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageUploadInterface.html":{"url":"interfaces/ImageUploadInterface.html","title":"interface - ImageUploadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageUploadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/image-upload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Body\n                                \n                                \n                                        Bucket\n                                \n                                \n                                        Key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Body\n                                    \n                                \n                                \n                                    \n                                        Body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Bucket\n                                    \n                                \n                                \n                                    \n                                        Bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageUploadInterface {\n    Bucket: string; // bucket name and folder\n    Key: string; // file name\n    Body: string; // buffer\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagesController.html":{"url":"controllers/ImagesController.html","title":"controller - ImagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/controller/images.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                images\n            \n\n            \n                Description\n            \n            \n                Image Controller\nwritten by: Jonathan Sells\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllProfileImages\n                            \n                            \n                                    Async\n                                deleteAllRentalImages\n                            \n                            \n                                    Async\n                                deleteRentalImages\n                            \n                            \n                                    Async\n                                findProfileImage\n                            \n                            \n                                    Async\n                                findProfileImages\n                            \n                            \n                                    Async\n                                findRentalImage\n                            \n                            \n                                    Async\n                                findRentalImages\n                            \n                            \n                                    Async\n                                uploadProfileImage\n                            \n                            \n                                    Async\n                                uploadRentalImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllProfileImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllProfileImages(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-all-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:117\n                \n            \n\n\n            \n                \n                    Delete All Profile Images\nSummary: Delete all of the user's profile images\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAllRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllRentalImages(params, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-all-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:108\n                \n            \n\n\n            \n                \n                    Delete all Rental Images\nSummary: delete all images for a selected rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRentalImages(images: ImageDto[], req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:99\n                \n            \n\n\n            \n                \n                    Delete Rental Images\nSummary: Delete a single or multiple images of a rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    images\n                                    \n                                                ImageDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfileImage(req, image: ImageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-profile-image')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:89\n                \n            \n\n\n            \n                \n                    Find Profile Image\nSummary: Find a user profile image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request object\n\n                                    \n                                \n                                \n                                    image\n                                    \n                                                ImageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findProfileImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProfileImages(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:79\n                \n            \n\n\n            \n                \n                    Find Profile Images\nSummary: Find a user profile image\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRentalImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRentalImage(params: ImageDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-rental-image')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:69\n                \n            \n\n\n            \n                \n                    Find Rental Image\nSummary: Find a vehicle image by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ImageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findRentalImages(params, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:59\n                \n            \n\n\n            \n                \n                    Finad Rental Images\nSummary: Find all of a rentals images\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object, which has a user property\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadProfileImage(req, res, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-profile-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:43\n                \n            \n\n\n            \n                \n                    Upload Profile Images\nSummary: Upload a single or multiple profile photos to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadRentalImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadRentalImages(req, res, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload-rental-images')\n                \n            \n\n            \n                \n                    Defined in src/images/controller/images.controller.ts:27\n                \n            \n\n\n            \n                \n                    Upload a single or multiple rental photos to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards, Body, Get, Query, Res } from '@nestjs/common';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { JwtAuthGuard } from '../../auth/gaurds/jwt-auth.guard';\nimport { ImagesService } from '../service/images.service';\nimport { response } from 'express';\nimport { profile, rentals } from '../../common/Const';\nimport { ImageDto } from '../dto/image.dto';\n/**\n * Image Controller\n * written by: Jonathan Sells\n */\n@UseGuards(JwtAuthGuard)\n@Controller('images')\nexport class ImagesController {\n    constructor(\n        private readonly imagesService: ImagesService,\n        private readonly appConfig: AppConfigService,\n    ) { }\n\n    /**\n     * Upload a single or multiple rental photos to be saved\n     * @param files fieldName\n     * @param maxCount maxCount\n     * @param options option\n     */\n    @Post('upload-rental-images')\n    async uploadRentalImages(@Req() req, @Res() res, @Query() params) {\n        try {\n            await this.imagesService.fileuploadAndSave(req, res, rentals, params.rental_id, this.imagesService.saveImages)\n        } catch (err) {\n            return response\n                .status(500)\n                .json(`Failed to upload image file: ${err.message}`);\n        }\n    }\n\n    /**\n     * Upload Profile Images\n     * Summary: Upload a single or multiple profile photos to be saved\n     * @param files fieldName\n     */\n    @Post('upload-profile-images')\n    async uploadProfileImage(@Req() req, @Res() res, @Query() params) {\n        try {\n            await this.imagesService.fileuploadAndSave(req, res, profile, params.rental_id, this.imagesService.saveImages)\n        } catch (err) {\n            return response\n                .status(500)\n                .json(`Failed to upload image file: ${err.message}`);\n        }\n    }\n\n    /**\n     * Finad Rental Images\n     * Summary: Find all of a rentals images\n     * @param req the request object, which has a user property\n     */\n    @Get('find-rental-images')\n    async findRentalImages(@Query() params, @Req() req) {\n        return await this.imagesService.findRentalImages(null, params.rental_id, req.user);\n    }\n\n    /**\n     * Find Rental Image\n     * Summary: Find a vehicle image by id\n     * @param image the id of the image to find\n     */\n    @Get('find-rental-image')\n    async findRentalImage(@Query() params: ImageDto, @Req() req) {\n        return await this.imagesService.findRentalImages(params._id, null, req.user);\n    }\n\n    /**\n     * Find Profile Images\n     * Summary: Find a user profile image\n     * @param req request object\n     */\n    @Get('find-profile-images')\n    async findProfileImages(@Req() req) {\n        return await this.imagesService.findProfileImages(req.user);\n    }\n\n    /**\n     * Find Profile Image\n     * Summary: Find a user profile image\n     * @param req request object\n     */\n    @Get('find-profile-image')\n    async findProfileImage(@Req() req, @Body() image: ImageDto) {\n        return await this.imagesService.findProfileImages(req.user, image._id);\n    }\n\n    /**\n     * Delete Rental Images\n     * Summary: Delete a single or multiple images of a rental\n     * @param category both or a single one\n     */\n    @Post('delete-images')\n    async deleteRentalImages(@Body() images: ImageDto[], @Req() req) {\n        return await this.imagesService.deleteImages(images, req.user);\n    }\n\n    /**\n     * Delete all Rental Images\n     * Summary: delete all images for a selected rental\n     */\n    @Post('delete-all-rental-images')\n    async deleteAllRentalImages(@Query() params, @Req() req) {\n        return await this.imagesService.deleteAllImages(req.user, params.rental_id);\n    }\n\n   /**\n    * Delete All Profile Images\n    * Summary: Delete all of the user's profile images\n    */\n   @Post('delete-all-profile-images')\n   async deleteAllProfileImages(@Req() req) {\n        return await this.imagesService.deleteAllImages(req.user, null);\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagesModule.html":{"url":"modules/ImagesModule.html","title":"module - ImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_imports\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_ImagesModule_exports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nAppConfigModule->ImagesModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nImagesModule -->\n\nDatabaseModule->ImagesModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nImagesModule -->\n\nAppConfigService->ImagesModule\n\n\n\n\n\nCreateMulterUploadUtil\n\nCreateMulterUploadUtil\n\nImagesModule -->\n\nCreateMulterUploadUtil->ImagesModule\n\n\n\n\n\nDeleteS3ImagesUtil\n\nDeleteS3ImagesUtil\n\nImagesModule -->\n\nDeleteS3ImagesUtil->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nMulterUploadUtil\n\nMulterUploadUtil\n\nImagesModule -->\n\nMulterUploadUtil->ImagesModule\n\n\n\n\n\nProcessSaveDataUtil\n\nProcessSaveDataUtil\n\nImagesModule -->\n\nProcessSaveDataUtil->ImagesModule\n\n\n\n\n\nS3Provider\n\nS3Provider\n\nImagesModule -->\n\nS3Provider->ImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/images/images.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            CreateMulterUploadUtil\n                        \n                        \n                            DeleteS3ImagesUtil\n                        \n                        \n                            ImagesService\n                        \n                        \n                            MulterUploadUtil\n                        \n                        \n                            ProcessSaveDataUtil\n                        \n                        \n                            S3Provider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { AppConfigService } from '../config/configuration.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { ImagesController } from './controller/images.controller';\nimport { S3Provider } from './providers/s3.provider';\nimport { ImageSchema } from './schema/images.schema';\nimport { ImagesService } from './service/images.service';\nimport { CreateMulterUploadUtil } from './util/create-multer-upload.util';\nimport { DeleteS3ImagesUtil } from './util/delete-s3-images.util';\nimport { MulterUploadUtil } from './util/multer-upload.util';\nimport { ProcessSaveDataUtil } from './util/process-save-data.util';\n\n\n@Module({\n    imports: [\n        DatabaseModule,\n        MongooseModule.forFeature([{ name: 'Images', schema: ImageSchema }]),\n        AppConfigModule,\n    ],\n    controllers: [ImagesController],\n    providers: [\n        ImagesService,\n        AppConfigService,\n        ProcessSaveDataUtil,\n        S3Provider,\n        CreateMulterUploadUtil,\n        MulterUploadUtil,\n        DeleteS3ImagesUtil,\n    ],\n    exports: [ImagesService]\n\n})\nexport class ImagesModule {\n    constructor() {\n        ImageSchema.index({ rental_id: 1 });\n        ImageSchema.index({ user_id: 1 });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/service/images.service.ts\n        \n\n            \n                Description\n            \n            \n                Images Service\nwritten by: Jonathan Sells\nnote: for security, user_id is required for all queries to verify the queried images belong to the requesting user.\nthis makes queries slightly less selective and less efficient, but more secure.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAllImages\n                            \n                            \n                                deleteImages\n                            \n                            \n                                fileuploadAndSave\n                            \n                            \n                                findProfileImages\n                            \n                            \n                                findRentalImages\n                            \n                            \n                                s3\n                            \n                            \n                                saveImages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imagesModel: Model, appConfig: AppConfigService, processSaveDataUtil: ProcessSaveDataUtil, s3Provider: S3Provider, createMulterUploadUtil: CreateMulterUploadUtil, multerUploadUtil: MulterUploadUtil, deleteS3ImagesUtil: DeleteS3ImagesUtil)\n                    \n                \n                        \n                            \n                                Defined in src/images/service/images.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imagesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processSaveDataUtil\n                                                  \n                                                        \n                                                                        ProcessSaveDataUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3Provider\n                                                  \n                                                        \n                                                                        S3Provider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createMulterUploadUtil\n                                                  \n                                                        \n                                                                        CreateMulterUploadUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        multerUploadUtil\n                                                  \n                                                        \n                                                                        MulterUploadUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteS3ImagesUtil\n                                                  \n                                                        \n                                                                        DeleteS3ImagesUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAllImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:155\n                            \n                        \n\n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                var params = {\nBucket: \"examplebucket\",\nDelete: {\nObjects: [\n{\nKey: \"HappyFace.jpg\",\nVersionId: \"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"\n},\n{\nKey: \"HappyFace.jpg\",\nVersionId: \"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"\n}\n],\nQuiet: false\n}\n};\ns3.deleteObjects(params, function(err, data) {\nif (err) console.log(err, err.stack); // an error occurred\nelse     console.log(data);           // successful response\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:110\n                            \n                        \n\n                \n                    \n                        Delete Images\nSumamry: Delete a single or multiple of user's selected images\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        category\n                                                        \n                                                                the images category; rentals or profile\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                used to verify the photos belong to the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileuploadAndSave\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:175\n                            \n                        \n\n                \n                    \n                        Upload Images to S3 Bucket\nsummary: send the file(s) to the bucket and attach a timestamp to each filename\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        req\n                                                        \n                                                                the request\n\n                                                        \n                                                \n                                                \n                                                        res\n                                                        \n                                                                the response\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                rentals or profile\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the rental_id for rental image uploads\n\n                                                        \n                                                \n                                                \n                                                        saveImages\n                                                        \n                                                                the images.service.saveImages method\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findProfileImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:89\n                            \n                        \n\n                \n                    \n                        Find Profile Images\nSummary: query multiple profile images by user_id and profile category, or find a specific profile photo by id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                the user property of the request object\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findRentalImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:66\n                            \n                        \n\n                \n                    \n                        Find Rental Images\nSummary: query multiple rental images by userId and rental_id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        user\n                                                        \n                                                                the user property of the request object\n\n                                                        \n                                                \n                                                \n                                                        img_id\n                                                        \n                                                                id of an image; if provided only this image will be found\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the id of the rental\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                used to verify the image belongs to the requesting user\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.s3Provider.getS3()\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveImages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/service/images.service.ts:44\n                            \n                        \n\n                \n                    \n                        Save uploaded images\nSummary: Saves uploaded images to the database. This method is passed as an argument to the fileUploadAndSave method \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        files\n                                                        \n                                                                array of files\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                rentals / profile\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                user id to associate with the image\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                id of the rental (if it's a rental image): Check for null\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger, Req, Res } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ImageInterface } from '../interface/image.interface';\nimport { Model } from 'mongoose';\nimport { JwtPayloadInterface } from '../../auth/interface/jwt-payload';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { profile } from '../../common/Const';\nimport { ImageDto } from '../dto/image.dto';\nimport { ProcessSaveDataUtil } from '../util/process-save-data.util';\nimport { ProcessedSaveDataInterface } from '../interface/processed-save-data.interface';\nimport { S3Provider } from '../providers/s3.provider';\nimport { CreateMulterUploadUtil } from '../util/create-multer-upload.util';\nimport { MulterUploadUtil } from '../util/multer-upload.util';\nimport { ImageQueryResultsDto } from '../dto/image-query-results.dto';\nimport { DeleteS3ImagesUtil } from '../util/delete-s3-images.util';\n/**\n * Images Service\n * written by: Jonathan Sells\n * note: for security, user_id is required for all queries to verify the queried images belong to the requesting user.\n * this makes queries slightly less selective and less efficient, but more secure.\n */\n@Injectable()\nexport class ImagesService {\n\n  constructor(\n    @InjectModel('Images') private readonly imagesModel: Model,\n    private readonly appConfig: AppConfigService,\n    private readonly processSaveDataUtil: ProcessSaveDataUtil,\n    private readonly s3Provider: S3Provider,\n    private readonly createMulterUploadUtil: CreateMulterUploadUtil,\n    private readonly multerUploadUtil: MulterUploadUtil,\n    private readonly deleteS3ImagesUtil: DeleteS3ImagesUtil,\n  ) { }\n  s3 = this.s3Provider.getS3();\n\n  /**\n   * Save uploaded images\n   * Summary: Saves uploaded images to the database. This method is passed as an argument to the fileUploadAndSave method \n   * @param files array of files\n   * @param category rentals / profile\n   * @param {string} user_id user id to associate with the image\n   * @param {string | null} rental_id id of the rental (if it's a rental image): Check for null\n   */\n  saveImages = async (files, category, user_id, rental_id, model) => {\n    try {\n      const { packet, image }: ProcessedSaveDataInterface = await this.processSaveDataUtil.process(files, user_id, rental_id, category);\n      let flag;\n      packet === null ? flag = 'single' : flag = 'multiple';\n      if (flag === 'multiple') {\n        return await model.insertMany(packet);\n      }\n      return await model.save(image)\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * Find Rental Images\n   * Summary: query multiple rental images by userId and rental_id\n   * @param user the user property of the request object\n   * @param img_id id of an image; if provided only this image will be found\n   * @param rental_id the id of the rental\n   * @param user_id used to verify the image belongs to the requesting user\n   */\n  findRentalImages = async (img_id: string | null, rental_id: string | null, user_id: string): Promise => {\n    // img_id given from findVehicleImage endpoint\n    try {\n      let flag;\n      img_id !== null ? flag = 'single' : flag = 'multiple';\n      // find multiple images\n      if (flag === 'multiple') {\n        const images = await this.imagesModel.find({ rental_id: rental_id, user_id: user_id });\n        return { count: images.length, images: images }\n      }\n      // find a specific image\n      const image = await this.imagesModel.findById(img_id);\n      return { count: 1, images: image }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * Find Profile Images\n   * Summary: query multiple profile images by user_id and profile category, or find a specific profile photo by id\n   * @param user the user property of the request object\n   */\n  findProfileImages = async (user: JwtPayloadInterface, img_id?: string) => {\n    try {\n      let flag;\n      img_id ? flag = 'single' : flag = 'multiple';\n      if (flag === 'multiple') {\n        const images = await this.imagesModel.find({ user_id: user.userId })\n        return { count: images.length, images: images };\n      };\n      const image = await this.imagesModel.findById(img_id);\n      return { count: 1, images: image }\n    } catch (err) {\n      throw new Error(err)\n    }\n  }\n\n  /**\n   * Delete Images\n   * Sumamry: Delete a single or multiple of user's selected images\n   * @param category the images category; rentals or profile\n   * @param user_id used to verify the photos belong to the requesting user\n   */\n  deleteImages = async (images: ImageDto[], user: JwtPayloadInterface) => {\n    try {\n      if (images && images.length > 0) {\n        if (images.length === 1) {\n          await this.deleteS3ImagesUtil.deleteS3Image(images, user);\n          return await this.imagesModel.deleteOne({ _id: images[0]._id, user_id: user.userId });\n        }\n        const ids = await this.deleteS3ImagesUtil.deleteS3Images(images, user);\n        return await this.imagesModel.deleteMany({ _id: { $in: ids }, user_id: user.userId })\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   *\n   * @param user var params = {\n  Bucket: \"examplebucket\",\n  Delete: {\n   Objects: [\n      {\n     Key: \"HappyFace.jpg\",\n     VersionId: \"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"\n    },\n      {\n     Key: \"HappyFace.jpg\",\n     VersionId: \"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"\n    }\n   ],\n   Quiet: false\n  }\n  };\n  s3.deleteObjects(params, function(err, data) {\n   if (err) console.log(err, err.stack); // an error occurred\n   else     console.log(data);           // successful response\n   * @param rental_id\n   */\n\n  /**\n   * Delete All Images\n   * Summary: Delete all images of the selected rental or profile\n   * @param user_id used to locate the user's photos as well as verify they belong to them\n   * @param rental_id the id of the rental\n   */\n  deleteAllImages = async (user: JwtPayloadInterface, rental_id: string) => {\n    // delete all images of the selected rental\n    if (user && rental_id !== null) {\n      return await this.imagesModel.deleteMany({ rental_id: rental_id, user_id: user.userId });\n    }\n    // delete all of the user's profile images\n    if (user && rental_id === null) {\n      return await this.imagesModel.deleteMany({ user_id: user.userId, category: profile });\n    }\n  }\n\n  /**\n   * Upload Images to S3 Bucket\n   * **summary**: send the file(s) to the bucket and attach a timestamp to each filename\n   * @param req the request\n   * @param res the response\n   * @param category rentals or profile\n   * @param rental_id the rental_id for rental image uploads\n   * @param saveImages the images.service.saveImages method\n   */\n  fileuploadAndSave = async (req, res, category, rental_id, saveimages) => {\n    try {\n      // create a multer upload\n      const user: JwtPayloadInterface = req.user;\n      const multerUpload = await this.createMulterUploadUtil.create(req, category)\n      // Upload the image(s)\n      const model = this.imagesModel;\n      await this.multerUploadUtil.upload(req, res, multerUpload, saveimages, category, user, rental_id, model);\n    } catch (err) {\n      return res.status(500).json(`Failed to upload image file: ${err}`)\n    }\n  }\n\n  // Get Presigned Url to download file\n  /**\n   * @param originalname file name\n   * @param bucket location of the photo\n  private getSingedUrl = async (bucket, originalname) => {\n    const s3 = this.s3;\n    const params = {\n      Bucket: bucket,\n      Key: originalname,\n      Expires: 60 * 60, //1 hour\n    };\n    try {\n      const url = await new Promise((resolve, reject) => {\n        s3.getSignedUrl('getObject', params, (err, url) => {\n          err ? reject(err) : resolve(url);\n        });\n      });\n      Logger.log(url)\n      return url;\n    } catch (err) {\n      if (err) {\n        throw new Error(err);\n      }\n    }\n  }\n  */\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/joi-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This class accepts a joi validationSchema when instantiated\nIt will validate an incoming value against the provided validation schema\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: Schema)\n                    \n                \n                        \n                            \n                                Defined in src/common/pipes/joi-validation.pipe.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        Schema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/joi-validation.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  BadRequestException,\n  Logger,\n} from '@nestjs/common';\nimport { Schema } from '@hapi/joi';\n\n/**\n * This class accepts a joi validationSchema when instantiated\n * It will validate an incoming value against the provided validation schema\n */\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private readonly schema: Schema) {}\n\n  transform(value: any) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      Logger.error(error);\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/gaurds/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayloadInterface.html":{"url":"interfaces/JwtPayloadInterface.html","title":"interface - JwtPayloadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayloadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        userId\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayloadInterface { \n    username: string,\n    email: string, \n    userId: string,\n    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwtConstants } from '../constant';\nimport { Request } from 'express'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      // read JWT from the Cookie Header\n      jwtFromRequest: ExtractJwt.fromExtractors([(request: Request) => {\n        return request?.cookies?.Authentication;\n      }]),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    console.log('Hello from inside the jwt-strategy! :)')\n    console.log(payload);\n    return { userId: payload.sub, username: payload.username, email: payload.email };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocCreateRentalDto.html":{"url":"classes/LocCreateRentalDto.html","title":"class - LocCreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocCreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/loc-create-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: contains the initial data submitted by a user to create a new rental listing. It also\ncontains the raw location information as a single \"address\" string ad the coordinates for the address\n\npassed to the MapNewRentalPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                coords\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RawCreateRentalDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/loc-create-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RawCreateRentalDto } from './raw-create-rental-dto';\n/**\n * **summary**: contains the initial data submitted by a user to create a new rental listing. It also\n * contains the raw location information as a single \"address\" string ad the coordinates for the address\n * - passed to the MapNewRentalPipe\n */\nexport class LocCreateRentalDto {\n  value: RawCreateRentalDto;\n  coords: [number, number];\n  address: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/gaurds/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super({usernameField: 'email' }); // use email instead of username\n    }\n\n    // every passport strategy calls the validate method (which calls the validateUser function in the auth.service)\n    // for any strategy, if the user is found, Passport will create a user property on the request object\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validateUser(email, password);\n        if (!user) {\n            throw new Error('invalid credentials');\n            // throw new UnauthorizedException('invalid credentials');\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoggedOutGaurd.html":{"url":"guards/LoggedOutGaurd.html","title":"guard - LoggedOutGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoggedOutGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/gaurds/logged-out.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkDeadList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(redisService: RedisService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/gaurds/logged-out.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/gaurds/logged-out.guard.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            checkDeadList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDeadList(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/gaurds/logged-out.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { Observable } from \"rxjs\";\nimport { RedisService } from \"src/redis/service/redis.service\";\n\n@Injectable()\nexport class LoggedOutGaurd implements CanActivate {\n    constructor(private readonly redisService: RedisService) {}\n\n    // This is where we use redis to check the incoming jwt by it's last 8 digits\n    private async checkDeadList(req: Request): Promise {\n        // grab the key from the incoming jwt\n        const rawAuth = req.headers.cookie;\n        console.log(rawAuth);\n        const key = rawAuth.slice(-8);\n        const check = await this.redisService.get(key);\n        console.log(`LOGGED-OUT Guard Check Results: `);\n        console.log(check)\n        // if the key is found, deny access; User is Logged Out\n        if (check && check !== null) {\n            throw new Error('You are logged out, log back in to continue');\n            // REDIRECT to login\n        }\n        console.log('You are logged in :)')\n        return true;\n    }\n\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        const request = context.switchToHttp().getRequest();\n        return this.checkDeadList(request);\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logging-interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Interceptors capabilities:\nwraps the request/response stream so we can bind extra logic before / after method execution\ntransform the result returned from a function\nextend the basic function behavior\ncompletely override a function depending on specific conditions\nAspect Interception: log user interaction (e.g. storing user calls, async dispatching events, calculating a timestamp)\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logging-interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DateTime } from 'luxon';\n\n/**\n * Interceptors capabilities:\n * wraps the request/response stream so we can bind extra logic before / after method execution\n * transform the result returned from a function\n * extend the basic function behavior\n * completely override a function depending on specific conditions\n * Aspect Interception: log user interaction (e.g. storing user calls, async dispatching events, calculating a timestamp)\n */\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n\n    const req = context.switchToHttp().getRequest();\n    const method = req.method;\n    const url = req.url;\n    const now = DateTime.local();\n\n    return next.handle().pipe(\n      // calls Logger method upon graceful or exceptional termination of the observable stream\n      tap(err => {\n        Logger.log(\n          `${method} ${url} Date: ${now.month}/${now.day} Time: ${now.hour}:${\n            now.minute\n          }:${now.second}`,\n          `${context.getClass().name}.${context.getHandler().name}`,\n        );\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginDto.html":{"url":"injectables/LoginDto.html","title":"injectable - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class LoginDto {\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pass\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/login-user.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    username: string;\n    pass: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailOptionsInterface.html":{"url":"interfaces/MailOptionsInterface.html","title":"interface - MailOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/interface/mailoptions.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        html\n                                \n                                \n                                        subject\n                                \n                                \n                                        text\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MailOptionsInterface {\n    from: string;\n    to: string;\n    subject: string;\n    text: string;\n    html: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapNewRentalPipe.html":{"url":"injectables/MapNewRentalPipe.html","title":"injectable - MapNewRentalPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapNewRentalPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/map-new-rental.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create the final CreateRentalDto that will be passed to the rental.service.createRental() method\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: LocCreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/map-new-rental.pipe.ts:13\n                \n            \n\n\n            \n                \n                    summary: transform the raw data into a CreateRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                LocCreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request to create a rental with all of the necessary raw data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { LocCreateRentalDto } from '../dto/createRental/loc-create-rental.dto';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\n/**\n * **summary**: create the final CreateRentalDto that will be passed to the rental.service.createRental() method\n */\n@Injectable()\nexport class MapNewRentalPipe implements PipeTransform {\n  /**\n   * **summary**: transform the raw data into a CreateRentalDto\n   * @param value the request to create a rental with all of the necessary raw data\n   */\n  async transform(value: LocCreateRentalDto) {\n    try {\n      const data: CreateRentalDto = {\n        rentalDescription: 'this is a tokyo grocery getter',\n        address: value.address,\n        specs: value.value.specs,\n        registration: value.value.registration,\n        features: value.value.features,\n        scheduling: value.value.scheduling,\n        pricing: value.value.pricing,\n        loc: {\n          type: 'Point',\n          coordinates: value.coords,\n        },\n        photos: value.value.photos,\n        listed: value.value.listed,\n      };\n      return data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterUploadUtil.html":{"url":"injectables/MulterUploadUtil.html","title":"injectable - MulterUploadUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MulterUploadUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/multer-upload.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/multer-upload.util.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class MulterUploadUtil {\n\n    upload = async (req, res, multerUpload, saveImages, category, user, rental_id, model): Promise => {\n        try {\n            await multerUpload(req, res, function (err) {\n                if (err) {\n                    console.log(err);\n                    return res.status(404).json(`Failed to upload image file: ${err}`);\n                }\n                // Save the Images\n                console.log(user)\n                saveImages(req.files, category, user.userId, rental_id, model);\n                return res.status(201).json(req.files[0].location);\n            });\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PositiveNumber.html":{"url":"injectables/PositiveNumber.html","title":"injectable - PositiveNumber","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PositiveNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/util/positive-number.ts\n        \n\n            \n                Description\n            \n            \n                Confirm number is positive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/util/positive-number.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Confirm number is positive\n */\n@Injectable()\nexport class PositiveNumber {\n    validate = (data: number) => {\n        if (Math.sign(data) === -1) {\n            return false;\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PricingDto.html":{"url":"classes/PricingDto.html","title":"class - PricingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PricingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/pricing/pricing.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: edit the pricing of a rental\n\npassed to the rental.service.editPricing method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                discounts\n                            \n                            \n                                price\n                            \n                            \n                                rentalId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/pricing/pricing.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PricingDto {\n    rentalId: string;\n    price: number | null;\n    discounts: {\n        weekly: number | null;\n        monthly: number | null;\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PricingPipe.html":{"url":"injectables/PricingPipe.html","title":"injectable - PricingPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PricingPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/pricing.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate incoming price and discounts and map data into a PricingDto before sending to handler\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mapPricingDto\n                            \n                            \n                                    Private\n                                validatePricingDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: PricingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/pricing.pipe.ts:51\n                \n            \n\n\n            \n                \n                    summary: use the validatePricingDto() and mapPricingDto() methods to prepare the data for the request handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw request from a user to update the pricing of a Rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapPricingDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/pricing.pipe.ts:35\n                            \n                        \n\n                \n                    \n                        summary: map the final values of the PricingDto before passing to the handler\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        [object Object]\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validatePricingDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/pricing.pipe.ts:14\n                            \n                        \n\n                \n                    \n                        summary: validate the price and discounts do not have negative values nor violate common sense\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                the raw user request to update the Rental's pricing\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform} from '@nestjs/common';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\n\n/**\n * **summary**: validate incoming price and discounts and map data into a PricingDto before sending to handler\n */\n@Injectable()\nexport class PricingPipe implements PipeTransform {\n\n    /**\n     * **summary**: validate the price and discounts do not have negative values nor violate common sense\n     * @param data the raw user request to update the Rental's pricing\n     */\n    private validatePricingDto = async (data: PricingDto) => {\n        const minPrice: number = parseInt(process.env.MIN_PRICE, 10);\n        // check rentalId\n        if (!data.rentalId || (typeof data.rentalId !== 'string')) {\n            throw new Error('Invalid rentalID');\n        }\n        // check price is not negative && >= 9\n        if (Math.sign(data.price) === -1 || data.price  data.price) ||\n            (Math.sign(data.discounts.monthly) === -1 || data.discounts.monthly > data.price)) {\n            throw new Error('Discounts cannot be negative or greater than the price');\n        }\n    }\n\n    /**\n     * **summary**: map the final values of the PricingDto before passing to the handler\n     * @param \n     */\n    private mapPricingDto = async (data: PricingDto) => {\n        const value: PricingDto = {\n            rentalId: data.rentalId,\n            price: data.price ? data.price : null,\n            discounts: {\n                weekly: data.discounts.weekly ? data.discounts.weekly : null,\n                monthly: data.discounts.monthly ? data.discounts.monthly : null,\n            },\n        };\n        return value;\n    }\n\n    /**\n     * **summary**: use the validatePricingDto() and mapPricingDto() methods to prepare the data for the request handler\n     * @param value the raw request from a user to update the pricing of a Rental\n     */\n    async transform(value: PricingDto) {\n        try {\n            await this.validatePricingDto(value);\n            const data: PricingDto = await this.mapPricingDto(value);\n            return data;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessRentalTimeDto.html":{"url":"classes/ProcessRentalTimeDto.html","title":"class - ProcessRentalTimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessRentalTimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/process-rental-time.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the GenerateRentalDurationEnumUtil.processRentalTime() method\n\nthis dto is used to generate a RentalDuration Enum to represent this rentals scheduled duration; i.e. days, weeks, months\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                days\n                            \n                            \n                                months\n                            \n                            \n                                weeks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            days\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            months\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weeks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/process-rental-time.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessRentalTimeDto {\n    months: number;\n    weeks: number;\n    days: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessSaveDataUtil.html":{"url":"injectables/ProcessSaveDataUtil.html","title":"injectable - ProcessSaveDataUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessSaveDataUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/util/process-save-data.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                process\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            process\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/util/process-save-data.util.ts:18\n                            \n                        \n\n                \n                    \n                        Process\nSummary: create a new Image Document or an array of Image Documents to be saved\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        files\n                                                        \n                                                                the incoming file(s) to be saved\n\n                                                        \n                                                \n                                                \n                                                        user_id\n                                                        \n                                                                the user id\n\n                                                        \n                                                \n                                                \n                                                        rental_id\n                                                        \n                                                                the rental id\n\n                                                        \n                                                \n                                                \n                                                        category\n                                                        \n                                                                the category of the image: rentals or photos\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { ImageInterface } from \"../interface/image.interface\";\nimport { Model } from 'mongoose';\nimport { ProcessedSaveDataInterface } from \"../interface/processed-save-data.interface\";\n\n@Injectable()\nexport class ProcessSaveDataUtil {\n\n  /**\n   * Process\n   * Summary: create a new Image Document or an array of Image Documents to be saved\n   * @param files the incoming file(s) to be saved\n   * @param user_id the user id\n   * @param rental_id the rental id\n   * @param category the category of the image: rentals or photos\n   */\n  process = async (files, user_id, rental_id, category): Promise => {\n    if (files && files.length > 0) {\n      // single file\n      if (files.length === 1) {\n        const temp = files[0];\n        const image: ImageInterface = {\n          user_id: user_id,\n          rental_id: rental_id,\n          bucket: temp.bucket,\n          key: temp.key,\n          etag: temp.etag,\n          category: category,\n          size: temp.size,\n          location: temp.location\n        }\n       return {packet: null, image: image}\n\n      }\n      // multiple files\n      const packet = files.map(item => {\n        const image: ImageInterface = {\n          user_id: user_id,\n          rental_id: rental_id,\n          bucket: item.bucket,\n          key: item.key,\n          etag: item.etag,\n          category: category,\n          size: item.size,\n          location: item.location\n        }\n        return image\n      });\n      return {packet: packet, image: null}\n    }\n    throw new Error('Failed to save: files were not found')\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessUnavailabilityPipe.html":{"url":"injectables/ProcessUnavailabilityPipe.html","title":"injectable - ProcessUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProcessUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/process-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: query for any scheduled unavailability already in the database that would overlap with this request to add more unavailability to the Rental\nThis is to prevent the user on the front-end from accidentally overlapping 'blocks' of scheduled unavailability. The front-end of course should also block this\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addUnavailabilityId\n                            \n                            \n                                    Protected\n                                createQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidatedUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/process-unavailability.pipe.ts:121\n                \n            \n\n\n            \n                \n                    summary: process the request to update a rental's 'scheduled unavailability'\n\nthe user may schedule as far as a year ahead. To easily track the data as a single 'block' of unavailable time for the rental, each Unavailability document related to this query is given the same 'uuid'\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidatedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the validated unavailability request dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            addUnavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/process-unavailability.pipe.ts:57\n                            \n                        \n\n                \n                    \n                        summary: add unavailabilityId (uuid) to each UnavailabilityDto in the incoming ValidatedUnavailabilityDto\n\nthis method checks if the user is schedling time only for this year or into the next year as well\nthe uuid identifies a series of unavailability, allowing the entire block of time to be identified in the database\n\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the semi processed and validate client request data\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/process-unavailability.pipe.ts:19\n                            \n                        \n\n                \n                    \n                        summary: create a MongoDB query object from the provided CreateQueryDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        year\n                                                        \n                                                                data for creating a MongoDB update object\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { ValidatedUnavailabilityDto } from '../dto/unavailability/validated-unavailability.dto';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { UnavailabilityQueryDto } from '../dto/unavailability/schedule/unavailability-query.dto';\nimport { CreateQueryDto } from '../dto/unavailability/schedule/create-query.dto';\nimport { ProcessedUnavailabilityQueryDto } from '../dto/unavailability/schedule/processed-unavailability-query.dto';\n/**\n * **summary**: query for any scheduled unavailability already in the database that would overlap with this request to add more unavailability to the Rental\n * This is to prevent the user on the front-end from accidentally overlapping 'blocks' of scheduled unavailability. The front-end of course should also block this\n * @param year \n */\n@Injectable()\nexport class ProcessUnavailabilityPipe implements PipeTransform {\n\n  /**\n   * **summary**: create a MongoDB query object from the provided CreateQueryDto\n   * @param year data for creating a MongoDB update object\n   */\n  protected createQuery = async (\n    year: CreateQueryDto,\n  ): Promise => {\n    return {\n      rentalId: year.min.rentalId,\n      year: year.year,\n      doy: { $lte: year.max.doy, $gte: year.min.doy },\n      $or: [\n        {\n          // enclosed\n          start: { $gte: year.start },\n          end: { $lte: year.end },\n        },\n        {\n          // offset before start\n          start: { $lte: year.start },\n          end: { $gte: year.start },\n        },\n        {\n          // offset after end\n          start: { $lte: year.end },\n          end: { $gte: year.end },\n        },\n        {\n          // outside\n          start: { $lte: year.start },\n          end: { $gte: year.end },\n        },\n      ],\n    };\n  }\n\n  /**\n   * **summary**: add unavailabilityId (uuid) to each UnavailabilityDto in the incoming ValidatedUnavailabilityDto\n   * - this method checks if the user is schedling time only for this year or into the next year as well\n   * - the uuid identifies a series of unavailability, allowing the entire block of time to be identified in the database\n   * @param value the semi processed and validate client request data\n   */\n  protected addUnavailabilityId = async (\n    value: ValidatedUnavailabilityDto,\n  ): Promise => {\n    // temp arrays for transformation\n    const tY1 = [];\n    const tY2 = [];\n    const uuid = Date.now().toString();\n    // process 2 years\n    if (value.y2) {\n      value.y1.map(x => {\n        // y1\n        tY1.push({\n          unavailabilityId: uuid,\n          rentalId: x.rentalId,\n          year: x.year,\n          doy: x.doy,\n          start: x.start,\n          end: x.end,\n          title: x.title,\n        });\n      });\n      value.y2.map(x => {\n        // y2\n        tY2.push({\n          unavailabilityId: uuid,\n          rentalId: x.rentalId,\n          year: x.year,\n          doy: x.doy,\n          start: x.start,\n          end: x.end,\n          title: x.title,\n        });\n      });\n      // return processedUnavailabilityDto\n      const pY1: ProcessedUnavailabilityQueryDto[] = tY1;\n      const pY2: ProcessedUnavailabilityQueryDto[] = tY2;\n      return { pY1, pY2 };\n    }\n    // process 1 year\n    const ty1 = [];\n    value.y1.map(x => {\n      // y1\n      ty1.push({\n        unavailabilityId: uuid,\n        rentalId: x.rentalId,\n        year: x.year,\n        doy: x.doy,\n        start: x.start,\n        end: x.end,\n        title: x.title,\n      });\n    });\n    const py1: ProcessedUnavailabilityQueryDto[] = ty1;\n    return { pY1: py1, pY2: null };\n  }\n\n  /**\n   * **summary**: process the request to update a rental's 'scheduled unavailability'\n   * - the user may schedule as far as a year ahead. To easily track the data as a single 'block' of unavailable time for the rental, each Unavailability document related to this query is given the same 'uuid'\n   * @param value the validated unavailability request dto\n   */\n  async transform(\n    value: ValidatedUnavailabilityDto,\n  ): Promise {\n    // add uuid\n    const {pY1, pY2} = await this.addUnavailabilityId(value);\n    const { y1, y2 } = value;\n    // create Unavailability model queries for each year\n    if (y2 !== null) {\n      const createQuery1: CreateQueryDto = {\n        min: y1[0],\n        max: y1[y1.length - 1],\n        year: y1[0].year,\n        start: y1[0].start,\n        end: y1[0].end,\n      };\n      const createQuery2: CreateQueryDto = {\n        min: y2[0],\n        max: y2[y2.length - 1],\n        year: y2[0].year,\n        start: y2[0].start,\n        end: y2[0].end,\n      };\n      return {\n        y1Query: await this.createQuery(createQuery1),\n        y2Query: await this.createQuery(createQuery2),\n        data: {\n          y1: pY1,\n          y2: pY2,\n        },\n      };\n    }\n    // create an Unavailability model query for just one year\n    const createQuery = {\n      min: y1[0],\n      max: y1[y1.length - 1],\n      year: y1[0].year,\n      start: y1[0].start,\n      end: y1[0].end,\n    };\n    return {\n      y1Query: await this.createQuery(createQuery),\n      y2Query: null,\n      data: {\n        y1: pY1,\n        y2: null,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedSaveDataInterface.html":{"url":"interfaces/ProcessedSaveDataInterface.html","title":"interface - ProcessedSaveDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProcessedSaveDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/processed-save-data.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        image\n                                \n                                \n                                        packet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         ImageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        packet\n                                    \n                                \n                                \n                                    \n                                        packet:         ImageInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ImageInterface } from \"./image.interface\";\n\nexport interface ProcessedSaveDataInterface {\n    packet: ImageInterface[];\n    image: ImageInterface;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedUnavailabilityDto.html":{"url":"classes/ProcessedUnavailabilityDto.html","title":"class - ProcessedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the final procesed version of the request to schedule unavailability. It contains the UnavailabilityQueryDto data that was used\nto create the ProcessedUnavailabilityQueryDtos as well as the returned ProcessedUnavailabilityQueryDto[]s that will be used by the handler\nto schedule the new unavailability.\n\npassed to the rental.service.scheduleUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                y1Query\n                            \n                            \n                                y2Query\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1Query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityQueryDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2Query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityQueryDto | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityQueryDto } from './unavailability-query.dto';\nimport { ProcessedUnavailabilityQueryDto } from './processed-unavailability-query.dto';\n/**\n * **summary**: the final procesed version of the request to schedule unavailability. It contains the UnavailabilityQueryDto data that was used\n * to create the ProcessedUnavailabilityQueryDtos as well as the returned ProcessedUnavailabilityQueryDto[]s that will be used by the handler\n * to schedule the new unavailability.\n * - passed to the rental.service.scheduleUnavailability() method\n */\nexport class ProcessedUnavailabilityDto {\n    y1Query: UnavailabilityQueryDto;\n    y2Query: UnavailabilityQueryDto | null;\n    data: {\n        y1: ProcessedUnavailabilityQueryDto[];\n        y2: ProcessedUnavailabilityQueryDto[] | null;\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessedUnavailabilityQueryDto.html":{"url":"classes/ProcessedUnavailabilityQueryDto.html","title":"class - ProcessedUnavailabilityQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessedUnavailabilityQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this is a modified version of the UnavailabilityDto that is ready to be used in the CreateQueryDto\n\npassed as a property of the CreateQueryDto\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                unavailabilityId\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProcessedUnavailabilityQueryDto {\n    unavailabilityId: string; // for updating and quick indexing\n    rentalId: string;\n    year: number;\n    doy: number;\n    start: number;\n    end: number;\n    title: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedUploadDataInterface.html":{"url":"interfaces/ProcessedUploadDataInterface.html","title":"interface - ProcessedUploadDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProcessedUploadDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interface/processed-upload-data.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        param\n                                \n                                \n                                        params\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        param\n                                    \n                                \n                                \n                                    \n                                        param:         ImageUploadInterface | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageUploadInterface | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:         ImageUploadInterface[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageUploadInterface[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ImageUploadInterface } from \"./image-upload.interface\";\n\nexport interface ProcessedUploadDataInterface {\n    param: ImageUploadInterface | null;\n    params: ImageUploadInterface[] | null;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawCoordinatesDto.html":{"url":"classes/RawCoordinatesDto.html","title":"class - RawCoordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawCoordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/raw-coordinates.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the Geocoding & Searching v7 API returns the following coordinates object when passed an address\n\npassed to GeoUrlApiUtil\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lat\n                            \n                            \n                                lng\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-coordinates.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lng\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-coordinates.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawCoordinatesDto {\n    lat: number;\n    lng: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawCreateRentalDto.html":{"url":"classes/RawCreateRentalDto.html","title":"class - RawCreateRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawCreateRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/createRental/raw-create-rental-dto.ts\n        \n\n            \n                Description\n            \n            \n                summary:\n\nThe initial values submitted by a user to create a new rental listing\nspecs: specifications about the vehicle\nregistration: basic vehicle registration data\nfeatures: e.g. 'bike rack', 'heated seats', 'auto-pilot', etc.\nscheduling: list the required advance notice, as well as min & max rental duration\npricing: the rental rate as well as discount conditions; e.g. weekly rentals get $5 off\nlocation: the steet, city, and zip of the user\nphotos: a max of 10 image references\nlisted: hide or show the rental to the application community\npassed to the GeoUrlApiPipe transform method. This is the raw data before the GeoJSON object is added and the final\nCreateRentalDto has not been created\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                features\n                            \n                            \n                                listed\n                            \n                            \n                                location\n                            \n                            \n                                photos\n                            \n                            \n                                pricing\n                            \n                            \n                                registration\n                            \n                            \n                                scheduling\n                            \n                            \n                                specs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pricing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            specs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/createRental/raw-create-rental-dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawCreateRentalDto {\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number | null;\n    hwyMpg: number | null;\n    mpgE: number | null;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: string[];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: number;\n    discounts: {\n      weekly: number;\n      monthly: number;\n    };\n  };\n  location: {\n    street: string;\n    city: string;\n    zip: number;\n  };\n  photos: string[];\n  listed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawScheduleUnavailabilityDto.html":{"url":"classes/RawScheduleUnavailabilityDto.html","title":"class - RawScheduleUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawScheduleUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the initial form data submitted from the client to request to schedule Unavailability for a rental\n\npassed to the SortUnavailabilityPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                unavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: the initial form data submitted from the client to request to schedule Unavailability for a rental\n * - passed to the SortUnavailabilityPipe\n */\nexport class RawScheduleUnavailabilityDto {\n  unavailability: UnavailabilityDto[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawSearchRentalDto.html":{"url":"classes/RawSearchRentalDto.html","title":"class - RawSearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawSearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/raw-search-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: search for retnals by address, a start and end time, price, and features\n\npassed to the GivenNoticePipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                price\n                            \n                            \n                                rentalEndTime\n                            \n                            \n                                rentalStartTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalEndTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalStartTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/raw-search-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RawSearchRentalDto {\n    address: string;\n    rentalStartTime: Date;\n    rentalEndTime: Date;\n    price: number;\n    features: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveUnavailabilityDto.html":{"url":"classes/RemoveUnavailabilityDto.html","title":"class - RemoveUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/remove/remove-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the information necessary to delte an Unavailability document from the database\n\npassed to the rental.service.removeUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/remove/remove-unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/remove/remove-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveUnavailabilityDto {\n  rentalId: string;\n  unavailabilityId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RentalController.html":{"url":"controllers/RentalController.html","title":"controller - RentalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RentalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/controller/rental.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rental\n            \n\n            \n                Description\n            \n            \n                \nRental Controller: Handle incoming requests and return responses for managing Rentals\nMiddleware: The ValidateUpdateUnavailabilityMiddleware class is applied to the updateUnavailability method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRental\n                            \n                            \n                                    Async\n                                editDetails\n                            \n                            \n                                    Async\n                                editPricing\n                            \n                            \n                                    Async\n                                removeUnavailability\n                            \n                            \n                                    Async\n                                scheduleUnavailability\n                            \n                            \n                                    Async\n                                searchRental\n                            \n                            \n                                    Async\n                                updateUnavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRental(rental: CreateRentalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new JoiValidationPipe())@UsePipes(new MapNewRentalPipe())@UsePipes(new GeoUrlApiPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:48\n                \n            \n\n\n            \n                \n                    Create Rental:\ncreate a new vehicle rental listing\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                CreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editDetails(editDetailsDto: EditDetailsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit-details')@UsePipes(new ValidateEditDetailsPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:85\n                \n            \n\n\n            \n                \n                    Edit Rental Details:\nedit the details of the Rental (# of seats, color, etc.)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editDetailsDto\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editPricing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editPricing(pricingDto: PricingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit-price')@UsePipes(new PricingPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:75\n                \n            \n\n\n            \n                \n                    Edit Pricing:\nedit the rental price\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pricingDto\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUnavailability(data: RemoveUnavailabilityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('remove-unavailability')@UsePipes(new ValidateRemoveUnavailabilityPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:117\n                \n            \n\n\n            \n                \n                    Remove Unavailability\nremove existing unavailability\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleUnavailability(processed: ProcessedUnavailabilityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('schedule-unavailability')@UsePipes(new ProcessUnavailabilityPipe())@UsePipes(new ValidateUnavailabilityPipe())@UsePipes(new SortUnavailabilityPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:97\n                \n            \n\n\n            \n                \n                    Schedule Unavailability\nset a period of unavailability for the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    processed\n                                    \n                                                ProcessedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRental(searchRentalDto: SearchRentalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UsePipes(new JoiValidationPipe())@UsePipes(new RequestCoordinatesPipe())@UsePipes(new RentalDurationPipe())@UsePipes(new GivenNoticePipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:65\n                \n            \n\n\n            \n                \n                    Search Rental:\nfind rentals available near a specified location (user's location)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchRentalDto\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUnavailability(data: UpdateUnavailabilityDataDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update-unavailability')@UsePipes(new CreateUpdaterDtoPipe())\n                \n            \n\n            \n                \n                    Defined in src/rental/controller/rental.controller.ts:107\n                \n            \n\n\n            \n                \n                    Update Unavailability\nedit current unavailability\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUnavailabilityDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, Param, UsePipes, Query, Res, Req } from '@nestjs/common';\nimport { RentalService } from '../service/rental.service';\nimport { GeoUrlApiPipe } from '../pipes/geo-url-api.pipe';\nimport { MapNewRentalPipe } from '../pipes/map-new-rental.pipe';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\nimport { JoiValidationPipe } from '../../common/pipes/joi-validation.pipe';\nimport { CreateRentalValidationSchema } from '../schema/validation/create-rental-validation.schema';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\nimport { RentalDurationPipe } from '../pipes/rental-duration.pipe';\nimport { GenerateRentalDurationEnumUtil } from '../utils/generate-rental-duration-enum.util';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\nimport { RequestCoordinatesPipe } from '../pipes/request-coordinates.pipe';\nimport { GivenNoticePipe } from '../pipes/given-notice.pipe';\nimport { SearchRentalValidationSchema } from '../schema/validation/search-rental-validation.schema';\nimport { PricingPipe } from '../pipes/pricing.pipe';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\nimport { ValidateEditDetailsPipe } from '../pipes/validate-edit-details.pipe';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { SortUnavailabilityPipe } from '../pipes/sort-unavailability.pipe';\nimport { ValidateUnavailabilityPipe } from '../pipes/validate-unavailability.pipe';\nimport { ProcessUnavailabilityPipe } from '../pipes/process-unavailability.pipe';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { CreateUpdaterDtoPipe } from '../pipes/create-updater-dto.pipe';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto' // '../dto/update-unavailability-data.dto';\nimport { ValidateRemoveUnavailabilityPipe } from '../pipes/validate-remove-unavailability.pipe';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\nimport { AppConfigService } from '../../config/configuration.service';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * - **Rental Controller**: Handle incoming requests and return responses for managing Rentals\n * - **Middleware**: The ValidateUpdateUnavailabilityMiddleware class is applied to the updateUnavailability method\n */\n@Controller('rental')\nexport class RentalController {\n  constructor(\n    private readonly rentalService: RentalService,\n    ) {}\n\n  /**\n   * Create Rental:\n   * create a new vehicle rental listing\n   */\n  @Post()\n  @UsePipes(new JoiValidationPipe(CreateRentalValidationSchema))\n  @UsePipes(new MapNewRentalPipe())\n  @UsePipes(new GeoUrlApiPipe(new GeoUrlApiUtil(), new AppConfigService(new ConfigService)))\n  async createRental(@Body() rental: CreateRentalDto) {\n    try {\n      return await this.rentalService.createRental(rental);\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * Search Rental:\n   * find rentals available near a specified location (user's location)\n   */\n  @Get()\n  @UsePipes(new JoiValidationPipe(SearchRentalValidationSchema))\n  @UsePipes(new RequestCoordinatesPipe(new GeoUrlApiUtil()))\n  @UsePipes(new RentalDurationPipe(new GenerateRentalDurationEnumUtil()))\n  @UsePipes(new GivenNoticePipe())\n  async searchRental(@Query() searchRentalDto: SearchRentalDto) {\n      return await this.rentalService.searchRental(searchRentalDto);\n  }\n\n  /**\n   * Edit Pricing:\n   * edit the rental price\n   */\n  @Post('edit-price')\n  @UsePipes(new PricingPipe())\n  async editPricing(@Body() pricingDto: PricingDto) {\n      return await this.rentalService.editPricing(pricingDto);\n  }\n\n  /**\n   * Edit Rental Details:\n   * edit the details of the Rental (# of seats, color, etc.)\n   */\n  @Post('edit-details')\n  @UsePipes(new ValidateEditDetailsPipe())\n  async editDetails(@Body() editDetailsDto: EditDetailsDto) {\n      return await this.rentalService.editDetails(editDetailsDto);\n  }\n\n  /**\n   * Schedule Unavailability\n   * set a period of unavailability for the rental\n   */\n  @Post('schedule-unavailability')\n  @UsePipes(new ProcessUnavailabilityPipe())\n  @UsePipes(new ValidateUnavailabilityPipe())\n  @UsePipes(new SortUnavailabilityPipe())\n  async scheduleUnavailability(@Body() processed: ProcessedUnavailabilityDto ) {\n    return await this.rentalService.scheduleUnavailability(processed);\n  }\n\n  /**\n   * Update Unavailability\n   * edit current unavailability\n   */\n  @Post('update-unavailability')\n  @UsePipes(new CreateUpdaterDtoPipe())\n  async updateUnavailability(@Body() data: UpdateUnavailabilityDataDto) {\n    return await this.rentalService.updateUnavailability(data);\n  }\n\n   /**\n    * Remove Unavailability\n    * remove existing unavailability\n    */\n   @Post('remove-unavailability')\n   @UsePipes(new ValidateRemoveUnavailabilityPipe())\n   async removeUnavailability(@Body() data: RemoveUnavailabilityDto) {\n     return await this.rentalService.removeUnavailability(data);\n   }\n\n   /**\n    * Upload Rental Photos\n    * upload photos of your rental listing\n    * ! see the images/controller\n    */\n\n    /**\n     * Toggle Rental listed status\n     */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalDurationPipe.html":{"url":"injectables/RentalDurationPipe.html","title":"injectable - RentalDurationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RentalDurationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/rental-duration.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a rental Duration from the incoming GivenNoticeSearchRentalDto\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(generateDuration: GenerateRentalDurationEnumUtil)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/rental-duration.pipe.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        generateDuration\n                                                  \n                                                        \n                                                                        GenerateRentalDurationEnumUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: GivenNoticeSearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/rental-duration.pipe.ts:19\n                \n            \n\n\n            \n                \n                    summary: use the generateRentalDurationEnumUtil() to create a RentalDuration Enum for the\nRental query\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                GivenNoticeSearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the semi processed client request data to query a rental near their, or a specified, locaion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { GivenNoticeSearchRentalDto } from '../dto/searchRental/given-notice-search-rental-dto';\nimport { GenerateRentalDurationEnumUtil } from '../utils/generate-rental-duration-enum.util';\nimport { RequestCoordinatesDto } from '../dto/searchRental/request-coordinates.dto';\n/**\n * **summary**: create a rental Duration from the incoming GivenNoticeSearchRentalDto\n */\n@Injectable()\nexport class RentalDurationPipe implements PipeTransform {\n  constructor(private generateDuration: GenerateRentalDurationEnumUtil) {\n    this.generateDuration = generateDuration;\n  }\n\n  /**\n   * **summary**: use the generateRentalDurationEnumUtil() to create a RentalDuration [**Enum**](https://www.typescriptlang.org/docs/handbook/enums.html) for the\n   * Rental query\n   * @param value the semi processed client request data to query a rental near their, or a specified, locaion\n   */\n  async transform(value: GivenNoticeSearchRentalDto) {\n    try {\n      const dto: RequestCoordinatesDto = {\n        address: value.address,\n        price: value.price,\n        features: value.features,\n        rentalDuration: await this.generateDuration.generateRentalDurationEnum(\n          value.rentalStartTime,\n          value.rentalEndTime,\n        ),\n        givenNotice: value.givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RentalInterface.html":{"url":"interfaces/RentalInterface.html","title":"interface - RentalInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RentalInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/interface/schemaInterface/Rental/rental.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the 'Rental' Model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        features\n                                \n                                \n                                        listed\n                                \n                                \n                                        loc\n                                \n                                \n                                        photos\n                                \n                                \n                                        pricing\n                                \n                                \n                                        registration\n                                \n                                \n                                        rentalDescription\n                                \n                                \n                                        scheduling\n                                \n                                \n                                        specs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     [string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listed\n                                    \n                                \n                                \n                                    \n                                        listed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loc\n                                    \n                                \n                                \n                                    \n                                        loc:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                    \n                                \n                                \n                                    \n                                        photos:     [string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pricing\n                                    \n                                \n                                \n                                    \n                                        pricing:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration\n                                    \n                                \n                                \n                                    \n                                        registration:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rentalDescription\n                                    \n                                \n                                \n                                    \n                                        rentalDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduling\n                                    \n                                \n                                \n                                    \n                                        scheduling:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        specs\n                                    \n                                \n                                \n                                    \n                                        specs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RentalInterface {\n  rentalDescription: string;\n  address: string;\n  loc: {\n    type: string;\n    coordinates: string;\n  };\n  specs: {\n    odometer: number;\n    transmission: string;\n    cityMpg: number;\n    hwyMpg: number;\n    fuel: string;\n    gasGrade: string;\n    description: string;\n    make: string;\n    model: string;\n    style: string;\n    color: string;\n    numOfSeats: number;\n    numDoors: number;\n  };\n  registration: {\n    vin: string;\n    licensePlate: string;\n    state: string;\n  };\n  features: [string];\n  scheduling: {\n    requiredNotice: number;\n    rentMinDuration: number;\n    rentMaxDuration: number;\n  };\n  pricing: {\n    price: { type: number /*; default: DEFAULT_PRICE*/ };\n    discounts: {\n      weekly: { type: number; default: null };\n      monthly: { type: number; default: null };\n    };\n  };\n  photos: [string];\n  listed: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RentalModule.html":{"url":"modules/RentalModule.html","title":"module - RentalModule","body":"\n                   \n\n\n\n\n    Modules\n    RentalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RentalModule\n\n\n\ncluster_RentalModule_providers\n\n\n\ncluster_RentalModule_imports\n\n\n\ncluster_RentalModule_exports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nRentalModule\n\nRentalModule\n\nRentalModule -->\n\nDatabaseModule->RentalModule\n\n\n\n\n\nRentalService \n\nRentalService \n\nRentalService  -->\n\nRentalModule->RentalService \n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nRentalModule -->\n\nAppConfigService->RentalModule\n\n\n\n\n\nCreateUpdaterDtoPipe\n\nCreateUpdaterDtoPipe\n\nRentalModule -->\n\nCreateUpdaterDtoPipe->RentalModule\n\n\n\n\n\nGenerateRentalDurationEnumUtil\n\nGenerateRentalDurationEnumUtil\n\nRentalModule -->\n\nGenerateRentalDurationEnumUtil->RentalModule\n\n\n\n\n\nGeoUrlApiPipe\n\nGeoUrlApiPipe\n\nRentalModule -->\n\nGeoUrlApiPipe->RentalModule\n\n\n\n\n\nGeoUrlApiUtil\n\nGeoUrlApiUtil\n\nRentalModule -->\n\nGeoUrlApiUtil->RentalModule\n\n\n\n\n\nGivenNoticePipe\n\nGivenNoticePipe\n\nRentalModule -->\n\nGivenNoticePipe->RentalModule\n\n\n\n\n\nMapNewRentalPipe\n\nMapNewRentalPipe\n\nRentalModule -->\n\nMapNewRentalPipe->RentalModule\n\n\n\n\n\nPricingPipe\n\nPricingPipe\n\nRentalModule -->\n\nPricingPipe->RentalModule\n\n\n\n\n\nProcessUnavailabilityPipe\n\nProcessUnavailabilityPipe\n\nRentalModule -->\n\nProcessUnavailabilityPipe->RentalModule\n\n\n\n\n\nRentalDurationPipe\n\nRentalDurationPipe\n\nRentalModule -->\n\nRentalDurationPipe->RentalModule\n\n\n\n\n\nRentalService\n\nRentalService\n\nRentalModule -->\n\nRentalService->RentalModule\n\n\n\n\n\nRequestCoordinatesPipe\n\nRequestCoordinatesPipe\n\nRentalModule -->\n\nRequestCoordinatesPipe->RentalModule\n\n\n\n\n\nSortUnavailabilityPipe\n\nSortUnavailabilityPipe\n\nRentalModule -->\n\nSortUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateEditDetailsPipe\n\nValidateEditDetailsPipe\n\nRentalModule -->\n\nValidateEditDetailsPipe->RentalModule\n\n\n\n\n\nValidateRemoveUnavailabilityPipe\n\nValidateRemoveUnavailabilityPipe\n\nRentalModule -->\n\nValidateRemoveUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateUnavailabilityPipe\n\nValidateUnavailabilityPipe\n\nRentalModule -->\n\nValidateUnavailabilityPipe->RentalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rental/rental.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nsummary: This module provides all of the functionality for working with Rentals\nMiddleware: This module consumes the ValidateUpdateUnavailability middleware; for more details, in the documentation checkout the Injectables ValidateUpdateUnavailability tab\nDatabase: This module applies indexing to the Unavailability model of the database\n\n\n\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppConfigService\n                        \n                        \n                            CreateUpdaterDtoPipe\n                        \n                        \n                            GenerateRentalDurationEnumUtil\n                        \n                        \n                            GeoUrlApiPipe\n                        \n                        \n                            GeoUrlApiUtil\n                        \n                        \n                            GivenNoticePipe\n                        \n                        \n                            MapNewRentalPipe\n                        \n                        \n                            PricingPipe\n                        \n                        \n                            ProcessUnavailabilityPipe\n                        \n                        \n                            RentalDurationPipe\n                        \n                        \n                            RentalService\n                        \n                        \n                            RequestCoordinatesPipe\n                        \n                        \n                            SortUnavailabilityPipe\n                        \n                        \n                            ValidateEditDetailsPipe\n                        \n                        \n                            ValidateRemoveUnavailabilityPipe\n                        \n                        \n                            ValidateUnavailabilityPipe\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RentalController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RentalService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/rental.module.ts:71\n                \n            \n\n\n            \n                \n                    summary: applies the ValidateUpdateUnavailability which validates a user's request to the rental.controller.updateUnavaialability method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        interfacing defining method for applying user defined middleware to routes\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { RentalController } from './controller/rental.controller';\nimport { RentalService } from './service/rental.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RentalSchema } from './schema/rental.schema';\nimport { GeoUrlApiUtil } from './utils/geo-url-api.util';\nimport { UnavailabilitySchema } from './schema/unavailability-schema';\nimport { DatabaseModule } from '../database/database.module';\nimport { unavailabilityProvider } from '../database/providers/unavailability-model.provider';\nimport { ValidateUpdateUnavailabilityMiddleware } from './middleware/validate-update-unavailability.middleware';\nimport { MapNewRentalPipe } from './pipes/map-new-rental.pipe';\nimport { GeoUrlApiPipe } from './pipes/geo-url-api.pipe';\nimport { RequestCoordinatesPipe } from './pipes/request-coordinates.pipe';\nimport { RentalDurationPipe } from './pipes/rental-duration.pipe';\nimport { GivenNoticePipe } from './pipes/given-notice.pipe';\nimport { PricingPipe } from './pipes/pricing.pipe';\nimport { ValidateEditDetailsPipe } from './pipes/validate-edit-details.pipe';\nimport { ProcessUnavailabilityPipe } from './pipes/process-unavailability.pipe';\nimport { ValidateUnavailabilityPipe } from './pipes/validate-unavailability.pipe';\nimport { SortUnavailabilityPipe } from './pipes/sort-unavailability.pipe';\nimport { CreateUpdaterDtoPipe } from './pipes/create-updater-dto.pipe';\nimport { ValidateRemoveUnavailabilityPipe } from './pipes/validate-remove-unavailability.pipe';\nimport { AppConfigService } from 'src/config/configuration.service';\nimport { GenerateRentalDurationEnumUtil } from './utils/generate-rental-duration-enum.util';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n/**\n * - **summary**: This module provides all of the functionality for working with Rentals\n *   - **Middleware**: This module consumes the **ValidateUpdateUnavailability** middleware; for more details, in the documentation checkout the **Injectables** ValidateUpdateUnavailability tab\n *   - **Database**: This module applies indexing to the **Unavailability** model of the database\n */\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Rental', schema: RentalSchema }]),\n    MongooseModule.forFeature([{name: 'Unavailability', schema: UnavailabilitySchema}]),\n    DatabaseModule,\n    ConfigModule,\n  ],\n  controllers: [RentalController],\n  providers: [\n    RentalService,\n    GeoUrlApiUtil,\n    ...unavailabilityProvider,\n    MapNewRentalPipe,\n    GeoUrlApiPipe,\n    RequestCoordinatesPipe,\n    RentalDurationPipe,\n    GenerateRentalDurationEnumUtil,\n    GivenNoticePipe,\n    PricingPipe,\n    ValidateEditDetailsPipe,\n    ProcessUnavailabilityPipe,\n    ValidateUnavailabilityPipe,\n    SortUnavailabilityPipe,\n    CreateUpdaterDtoPipe,\n    ValidateRemoveUnavailabilityPipe,\n    AppConfigService,\n    ConfigService\n  ],\n  exports: [RentalService],\n})\nexport class RentalModule implements NestModule {\n  constructor() {\n    RentalSchema.index({ loc: '2dsphere' });\n    UnavailabilitySchema.index({rentalId: 1});\n    UnavailabilitySchema.index({UnavailabilityId: 1});\n  }\n  /**\n   * **summary**: applies the ValidateUpdateUnavailability which validates a user's request to the rental.controller.updateUnavaialability method\n   * @param consumer interfacing defining method for applying user defined middleware to routes\n   */\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ValidateUpdateUnavailabilityMiddleware)\n      .forRoutes('v1/rental');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalService.html":{"url":"injectables/RentalService.html","title":"injectable - RentalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RentalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/service/rental.service.ts\n        \n\n            \n                Description\n            \n            \n                summary: create, search for near (within a radius: e.g. 10 miles of) a location, update details, and schedule blocks of unavailable time for Rentals\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkForOverlap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRental\n                            \n                            \n                                    Private\n                                    Async\n                                createRentalQuery\n                            \n                            \n                                    Async\n                                editDetails\n                            \n                            \n                                    Async\n                                editPricing\n                            \n                            \n                                    Async\n                                removeUnavailability\n                            \n                            \n                                    Async\n                                scheduleUnavailability\n                            \n                            \n                                    Async\n                                searchRental\n                            \n                            \n                                    Async\n                                updateUnavailability\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rentalModel: Model, unavailability: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/service/rental.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rentalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unavailability\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRental(rental: CreateRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:31\n                \n            \n\n\n            \n                \n                    summary: create a new rental listing with attached geolocation coordinates\nso the rental may be found by a geospatial query\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                CreateRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new rental to be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createRentalQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRentalQuery(rental: SearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:178\n                \n            \n\n\n            \n                \n                    summary: convert a searchRentalDto into a mongoose query for the searchRental method\n\nThe query searchs a maxium 8 mile radius for rentals\nFilters: \nrental min duration\nrental max duration\nadvance notice minimum; e.g. 1 hour\nloc: GeoJSON object\nrental price: optional\nrental features: optional\n\n\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        searchRentalDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editDetails(data: EditDetailsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:92\n                \n            \n\n\n            \n                \n                    summary: edit the details of the Rental (# of seats, color, etc.)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data comes as an EditDetailsDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editPricing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editPricing(data: PricingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:65\n                \n            \n\n\n            \n                \n                    summary: edit the rental pricing\n\nprice\ndiscounts:\nweekly\nmonthly\n\n\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PricingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUnavailability(data: RemoveUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:151\n                \n            \n\n\n            \n                \n                    summary: remove an amount of time from a scheduled duration of unavailability on the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleUnavailability(processed: ProcessedUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:113\n                \n            \n\n\n            \n                \n                    summary: set a period of unavailability for the rental (e.g. mon - wed)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    processed\n                                    \n                                                ProcessedUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchRental\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRental(rental: SearchRentalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:44\n                \n            \n\n\n            \n                \n                    summary: query rentals in the database with the data provided in the SearchRentalDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rental\n                                    \n                                                SearchRentalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SearchRentalDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUnavailability\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUnavailability(data: UpdateUnavailabilityDataDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/rental.service.ts:134\n                \n            \n\n\n            \n                \n                    summary: edit a block of scheduled unavailability by either extending or reducing the scheduled duration of time on the rental\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUnavailabilityDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkForOverlap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/service/rental.service.ts:216\n                            \n                        \n\n                \n                    \n                        summary: validate there currently is no scheduled unavailability for the rental in the database that overlaps \nwith the requested unavailability \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                query for 1 or 2 years\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger } from '@nestjs/common';\nimport { CreateRentalDto } from '../dto/createRental/create-rental.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RentalInterface } from '../interface/schemaInterface/Rental/rental.interface';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\nimport { PricingDto } from '../dto/pricing/pricing.dto';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { unavailabilityModel } from '../../common/Const';\nimport { UnavailabilityInterface } from '../interface/schemaInterface/Unavailability/unavailability.interface';\nimport { ProcessedUnavailabilityDto } from '../dto/unavailability/schedule/processed-unavailability.dto';\nimport { UpdateUnavailabilityDataDto } from '../dto/unavailability/update/update-unavailability-data.dto';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\n\n/**\n * **summary**: create, search for near (within a radius: e.g. 10 miles of) a location, update details, and schedule blocks of unavailable time for Rentals\n */\n@Injectable()\nexport class RentalService {\n  constructor(\n    @InjectModel('Rental') private readonly rentalModel: Model,\n    @Inject(unavailabilityModel)\n    private readonly unavailability: Model,\n  ) { }\n\n  /**\n   * **summary**: create a new rental listing with attached geolocation coordinates\n   * so the rental may be found by a geospatial query\n   * @param rental the new rental to be created\n   */\n  async createRental(rental: CreateRentalDto) {\n    try {\n      const document = await new this.rentalModel(rental);\n      return await document.save();\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: query rentals in the database with the data provided in the SearchRentalDto\n   * @param rental SearchRentalDto\n   */\n  async searchRental(rental: SearchRentalDto) {\n    try {\n      const query = await this.createRentalQuery(rental);\n      const rentals = await this.rentalModel.find(query);\n      if (rentals.length > 0) {\n        return rentals;\n      } else {\n        throw new Error('No rentals were found');\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit the rental pricing\n   * - price\n   * - discounts:\n   *   - weekly\n   *   - monthly\n   */\n  async editPricing(data: PricingDto) {\n    // make an update document\n    try {\n      const filter = { _id: data.rentalId };\n      const update = {\n        pricing: {\n          price: data.price,\n          discounts: {\n            weekly: data.discounts.weekly,\n            monthly: data.discounts.monthly,\n          },\n        },\n      };\n      const updater = {\n        $set: update,\n      };\n      const doc = await this.rentalModel.findOneAndUpdate(filter, updater, { new: true });\n      return doc;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit the details of the Rental (# of seats, color, etc.)\n   * @param data the data comes as an EditDetailsDto\n   */\n  async editDetails(data: EditDetailsDto) {\n    // make an update document\n    try {\n      const filter = { _id: data.rentalId };\n      const update = {\n        specs: data.specs,\n        features: data.features,\n      };\n      const updater = {\n        $set: update,\n      };\n      const doc = await this.rentalModel.findOneAndUpdate(filter, updater, { new: true });\n      return doc;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: set a period of unavailability for the rental (e.g. mon - wed)\n   */\n  async scheduleUnavailability(processed: ProcessedUnavailabilityDto) {\n    try {\n      await this.checkForOverlap(processed);\n      // if it passed, combine data into one array and insert\n      const { y1, y2 } = processed.data;\n      if (y2 !== null) {\n        const merged = y1.concat(y2);\n        Logger.log(`the merged years`);\n        Logger.log(merged);\n        return await this.unavailability.insertMany(merged, { ordered: true });\n      }\n      return await this.unavailability.insertMany(y1, { ordered: true });\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: edit a block of scheduled unavailability by either extending or reducing the scheduled duration of time on the rental\n   * @param data \n   */\n  async updateUnavailability(data: UpdateUnavailabilityDataDto) {\n    // send the update\n    try {\n      const update = await this.unavailability.updateMany(\n        data.filter,\n        data.updater,\n      );\n      return update;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: remove an amount of time from a scheduled duration of unavailability on the rental\n   * @param data \n   */\n  async removeUnavailability(data: RemoveUnavailabilityDto) {\n    try {\n      const remove = await this.unavailability.deleteMany({\n        rentalId: data.rentalId,\n        unavailabilityId: data.unavailabilityId,\n      });\n      if (remove.deletedCount === 0) {\n        throw new Error('No Unavailability documents were found, no documents were deleted');\n      }\n      return remove;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: convert a searchRentalDto into a mongoose query for the searchRental method\n   * - The query searchs a maxium 8 mile radius for rentals\n   * - Filters: \n   *   - rental min duration\n   *   - rental max duration\n   *   - advance notice minimum; e.g. 1 hour\n   *   - loc: GeoJSON object\n   *   - rental price: optional\n   *   - rental features: optional\n   * @param rental searchRentalDto\n   */\n  private async createRentalQuery(rental: SearchRentalDto) {\n    try {\n      const query: any = {\n        'scheduling.rentMinDuration': { $lte: rental.rentalDuration },\n        'scheduling.rentMaxDuration': { $gte: rental.rentalDuration },\n        'scheduling.requiredNotice': { $lte: rental.givenNotice },\n        'loc': {\n          $near: {\n            $maxDistance: 12875, // 8 miles\n            $geometry: {\n              type: rental.loc.type,\n              coordinates: [\n                rental.loc.coordinates[0], // latitude\n                rental.loc.coordinates[1], // longitude\n              ],\n            },\n          },\n        },\n      };\n      rental.price\n        ? (query.pricing = {\n          price: rental.price, // add price as optional search parameter\n        })\n        : (rental.price = null);\n      rental.features\n        ? (query.features = { $in: rental.features })\n        : (rental.features = null);\n      return query;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * **summary**: validate there currently is no scheduled unavailability for the rental in the database that overlaps \n   * with the requested unavailability \n   * @param data query for 1 or 2 years\n   */\n  private checkForOverlap = async (data: ProcessedUnavailabilityDto) => {\n    const { y1Query, y2Query } = data;\n    // if there are 2 years\n    if (y2Query !== null) {\n      const test1 = await this.unavailability.find(y1Query);\n      const test2 = await this.unavailability.find(y2Query);\n      Logger.log(`test1`);\n      Logger.log(test1);\n      Logger.log(`test2`);\n      Logger.log(test2);\n      if (test1.length || test2.length) {\n        throw new Error('this request overlaps with existing unavailability');\n      }\n    }\n    // else\n    const test = await this.unavailability.find(y1Query);\n    if (test.length) {\n      throw new Error('this request overlaps with existing unavailability');\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCoordinatesDto.html":{"url":"classes/RequestCoordinatesDto.html","title":"class - RequestCoordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCoordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/request-coordinates.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto contains the results of the GivenNoticePipe; which added the givenNotice property to this data\n\npassed to the RequestCoordinatesPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                price\n                            \n                            \n                                rentalDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/request-coordinates.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RequestCoordinatesDto {\n  address: string;\n  price: number;\n  features: string[];\n  rentalDuration: number; // enum\n  givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestCoordinatesPipe.html":{"url":"injectables/RequestCoordinatesPipe.html","title":"injectable - RequestCoordinatesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestCoordinatesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/request-coordinates.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: create a SearchRentalDto with the GeoJSON loc property with the HERE Geocoding & Searching API\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(geoUrlApiUtil: GeoUrlApiUtil)\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/request-coordinates.pipe.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geoUrlApiUtil\n                                                  \n                                                        \n                                                                        GeoUrlApiUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RequestCoordinatesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/request-coordinates.pipe.ts:17\n                \n            \n\n\n            \n                \n                    summary: finish transforming the client request into a SearchRentalDto using the geoUrlApiUtil.getCoordinates() method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RequestCoordinatesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the semi-processed client request data to search for Rentals\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { RequestCoordinatesDto } from '../dto/searchRental/request-coordinates.dto';\nimport { GeoUrlApiUtil } from '../utils/geo-url-api.util';\nimport { SearchRentalDto } from '../dto/searchRental/search-rental.dto';\n\n/**\n * **summary**: create a SearchRentalDto with the GeoJSON loc property with the [**HERE Geocoding & Searching API**](https://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html)\n */\n@Injectable()\nexport class RequestCoordinatesPipe implements PipeTransform {\n  constructor(private readonly geoUrlApiUtil: GeoUrlApiUtil) {}\n\n  /**\n   * **summary**: finish transforming the client request into a SearchRentalDto using the geoUrlApiUtil.getCoordinates() method\n   * @param value the semi-processed client request data to search for Rentals\n   */\n  async transform(value: RequestCoordinatesDto) {\n    const geoUrl = process.env.GEO_URL;\n    const apiKey = process.env.GEO_API_KEY; \n    try {\n      const dto: SearchRentalDto = {\n        address: value.address,\n        price: value.price,\n        features: value.features,\n        rentalDuration: value.rentalDuration,\n        loc: {\n          type: 'Point',\n          coordinates: await this.geoUrlApiUtil.getCoordinates(\n            value.address,\n            geoUrl,\n            apiKey\n          ),\n        },\n        givenNotice: value.givenNotice,\n      };\n      return dto;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPass\n                            \n                            \n                                    Readonly\n                                resetPass\n                            \n                            \n                                    Readonly\n                                resetPasswordToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            confirmPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resetPass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resetPasswordToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/reset-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ResetPasswordDto {\n\treadonly resetPass: string;\n\treadonly confirmPass: string;\n\treadonly resetPasswordToken: string; //should be in request body?\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordTokenDto.html":{"url":"injectables/ResetPasswordTokenDto.html","title":"injectable - ResetPasswordTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/find-user-by-reset-password-token.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/find-user-by-reset-password-token.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class ResetPasswordTokenDto {\n    token: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Provider.html":{"url":"injectables/S3Provider.html","title":"injectable - S3Provider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Provider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/providers/s3.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getS3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appConfig: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/images/providers/s3.provider.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appConfig\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/images/providers/s3.provider.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AppConfigService } from \"src/config/configuration.service\";\nimport { S3 } from 'aws-sdk'\n\n@Injectable()\nexport class S3Provider {\n    constructor(private readonly appConfig: AppConfigService) {\n    }\n\n    getS3 = () => {\n        return new S3({\n            accessKeyId: this.appConfig.access_key_id,\n            secretAccessKey: this.appConfig.secret_access_key\n        })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchRentalDto.html":{"url":"classes/SearchRentalDto.html","title":"class - SearchRentalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchRentalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/searchRental/search-rental.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this dto is the final form of the request to search for a rental. It includes the givenNotice,\nthe rentalDuration, and the GeoJSON loc property\n\npassed to the rental.service.searchRentals method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                features\n                            \n                            \n                                givenNotice\n                            \n                            \n                                loc\n                            \n                            \n                                price\n                            \n                            \n                                rentalDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            features\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            givenNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/searchRental/search-rental.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SearchRentalDto {\n    address: string;\n    price: number;\n    features: string[];\n    rentalDuration: number;\n    loc: {\n        type: 'Point'\n        coordinates: [number, number];\n    };\n    givenNotice: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SortUnavailabilityPipe.html":{"url":"injectables/SortUnavailabilityPipe.html","title":"injectable - SortUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SortUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/sort-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: sort the requested Rental Unavailability into a single or 2 year groupings (arrays). Sort each year's (array's) UnavailabilityDtos by ascending DOY (Day of the Year)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                orderYears\n                            \n                            \n                                    Private\n                                sort\n                            \n                            \n                                    Private\n                                validate2Years\n                            \n                            \n                                    Private\n                                validateSequential\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: RawScheduleUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:85\n                \n            \n\n\n            \n                \n                    summary: use the sort(), orderYears(), validateSequential(), and validate2Years() methods to sort and return the data as a ValidateScheduleUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RawScheduleUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            orderYears\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:40\n                            \n                        \n\n                \n                    \n                        summary: return the sorted (by DOY) years in order, or return a single year\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        sorted\n                                                        \n                                                                the incoming data to be sorted\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:58\n                            \n                        \n\n                \n                    \n                        summary: separate years into y1 and y2 array and sort each by DOY\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw client request to schedule Unavailability on a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validate2Years\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:16\n                            \n                        \n\n                \n                    \n                        summary: validate that the requested Unavailability does not cross more than a one year duration\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        yearB\n                                                        \n                                                                this value is exactly 1 year from the current date\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateSequential\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/sort-unavailability.pipe.ts:30\n                            \n                        \n\n                \n                    \n                        summary: validate that the request to schedule unavailability is sequential and not two separate blocks of time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        a\n                                                        \n                                                                year 1\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                year 2\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { UnavailabilityDto } from '../dto/unavailability/unavailability.dto';\nimport { RawScheduleUnavailabilityDto } from '../dto/unavailability/schedule/raw-schedule-unavailability.dto';\nimport { SortedUnavailabilityDto } from '../dto/unavailability/schedule/sorted-unavailability.dto';\nimport { ValidateScheduleUnavailabilityDto } from '../dto/unavailability/schedule/validate-schedule-unavailability.dto';\n/**\n * **summary**: sort the requested Rental Unavailability into a single or 2 year groupings (arrays). Sort each year's (array's) UnavailabilityDtos by ascending DOY (Day of the Year)\n */\n@Injectable()\nexport class SortUnavailabilityPipe implements PipeTransform {\n  \n  /**\n   * **summary**: validate that the requested Unavailability does not cross more than a one year duration\n   * @param yearB this value is exactly 1 year from the current date\n   */\n  private validate2Years = async (yearB: UnavailabilityDto[]): Promise => {\n    for (const x of yearB) {\n      if (x.year !== yearB[0].year) {\n        throw new Error('Cannot request 3 years of unavailability');\n      }\n    }\n    return;\n  }\n\n  /**\n   * **summary**: validate that the request to schedule unavailability is sequential and not two separate blocks of time\n   * @param a year 1\n   * @param b year 2\n   */\n  private validateSequential = async (a, b): Promise => {\n    if (a + 1 !== b) {\n      throw new Error('years must be sequential');\n    }\n  }\n\n  /**\n   * **summary**: return the sorted (by DOY) years in order, or return a single year\n   * @param sorted the incoming data to be sorted\n   */\n  private orderYears = async (sorted: SortedUnavailabilityDto): Promise => {\n    // return a single year\n    if (sorted.yB === null) {\n      return { y1: sorted.yA, y2: null };\n    }\n    // place 2 years in order & validate they are sequential\n    if (sorted.yA[0].year  => {\n    // grab the year property from the first element\n    const iYear: number = value.unavailability[0].year;\n    // filter for other year(s)\n    const tYearB: UnavailabilityDto[] = value.unavailability.filter(\n      val => val.year !== iYear,\n    );\n    // return 2 sorted years\n    if (tYearB && tYearB.length) {\n      await this.validate2Years(tYearB);\n      const yearB = tYearB.sort((a, b) => a.doy - b.doy);\n      const yearA: UnavailabilityDto[] = value.unavailability\n        .filter(val => val.year === iYear)\n        .sort((a, b) => a.doy - b.doy);\n      return { yA: yearA, yB: yearB };\n    }\n    // return a single sorted year\n    return {\n      yA: value.unavailability.sort((a, b) => a.doy - b.doy),\n      yB: null,\n    };\n  }\n\n  /**\n   * **summary**: use the sort(), orderYears(), validateSequential(), and validate2Years() methods to sort and return the data as a ValidateScheduleUnavailabilityDto\n   * @param value the raw client request data\n   */\n  async transform(value: RawScheduleUnavailabilityDto): Promise {\n    try {\n      const sorted: SortedUnavailabilityDto = await this.sort(value);\n      const ordered = await this.orderYears(sorted);\n      Logger.log(`the ordered data below:`);\n      Logger.log(ordered);\n      return ordered;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SortedUnavailabilityDto.html":{"url":"interfaces/SortedUnavailabilityDto.html","title":"interface - SortedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SortedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/sorted-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the raw unavailability request has now been sorted into two year groupings, if the requested unavailability\nspans across two years; e.g. December 20 2020 - January 5 2021\n\npassed to the ValidateUnavailabilityPipe\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        yA\n                                \n                                \n                                        yB\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        yA\n                                    \n                                \n                                \n                                    \n                                        yA:         UnavailabilityDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnavailabilityDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yB\n                                    \n                                \n                                \n                                    \n                                        yB:         UnavailabilityDto[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UnavailabilityDto[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: the raw unavailability request has now been sorted into two year groupings, if the requested unavailability\n * spans across two years; e.g. December 20 2020 - January 5 2021\n * - passed to the ValidateUnavailabilityPipe\n */\nexport interface SortedUnavailabilityDto {\n    yA: UnavailabilityDto[];\n    yB: UnavailabilityDto[] | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestRentalService.html":{"url":"injectables/TestRentalService.html","title":"injectable - TestRentalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestRentalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/service/test-rental.service.ts\n        \n\n            \n                Description\n            \n            \n                Test Rental Service provides access to private rentalModel for Unit Testing\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRentalQuery\n                            \n                            \n                                    Async\n                                returnRentalModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rentalModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/service/test-rental.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rentalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRentalQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRentalQuery(rental)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/test-rental.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rental\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            returnRentalModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    returnRentalModel()\n                \n            \n\n\n            \n                \n                    Defined in src/rental/service/test-rental.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { RentalInterface } from '../interface/schemaInterface/Rental/rental.interface';\nimport { Injectable } from '@nestjs/common';\n\n/**\n * Test Rental Service provides access to private rentalModel for Unit Testing\n */\n@Injectable()\nexport class TestRentalService {\n  constructor(\n    @InjectModel('Rental') private readonly rentalModel: Model,\n  ) {}\n\n  async returnRentalModel() {\n    return this.rentalModel;\n  }\n\n  async createRentalQuery(rental) {\n    const query: any = {\n      'scheduling.rentMinDuration': { $lte: rental.rentalDuration },\n      'scheduling.rentMaxDuration': { $gte: rental.rentalDuration },\n      'scheduling.requiredNotice': { $lte: rental.givenNotice },\n      'loc': {\n        $near: {\n          $maxDistance: 12875, // 8 miles\n          $geometry: {\n            type: rental.loc.type,\n            coordinates: [\n              rental.loc.coordinates[0], // latitude\n              rental.loc.coordinates[1], // longitude\n            ],\n          },\n        },\n      },\n    };\n    rental.price\n      ? (query.pricing = {\n          price: rental.price, // add price as optional search parameter\n        })\n      : (rental.priceRange = null);\n    rental.features\n      ? (query.features = { $in: rental.features })\n      : (rental.features = null);\n    return query;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransporterInterface.html":{"url":"interfaces/TransporterInterface.html","title":"interface - TransporterInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TransporterInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/interface/transporter.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                                \n                                        host\n                                \n                                \n                                        port\n                                \n                                \n                                        secureConnection\n                                \n                                \n                                        tls\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secureConnection\n                                    \n                                \n                                \n                                    \n                                        secureConnection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tls\n                                    \n                                \n                                \n                                    \n                                        tls:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransporterInterface {\n    host: string;\n    secureConnection: boolean // TLS requires secureConnection to be false\n    port: number;\n    tls: {\n        ciphers: string;\n    }\n    auth: {\n        user: string;\n        pass: string;\n    }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeOfValue.html":{"url":"classes/TypeOfValue.html","title":"class - TypeOfValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeOfValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/util/typeof-value.ts\n        \n\n            \n                Description\n            \n            \n                Confirm give value is the expected type or null\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/util/typeof-value.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TypeOfValue {\n    validate = (value: any, expected: string) => {\n        if ((typeof value) !== expected && value !== null) {\n            return false;\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityDto.html":{"url":"classes/UnavailabilityDto.html","title":"class - UnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: schedule a block of unavilable time for the rental on a given day and year\n\na user may schedule up to a year in the future so the specific \"year\" and \"day of the year\" is required\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityDto {\n    rentalId: string;\n    year: number;\n    doy: number; // day of the year\n    start: number; // min: 0; max: 24 military time\n    end: number; // min: 0; max: 24 military time\n    title: string; // e.g. Christmas Break\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityInterface.html":{"url":"classes/UnavailabilityInterface.html","title":"class - UnavailabilityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts\n        \n\n            \n                Description\n            \n            \n                summary: interface for the 'Unavailability' Model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doy\n                            \n                            \n                                end\n                            \n                            \n                                rentalId\n                            \n                            \n                                start\n                            \n                            \n                                title\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityInterface {\n    rentalId: string;\n    year: number;\n    doy: number; // day of the year\n    start: number; // min: 0; max: 24 military time\n    end: number; // min: 0; max: 24 military time\n    title: string; // e.g. Christmas Break\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnavailabilityQueryDto.html":{"url":"classes/UnavailabilityQueryDto.html","title":"class - UnavailabilityQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnavailabilityQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/unavailability-query.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is used to check if the request to schedule Unavailability will overlap with Unavailability already scheduled for the rental in the database.\nThis dto uses a MongoDB $or aggregator to check the following Unavailability overlap conditions:\n\n1: verify the requested Unavailability does not 'enclose' an already scheduled Unavailability for this rental\n2: verify the requested Unavailability does not 'overlap' the end of an already scheduled Unavailability for this rental\n3: verify the requested Unavailability does not 'overlap' the start of an already scheduled Unavailability for this rental\n4: verify the requested Unavailability is not 'enclosed by' an already scheduled Unavailability for this rental\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $or\n                            \n                            \n                                doy\n                            \n                            \n                                rentalId\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $or\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type, literal type, literal type, literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/unavailability-query.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UnavailabilityQueryDto {\n  rentalId: string;\n  year: number;\n  doy: { $lte: number; $gte: number };\n  $or: [\n    {\n      start: { $gte: number};\n      end: { $lte: number };\n    },\n    {\n      start: {$lte: number};\n      end: { $gte: number };\n    },\n    {\n        start: {$lte: number},\n        end: {$gte: number},\n    },\n    {\n        start: {$lte: number},\n        end: {$gte: number},\n    }\n  ];\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUnavailabilityDataDto.html":{"url":"classes/UpdateUnavailabilityDataDto.html","title":"class - UpdateUnavailabilityDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUnavailabilityDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/update-unavailability-data.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: the mongoose update object created by the CreateUpdaterDtoPipe, it's the data to update an Unavailability for a rental\n\npassed to the rental.service.updateUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability-data.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability-data.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUnavailabilityDataDto {\n    filter: {\n        rentalId: string,\n        unavailabilityId: string,\n    };\n    updater: {\n        $set: {\n            start: number,\n            end: number,\n        },\n    } | {\n        $set: {\n            start: number,\n            end: number,\n            title: string,\n        },\n    };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUnavailabilityDto.html":{"url":"classes/UpdateUnavailabilityDto.html","title":"class - UpdateUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/update-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this is a mapped version of the raw request to update a Rental's already scheduled Unavailability.\nIt serves a simplified reference to the original data that will be used by the handler\n\npassed to rental.service.updateUnavailability() method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEnd\n                            \n                            \n                                newStart\n                            \n                            \n                                newTitle\n                            \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEnd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/update-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUnavailabilityDto {\n  unavailabilityId: string;\n  rentalId: string;\n  newStart: number;\n  newEnd: number;\n  newTitle: string; // not required\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserDto.html":{"url":"injectables/UpdateUserDto.html","title":"injectable - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class UpdateUserDto {\n    username?: string;\n    email?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(user: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new BcryptHashPipe())@UsePipes(new JoiValidationPipe())@Post('create-user')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:25\n                \n            \n\n\n            \n                \n                    Create User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(data: DeleteUserDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Redirect('http://localhost:3000/auth/login', 302)@Post('delete-profile')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:66\n                \n            \n\n\n            \n                \n                    Delete User Profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user credentials\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(user: FindUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Get('find-user')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:53\n                \n            \n\n\n            \n                \n                    Find User by Email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                FindUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(update: UpdateUserDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@UseGuards(LoggedOutGaurd)@Post('update-user')@Redirect('http://localhost:3000/auth/login')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:38\n                \n            \n\n\n            \n                \n                    Update User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        updates\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, UsePipes, UseGuards, Req, Redirect } from '@nestjs/common';\nimport { Request } from 'express';\nimport { JwtAuthGuard } from '../../auth/gaurds/jwt-auth.guard';\nimport { LoggedOutGaurd } from '../../auth/gaurds/logged-out.guard';\nimport { JoiValidationPipe } from '../../common/pipes/joi-validation.pipe';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { DeleteUserDto } from '../dto/delete-user.dto';\nimport { FindUserDto } from '../dto/find-user.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { BcryptHashPipe } from '../pipes/bcrypt.pipe';\nimport { CreateUserValidation } from '../schema/validation/create-user-validation.schema';\nimport { UserService } from '../service/user.service';\n\n@Controller('user')\nexport class UserController {\n    constructor(private readonly userService: UserService) {}\n    \n    /**\n     * Create User\n     * @param user new user\n     */\n    @UsePipes(new BcryptHashPipe())\n    @UsePipes(new JoiValidationPipe(CreateUserValidation))\n    @Post('create-user')\n    async createProfile(@Body() user: CreateUserDto) {\n        return await this.userService.createUser(user);\n    }\n\n    /**\n     * Update User\n     * @param update updates\n     * @param req \n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Post('update-user')\n    @Redirect('http://localhost:3000/auth/login')\n    async updateProfile(@Body() update: UpdateUserDto, @Req() req: Request) {\n        return await this.userService.updateUser(update, req);\n    }\n\n    /*\n     * See Images Controller for Upload User Image(s)\n    */\n\n    /**\n     * Find User by Email\n     * @param user \n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Get('find-user')\n    async findUser(@Body() user: FindUserDto) {\n        return await this.userService.findUser(user)\n    }\n\n\n    /**\n     * Delete User Profile\n     * @param data user credentials\n     */\n    @UseGuards(JwtAuthGuard)\n    @UseGuards(LoggedOutGaurd)\n    @Redirect('http://localhost:3000/auth/login', 302)\n    @Post('delete-profile')\n    async deleteProfile(@Body() data: DeleteUserDto, @Req() req: Request) {\n        return this.userService.deleteUser(data, req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                User Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        resetPasswordExpires\n                                \n                                \n                                        resetPasswordToken\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordExpires\n                                    \n                                \n                                \n                                    \n                                        resetPasswordExpires:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordToken\n                                    \n                                \n                                \n                                    \n                                        resetPasswordToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n    username: string;\n    email: string;\n    password: string;\n    resetPasswordToken: string;\n    resetPasswordExpires: Date;\n  }\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppConfigModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nUserModule -->\n\nExtractKeyValueUtil->UserModule\n\n\n\n\n\nExtractUserUtil\n\nExtractUserUtil\n\nUserModule -->\n\nExtractUserUtil->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nUserModule -->\n\nVerifyNewPasswordUtil->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExtractKeyValueUtil\n                        \n                        \n                            ExtractUserUtil\n                        \n                        \n                            UserService\n                        \n                        \n                            VerifyNewPasswordUtil\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema } from '../user/schema/user.schema'\nimport { UserController } from './controller/user.controller';\nimport { UserService } from './service/user.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { ValidateEmailMiddleware } from './middleware/validate-email.middleware';\nimport { userProvider} from '../database/providers/user-model.provider';\nimport { RedisModule } from '../redis/redis.module';\nimport { ExtractKeyValueUtil } from '../auth/util/extract-key-value.util';\nimport { AppConfigModule } from '../config/configuration.module';\nimport { VerifyNewPasswordUtil } from '../auth/util/verify-new-password.util';\nimport { RedisService } from '../redis/service/redis.service';\nimport { ExtractUserUtil } from './util/extract-user.util';\n\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema}]),\n    DatabaseModule,\n    RedisModule,\n    AppConfigModule,\n    RedisModule\n  ],\n  providers: [UserService,...userProvider, ExtractKeyValueUtil, VerifyNewPasswordUtil, RedisService, ExtractUserUtil],\n  controllers: [UserController],\n  exports: [UserService], // used in the AuthService\n})\nexport class UserModule  {\n  constructor() {\n  }\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ValidateEmailMiddleware)\n      .forRoutes('v1/user')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPropertyInterface.html":{"url":"interfaces/UserPropertyInterface.html","title":"interface - UserPropertyInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPropertyInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/user-property.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPropertyInterface {\n    _id: string;\n    username: string;\n    email: string;\n    password: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Private\n                                createUserUpdate\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                findUserByResetPasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                logoutUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, extractKeyValueUtil: ExtractKeyValueUtil, verifyNewPasswordUtil: VerifyNewPasswordUtil, redisService: RedisService, extractUserUtil: ExtractUserUtil)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractKeyValueUtil\n                                                  \n                                                        \n                                                                        ExtractKeyValueUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        verifyNewPasswordUtil\n                                                  \n                                                        \n                                                                        VerifyNewPasswordUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extractUserUtil\n                                                  \n                                                        \n                                                                        ExtractUserUtil\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:31\n                \n            \n\n\n            \n                \n                    Create User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createUserUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserUpdate(data: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:126\n                \n            \n\n\n            \n                \n                    *** Private Functions ****\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(data: DeleteUserDto, req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:102\n                \n            \n\n\n            \n                \n                    Delete User Profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user credentials\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(data: FindUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:48\n                \n            \n\n\n            \n                \n                    Find User by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                FindUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserByResetPasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByResetPasswordToken(data: ResetPasswordTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:63\n                \n            \n\n\n            \n                \n                    Find User by resetPasswordToken\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResetPasswordTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutUser(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(data: UpdateUserDto, req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:77\n                \n            \n\n\n            \n                \n                    Update User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { UserInterface } from '../interface/user.interface';\nimport { FindUserDto } from '../dto/find-user.dto';\nimport { ResetPasswordTokenDto } from '../dto/find-user-by-reset-password-token.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { Request } from 'express';\nimport { ExtractKeyValueUtil } from '../../auth/util/extract-key-value.util';\nimport { DeleteUserDto } from '../dto/delete-user.dto';\nimport { VerifyNewPasswordUtil } from 'src/auth/util/verify-new-password.util';\nimport { RedisService } from '../../redis/service/redis.service';\nimport { JwtPayloadInterface } from 'src/auth/interface/jwt-payload';\nimport { ExtractUserUtil } from '../util/extract-user.util';\n\n@Injectable()\nexport class UserService {\n    constructor(\n        @InjectModel('User') private readonly userModel: Model,\n        private readonly extractKeyValueUtil: ExtractKeyValueUtil,\n        private readonly verifyNewPasswordUtil: VerifyNewPasswordUtil,\n        private readonly redisService: RedisService,\n        private readonly extractUserUtil: ExtractUserUtil,\n    ) { }\n\n    /**\n     * Create User\n     * @param user \n     */\n    async createUser(user: CreateUserDto) {\n        try {\n            const document = await new this.userModel(user);\n            await document.save();\n            document.password = undefined;\n            console.log('CREATE USER: RETURN');\n            console.log(document);\n            return document;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * Find User by email\n     * @param data email\n     */\n    async findUser(data: FindUserDto) {\n        try {\n            const user = await this.userModel.findOne({ email: data.email });\n            console.log('FIND USER: RETURN')\n            console.log(user);\n            return user;\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     * Find User by resetPasswordToken\n     * @param data the token\n     */\n    async findUserByResetPasswordToken(data: ResetPasswordTokenDto) {\n        try {\n            const user = await this.userModel.findOne({ resetPasswordToken: data.token });\n            console.log('FIND USER BY RESET PASSWORD TOKEN: RETURN')\n            console.log(user);\n            return user;\n        } catch (err) {\n            throw new Error(err)\n        }\n    }\n\n    /**\n     * Update User\n     */\n    async updateUser(data: UpdateUserDto, req: Request ) {\n        try {\n            // extract user email\n            const user: JwtPayloadInterface = await this.extractUserUtil.extract(req);\n            const filter = {email: user.email };\n            // create an update object\n            let update = this.createUserUpdate(data);\n            const updater = {\n                $set: update,\n            }\n            // logout the user and return the data before redirecting to login\n            await this.logoutUser(req);\n            console.log('UPDATE USER: RETURN')\n            console.log(await this.userModel.findOneAndUpdate(filter, updater, {new: true}));\n            return await this.userModel.findOneAndUpdate(filter, updater, {new: true});\n       } catch(err) {\n           throw new Error(err)\n       }\n    }\n\n    /**\n     * Delete User Profile\n     * @param data user credentials\n     * @param req\n     */\n    async deleteUser(data: DeleteUserDto, req: Request) {\n        try {\n            // extract user email\n            const doc = await this.extractUserUtil.extract(req);\n            // query the user\n            const user = await this.findUser({email: doc.email});\n            // verify their password matches the current\n            await this.verifyNewPasswordUtil.verifyMatch({newPassword: data.password, oldPassword: user.password})\n            // logout\n            await this.logoutUser(req);\n            // delete\n            const res = await user.remove();\n            console.log('DELETE USER: RETURN')\n            console.log(res);\n            return res.deletedCount;\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n\n    /**\n     ************************ Private Functions ************************\n    */\n\n    private createUserUpdate(data: UpdateUserDto) {\n        let update: UpdateUserDto = {}\n        data.username ? update.username = data.username : data.username = null;\n        data.email ? update.email = data.email : data.email = null;\n        console.log('CREATE USER UPDATE: RETURN')\n        console.log(update);\n        return update;\n    }\n\n    private async logoutUser(req: Request){\n        const {jwt, key} = await this.extractKeyValueUtil.extract(req);\n        await this.redisService.set(key, jwt);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEditDetailsPipe.html":{"url":"injectables/ValidateEditDetailsPipe.html","title":"injectable - ValidateEditDetailsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEditDetailsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-edit-details.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate that the request to update the Rental's details (the spec property) will not violate the\nRentalSchemaValidation\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                positiveNumber\n                            \n                            \n                                typeOfValue\n                            \n                            \n                                    Private\n                                validateDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/rental/pipes/validate-edit-details.pipe.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: EditDetailsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:99\n                \n            \n\n\n            \n                \n                    summary: use the validateDetails() method to validate the request before passing to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                EditDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request to edit the details (spec property) of a Rental\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positiveNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PositiveNumber\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeOfValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TypeOfValue\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-edit-details.pipe.ts:23\n                            \n                        \n\n                \n                    \n                        summary: validate EditDetailsDto\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the request data to edit the rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { EditDetailsDto } from '../dto/details/edit-details.dto';\nimport { PositiveNumber } from '../../common/util/positive-number';\nimport { TypeOfValue } from '../../common/util/typeof-value';\n/**\n * **summary**: validate that the request to update the Rental's details (the spec property) will not violate the\n * RentalSchemaValidation\n */\n@Injectable()\nexport class ValidateEditDetailsPipe implements PipeTransform {\n\n    positiveNumber: PositiveNumber;\n    typeOfValue: TypeOfValue;\n    constructor() {\n        this.positiveNumber = new PositiveNumber();\n        this.typeOfValue = new TypeOfValue();\n    }\n\n    /**\n     * **summary**: validate EditDetailsDto\n     * @param value the request data to edit the rental\n     */\n    private validateDetails = async (value: EditDetailsDto) => {\n        // check rentalId\n        if (!value.rentalId || !this.typeOfValue.validate(value.rentalId, 'string')) {\n            throw new Error('Invalid rental id');\n        }\n        // must have at least one detail to update\n        if (!value.specs && !value.features) {\n            throw new Error('Invalid request, no details given');\n        }\n        // validate each spec value\n        if (value.specs) {\n            if (value.specs.odometer &&\n                !this.typeOfValue.validate(value.specs.odometer, 'number') || !this.positiveNumber.validate(value.specs.odometer)\n                ) {\n                    throw new Error('Odometer must be a positive number');\n                }\n            if (value.specs.transmission &&\n                !this.typeOfValue.validate(value.specs.transmission, 'string')) {\n                    throw new Error('transmission must be a valid value (string)');\n                }\n            if (value.specs.cityMpg &&\n                !this.typeOfValue.validate(value.specs.cityMpg, 'number') || !this.positiveNumber.validate(value.specs.cityMpg)) {\n                    throw new Error('cityMpg must be a positive number');\n                }\n            if (value.specs.hwyMpg &&\n                !this.typeOfValue.validate(value.specs.hwyMpg, 'number') || !this.positiveNumber.validate(value.specs.hwyMpg)) {\n                    throw new Error('hwyMpg must be a positive number');\n                }\n            if (value.specs.fuel &&\n                !this.typeOfValue.validate(value.specs.fuel, 'string')) {\n                    throw new Error('fuel must be a valid value (string)');\n                }\n            if (value.specs.gasGrade &&\n                !this.typeOfValue.validate(value.specs.gasGrade, 'string')) {\n                    throw new Error('gasGrade must be a valid value (string)');\n                }\n            if (value.specs.description &&\n                !this.typeOfValue.validate(value.specs.description, 'string')) {\n                    throw new Error('description must be a valid value (string)');\n                }\n            if (value.specs.model &&\n                !this.typeOfValue.validate(value.specs.model, 'string')) {\n                    throw new Error('model must be a valid value (string)');\n                }\n            if (value.specs.style &&\n                !this.typeOfValue.validate(value.specs.style, 'string')) {\n                    throw new Error('style must be a valid value (string)');\n                }\n            if (value.specs.color &&\n                !this.typeOfValue.validate(value.specs.color, 'string')) {\n                    throw new Error('color must be a valid value (string)');\n                }\n            if (value.specs.numOfSeats &&\n                !this.typeOfValue.validate(value.specs.numOfSeats, 'number') || !this.positiveNumber.validate(value.specs.numOfSeats)) {\n                    throw new Error('numOfSeats must be a positive number');\n                }\n            if (value.specs.numDoors &&\n                !this.typeOfValue.validate(value.specs.numDoors, 'number') || !this.positiveNumber.validate(value.specs.numDoors)) {\n                    throw new Error('numDoors must be a positive number');\n                }\n        }\n        if (value.features) {\n            if (value.features.length > 0) {\n                for (const x of value.features) {\n                    if (!this.typeOfValue.validate(x, 'string')) {\n                        throw new Error('features must be valid values (string)');\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * **summary**: use the validateDetails() method to validate the request before passing to the handler\n     * @param value the raw client request to edit the details (spec property) of a Rental\n     */\n    async transform(value: EditDetailsDto):Promise {\n        await this.validateDetails(value);\n        return value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEmailMiddleware.html":{"url":"injectables/ValidateEmailMiddleware.html","title":"injectable - ValidateEmailMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEmailMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/middleware/validate-email.middleware.ts\n        \n\n            \n                Description\n            \n            \n                Validate the requested email is unique to the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validateEmailUtil\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                            \n                                    Private\n                                    Async\n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/middleware/validate-email.middleware.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/user/middleware/validate-email.middleware.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmail(value: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/middleware/validate-email.middleware.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateEmailUtil\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidateEmailUtil\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/middleware/validate-email.middleware.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, NestMiddleware } from '@nestjs/common'\nimport { Request, Response } from 'express';\nimport { userModel } from '../../common/Const';\nimport { UserInterface } from '../interface/user.interface';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { ValidateEmailUtil } from '../util/validate-email.util';\n/**\n * Validate the requested email is unique to the database\n */\n@Injectable()\nexport class ValidateEmailMiddleware implements NestMiddleware {\n\n    validateEmailUtil: ValidateEmailUtil;\n    constructor(\n        @Inject(userModel)\n        private readonly user: Model,\n    ) {\n        this.validateEmailUtil = new ValidateEmailUtil()\n    }\n\n    private async validateEmail(value: CreateUserDto){\n        const check = await this.user.find({email: value.email});\n        this.validateEmailUtil.validateEmail(check)\n    }\n\n    async use(req: Request, res: Response, next: Function) {\n        // apply to create-user route\n        if (req.originalUrl === '/v1/user/create-user') {\n            await this.validateEmail(req.body);\n        }\n        next();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateEmailUtil.html":{"url":"injectables/ValidateEmailUtil.html","title":"injectable - ValidateEmailUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateEmailUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/util/validate-email.util.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/user/util/validate-email.util.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateEmail(check)\n                \n            \n\n\n            \n                \n                    Defined in src/user/util/validate-email.util.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    check\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class ValidateEmailUtil {\n    constructor() {}\n\n    validateEmail(check){\n        if(check.length === 0 || check.length === undefined) return\n        throw new Error('A User exists that is already using this email');\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateRemoveUnavailabilityPipe.html":{"url":"injectables/ValidateRemoveUnavailabilityPipe.html","title":"injectable - ValidateRemoveUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateRemoveUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-remove-unavailability.pipe.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate a client request to remove (unschedule) Unavailability from a Rental\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                validateDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: RemoveUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-remove-unavailability.pipe.ts:24\n                \n            \n\n\n            \n                \n                    summary: use the validateDto method to validate the request before passing it on\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                RemoveUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the raw client request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RemoveUnavailabilityDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-remove-unavailability.pipe.ts:12\n                            \n                        \n\n                \n                    \n                        summary: check the request has a valid rentalId and unavailabilityId\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw client request to remove Unavailability from a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport { RemoveUnavailabilityDto } from '../dto/unavailability/remove/remove-unavailability.dto';\n/**\n * **summary**: validate a client request to remove (unschedule) Unavailability from a Rental\n */\n@Injectable()\nexport class ValidateRemoveUnavailabilityPipe implements PipeTransform {\n    /**\n     * **summary**: check the request has a valid rentalId and unavailabilityId\n     * @param value the raw client request to remove Unavailability from a Rental\n     */\n    private validateDto = (value: RemoveUnavailabilityDto) => {\n        if (typeof value.rentalId !== 'string') {\n            throw new Error('invalid rental ID; must be a string');\n        }\n        if (typeof value.unavailabilityId !== 'string') {\n            throw new Error('invalid unavailability ID; must be a string');\n        }\n    }\n    /**\n     * **summary**: use the validateDto method to validate the request before passing it on\n     * @param value the raw client request\n     */\n    transform(value: RemoveUnavailabilityDto):RemoveUnavailabilityDto {\n        this.validateDto(value);\n        return value;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateScheduleUnavailabilityDto.html":{"url":"classes/ValidateScheduleUnavailabilityDto.html","title":"class - ValidateScheduleUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateScheduleUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: returned by the SortUnavailabilityPipe, this dto contains the raw request to schedule Unavailability\nfor a rental sorted into two year groupings; if the requested Unavailability spans across 2 years. This would usually occur\nnear the end of a year, such as from Decemeber 20, 2020 - January 5, 2021\n\npassed to the ValidateUnavailabilityPipe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[] | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../unavailability.dto';\n/**\n * **summary**: returned by the SortUnavailabilityPipe, this dto contains the raw request to schedule Unavailability\n * for a rental sorted into two year groupings; if the requested Unavailability spans across 2 years. This would usually occur\n * near the end of a year, such as from Decemeber 20, 2020 - January 5, 2021\n * - passed to the ValidateUnavailabilityPipe\n */\nexport class ValidateScheduleUnavailabilityDto {\n    y1: UnavailabilityDto[];\n    y2: UnavailabilityDto[] | null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateUnavailabilityPipe.html":{"url":"injectables/ValidateUnavailabilityPipe.html","title":"injectable - ValidateUnavailabilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateUnavailabilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/pipes/validate-unavailability.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLeapYear\n                            \n                            \n                                    Private\n                                convertToDateTime\n                            \n                            \n                                    Private\n                                validateCrossover\n                            \n                            \n                                    Private\n                                validateCrossYearCongruence\n                            \n                            \n                                    Private\n                                validateEachUnavailability\n                            \n                            \n                                    Private\n                                validateMinNotice\n                            \n                            \n                                    Private\n                                validateRelevance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ValidateScheduleUnavailabilityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:210\n                \n            \n\n\n            \n                \n                    summary: use the validateRelevance(), validateEachUnavailability(), validateCrossover(), validateCrossYearCongruence(),\nvalidateMinNotice(), and checkLeapYear() methods to validate the client request and return a ValidatedUnavailabilityDto\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ValidateScheduleUnavailabilityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sorted but unvalidated client request data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkLeapYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:122\n                            \n                        \n\n                \n                    \n                        summary: use the Luxon DateTime.isInLeapYear() method\nto check if the this current year is a leap year. For example, this year 2020 is actually a leap year!\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        u1\n                                                        \n                                                                the initial unavailability's DateTime\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            convertToDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:28\n                            \n                        \n\n                \n                    \n                        summary: confirm that the user is requesting to schedule a single block of Unavailable time for their Rental that is logically and will\nnot cause an error in the application\n-validate requested rental start DateTime is not before the current DateTime\n\nif 2 years\nvalidate each unavailability for y1 and y2 (private validateUnavailability)\ncheck if y1 is a leap year, validate the number of days in the year (DOY) if it is a leap year\nvalidate DOY crossover from y1 to y2; validate the extra DOY if it's a leap year\n\n\nelse: \nvalidate each unavailability in the single year\n\n\nreturn the validated year(s)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateCrossover\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:79\n                            \n                        \n\n                \n                    \n                        summary: this method is called when the requested Unavailability spans into the next year. this method verifies that the crossover into the next year\nincludes the extra day if it's a leapYear. Even if it's not a leap year, this method verifies there are no missing or extra days as the Unavailability enters the\nstart of the next year\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                \n                                                \n                                                        y2\n                                                \n                                                \n                                                        ly\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateCrossYearCongruence\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:184\n                            \n                        \n\n                \n                    \n                        summary: validate congruence in rentalId, start, end, and title across y1 and y2\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                        \n                                                                the first year of the requested Unavailability\n\n                                                        \n                                                \n                                                \n                                                        y2\n                                                        \n                                                                the second year of the requested Unavailability\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateEachUnavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:133\n                            \n                        \n\n                \n                    \n                        summary: validate the data inisde of each UnavailabilityDto that will be used to schedule a sequential single 'block of Unavailability' for the Rental\n\nnote: uses the toItemIndexes() util to map a new array of tuples conataining an UnavailabilityDto and it's index in the array\n\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        unavailability\n                                                        \n                                                                an array of UnavailabilityDtos, which is the data to create an individual Unavailability Document in the database\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateMinNotice\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:47\n                            \n                        \n\n                \n                    \n                        summary: validate that the requested unavailability is not before the current date & time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        a\n                                                        \n                                                                = request start DateTime\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                = current DateTime\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateRelevance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/pipes/validate-unavailability.pipe.ts:60\n                            \n                        \n\n                \n                    \n                        summary: validate the requested unavailability start time is not in the past\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the ordered unavailability from previous pipe\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Logger } from '@nestjs/common';\nimport { DateTime, Interval } from 'luxon';\nimport { ValidateScheduleUnavailabilityDto } from '../dto/unavailability/schedule/validate-schedule-unavailability.dto';\nimport { UnavailabilityDto } from '../dto/unavailability/unavailability.dto';\nimport { toItemIndexes } from '../../common/util/to-item-indexes';\nimport { validated } from '../../common/Const';\nimport { ValidatedUnavailabilityDto } from '../dto/unavailability/validated-unavailability.dto';\n\n@Injectable()\nexport class ValidateUnavailabilityPipe implements PipeTransform {\n  /**\n   * **summary**: confirm that the user is requesting to schedule a single block of Unavailable time for their Rental that is logically and will\n   * not cause an error in the application\n   * -validate requested rental start DateTime is not before the current DateTime\n   * - if 2 years\n   *   - validate each unavailability for y1 and y2 (private validateUnavailability)\n   *   - check if y1 is a leap year, validate the number of days in the year (DOY) if it is a leap year\n   *   - validate DOY crossover from y1 to y2; validate the extra DOY if it's a leap year\n   * - else: \n   *   - validate each unavailability in the single year\n   * - return the validated year(s)\n   */\n\n  /**\n   * **summary**: use the [**Luxon DateTime.fromObject()**]() method to create a new DateTime from the raw client requested startTime\n   * @param u1 the 1st unavailabilityDto\n   */\n  private convertToDateTime = async (u1: UnavailabilityDto): Promise => {\n    if (!u1) {\n      throw new Error('There is no requested unavailability');\n    }\n    const start: DateTime = DateTime.fromObject({\n      year: u1.year,\n      ordinal: u1.doy,\n      hour: u1.start,\n    });\n    Logger.log(`the requested start DateTime below:`);\n    Logger.log(start);\n    return start;\n  }\n\n  /**\n   * **summary**: validate that the requested unavailability is not before the current date & time\n   * @param a = request start DateTime\n   * @param b = current DateTime\n   */\n  private validateMinNotice = async (a: DateTime, b: DateTime) => {\n    const notice: Interval = Interval.fromDateTimes(a, b).count('hours');\n    if (isNaN(notice) || notice  => {\n    // should already know y1 and y2\n    const currentDateTime = DateTime.local();\n    Logger.log(`the current DateTime below:`);\n    Logger.log(currentDateTime);\n    const start: DateTime = await this.convertToDateTime(value.y1[0]);\n    // compare current DT and start DT\n    await this.validateMinNotice(currentDateTime, start);\n    return start;\n  }\n\n  /**\n   * **summary**: this method is called when the requested Unavailability spans into the next year. this method verifies that the crossover into the next year\n   * includes the extra day if it's a leapYear. Even if it's not a leap year, this method verifies there are no missing or extra days as the Unavailability enters the\n   * start of the next year\n   * @param y1 \n   * @param y2 \n   * @param ly \n   */\n  private validateCrossover = async (\n    y1: UnavailabilityDto[],\n    y2: UnavailabilityDto[],\n    ly: boolean,\n  ): Promise => {\n    // y1's final Unavailability\n    const y1Final = y1[y1.length - 1];\n    // # of days in y1\n    const diy = (await this.convertToDateTime(y1Final)).daysInYear;\n    // final DOY of y1 must equal diy of y1\n    if (diy !== y1Final.doy) {\n      if (ly) {\n        throw new Error(\n          `the final day of this leap year, ${y1Final.doy}/${\n            y1Final.year\n          }, is missing`,\n        );\n      }\n      throw new Error(\n        `the final day of this year, ${y1Final.doy}/${y1Final.year}, is missing`,\n      );\n    }\n    // validate y2 starts at 0, we already know it's sequential\n    if (y2[0]) {\n      if (y2[0].doy !== 0) {\n        throw new Error('the 1st day of the second year is missing');\n      }\n    } else {\n      throw new Error('there is not a second year');\n    }\n    Logger.log('the final unavailability of y1');\n    Logger.log(y1Final);\n    Logger.log(\n      `the total days in y1: ${diy} & the final day of y1: ${y1Final.doy}`,\n    );\n    Logger.log(`this is a leap year: ${ly}`);\n  }\n\n  /**\n   * **summary**: use the [*Luxon DateTime.isInLeapYear()*](https://moment.github.io/luxon/docs/class/src/datetime.js~DateTime.html#instance-get-isInLeapYear) method\n   * to check if the this current year is a [**leap year**](https://www.timeanddate.com/date/leapyear.html). For example, this year 2020 is actually a leap year!\n   * @param u1 the initial unavailability's DateTime\n   */\n  private checkLeapYear = async (u1: DateTime) => {\n    const check = u1.isInLeapYear;\n\n    return check; // true or false\n  }\n\n  /**\n   * **summary**: validate the data inisde of each UnavailabilityDto that will be used to schedule a sequential single 'block of Unavailability' for the Rental\n   * - note: uses the toItemIndexes() util to map a new array of **tuples** conataining an UnavailabilityDto and it's index in the array\n   * @param unavailability an array of UnavailabilityDtos, which is the data to create an individual Unavailability Document in the database\n   */\n  private validateEachUnavailability = async (\n    unavailability: UnavailabilityDto[],\n  ) => {\n    const base = unavailability[0];\n    for (const { item, index } of toItemIndexes(unavailability)) {\n      // rentalId congruence\n      if (item.rentalId !== base.rentalId) {\n        throw new Error('request cannot have more than 1 Rental ID');\n      }\n      // interval\n      if (item.start >= item.end) {\n        throw new Error('start time cannot be before end time');\n      }\n      // interval congruence\n      if (item.start !== base.start || item.end !== base.end) {\n        throw new Error(\n          'each requested day of unavailability must share the same start end time',\n        );\n      }\n      // MTime\n      if (item.start  24 || item.end  24) {\n        throw new Error('the unavailable time must be in military time format');\n      }\n      // year congruence\n      if (item.year !== base.year) {\n        throw new Error(\n          `invalid year: first year ${item.year} second year ${base.year}`,\n        );\n      }\n      // sequential DOY\n      if (index > 0) {\n        if (unavailability[index].doy - 1 !== unavailability[index - 1].doy) {\n          throw new Error('The requested unavailability is not sequential');\n        }\n      }\n      // title congruence\n      if (item.title !== base.title) {\n        throw new Error(\n          `request cannot have more than one title: 1st year title \"${\n            item.title\n          }\" 2nd year title \"${base.title}\"`,\n        );\n      }\n    }\n  }\n\n  /**\n   * **summary**: validate congruence in rentalId, start, end, and title across y1 and y2\n   * @param y1 the first year of the requested Unavailability\n   * @param y2 the second year of the requested Unavailability\n   */\n  private validateCrossYearCongruence = async (\n    y1: UnavailabilityDto,\n    y2: UnavailabilityDto,\n  ) => {\n    if (y1.rentalId !== y2.rentalId) {\n      throw new Error('request cannot have more than 1 Rental ID');\n    }\n    if (y1.start !== y2.start || y1.end !== y2.end) {\n      throw new Error(\n        'each requested day of unavailability must share the same start end time',\n      );\n    }\n    if (y1.title !== y2.title) {\n      throw new Error(\n        `request cannot have more than one title: 1st year title \"${\n          y1.title\n        }\" 2nd year title \"${y2.title}\"`,\n      );\n    }\n  }\n\n  /**\n   * **summary**: use the validateRelevance(), validateEachUnavailability(), validateCrossover(), validateCrossYearCongruence(),\n   * validateMinNotice(), and checkLeapYear() methods to validate the client request and return a ValidatedUnavailabilityDto\n   * @param value the sorted but unvalidated client request data\n   */\n  async transform(value: ValidateScheduleUnavailabilityDto): Promise {\n    try {\n      const start: DateTime = await this.validateRelevance(value);\n      // if 2 years; if there are 2 years we know y1 must include the final doy of y1\n      if (value.y2 !== null) {\n        // validate 2 years\n        await this.validateEachUnavailability(value.y1);\n        await this.validateEachUnavailability(value.y2);\n        // check if y1 is a leap year\n        const ly = await this.checkLeapYear(start);\n        // validate crossover from y1 to y2; account for if it's a leap year\n        await this.validateCrossover(value.y1, value.y2, ly);\n        await this.validateCrossYearCongruence(value.y1[0], value.y2[0]);\n        // return a ValidatedUnavailabilityDto\n        return { y1: value.y1, y2: value.y2, validated };\n      }\n      await this.validateEachUnavailability(value.y1);\n      return { y1: value.y1, y2: null, validated };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateUpdateUnavailabilityDto.html":{"url":"classes/ValidateUpdateUnavailabilityDto.html","title":"class - ValidateUpdateUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateUpdateUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is used to query and validate that the Rental actually has the scheduled Unavailability\nthat the user is requesting to update\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newEnd\n                            \n                            \n                                newStart\n                            \n                            \n                                newTitle\n                            \n                            \n                                rentalId\n                            \n                            \n                                unavailabilityId\n                            \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newEnd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidateUpdateUnavailabilityDto {\n  unavailabilityId: string;\n  rentalId: string;\n  y1: {\n    sD: number;\n    eD: number;\n  };\n  y2: {\n    sD: number;\n    eD: number;\n  };\n  newStart: number;\n  newEnd: number;\n  newTitle: string | null; // not required\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateUpdateUnavailabilityMiddleware.html":{"url":"injectables/ValidateUpdateUnavailabilityMiddleware.html","title":"injectable - ValidateUpdateUnavailabilityMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidateUpdateUnavailabilityMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/middleware/validate-update-unavailability.middleware.ts\n        \n\n            \n                Description\n            \n            \n                summary: validate that incoming request to update a rental's already scheduled Unavailability. Validate that the expected # of unavailability docs are present in the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateRange\n                            \n                            \n                                    Private\n                                validateDto\n                            \n                            \n                                    Private\n                                validateExpectedUnavailability\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(unavailability: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        unavailability\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:144\n                \n            \n\n\n            \n                \n                    summary: apply the validatedto(), calculateRange(), and validateExpectedUnavailability() methods to incoming requests to the\nrental.controller.updateUnavailability() method. Validate the request before passing the data to the handler\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request object\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the response object\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the next method to continue onto the next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:22\n                            \n                        \n\n                \n                    \n                        summary: calculate the range of the requested Unavailability to update for the Rental\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        y1\n                                                        \n                                                                the start and end day of the first year that the Unavailability is scheduled across\n\n                                                        \n                                                \n                                                \n                                                        y2\n                                                        \n                                                                the start and end day of the second yaer that the Unavailability is scheduled across; if there is a second year\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:69\n                            \n                        \n\n                \n                    \n                        summary: validate the incoming dto data does not break the below validation tree\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the sorted request to update already scheduled Unavailability on a Rental\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateExpectedUnavailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/middleware/validate-update-unavailability.middleware.ts:47\n                            \n                        \n\n                \n                    \n                        summary: validate that the unavailability to be updated is present in the database, and verify that the expected range (number of days) of the Unavailability to update\nmatches the actual range of the Unavailability as it's saved in the database. Use the results of the calculateRange() method, to compare the range of the Unavailability in\nthe database to the range of the request\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        value\n                                                        \n                                                                the raw request data\n\n                                                        \n                                                \n                                                \n                                                        range\n                                                        \n                                                                the range of the requested update Unavailability data\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { unavailabilityModel } from '../../common/Const';\nimport { Model } from 'mongoose';\nimport { UnavailabilityInterface } from '../interface/schemaInterface/Unavailability/unavailability.interface';\nimport { ValidateUpdateUnavailabilityDto } from '../dto/unavailability/update/validate-update-unavailability.dto';\n/**\n * **summary**: validate that incoming request to update a rental's already scheduled Unavailability. Validate that the expected # of unavailability docs are present in the database\n */\n@Injectable()\nexport class ValidateUpdateUnavailabilityMiddleware implements NestMiddleware {\n  constructor(\n    @Inject(unavailabilityModel)\n    private readonly unavailability: Model,\n  ) {}\n\n  /**\n   * **summary**: calculate the [**range**](https://www.mathsisfun.com/data/range.html) of the requested Unavailability to update for the Rental\n   * @param y1 the start and end day of the first year that the Unavailability is scheduled across\n   * @param y2 the start and end day of the second yaer that the Unavailability is scheduled across; if there is a second year\n   */\n  private calculateRange = async (\n    y1: { sD: number; eD: number },\n    y2: { sD: number; eD: number } | null,\n  ) => {\n    if (y2 !== null) {\n      // calculate range for 2 years\n      let temp1: number;\n      let temp2: number;\n      y1.sD === y1.eD ? temp1 = 1 : temp1 = y1.eD - y1.sD + 1;\n      y2.sD === y2.eD ? temp2 = 1 : temp2 = y2.eD - y2.sD + 1;\n      return {range: temp1 + temp2};\n    }\n    if (y1.sD !== y1.eD) {\n      return { range: y1.eD - y1.sD + 1 };\n    }\n    return { range: 1 };\n  }\n\n  /**\n   * **summary**: validate that the unavailability to be updated is present in the database, and verify that the expected **range** (number of days) of the Unavailability to update\n   * matches the actual range of the Unavailability as it's saved in the database. Use the results of the calculateRange() method, to compare the range of the Unavailability in\n   * the database to the range of the request\n   * @param value the raw request data\n   * @param range the range of the requested update Unavailability data\n   */\n  private validateExpectedUnavailability = async (\n    value: ValidateUpdateUnavailabilityDto, range: {range: number},\n  ) => {\n    const test = await this.unavailability.find({\n      rentalId: value.rentalId,\n      unavailabilityId: value.unavailabilityId,\n    });\n\n    if (test.length  {\n    if (typeof value.unavailabilityId !== 'string') {\n      throw new Error('invalid unavailabilityId; must be a string');\n    }\n    if (typeof value.rentalId !== 'string') {\n      throw new Error('invalid rental ID; must be a string');\n    }\n    if (\n      typeof value.newStart !== 'number' ||\n      value.newStart  24\n    ) {\n      throw new Error('invalid start time; must be a number');\n    }\n    if (\n      typeof value.newEnd !== 'number' ||\n      value.newEnd  24\n    ) {\n      throw new Error('invalid end time; must be a number');\n    }\n    if (value.newStart >= value.newEnd) {\n      throw new Error(\n        'start time cannot be the same as, or before, the end time',\n      );\n    }\n    if (typeof value.y1.sD !== 'number') {\n      throw new Error('invalid minimum DOY; must be a number');\n    }\n    if (typeof value.y1.eD !== 'number') {\n      throw new Error('invalid maximum DOY; must be a number');\n    }\n    if (value.y1.sD > value.y1.eD) {\n      throw new Error('minimum DOY cannot be larger than maximum DOY');\n    }\n    if (typeof value.y2.sD !== 'number') {\n      throw new Error('invalid minimum DOY; must be a number');\n    }\n    if (typeof value.y2.eD !== 'number') {\n      throw new Error('invalid maximum DOY; must be a number');\n    }\n    if (value.y2.sD > value.y2.eD) {\n      throw new Error('minimum DOY cannot be larger than maximum DOY');\n    }\n    if (typeof value.newTitle !== 'string' && value.newTitle !== null) {\n      throw new Error('invalid title; must be a string');\n    }\n    if (\n      typeof value.newStart !== 'number' ||\n      value.newStart  24\n    ) {\n      throw new Error('invalid update start time; must be a number');\n    }\n    if (\n      typeof value.newEnd !== 'number' ||\n      value.newEnd  24\n    ) {\n      throw new Error('invalid update end time; must be a number');\n    }\n    if (value.newStart >= value.newEnd) {\n      throw new Error(\n        'update start time cannot be the same as, or before, the update end time',\n      );\n    }\n  }\n\n  /**\n   * **summary**: apply the validatedto(), calculateRange(), and validateExpectedUnavailability() methods to incoming requests to the\n   * rental.controller.updateUnavailability() method. Validate the request before passing the data to the handler\n   * @param req the request object\n   * @param res the response object\n   * @param next the next method to continue onto the next handler\n   */\n  async use(req: Request, res: Response, next: Function):Promise {\n    // apply only to update-unavailability request\n    if (req.originalUrl === '/v1/rental/update-unavailability') {\n      await this.validateDto(req.body);\n      const range = await this.calculateRange(req.body.y1, req.body.y2); // to validate expected # of Unavailability docs\n      await this.validateExpectedUnavailability(req.body, range);\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidatedUnavailabilityDto.html":{"url":"classes/ValidatedUnavailabilityDto.html","title":"class - ValidatedUnavailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidatedUnavailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rental/dto/unavailability/validated-unavailability.dto.ts\n        \n\n            \n                Description\n            \n            \n                summary: this data is the now validated UnavailabilityDto that will be used to create the final dto to be passed to\nthe rental.service.scheduleUnavailability() method\n\npassed to the ProcessUnavailabilityPipe, the last pipe before the rental.service.scheduleUnavailability() handler method\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validated\n                            \n                            \n                                y1\n                            \n                            \n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UnavailabilityDto[] | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rental/dto/unavailability/validated-unavailability.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnavailabilityDto } from '../../dto/unavailability/unavailability.dto';\n/**\n * **summary**: this data is the now validated UnavailabilityDto that will be used to create the final dto to be passed to\n * the rental.service.scheduleUnavailability() method\n * - passed to the ProcessUnavailabilityPipe, the last pipe before the rental.service.scheduleUnavailability() handler method\n */\nexport class ValidatedUnavailabilityDto {\n    y1: UnavailabilityDto[];\n    y2: UnavailabilityDto[] | null;\n    validated: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyNewPasswordDto.html":{"url":"classes/VerifyNewPasswordDto.html","title":"class - VerifyNewPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyNewPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/verify-new-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/verify-new-password.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/verify-new-password.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class VerifyNewPasswordDto {\n    newPassword: string;\n    oldPassword: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyNewPasswordUtil.html":{"url":"injectables/VerifyNewPasswordUtil.html","title":"injectable - VerifyNewPasswordUtil","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VerifyNewPasswordUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/util/verify-new-password.util.ts\n        \n\n            \n                Description\n            \n            \n                Password Verification functions\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkTypos\n                            \n                            \n                                    Async\n                                verifyMatch\n                            \n                            \n                                    Async\n                                verifyNew\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkTypos\n                        \n                        \n                    \n                \n            \n            \n                \ncheckTypos(data: CheckPasswordTypoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:31\n                \n            \n\n\n            \n                \n                    Verify the user entered the same password twice\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CheckPasswordTypoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyMatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyMatch(data: VerifyNewPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VerifyNewPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyNew\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyNew(data: VerifyNewPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/util/verify-new-password.util.ts:15\n                \n            \n\n\n            \n                \n                    Verify the new password does not match the database password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VerifyNewPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { VerifyNewPasswordDto } from \"../dto/verify-new-password.dto\";\nimport * as bcrypt from 'bcrypt';\nimport { CheckPasswordTypoDto } from \"../dto/check-password-typo.dto\";\n/**\n * Password Verification functions\n */\n@Injectable()\nexport class VerifyNewPasswordUtil {\n\n    /**\n     * Verify the new password does not match the database password\n     * @param data \n     */\n    async verifyNew(data: VerifyNewPasswordDto): Promise{\n        const check = await bcrypt.compare(data.newPassword, data.oldPassword);\n        if (check) { throw new Error('Error: The new password cannot mathch the current password.') };\n        return;\n    }\n\n    async verifyMatch(data: VerifyNewPasswordDto): Promise{\n        const check = await bcrypt.compare(data.newPassword, data.oldPassword);\n        if (!check) { throw new Error('Error: incorrect password entered')};\n        return;\n    }\n\n    /**\n     * Verify the user entered the same password twice\n     * @param data \n     */\n    checkTypos(data: CheckPasswordTypoDto): Promise {\n        const check = data.newPassword === data.confirmPassword;\n        if (check) { return };\n        throw new Error('You did not enter the same password twice, please try again')\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/constant.ts\n            \n            variable\n            jwtConstants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/check-password-typo.dto.ts\n            \n            class\n            CheckPasswordTypoDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/forgot-password.dto.ts\n            \n            class\n            ForgotPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/verify-new-password.dto.ts\n            \n            class\n            VerifyNewPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/gaurds/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/gaurds/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/gaurds/logged-out.guard.ts\n            \n            guard\n            LoggedOutGaurd\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/interface/extract-key-value-util.interface.ts\n            \n            interface\n            ExtractKeyValueUtilInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/interface/jwt-payload.ts\n            \n            interface\n            JwtPayloadInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/interface/user-property.interface.ts\n            \n            interface\n            UserPropertyInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/util/extract-key-value.util.ts\n            \n            injectable\n            ExtractKeyValueUtil\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/util/verify-new-password.util.ts\n            \n            injectable\n            VerifyNewPasswordUtil\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            databaseConnection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            rentals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            unavailabilityModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            userModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/Const.ts\n            \n            variable\n            validated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/error.filters.ts\n            \n            class\n            ErrorFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/filters/http-error.filter.ts\n            \n            class\n            HttpErrorFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/logging-interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/pipes/joi-validation.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/util/positive-number.ts\n            \n            injectable\n            PositiveNumber\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/util/to-item-indexes.ts\n            \n            variable\n            toItemIndexes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/util/typeof-value.ts\n            \n            class\n            TypeOfValue\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/config/configuration.service.ts\n            \n            injectable\n            AppConfigService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/database/providers/database.provider.ts\n            \n            variable\n            databaseProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/providers/unavailability-model.provider.ts\n            \n            variable\n            unavailabilityProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/providers/user-model.provider.ts\n            \n            variable\n            userProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/email/interface/mailoptions.interface.ts\n            \n            interface\n            MailOptionsInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/email/interface/transporter.interface.ts\n            \n            interface\n            TransporterInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/images/controller/images.controller.ts\n            \n            controller\n            ImagesController\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/images/dto/image-query-results.dto.ts\n            \n            class\n            ImageQueryResultsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/dto/image.dto.ts\n            \n            class\n            ImageDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/interface/image-upload.interface.ts\n            \n            interface\n            ImageUploadInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/images/interface/image.interface.ts\n            \n            interface\n            ImageInterface\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/images/interface/processed-save-data.interface.ts\n            \n            interface\n            ProcessedSaveDataInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/interface/processed-upload-data.interface.ts\n            \n            interface\n            ProcessedUploadDataInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/providers/s3.provider.ts\n            \n            injectable\n            S3Provider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/schema/images.schema.ts\n            \n            variable\n            ImageSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/schema/images.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/service/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/images/util/create-multer-upload.util.ts\n            \n            injectable\n            CreateMulterUploadUtil\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/images/util/delete-s3-images.util.ts\n            \n            injectable\n            DeleteS3ImagesUtil\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/images/util/multer-upload.util.ts\n            \n            injectable\n            MulterUploadUtil\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/images/util/process-save-data.util.ts\n            \n            injectable\n            ProcessSaveDataUtil\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/controller/rental.controller.ts\n            \n            controller\n            RentalController\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/create-rental.dto.ts\n            \n            class\n            CreateRentalDto\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/loc-create-rental.dto.ts\n            \n            class\n            LocCreateRentalDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/raw-coordinates.dto.ts\n            \n            class\n            RawCoordinatesDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/createRental/raw-create-rental-dto.ts\n            \n            class\n            RawCreateRentalDto\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/rental/dto/details/edit-details.dto.ts\n            \n            class\n            EditDetailsDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/pricing/pricing.dto.ts\n            \n            class\n            PricingDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/given-notice-search-rental-dto.ts\n            \n            class\n            GivenNoticeSearchRentalDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/process-rental-time.dto.ts\n            \n            class\n            ProcessRentalTimeDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/raw-search-rental.dto.ts\n            \n            class\n            RawSearchRentalDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/request-coordinates.dto.ts\n            \n            class\n            RequestCoordinatesDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/searchRental/search-rental.dto.ts\n            \n            class\n            SearchRentalDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/remove/remove-unavailability.dto.ts\n            \n            class\n            RemoveUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/create-query.dto.ts\n            \n            class\n            CreateQueryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/processed-unavailability-query.dto.ts\n            \n            class\n            ProcessedUnavailabilityQueryDto\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/processed-unavailability.dto.ts\n            \n            class\n            ProcessedUnavailabilityDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/raw-schedule-unavailability.dto.ts\n            \n            class\n            RawScheduleUnavailabilityDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/sorted-unavailability.dto.ts\n            \n            interface\n            SortedUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/unavailability-query.dto.ts\n            \n            class\n            UnavailabilityQueryDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/schedule/validate-schedule-unavailability.dto.ts\n            \n            class\n            ValidateScheduleUnavailabilityDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/unavailability.dto.ts\n            \n            class\n            UnavailabilityDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/update-unavailability-data.dto.ts\n            \n            class\n            UpdateUnavailabilityDataDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/update-unavailability.dto.ts\n            \n            class\n            UpdateUnavailabilityDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/update/validate-update-unavailability.dto.ts\n            \n            class\n            ValidateUpdateUnavailabilityDto\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/rental/dto/unavailability/validated-unavailability.dto.ts\n            \n            class\n            ValidatedUnavailabilityDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/interface/schemaInterface/Rental/rental.interface.ts\n            \n            interface\n            RentalInterface\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/rental/interface/schemaInterface/Unavailability/unavailability.interface.ts\n            \n            class\n            UnavailabilityInterface\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rental/middleware/validate-update-unavailability.middleware.ts\n            \n            injectable\n            ValidateUpdateUnavailabilityMiddleware\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/create-updater-dto.pipe.ts\n            \n            injectable\n            CreateUpdaterDtoPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/geo-url-api.pipe.ts\n            \n            injectable\n            GeoUrlApiPipe\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/rental/pipes/given-notice.pipe.ts\n            \n            injectable\n            GivenNoticePipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/map-new-rental.pipe.ts\n            \n            injectable\n            MapNewRentalPipe\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/rental/pipes/pricing.pipe.ts\n            \n            injectable\n            PricingPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/process-unavailability.pipe.ts\n            \n            injectable\n            ProcessUnavailabilityPipe\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rental/pipes/rental-duration.pipe.ts\n            \n            injectable\n            RentalDurationPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/request-coordinates.pipe.ts\n            \n            injectable\n            RequestCoordinatesPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/sort-unavailability.pipe.ts\n            \n            injectable\n            SortUnavailabilityPipe\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-edit-details.pipe.ts\n            \n            injectable\n            ValidateEditDetailsPipe\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-remove-unavailability.pipe.ts\n            \n            injectable\n            ValidateRemoveUnavailabilityPipe\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/rental/pipes/validate-unavailability.pipe.ts\n            \n            injectable\n            ValidateUnavailabilityPipe\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            ObjectID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            RentalSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/rental.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/unavailability-schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rental/schema/unavailability-schema.ts\n            \n            variable\n            UnavailabilitySchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/validation/create-rental-validation.schema.ts\n            \n            variable\n            CreateRentalValidationSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/schema/validation/search-rental-validation.schema.ts\n            \n            variable\n            SearchRentalValidationSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/rental/service/rental.service.ts\n            \n            injectable\n            RentalService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/rental/service/test-rental.service.ts\n            \n            injectable\n            TestRentalService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/rental/utils/generate-rental-duration-enum.util.ts\n            \n            injectable\n            GenerateRentalDurationEnumUtil\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/rental/utils/geo-url-api.util.ts\n            \n            injectable\n            GeoUrlApiUtil\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/secrets/secrets.ts\n            \n            variable\n            Secrets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            injectable\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/delete-user.dto.ts\n            \n            injectable\n            DeleteUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/find-user-by-reset-password-token.dto.ts\n            \n            injectable\n            ResetPasswordTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/find-user.dto.ts\n            \n            injectable\n            FindUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/login.dto.ts\n            \n            injectable\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            injectable\n            UpdateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interface/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/user/middleware/validate-email.middleware.ts\n            \n            injectable\n            ValidateEmailMiddleware\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/user/pipes/bcrypt.pipe.ts\n            \n            injectable\n            BcryptHashPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schema/validation/create-user-validation.schema.ts\n            \n            variable\n            CreateUserValidation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/user/util/extract-user.util.ts\n            \n            injectable\n            ExtractUserUtil\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/util/validate-email.util.ts\n            \n            injectable\n            ValidateEmailUtil\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            apiKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            axios\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            geoUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                testfile.ts\n            \n            variable\n            makeRequest\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.0\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/mongoose : ^6.3.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/serve-static : ^2.1.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/cookie-parser : ^1.4.2\n        \n            @types/node : 11.13.4\n        \n            aws-sdk : ^2.635.0\n        \n            axios : ^0.19.2\n        \n            bcrypt : ^5.0.0\n        \n            cache-manager : ^3.4.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            cookie-parser : ^1.4.5\n        \n            crypto : ^1.0.1\n        \n            dotenv : ^8.2.0\n        \n            helmet : ^4.2.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            luxon : ^1.22.0\n        \n            mongoose : ^5.9.1\n        \n            multer : ^1.4.2\n        \n            multer-s3 : ^2.9.0\n        \n            nest-router : ^1.0.9\n        \n            nodemailer : ^6.4.16\n        \n            nodemailer-smtp-transport : ^2.7.4\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            typescript : 3.7.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RentalDurations   (src/.../const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rental/const.ts\n    \n        \n            \n                \n                    \n                        \n                        RentalDurations\n                    \n                \n                    \n                        \n                            summary: an enum for easily storing and working with the time duration of a rental\n\n                        \n                    \n                        \n                            \n                                 Any\n                            \n                        \n                        \n                            \n                                 1 Day\n                            \n                        \n                        \n                            \n                                 3 Days\n                            \n                        \n                        \n                            \n                                 5 Days\n                            \n                        \n                        \n                            \n                                 1 Week\n                            \n                        \n                        \n                            \n                                 3 Weeks\n                            \n                        \n                        \n                            \n                                 1 Month\n                            \n                        \n                        \n                            \n                                 3 Months\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRent-A-Car\nThis project is a demonstration of a scalable, loosely-coupled, testable, server-side application written with TypeScript and the NestJS framework. Rent-A-Car is a demonstrative car rental web application for authorized users to list their vehicle as available for rental, and to find rental vehicles available in their area. The application uses the powerful HERE Developer Geocoder API to create rentals with geocoordinate location data as well as to search for listed rentals near a user's address or device location. User profile and rental images are uploaded to an AWS S3 bucket, and the image download links and metadata are saved to a MongoDB Atlas cluster. Once a user has listed a rental, they may upload photos, edit the rental's pricing, schedule unavailability on the calendar, and update the rental's details.\nInstallation\nTry the App with Postman:\n\n\nNote: If Postman Web never launches try downloading the app to your pc, it will import the collection and environment and run fine. \nwill be deployed soon :)\n\nContributing\n\nJonathan Sells\nThis project is a smaller demonstrative version of the original project Turrendas that I was working on with Jean Canales, who was creating the React frontend.\n\nLicense\nThis project is licensed under the MIT license. See the LICENSE file for more info.\nDocumentation\nRent-A-Car Wiki\nplease check out the wiki for a more detailed look at the application.\nhttps://github.com/Pioneer18/Rent-A-Car/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 RentACar J\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RentalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppConfigModule\n\n\n\ncluster_AppConfigModule_exports\n\n\n\ncluster_AppConfigModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_imports\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_RentalModule\n\n\n\ncluster_RentalModule_exports\n\n\n\ncluster_RentalModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppConfigService \n\nAppConfigService \n\n\n\nConfigService \n\nConfigService \n\n\n\nAppConfigModule\n\nAppConfigModule\n\nAppConfigService  -->\n\nAppConfigModule->AppConfigService \n\n\n\nConfigService  -->\n\nAppConfigModule->ConfigService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppConfigModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAppConfigModule->AuthModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nAppConfigModule->ImagesModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAppConfigModule->UserModule\n\n\n\n\n\nAppConfigService\n\nAppConfigService\n\nAppConfigModule -->\n\nAppConfigService->AppConfigModule\n\n\n\nAuthModule -->\n\nAppConfigService->AuthModule\n\n\n\nImagesModule -->\n\nAppConfigService->ImagesModule\n\n\n\n\n\nRentalModule\n\nRentalModule\n\nRentalModule -->\n\nAppConfigService->RentalModule\n\n\n\nAppModule -->\n\nAppModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nAuthModule->EmailService \n\n\n\n\n\nExtractKeyValueUtil \n\nExtractKeyValueUtil \n\nExtractKeyValueUtil  -->\n\nAuthModule->ExtractKeyValueUtil \n\n\n\n\n\nLoggedOutGaurd \n\nLoggedOutGaurd \n\nLoggedOutGaurd  -->\n\nAuthModule->LoggedOutGaurd \n\n\n\n\n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil \n\nVerifyNewPasswordUtil  -->\n\nAuthModule->VerifyNewPasswordUtil \n\n\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\nAppModule -->\n\nRentalModule->AppModule\n\n\n\n\n\nRentalService \n\nRentalService \n\nRentalService  -->\n\nRentalModule->RentalService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAuthModule -->\n\nEmailService->AuthModule\n\n\n\n\n\nExtractKeyValueUtil\n\nExtractKeyValueUtil\n\nAuthModule -->\n\nExtractKeyValueUtil->AuthModule\n\n\n\nUserModule -->\n\nExtractKeyValueUtil->UserModule\n\n\n\n\n\nExtractUserUtil\n\nExtractUserUtil\n\nAuthModule -->\n\nExtractUserUtil->AuthModule\n\n\n\nUserModule -->\n\nExtractUserUtil->UserModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nVerifyNewPasswordUtil\n\nVerifyNewPasswordUtil\n\nAuthModule -->\n\nVerifyNewPasswordUtil->AuthModule\n\n\n\nUserModule -->\n\nVerifyNewPasswordUtil->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nImagesModule -->\n\nDatabaseModule->ImagesModule\n\n\n\nRentalModule -->\n\nDatabaseModule->RentalModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nCreateMulterUploadUtil\n\nCreateMulterUploadUtil\n\nImagesModule -->\n\nCreateMulterUploadUtil->ImagesModule\n\n\n\n\n\nDeleteS3ImagesUtil\n\nDeleteS3ImagesUtil\n\nImagesModule -->\n\nDeleteS3ImagesUtil->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nMulterUploadUtil\n\nMulterUploadUtil\n\nImagesModule -->\n\nMulterUploadUtil->ImagesModule\n\n\n\n\n\nProcessSaveDataUtil\n\nProcessSaveDataUtil\n\nImagesModule -->\n\nProcessSaveDataUtil->ImagesModule\n\n\n\n\n\nS3Provider\n\nS3Provider\n\nImagesModule -->\n\nS3Provider->ImagesModule\n\n\n\n\n\nCreateUpdaterDtoPipe\n\nCreateUpdaterDtoPipe\n\nRentalModule -->\n\nCreateUpdaterDtoPipe->RentalModule\n\n\n\n\n\nGenerateRentalDurationEnumUtil\n\nGenerateRentalDurationEnumUtil\n\nRentalModule -->\n\nGenerateRentalDurationEnumUtil->RentalModule\n\n\n\n\n\nGeoUrlApiPipe\n\nGeoUrlApiPipe\n\nRentalModule -->\n\nGeoUrlApiPipe->RentalModule\n\n\n\n\n\nGeoUrlApiUtil\n\nGeoUrlApiUtil\n\nRentalModule -->\n\nGeoUrlApiUtil->RentalModule\n\n\n\n\n\nGivenNoticePipe\n\nGivenNoticePipe\n\nRentalModule -->\n\nGivenNoticePipe->RentalModule\n\n\n\n\n\nMapNewRentalPipe\n\nMapNewRentalPipe\n\nRentalModule -->\n\nMapNewRentalPipe->RentalModule\n\n\n\n\n\nPricingPipe\n\nPricingPipe\n\nRentalModule -->\n\nPricingPipe->RentalModule\n\n\n\n\n\nProcessUnavailabilityPipe\n\nProcessUnavailabilityPipe\n\nRentalModule -->\n\nProcessUnavailabilityPipe->RentalModule\n\n\n\n\n\nRentalDurationPipe\n\nRentalDurationPipe\n\nRentalModule -->\n\nRentalDurationPipe->RentalModule\n\n\n\n\n\nRentalService\n\nRentalService\n\nRentalModule -->\n\nRentalService->RentalModule\n\n\n\n\n\nRequestCoordinatesPipe\n\nRequestCoordinatesPipe\n\nRentalModule -->\n\nRequestCoordinatesPipe->RentalModule\n\n\n\n\n\nSortUnavailabilityPipe\n\nSortUnavailabilityPipe\n\nRentalModule -->\n\nSortUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateEditDetailsPipe\n\nValidateEditDetailsPipe\n\nRentalModule -->\n\nValidateEditDetailsPipe->RentalModule\n\n\n\n\n\nValidateRemoveUnavailabilityPipe\n\nValidateRemoveUnavailabilityPipe\n\nRentalModule -->\n\nValidateRemoveUnavailabilityPipe->RentalModule\n\n\n\n\n\nValidateUnavailabilityPipe\n\nValidateUnavailabilityPipe\n\nRentalModule -->\n\nValidateUnavailabilityPipe->RentalModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    47 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MTime   (src/.../military-time.alias.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rental/alias/military-time.alias.ts\n    \n    \n        \n            \n                \n                    \n                    MTime\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"10\" | \"11\" | \"12\" | \"13\" | \"14\" | \"15\" | \"16\" | \"17\" | \"18\" | \"19\" | \"20\" | \"21\" | \"22\" | \"23\" | \"24\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            address   (testfile.ts)\n                        \n                        \n                            apiKey   (testfile.ts)\n                        \n                        \n                            axios   (testfile.ts)\n                        \n                        \n                            CreateRentalValidationSchema   (src/.../create-rental-validation.schema.ts)\n                        \n                        \n                            CreateUserValidation   (src/.../create-user-validation.schema.ts)\n                        \n                        \n                            databaseConnection   (src/.../Const.ts)\n                        \n                        \n                            databaseProvider   (src/.../database.provider.ts)\n                        \n                        \n                            geoUrl   (testfile.ts)\n                        \n                        \n                            ImageSchema   (src/.../images.schema.ts)\n                        \n                        \n                            jwtConstants   (src/.../constant.ts)\n                        \n                        \n                            makeRequest   (testfile.ts)\n                        \n                        \n                            ObjectID   (src/.../rental.schema.ts)\n                        \n                        \n                            profile   (src/.../Const.ts)\n                        \n                        \n                            rentals   (src/.../Const.ts)\n                        \n                        \n                            RentalSchema   (src/.../rental.schema.ts)\n                        \n                        \n                            Schema   (src/.../images.schema.ts)\n                        \n                        \n                            Schema   (src/.../rental.schema.ts)\n                        \n                        \n                            Schema   (src/.../unavailability-schema.ts)\n                        \n                        \n                            Schema   (src/.../user.schema.ts)\n                        \n                        \n                            SearchRentalValidationSchema   (src/.../search-rental-validation.schema.ts)\n                        \n                        \n                            Secrets   (src/.../secrets.ts)\n                        \n                        \n                            toItemIndexes   (src/.../to-item-indexes.ts)\n                        \n                        \n                            unavailabilityModel   (src/.../Const.ts)\n                        \n                        \n                            unavailabilityProvider   (src/.../unavailability-model.provider.ts)\n                        \n                        \n                            UnavailabilitySchema   (src/.../unavailability-schema.ts)\n                        \n                        \n                            userModel   (src/.../Const.ts)\n                        \n                        \n                            userProvider   (src/.../user-model.provider.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            validated   (src/.../Const.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    testfile.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `9706+Forestdale+Ct+Riverview+33578`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '4ol_YAcp0Lkuu9pN2j2Iu_UY5lDRKWoDyJLQE2Zo6IA'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            axios\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('axios')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocode.search.hereapi.com/v1/geocode'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (geoUrl, address, apiKey) => {\n    const request = await axios.default.get(\n      `${geoUrl}?q=${address}&apiKey=${apiKey}`,\n    );\n    \n    console.log(`Response Data Below`);\n    console.log(JSON.stringify(request.data, null, 2));\n    console.log(JSON.stringify(request.data.items[0].position, null, 2))\n    console.log(JSON.stringify(request.data.items[0].title, null, 2))\n    console.log(JSON.stringify(request.data.items[0].address, null, 2))\n    return;\n}\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/validation/create-rental-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CreateRentalValidationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n  rentalDescription: joi.string(),\n  address: joi.string().required(),\n  specs: joi.object({\n    odometer: joi.number().required(),\n    transmission: joi.string().required(),\n    cityMpg: joi.number().required()\n      .when('fuel', {is: 'electric', then: joi.valid(null)}),\n    hwyMpg: joi.number().required()\n      .when('fuel', {is: 'electric', then: joi.valid(null)}),\n    mpgE: joi.number()\n      .when('fuel', {is: 'electric', then: joi.number().required()})\n      .when('fuel', {not: 'electric', then: joi.valid(null) }),\n    fuel: joi.string().valid('gas', 'hybrid','electric').required(),\n    gasGrade: joi.string().valid('regular', 'mid', 'premium', 'N/A').required()\n      .when('fuel', {is: 'electric', then: joi.valid('N/A')}),\n    description: joi.string().required(),\n    make: joi.string().required(),\n    model: joi.string().required(),\n    style: joi.string().required(),\n    color: joi.string().required(),\n    numOfSeats: joi.number().required(),\n    numDoors: joi.number().required(),\n  }),\n  registration: joi.object({\n    vin: joi.string().required(),\n    licensePlate: joi.string().required(),\n    state: joi.string().required(),\n  }),\n  features: joi.array().items(joi.string()),\n  scheduling: joi.object({\n    requiredNotice: joi.number().required(),\n    rentMinDuration: joi.number().required(),\n    rentMaxDuration: joi.number().required(),\n  }),\n  pricing: joi.object({\n    price: joi.number().required(),\n    discounts: joi.object({\n      weekly: joi.number(),\n      monthly: joi.number(),\n    }),\n  }),\n  loc: joi.object({\n    type: joi.string().required(),\n    coordinates: joi\n      .array()\n      .items(joi.number())\n      .length(2)\n      .required(),\n  }),\n  photos: joi.array().items(joi.string()),\n  listed: joi.boolean().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate requested new rental before passing to the handler\n\nfuel: when the selected fuel type is electric and not gas or hybrid, several fields must change their validation\nmpgE: the metric for electric mileage. When the selected fuel type is electric, mpgE is required, otherwise it must be null\ncityMpg: the metric for gas mileage in the city. cityMpg must be null if the fuel type is electric\nhwyMpg: the metric for gas mileage on the highway. hwyMpg must be null if the fuel type is electric\ngasGrade: the gas grade must be 'N/A' if the selected fuel type is electric\n\n\n\n\n                    \n                \n\n            \n        \n\n    src/user/schema/validation/create-user-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n    username: joi.string().required(),\n    email: joi.string().email().required(),\n    password: joi.string().required(),\n})\n                        \n                    \n\n                \n                    \n                        Validate requested new User before passing to handler\n\n                    \n                \n\n            \n        \n\n    src/common/Const.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DATABASE_CONNECTION'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'profile'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rentals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rentals'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UNAVAILABILITY_MODEL'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_MODEL'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'VALIDATED'\n                        \n                    \n\n\n            \n        \n\n    src/database/providers/database.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: databaseConnection,\n    useFactory: (configService: ConfigService): Promise =>\n      mongoose.connect(configService.get('REMOTE_DB')), // currently returning undefined, needs a .env file\n      import: [ConfigModule],\n      inject: [ConfigService],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/images/schema/images.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ImageSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    user_id: String, // ObjectId of the logged in user\n    rental_id: {type: String || null }, // null for profile images\n    bucket: String, // 'rent-a-car-photos/{user_email}/{category}'\n    key: String, // 'timestamp-originalname'\n    originalName: String, \n    etag: String || null,\n    category: String, // rentals or profile\n    size: String,\n    location: String, // aws url for image download\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    src/auth/constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret: process.env.SECRET_KEY,\n    jwt_exp_time: process.env.JWT_EXP_TIME,\n}\n                        \n                    \n\n                \n                    \n                        Secret Key\n\n                    \n                \n\n            \n        \n\n    src/rental/schema/rental.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ObjectID\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.ObjectId\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RentalSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  rentalId: ObjectID,\n  rentalTitle: String,\n  rentalDescription: String,\n  address: String,\n  loc: {\n    type: { type: String },\n    coordinates: Object,\n  },\n  specs: {\n    odometer: Number,\n    transmission: String,\n    cityMpg: Number || null,\n    hwyMpg: Number || null,\n    mpgE: Number || null,\n    fuel: String,\n    gasGrade: String,\n    description: String,\n    make: String,\n    model: String,\n    style: String,\n    color: String,\n    numOfSeats: Number,\n    numDoors: Number,\n  },\n  registration: {\n    vin: String,\n    licensePlate: String,\n    state: String,\n  },\n  features: [String],\n  scheduling: {\n    requiredNotice: Number,\n    rentMinDuration: Number,\n    rentMaxDuration: Number,\n  },\n  pricing: {\n    price: { type: Number /*, default: DEFAULT_PRICE*/ },\n    discounts: {\n      weekly: { type: Number, default: null },\n      monthly: { type: Number, default: null },\n    },\n  },\n  photos: [String],\n  listed: Boolean,\n})\n                        \n                    \n\n                \n                    \n                        Rental Schema\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/unavailability-schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UnavailabilitySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    unavailabilityId: String,\n    rentalId: String,\n    year: Number,\n    doy: Number, // day of the year\n    start: {type: Number, min: 0, max: 24}, // min: 0; max: 24 military time\n    end: {type: Number, min: 0, max: 24}, // min: 0; max: 24 military time\n    title: String, // e.g. Christmas Break\n})\n                        \n                    \n\n                \n                    \n                        Unavailability Schema\n\n                    \n                \n\n            \n        \n\n    src/user/schema/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n    username: String,\n    email: { \n        type: String, \n        unique: true\n    },\n    password: String,\n    resetPasswordToken: String,\n    resetPasswordExpires: Date,\n})\n                        \n                    \n\n\n            \n        \n\n    src/rental/schema/validation/search-rental-validation.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SearchRentalValidationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : joi.object({\n  address: joi.string().required(),\n  features: joi.array().items(joi.string()).allow(null),\n  price: joi.number().allow(null),\n  rentalDuration: joi.number().required(),\n  loc: {\n    type: joi.string().required(),\n    coordinates: joi\n      .array()\n      .items(joi.number(), joi.number())\n      .required(),\n  },\n  givenNotice: joi.number().required(),\n})\n                        \n                    \n\n                \n                    \n                        summary: validate an incoming SearchRentalDto\n\n                    \n                \n\n            \n        \n\n    src/secrets/secrets.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Secrets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    key: process.env.PRIVATE_KEY\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/util/to-item-indexes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toItemIndexes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (a: T[]) => {\n    return a.map((item, index) => ({item, index}));\n}\n                        \n                    \n\n                \n                    \n                        summary: map the passed array, of any Type, into a new array of tuples with the index for each value\n\n                    \n                \n\n            \n        \n\n    src/database/providers/unavailability-model.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            unavailabilityProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: unavailabilityModel,// UNAVAILABILITY_MODEL\n    useFactory: (connection: Connection) => connection.model('Unavailability', UnavailabilitySchema),\n    inject: [databaseConnection],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/database/providers/user-model.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: userModel,// USER_MODEL\n    useFactory: (connection: Connection) => connection.model('User', UserSchema),\n    inject: [databaseConnection],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
